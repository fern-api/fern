{
  "title": "Squidex API",
  "servers": [
    {
      "url": "https://localhost:5001"
    }
  ],
  "tags": {
    "tagsById": {}
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "Get users by query.",
      "audiences": [],
      "operationId": "UserManagement_GetUsers",
      "tags": [
        "UserManagement"
      ],
      "sdkName": {
        "groupName": [
          "userManagement"
        ],
        "methodName": "getUsers"
      },
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Optional query to search by email address or username.",
          "name": "query",
          "schema": {
            "generatedName": "UserManagementGetUsersRequestQuery",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "UserManagementGetUsersRequestQuery",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of users to skip.",
          "name": "skip",
          "schema": {
            "generatedName": "UserManagementGetUsersRequestSkip",
            "value": {
              "schema": {
                "default": 0,
                "type": "int"
              },
              "generatedName": "UserManagementGetUsersRequestSkip",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of users to return.",
          "name": "take",
          "schema": {
            "generatedName": "UserManagementGetUsersRequestTake",
            "value": {
              "schema": {
                "default": 10,
                "type": "int"
              },
              "generatedName": "UserManagementGetUsersRequestTake",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "UserManagementGetUsersRequest",
      "response": {
        "description": "Users returned.",
        "schema": {
          "generatedName": "UserManagementGetUsersResponse",
          "schema": "UsersDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/user-management",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email": {
                          "value": {
                            "value": "email",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "displayName": {
                          "value": {
                            "value": "displayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "permissions",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new user.",
      "audiences": [],
      "operationId": "UserManagement_PostUser",
      "tags": [
        "UserManagement"
      ],
      "sdkName": {
        "groupName": [
          "userManagement"
        ],
        "methodName": "postUser"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UserManagementPostUserRequest",
      "request": {
        "schema": {
          "generatedName": "UserManagementPostUserRequest",
          "schema": "CreateUserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "User created.",
        "schema": {
          "generatedName": "UserManagementPostUserResponse",
          "schema": "UserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "User request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/user-management",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "email": {
                "value": {
                  "value": "email",
                  "type": "string"
                },
                "type": "primitive"
              },
              "displayName": {
                "value": {
                  "value": "displayName",
                  "type": "string"
                },
                "type": "primitive"
              },
              "password": {
                "value": {
                  "value": "password",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "permissions",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "email": {
                  "value": {
                    "value": "email",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "displayName": {
                  "value": {
                    "value": "displayName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isLocked": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a user by ID.",
      "audiences": [],
      "operationId": "UserManagement_GetUser",
      "tags": [
        "UserManagement"
      ],
      "sdkName": {
        "groupName": [
          "userManagement"
        ],
        "methodName": "getUser"
      },
      "pathParameters": [
        {
          "description": "The ID of the user.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UserManagementGetUserRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UserManagementGetUserRequest",
      "response": {
        "description": "User returned.",
        "schema": {
          "generatedName": "UserManagementGetUserResponse",
          "schema": "UserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "User not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/user-management/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "email": {
                  "value": {
                    "value": "email",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "displayName": {
                  "value": {
                    "value": "displayName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isLocked": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a user.",
      "audiences": [],
      "operationId": "UserManagement_PutUser",
      "tags": [
        "UserManagement"
      ],
      "sdkName": {
        "groupName": [
          "userManagement"
        ],
        "methodName": "putUser"
      },
      "pathParameters": [
        {
          "description": "The ID of the user.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UserManagementPutUserRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UserManagementPutUserRequest",
      "request": {
        "schema": {
          "generatedName": "UserManagementPutUserRequest",
          "schema": "UpdateUserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "User created.",
        "schema": {
          "generatedName": "UserManagementPutUserResponse",
          "schema": "UserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "User request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "User not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/user-management/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "email": {
                "value": {
                  "value": "email",
                  "type": "string"
                },
                "type": "primitive"
              },
              "displayName": {
                "value": {
                  "value": "displayName",
                  "type": "string"
                },
                "type": "primitive"
              },
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "permissions",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "email": {
                  "value": {
                    "value": "email",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "displayName": {
                  "value": {
                    "value": "displayName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isLocked": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a User.",
      "audiences": [],
      "operationId": "UserManagement_DeleteUser",
      "tags": [
        "UserManagement"
      ],
      "sdkName": {
        "groupName": [
          "userManagement"
        ],
        "methodName": "deleteUser"
      },
      "pathParameters": [
        {
          "description": "The ID of the user to delete.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UserManagementDeleteUserRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UserManagementDeleteUserRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "User is the current user.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "User not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/user-management/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Lock a user.",
      "audiences": [],
      "operationId": "UserManagement_LockUser",
      "tags": [
        "UserManagement"
      ],
      "sdkName": {
        "groupName": [
          "userManagement"
        ],
        "methodName": "lockUser"
      },
      "pathParameters": [
        {
          "description": "The ID of the user to lock.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UserManagementLockUserRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UserManagementLockUserRequest",
      "response": {
        "description": "User locked.",
        "schema": {
          "generatedName": "UserManagementLockUserResponse",
          "schema": "UserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "User is the current user.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "User not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/user-management/{id}/lock",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "email": {
                  "value": {
                    "value": "email",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "displayName": {
                  "value": {
                    "value": "displayName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isLocked": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Unlock a user.",
      "audiences": [],
      "operationId": "UserManagement_UnlockUser",
      "tags": [
        "UserManagement"
      ],
      "sdkName": {
        "groupName": [
          "userManagement"
        ],
        "methodName": "unlockUser"
      },
      "pathParameters": [
        {
          "description": "The ID of the user to unlock.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UserManagementUnlockUserRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UserManagementUnlockUserRequest",
      "response": {
        "description": "User unlocked.",
        "schema": {
          "generatedName": "UserManagementUnlockUserResponse",
          "schema": "UserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "User is the current user.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "User not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/user-management/{id}/unlock",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "email": {
                  "value": {
                    "value": "email",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "displayName": {
                  "value": {
                    "value": "displayName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isLocked": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the user resources.",
      "audiences": [],
      "operationId": "Users_GetUserResources",
      "tags": [
        "Users"
      ],
      "sdkName": {
        "groupName": [
          "users"
        ],
        "methodName": "getUserResources"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UsersGetUserResourcesRequest",
      "response": {
        "description": "User resources returned.",
        "schema": {
          "generatedName": "UsersGetUserResourcesResponse",
          "schema": "ResourcesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get users by query.",
      "audiences": [],
      "operationId": "Users_GetUsers",
      "tags": [
        "Users"
      ],
      "sdkName": {
        "groupName": [
          "users"
        ],
        "methodName": "getUsers"
      },
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The query to search the user by email address. Case invariant.",
          "name": "query",
          "schema": {
            "generatedName": "UsersGetUsersRequestQuery",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "UsersGetUsersRequestQuery",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "UsersGetUsersRequest",
      "response": {
        "description": "Users returned.",
        "schema": {
          "value": {
            "generatedName": "UsersGetUsersResponseItem",
            "schema": "UserDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "UsersGetUsersResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Search the user by query that contains the email address or the part of the email address.",
      "authed": true,
      "method": "GET",
      "path": "/api/users",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "_links": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "href": {
                                "value": {
                                  "value": "href",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "method": {
                                "value": {
                                  "value": "method",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email": {
                      "value": {
                        "value": "email",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "displayName": {
                      "value": {
                        "value": "displayName",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "isLocked": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "permissions": {
                      "value": [
                        {
                          "value": {
                            "value": "permissions",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get user by id.",
      "audiences": [],
      "operationId": "Users_GetUser",
      "tags": [
        "Users"
      ],
      "sdkName": {
        "groupName": [
          "users"
        ],
        "methodName": "getUser"
      },
      "pathParameters": [
        {
          "description": "The ID of the user (GUID).",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UsersGetUserRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UsersGetUserRequest",
      "response": {
        "description": "User found.",
        "schema": {
          "generatedName": "UsersGetUserResponse",
          "schema": "UserDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "User not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/users/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "email": {
                  "value": {
                    "value": "email",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "displayName": {
                  "value": {
                    "value": "displayName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isLocked": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get user picture by id.",
      "audiences": [],
      "operationId": "Users_GetUserPicture",
      "tags": [
        "Users"
      ],
      "sdkName": {
        "groupName": [
          "users"
        ],
        "methodName": "getUserPicture"
      },
      "pathParameters": [
        {
          "description": "The ID of the user (GUID).",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UsersGetUserPictureRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UsersGetUserPictureRequest",
      "response": {
        "description": "User found and image or fallback returned.",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "User not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/users/{id}/picture",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Translate a text.",
      "audiences": [],
      "operationId": "Translations_PostTranslation",
      "tags": [
        "Translations"
      ],
      "sdkName": {
        "groupName": [
          "translations"
        ],
        "methodName": "postTranslation"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TranslationsPostTranslationRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TranslationsPostTranslationRequest",
      "request": {
        "schema": {
          "generatedName": "TranslationsPostTranslationRequest",
          "schema": "TranslateDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Text translated.",
        "schema": {
          "generatedName": "TranslationsPostTranslationResponse",
          "schema": "TranslationDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/translations",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "text": {
                "value": {
                  "value": "text",
                  "type": "string"
                },
                "type": "primitive"
              },
              "targetLanguage": {
                "value": {
                  "value": "targetLanguage",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "result": {
                  "value": "Translated",
                  "type": "enum"
                },
                "text": {
                  "value": {
                    "value": "text",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get all templates.",
      "audiences": [],
      "operationId": "Templates_GetTemplates",
      "tags": [
        "Templates"
      ],
      "sdkName": {
        "groupName": [
          "templates"
        ],
        "methodName": "getTemplates"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TemplatesGetTemplatesRequest",
      "response": {
        "description": "Templates returned.",
        "schema": {
          "generatedName": "TemplatesGetTemplatesResponse",
          "schema": "TemplatesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/templates",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "title": {
                          "value": {
                            "value": "title",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isStarter": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get template details.",
      "audiences": [],
      "operationId": "Templates_GetTemplate",
      "tags": [
        "Templates"
      ],
      "sdkName": {
        "groupName": [
          "templates"
        ],
        "methodName": "getTemplate"
      },
      "pathParameters": [
        {
          "description": "The name of the template.",
          "name": "name",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TemplatesGetTemplateRequestName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TemplatesGetTemplateRequest",
      "response": {
        "description": "Template returned.",
        "schema": {
          "generatedName": "TemplatesGetTemplateResponse",
          "schema": "TemplateDetailsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Template not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/templates/{name}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "name",
              "value": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "details": {
                  "value": {
                    "value": "details",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get team contributors.",
      "audiences": [],
      "operationId": "TeamContributors_GetContributors",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "getContributors"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsGetContributorsRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsGetContributorsRequest",
      "response": {
        "description": "Contributors returned.",
        "schema": {
          "generatedName": "TeamsGetContributorsResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}/contributors",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign contributor to team.",
      "audiences": [],
      "operationId": "TeamContributors_PostContributor",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "postContributor"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsPostContributorRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsPostContributorRequest",
      "request": {
        "schema": {
          "generatedName": "TeamsPostContributorRequest",
          "schema": "AssignContributorDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Contributor assigned to team.",
        "schema": {
          "generatedName": "TeamsPostContributorResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Contributor request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/teams/{team}/contributors",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "contributorId": {
                "value": {
                  "value": "contributorId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove yourself.",
      "audiences": [],
      "operationId": "TeamContributors_DeleteMyself",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "deleteMyself"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsDeleteMyselfRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsDeleteMyselfRequest",
      "response": {
        "description": "Contributor removed.",
        "schema": {
          "generatedName": "TeamsDeleteMyselfResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Contributor or team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/teams/{team}/contributors/me",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove contributor.",
      "audiences": [],
      "operationId": "TeamContributors_DeleteContributor",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "deleteContributor"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsDeleteContributorRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the contributor.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsDeleteContributorRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsDeleteContributorRequest",
      "response": {
        "description": "Contributor removed.",
        "schema": {
          "generatedName": "TeamsDeleteContributorResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Contributor or team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/teams/{team}/contributors/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get your teams.",
      "audiences": [],
      "operationId": "Teams_GetTeams",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "getTeams"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsGetTeamsRequest",
      "response": {
        "description": "Teams returned.",
        "schema": {
          "value": {
            "generatedName": "TeamsGetTeamsResponseItem",
            "schema": "TeamDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "TeamsGetTeamsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can only retrieve the list of teams when you are authenticated as a user (OpenID implicit flow).\nYou will retrieve all teams, where you are assigned as a contributor.",
      "authed": true,
      "method": "GET",
      "path": "/api/teams",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "_links": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "href": {
                                "value": {
                                  "value": "href",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "method": {
                                "value": {
                                  "value": "method",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    },
                    "created": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastModified": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "roleName": {
                      "value": {
                        "value": "roleName",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new team.",
      "audiences": [],
      "operationId": "Teams_PostTeam",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "postTeam"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsPostTeamRequest",
      "request": {
        "schema": {
          "generatedName": "TeamsPostTeamRequest",
          "schema": "CreateTeamDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Team created.",
        "schema": {
          "generatedName": "TeamsPostTeamResponse",
          "schema": "TeamDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Team request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "409": {
          "generatedName": "ConflictError",
          "schema": {
            "generatedName": "ConflictErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Team name is already in use.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can only create an team when you are authenticated as a user (OpenID implicit flow).\nYou will be assigned as owner of the new team automatically.",
      "authed": true,
      "method": "POST",
      "path": "/api/teams",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get an team by name.",
      "audiences": [],
      "operationId": "Teams_GetTeam",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "getTeam"
      },
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsGetTeamRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsGetTeamRequest",
      "response": {
        "description": "Teams returned.",
        "schema": {
          "generatedName": "TeamsGetTeamResponse",
          "schema": "TeamDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update the team.",
      "audiences": [],
      "operationId": "Teams_PutTeam",
      "tags": [
        "Teams"
      ],
      "sdkName": {
        "groupName": [
          "teams"
        ],
        "methodName": "putTeam"
      },
      "pathParameters": [
        {
          "description": "The name of the team to update.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TeamsPutTeamRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TeamsPutTeamRequest",
      "request": {
        "schema": {
          "generatedName": "TeamsPutTeamRequest",
          "schema": "UpdateTeamDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Team updated.",
        "schema": {
          "generatedName": "TeamsPutTeamResponse",
          "schema": "TeamDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Team request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/teams/{team}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get api calls as log file.",
      "audiences": [],
      "operationId": "Usages_GetLog",
      "tags": [
        "Statistics"
      ],
      "sdkName": {
        "groupName": [
          "statistics"
        ],
        "methodName": "getLog"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StatisticsGetLogRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatisticsGetLogRequest",
      "response": {
        "description": "Usage tracking results returned.",
        "schema": {
          "generatedName": "StatisticsGetLogResponse",
          "schema": "LogDownloadDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/usages/log",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "downloadUrl": {
                  "value": {
                    "value": "downloadUrl",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get api calls in date range.",
      "audiences": [],
      "operationId": "Usages_GetUsages",
      "tags": [
        "Statistics"
      ],
      "sdkName": {
        "groupName": [
          "statistics"
        ],
        "methodName": "getUsages"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StatisticsGetUsagesRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetUsagesRequestFromDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetUsagesRequestToDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatisticsGetUsagesRequest",
      "response": {
        "description": "API call returned.",
        "schema": {
          "generatedName": "StatisticsGetUsagesResponse",
          "schema": "CallsUsageDtoDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/usages/calls/{fromDate}/{toDate}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "fromDate",
              "value": {
                "value": {
                  "value": "fromDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "toDate",
              "value": {
                "value": {
                  "value": "toDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "totalCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "totalBytes": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "monthCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "monthBytes": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "blockingApiCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "allowedBytes": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "allowedCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "averageElapsedMs": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "details": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "properties": {
                              "date": {
                                "value": {
                                  "value": "date",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "totalCalls": {
                                "value": {
                                  "value": 1000000,
                                  "type": "int64"
                                },
                                "type": "primitive"
                              },
                              "totalBytes": {
                                "value": {
                                  "value": 1000000,
                                  "type": "int64"
                                },
                                "type": "primitive"
                              },
                              "averageElapsedMs": {
                                "value": {
                                  "value": 1.1,
                                  "type": "double"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get api calls in date range for team.",
      "audiences": [],
      "operationId": "Usages_GetUsagesForTeam",
      "tags": [
        "Statistics"
      ],
      "sdkName": {
        "groupName": [
          "statistics"
        ],
        "methodName": "getUsagesForTeam"
      },
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StatisticsGetUsagesForTeamRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetUsagesForTeamRequestFromDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetUsagesForTeamRequestToDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatisticsGetUsagesForTeamRequest",
      "response": {
        "description": "API call returned.",
        "schema": {
          "generatedName": "StatisticsGetUsagesForTeamResponse",
          "schema": "CallsUsageDtoDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}/usages/calls/{fromDate}/{toDate}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "fromDate",
              "value": {
                "value": {
                  "value": "fromDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "toDate",
              "value": {
                "value": {
                  "value": "toDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "totalCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "totalBytes": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "monthCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "monthBytes": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "blockingApiCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "allowedBytes": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "allowedCalls": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "averageElapsedMs": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "details": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "properties": {
                              "date": {
                                "value": {
                                  "value": "date",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "totalCalls": {
                                "value": {
                                  "value": 1000000,
                                  "type": "int64"
                                },
                                "type": "primitive"
                              },
                              "totalBytes": {
                                "value": {
                                  "value": 1000000,
                                  "type": "int64"
                                },
                                "type": "primitive"
                              },
                              "averageElapsedMs": {
                                "value": {
                                  "value": 1.1,
                                  "type": "double"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get total asset size.",
      "audiences": [],
      "operationId": "Usages_GetCurrentStorageSize",
      "tags": [
        "Statistics"
      ],
      "sdkName": {
        "groupName": [
          "statistics"
        ],
        "methodName": "getCurrentStorageSize"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StatisticsGetCurrentStorageSizeRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatisticsGetCurrentStorageSizeRequest",
      "response": {
        "description": "Storage usage returned.",
        "schema": {
          "generatedName": "StatisticsGetCurrentStorageSizeResponse",
          "schema": "CurrentStorageDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/usages/storage/today",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "size": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "maxAllowed": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get total asset size by team.",
      "audiences": [],
      "operationId": "Usages_GetTeamCurrentStorageSizeForTeam",
      "tags": [
        "Statistics"
      ],
      "sdkName": {
        "groupName": [
          "statistics"
        ],
        "methodName": "getTeamCurrentStorageSizeForTeam"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StatisticsGetTeamCurrentStorageSizeForTeamRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatisticsGetTeamCurrentStorageSizeForTeamRequest",
      "response": {
        "description": "Storage usage returned.",
        "schema": {
          "generatedName": "StatisticsGetTeamCurrentStorageSizeForTeamResponse",
          "schema": "CurrentStorageDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}/usages/storage/today",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "size": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "maxAllowed": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get asset usage by date.",
      "audiences": [],
      "operationId": "Usages_GetStorageSizes",
      "tags": [
        "Statistics"
      ],
      "sdkName": {
        "groupName": [
          "statistics"
        ],
        "methodName": "getStorageSizes"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StatisticsGetStorageSizesRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetStorageSizesRequestFromDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetStorageSizesRequestToDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatisticsGetStorageSizesRequest",
      "response": {
        "description": "Storage usage returned.",
        "schema": {
          "value": {
            "generatedName": "StatisticsGetStorageSizesResponseItem",
            "schema": "StorageUsagePerDateDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "StatisticsGetStorageSizesResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/usages/storage/{fromDate}/{toDate}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "fromDate",
              "value": {
                "value": {
                  "value": "fromDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "toDate",
              "value": {
                "value": {
                  "value": "toDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "date": {
                      "value": {
                        "value": "date",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "totalCount": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    },
                    "totalSize": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get asset usage by date for team.",
      "audiences": [],
      "operationId": "Usages_GetStorageSizesForTeam",
      "tags": [
        "Statistics"
      ],
      "sdkName": {
        "groupName": [
          "statistics"
        ],
        "methodName": "getStorageSizesForTeam"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StatisticsGetStorageSizesForTeamRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetStorageSizesForTeamRequestFromDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "schema": {
              "format": "date",
              "type": "string"
            },
            "generatedName": "StatisticsGetStorageSizesForTeamRequestToDate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StatisticsGetStorageSizesForTeamRequest",
      "response": {
        "description": "Storage usage returned.",
        "schema": {
          "value": {
            "generatedName": "StatisticsGetStorageSizesForTeamResponseItem",
            "schema": "StorageUsagePerDateDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "StatisticsGetStorageSizesForTeamResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}/usages/storage/{fromDate}/{toDate}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "fromDate",
              "value": {
                "value": {
                  "value": "fromDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "toDate",
              "value": {
                "value": {
                  "value": "toDate",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "date": {
                      "value": {
                        "value": "date",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "totalCount": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    },
                    "totalSize": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get search results.",
      "audiences": [],
      "operationId": "Search_GetSearchResults",
      "tags": [
        "Search"
      ],
      "sdkName": {
        "groupName": [
          "search"
        ],
        "methodName": "getSearchResults"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SearchGetSearchResultsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The search query.",
          "name": "query",
          "schema": {
            "generatedName": "SearchGetSearchResultsRequestQuery",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchGetSearchResultsRequestQuery",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SearchGetSearchResultsRequest",
      "response": {
        "description": "Search results returned.",
        "schema": {
          "value": {
            "generatedName": "SearchGetSearchResultsResponseItem",
            "schema": "SearchResultDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "SearchGetSearchResultsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/search",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "_links": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "href": {
                                "value": {
                                  "value": "href",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "method": {
                                "value": {
                                  "value": "method",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": {
                      "value": "Asset",
                      "type": "enum"
                    },
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Add a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_PostField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "postField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPostFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPostFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPostFieldRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPostFieldRequest",
          "schema": "AddFieldDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema field created.",
        "schema": {
          "generatedName": "SchemasPostFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "409": {
          "generatedName": "ConflictError",
          "schema": {
            "generatedName": "ConflictErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field name already in use.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/schemas/{schema}/fields",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              },
              "properties": {
                "value": {
                  "value": {
                    "fieldType": {
                      "value": {
                        "value": "UI",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "editor": {
                      "value": {
                        "value": "Separator",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "isRequired": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isRequiredOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isHalfWidth": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Add a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_PostNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "postNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPostNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPostNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasPostNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPostNestedFieldRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPostNestedFieldRequest",
          "schema": "AddFieldDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema field created.",
        "schema": {
          "generatedName": "SchemasPostNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "409": {
          "generatedName": "ConflictError",
          "schema": {
            "generatedName": "ConflictErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field name already in use.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              },
              "properties": {
                "value": {
                  "value": {
                    "fieldType": {
                      "value": {
                        "value": "UI",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "editor": {
                      "value": {
                        "value": "Separator",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "isRequired": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isRequiredOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isHalfWidth": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Configure UI fields.",
      "audiences": [],
      "operationId": "SchemaFields_PutSchemaUIFields",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putSchemaUIFields"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaUiFieldsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaUiFieldsRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutSchemaUiFieldsRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutSchemaUiFieldsRequest",
          "schema": "ConfigureUIFieldsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema UI fields defined.",
        "schema": {
          "generatedName": "SchemasPutSchemaUiFieldsResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/ui",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Reorder all fields.",
      "audiences": [],
      "operationId": "SchemaFields_PutSchemaFieldOrdering",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putSchemaFieldOrdering"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaFieldOrderingRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaFieldOrderingRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutSchemaFieldOrderingRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutSchemaFieldOrderingRequest",
          "schema": "ReorderFieldsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema fields reordered.",
        "schema": {
          "generatedName": "SchemasPutSchemaFieldOrderingResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/ordering",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "fieldIds": {
                "value": [
                  {
                    "value": {
                      "value": 1000000,
                      "type": "int64"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Reorder all nested fields.",
      "audiences": [],
      "operationId": "SchemaFields_PutNestedFieldOrdering",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putNestedFieldOrdering"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutNestedFieldOrderingRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutNestedFieldOrderingRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasPutNestedFieldOrderingRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutNestedFieldOrderingRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutNestedFieldOrderingRequest",
          "schema": "ReorderFieldsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema fields reordered.",
        "schema": {
          "generatedName": "SchemasPutNestedFieldOrderingResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/ordering",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "fieldIds": {
                "value": [
                  {
                    "value": {
                      "value": 1000000,
                      "type": "int64"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_PutField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to update.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasPutFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutFieldRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutFieldRequest",
          "schema": "UpdateFieldDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema field updated.",
        "schema": {
          "generatedName": "SchemasPutFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "properties": {
                "value": {
                  "value": {
                    "fieldType": {
                      "value": {
                        "value": "UI",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "editor": {
                      "value": {
                        "value": "Separator",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "isRequired": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isRequiredOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isHalfWidth": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_DeleteField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "deleteField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDeleteFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDeleteFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasDeleteFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasDeleteFieldRequest",
      "response": {
        "description": "Schema field deleted.",
        "schema": {
          "generatedName": "SchemasDeleteFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_PutNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasPutNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to update.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasPutNestedFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutNestedFieldRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutNestedFieldRequest",
          "schema": "UpdateFieldDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema field updated.",
        "schema": {
          "generatedName": "SchemasPutNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "properties": {
                "value": {
                  "value": {
                    "fieldType": {
                      "value": {
                        "value": "UI",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "editor": {
                      "value": {
                        "value": "Separator",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "isRequired": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isRequiredOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isHalfWidth": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_DeleteNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "deleteNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDeleteNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDeleteNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasDeleteNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasDeleteNestedFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasDeleteNestedFieldRequest",
      "response": {
        "description": "Schema field deleted.",
        "schema": {
          "generatedName": "SchemasDeleteNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Lock a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_LockField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "lockField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasLockFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasLockFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to lock.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasLockFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasLockFieldRequest",
      "response": {
        "description": "Schema field shown.",
        "schema": {
          "generatedName": "SchemasLockFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A locked field cannot be updated or deleted.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/lock",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Lock a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_LockNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "lockNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasLockNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasLockNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasLockNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to lock.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasLockNestedFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasLockNestedFieldRequest",
      "response": {
        "description": "Schema field hidden.",
        "schema": {
          "generatedName": "SchemasLockNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Field, schema, or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A locked field cannot be edited or deleted.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/lock",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Hide a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_HideField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "hideField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasHideFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasHideFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to hide.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasHideFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasHideFieldRequest",
      "response": {
        "description": "Schema field hidden.",
        "schema": {
          "generatedName": "SchemasHideFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/hide",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Hide a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_HideNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "hideNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasHideNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasHideNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasHideNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to hide.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasHideNestedFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasHideNestedFieldRequest",
      "response": {
        "description": "Schema field hidden.",
        "schema": {
          "generatedName": "SchemasHideNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Field, schema, or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/hide",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Show a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_ShowField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "showField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasShowFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasShowFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to show.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasShowFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasShowFieldRequest",
      "response": {
        "description": "Schema field shown.",
        "schema": {
          "generatedName": "SchemasShowFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/show",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Show a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_ShowNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "showNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasShowNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasShowNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasShowNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to show.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasShowNestedFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasShowNestedFieldRequest",
      "response": {
        "description": "Schema field shown.",
        "schema": {
          "generatedName": "SchemasShowNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/show",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Enable a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_EnableField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "enableField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasEnableFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasEnableFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to enable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasEnableFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasEnableFieldRequest",
      "response": {
        "description": "Schema field enabled.",
        "schema": {
          "generatedName": "SchemasEnableFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/enable",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Enable a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_EnableNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "enableNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasEnableNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasEnableNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasEnableNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to enable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasEnableNestedFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasEnableNestedFieldRequest",
      "response": {
        "description": "Schema field enabled.",
        "schema": {
          "generatedName": "SchemasEnableNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/enable",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Disable a schema field.",
      "audiences": [],
      "operationId": "SchemaFields_DisableField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "disableField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDisableFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDisableFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasDisableFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasDisableFieldRequest",
      "response": {
        "description": "Schema field disabled.",
        "schema": {
          "generatedName": "SchemasDisableFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/disable",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Disable a nested field.",
      "audiences": [],
      "operationId": "SchemaFields_DisableNestedField",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "disableNestedField"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDisableNestedFieldRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDisableNestedFieldRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasDisableNestedFieldRequestParentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "int64"
            },
            "generatedName": "SchemasDisableNestedFieldRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasDisableNestedFieldRequest",
      "response": {
        "description": "Schema field disabled.",
        "schema": {
          "generatedName": "SchemasDisableNestedFieldResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema field request not valid or field locked.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema, field or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/disable",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "parentId",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": 1000000,
                  "type": "int64"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get schemas.",
      "audiences": [],
      "operationId": "Schemas_GetSchemas",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "getSchemas"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasGetSchemasRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasGetSchemasRequest",
      "response": {
        "description": "Schemas returned.",
        "schema": {
          "generatedName": "SchemasGetSchemasResponse",
          "schema": "SchemasDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/schemas",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "Default",
                          "type": "enum"
                        },
                        "category": {
                          "value": {
                            "value": "category",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "properties": {
                            "validateOnPublish": {
                              "value": {
                                "value": true,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "isSingleton": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isPublished": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "scripts": {
                          "properties": {},
                          "type": "object"
                        },
                        "previewUrls": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldsInLists": {
                          "value": [
                            {
                              "value": {
                                "value": "fieldsInLists",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "fieldsInReferences": {
                          "value": [
                            {
                              "value": {
                                "value": "fieldsInReferences",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "fieldRules": {
                          "value": [
                            {
                              "properties": {
                                "action": {
                                  "value": "Disable",
                                  "type": "enum"
                                },
                                "field": {
                                  "value": {
                                    "value": "field",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "fields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new schema.",
      "audiences": [],
      "operationId": "Schemas_PostSchema",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "postSchema"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPostSchemaRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPostSchemaRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPostSchemaRequest",
          "schema": "CreateSchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema created.",
        "schema": {
          "generatedName": "SchemasPostSchemaResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "409": {
          "generatedName": "ConflictError",
          "schema": {
            "generatedName": "ConflictErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema name already in use.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/schemas",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "isPublished": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": {
                "value": "Default",
                "type": "enum"
              },
              "isSingleton": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a schema by name.",
      "audiences": [],
      "operationId": "Schemas_GetSchema",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "getSchema"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasGetSchemaRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema to retrieve.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasGetSchemaRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasGetSchemaRequest",
      "response": {
        "description": "Schema found.",
        "schema": {
          "generatedName": "SchemasGetSchemaResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/schemas/{schema}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a schema.",
      "audiences": [],
      "operationId": "Schemas_PutSchema",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putSchema"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutSchemaRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutSchemaRequest",
          "schema": "UpdateSchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema updated.",
        "schema": {
          "generatedName": "SchemasPutSchemaResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "validateOnPublish": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a schema.",
      "audiences": [],
      "operationId": "Schemas_DeleteSchema",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "deleteSchema"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDeleteSchemaRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema to delete.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasDeleteSchemaRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasDeleteSchemaRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/schemas/{schema}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Synchronize a schema.",
      "audiences": [],
      "operationId": "Schemas_PutSchemaSync",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putSchemaSync"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaSyncRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutSchemaSyncRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutSchemaSyncRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutSchemaSyncRequest",
          "schema": "SynchronizeSchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema updated.",
        "schema": {
          "generatedName": "SchemasPutSchemaSyncResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/sync",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "isPublished": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "noFieldDeletion": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "noFieldRecreation": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a schema category.",
      "audiences": [],
      "operationId": "Schemas_PutCategory",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putCategory"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutCategoryRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutCategoryRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutCategoryRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutCategoryRequest",
          "schema": "ChangeCategoryDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema updated.",
        "schema": {
          "generatedName": "SchemasPutCategoryResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/category",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update the preview urls.",
      "audiences": [],
      "operationId": "Schemas_PutPreviewUrls",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putPreviewUrls"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutPreviewUrlsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutPreviewUrlsRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutPreviewUrlsRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutPreviewUrlsRequest",
          "schema": "ConfigurePreviewUrlsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema updated.",
        "schema": {
          "generatedName": "SchemasPutPreviewUrlsResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/preview-urls",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "key": {
                  "value": "key",
                  "type": "string"
                },
                "value": {
                  "value": {
                    "value": "value",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            ],
            "type": "map"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update the scripts.",
      "audiences": [],
      "operationId": "Schemas_PutScripts",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putScripts"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutScriptsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutScriptsRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutScriptsRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutScriptsRequest",
          "schema": "SchemaScriptsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema updated.",
        "schema": {
          "generatedName": "SchemasPutScriptsResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/scripts",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update the rules.",
      "audiences": [],
      "operationId": "Schemas_PutRules",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "putRules"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutRulesRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPutRulesRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPutRulesRequest",
      "request": {
        "schema": {
          "generatedName": "SchemasPutRulesRequest",
          "schema": "ConfigureFieldRulesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Schema updated.",
        "schema": {
          "generatedName": "SchemasPutRulesResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Schema request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/rules",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Publish a schema.",
      "audiences": [],
      "operationId": "Schemas_PublishSchema",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "publishSchema"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPublishSchemaRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema to publish.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasPublishSchemaRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasPublishSchemaRequest",
      "response": {
        "description": "Schema published.",
        "schema": {
          "generatedName": "SchemasPublishSchemaResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/publish",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Unpublish a schema.",
      "audiences": [],
      "operationId": "Schemas_UnpublishSchema",
      "tags": [
        "Schemas"
      ],
      "sdkName": {
        "groupName": [
          "schemas"
        ],
        "methodName": "unpublishSchema"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasUnpublishSchemaRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema to unpublish.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SchemasUnpublishSchemaRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SchemasUnpublishSchemaRequest",
      "response": {
        "description": "Schema unpublished.",
        "schema": {
          "generatedName": "SchemasUnpublishSchemaResponse",
          "schema": "SchemaDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/schemas/{schema}/unpublish",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Default",
                  "type": "enum"
                },
                "category": {
                  "value": {
                    "value": "category",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "properties": {
                  "properties": {
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "hints": {
                      "value": {
                        "value": "hints",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentsSidebarUrl": {
                      "value": {
                        "value": "contentsSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentSidebarUrl": {
                      "value": {
                        "value": "contentSidebarUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentEditorUrl": {
                      "value": {
                        "value": "contentEditorUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "validateOnPublish": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "tags",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "isSingleton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isPublished": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "scripts": {
                  "properties": {
                    "query": {
                      "value": {
                        "value": "query",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "queryPre": {
                      "value": {
                        "value": "queryPre",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "create": {
                      "value": {
                        "value": "create",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "update": {
                      "value": {
                        "value": "update",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "delete": {
                      "value": {
                        "value": "delete",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "change": {
                      "value": {
                        "value": "change",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "previewUrls": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "fieldsInLists": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInLists",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldsInReferences": {
                  "value": [
                    {
                      "value": {
                        "value": "fieldsInReferences",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fieldRules": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "Disable",
                          "type": "enum"
                        },
                        "field": {
                          "value": {
                            "value": "field",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "condition": {
                          "value": {
                            "value": "condition",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "fields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get supported rule actions.",
      "audiences": [],
      "operationId": "Rules_GetActions",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "getActions"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesGetActionsRequest",
      "response": {
        "description": "Rule actions returned.",
        "schema": {
          "key": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesGetActionsResponseKey",
            "groupName": [],
            "type": "primitive"
          },
          "value": {
            "generatedName": "RulesGetActionsResponseValue",
            "schema": "RuleElementDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "RulesGetActionsResponse",
          "groupName": [],
          "type": "map"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/rules/actions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "properties": {
                      "description": {
                        "value": {
                          "value": "description",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "display": {
                        "value": {
                          "value": "display",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "title": {
                        "value": {
                          "value": "title",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "iconColor": {
                        "value": {
                          "value": "iconColor",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "iconImage": {
                        "value": {
                          "value": "iconImage",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "readMore": {
                        "value": {
                          "value": "readMore",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "properties": {
                        "value": [
                          {
                            "properties": {
                              "editor": {
                                "value": "Checkbox",
                                "type": "enum"
                              },
                              "name": {
                                "value": {
                                  "value": "name",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "display": {
                                "value": {
                                  "value": "display",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "isFormattable": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get rules.",
      "audiences": [],
      "operationId": "Rules_GetRules",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "getRules"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesGetRulesRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesGetRulesRequest",
      "response": {
        "description": "Rules returned.",
        "schema": {
          "generatedName": "RulesGetRulesResponse",
          "schema": "RulesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/rules",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "isEnabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trigger": {
                          "value": {
                            "value": {
                              "triggerType": {
                                "value": {
                                  "value": "Usage",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "limit": {
                                "value": {
                                  "value": 1,
                                  "type": "int"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "action": {
                          "value": {
                            "value": {
                              "actionType": {
                                "value": {
                                  "value": "Webhook",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "url": {
                                "value": {
                                  "value": "action",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "method": {
                                "value": "POST",
                                "type": "enum"
                              },
                              "payload": {
                                "value": {
                                  "value": "action",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "payloadType": {
                                "value": {
                                  "value": "action",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "headers": {
                                "value": {
                                  "value": "action",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "sharedSecret": {
                                "value": {
                                  "value": "action",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "numSucceeded": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "numFailed": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "lastExecuted": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "runningRuleId": {
                  "value": {
                    "value": "runningRuleId",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new rule.",
      "audiences": [],
      "operationId": "Rules_PostRule",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "postRule"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesPostRuleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesPostRuleRequest",
      "request": {
        "schema": {
          "generatedName": "RulesPostRuleRequest",
          "schema": "CreateRuleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Rule created.",
        "schema": {
          "generatedName": "RulesPostRuleResponse",
          "schema": "RuleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Rule request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/rules",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "trigger": {
                "value": {
                  "value": {
                    "triggerType": {
                      "value": {
                        "value": "Usage",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "limit": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              },
              "action": {
                "value": {
                  "value": {
                    "actionType": {
                      "value": {
                        "value": "Webhook",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "url": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "method": {
                      "value": "POST",
                      "type": "enum"
                    },
                    "payload": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "payloadType": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "headers": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sharedSecret": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "isEnabled": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trigger": {
                  "value": {
                    "value": {
                      "triggerType": {
                        "value": {
                          "value": "Usage",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "limit": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "numDays": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "action": {
                  "value": {
                    "value": {
                      "actionType": {
                        "value": {
                          "value": "Webhook",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "url": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "method": {
                        "value": "POST",
                        "type": "enum"
                      },
                      "payload": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "payloadType": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "headers": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "sharedSecret": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "numSucceeded": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "numFailed": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "lastExecuted": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancel the current run.",
      "audiences": [],
      "operationId": "Rules_DeleteRuleRun",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "deleteRuleRun"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteRuleRunRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesDeleteRuleRunRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/rules/run",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a rule.",
      "audiences": [],
      "operationId": "Rules_PutRule",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "putRule"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesPutRuleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to update.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesPutRuleRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesPutRuleRequest",
      "request": {
        "schema": {
          "generatedName": "RulesPutRuleRequest",
          "schema": "UpdateRuleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Rule updated.",
        "schema": {
          "generatedName": "RulesPutRuleResponse",
          "schema": "RuleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Rule request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/rules/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "isEnabled": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trigger": {
                  "value": {
                    "value": {
                      "triggerType": {
                        "value": {
                          "value": "Usage",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "limit": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "numDays": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "action": {
                  "value": {
                    "value": {
                      "actionType": {
                        "value": {
                          "value": "Webhook",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "url": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "method": {
                        "value": "POST",
                        "type": "enum"
                      },
                      "payload": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "payloadType": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "headers": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "sharedSecret": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "numSucceeded": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "numFailed": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "lastExecuted": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a rule.",
      "audiences": [],
      "operationId": "Rules_DeleteRule",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "deleteRule"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteRuleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to delete.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteRuleRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesDeleteRuleRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/rules/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Enable a rule.",
      "audiences": [],
      "operationId": "Rules_EnableRule",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "enableRule"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesEnableRuleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to enable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesEnableRuleRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesEnableRuleRequest",
      "response": {
        "description": "Rule enabled.",
        "schema": {
          "generatedName": "RulesEnableRuleResponse",
          "schema": "RuleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/rules/{id}/enable",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "isEnabled": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trigger": {
                  "value": {
                    "value": {
                      "triggerType": {
                        "value": {
                          "value": "Usage",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "limit": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "numDays": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "action": {
                  "value": {
                    "value": {
                      "actionType": {
                        "value": {
                          "value": "Webhook",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "url": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "method": {
                        "value": "POST",
                        "type": "enum"
                      },
                      "payload": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "payloadType": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "headers": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "sharedSecret": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "numSucceeded": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "numFailed": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "lastExecuted": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Disable a rule.",
      "audiences": [],
      "operationId": "Rules_DisableRule",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "disableRule"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDisableRuleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to disable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDisableRuleRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesDisableRuleRequest",
      "response": {
        "description": "Rule disabled.",
        "schema": {
          "generatedName": "RulesDisableRuleResponse",
          "schema": "RuleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/rules/{id}/disable",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "isEnabled": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trigger": {
                  "value": {
                    "value": {
                      "triggerType": {
                        "value": {
                          "value": "Usage",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "limit": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "numDays": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "action": {
                  "value": {
                    "value": {
                      "actionType": {
                        "value": {
                          "value": "Webhook",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "url": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "method": {
                        "value": "POST",
                        "type": "enum"
                      },
                      "payload": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "payloadType": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "headers": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "sharedSecret": {
                        "value": {
                          "value": "action",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "numSucceeded": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "numFailed": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "lastExecuted": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Trigger a rule.",
      "audiences": [],
      "operationId": "Rules_TriggerRule",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "triggerRule"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesTriggerRuleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to disable.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesTriggerRuleRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesTriggerRuleRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/rules/{id}/trigger",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Run a rule.",
      "audiences": [],
      "operationId": "Rules_PutRuleRun",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "putRuleRun"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesPutRuleRunRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to run.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesPutRuleRunRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Runs the rule from snapeshots if possible.",
          "name": "fromSnapshots",
          "schema": {
            "generatedName": "RulesPutRuleRunRequestFromSnapshots",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "RulesPutRuleRunRequestFromSnapshots",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "RulesPutRuleRunRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/rules/{id}/run",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancels all rule events.",
      "audiences": [],
      "operationId": "Rules_DeleteRuleEvents",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "deleteRuleEvents"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteRuleEventsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to cancel.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteRuleEventsRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesDeleteRuleEventsRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/rules/{id}/events",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Simulate a rule.",
      "audiences": [],
      "operationId": "Rules_SimulatePOST",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "simulatePOST"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesSimulatePostRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesSimulatePostRequest",
      "request": {
        "schema": {
          "generatedName": "RulesSimulatePostRequest",
          "schema": "CreateRuleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Rule simulated.",
        "schema": {
          "generatedName": "RulesSimulatePostResponse",
          "schema": "SimulatedRuleEventsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/rules/simulate",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "trigger": {
                "value": {
                  "value": {
                    "triggerType": {
                      "value": {
                        "value": "Usage",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "limit": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              },
              "action": {
                "value": {
                  "value": {
                    "actionType": {
                      "value": {
                        "value": "Webhook",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "url": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "method": {
                      "value": "POST",
                      "type": "enum"
                    },
                    "payload": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "payloadType": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "headers": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sharedSecret": {
                      "value": {
                        "value": "action",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "eventId": {
                          "value": {
                            "value": "eventId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "uniqueId": {
                          "value": {
                            "value": "uniqueId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "eventName": {
                          "value": {
                            "value": "eventName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "event": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "enrichedEvent": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "actionName": {
                          "value": {
                            "value": "actionName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "actionData": {
                          "value": {
                            "value": "actionData",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "skipReasons": {
                          "value": [
                            {
                              "value": "None",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Simulate a rule.",
      "audiences": [],
      "operationId": "Rules_SimulateGET",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "simulateGET"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesSimulateGetRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the rule to simulate.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesSimulateGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesSimulateGetRequest",
      "response": {
        "description": "Rule simulated.",
        "schema": {
          "generatedName": "RulesSimulateGetResponse",
          "schema": "SimulatedRuleEventsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/rules/{id}/simulate",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "eventId": {
                          "value": {
                            "value": "eventId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "uniqueId": {
                          "value": {
                            "value": "uniqueId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "eventName": {
                          "value": {
                            "value": "eventName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "event": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "enrichedEvent": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "actionName": {
                          "value": {
                            "value": "actionName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "actionData": {
                          "value": {
                            "value": "actionData",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "skipReasons": {
                          "value": [
                            {
                              "value": "None",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get rule events.",
      "audiences": [],
      "operationId": "Rules_GetEvents",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "getEvents"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesGetEventsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional rule id to filter to events.",
          "name": "ruleId",
          "schema": {
            "generatedName": "RulesGetEventsRequestRuleId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RulesGetEventsRequestRuleId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of events to skip.",
          "name": "skip",
          "schema": {
            "generatedName": "RulesGetEventsRequestSkip",
            "value": {
              "schema": {
                "default": 0,
                "type": "int"
              },
              "generatedName": "RulesGetEventsRequestSkip",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The number of events to take.",
          "name": "take",
          "schema": {
            "generatedName": "RulesGetEventsRequestTake",
            "value": {
              "schema": {
                "default": 20,
                "type": "int"
              },
              "generatedName": "RulesGetEventsRequestTake",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "RulesGetEventsRequest",
      "response": {
        "description": "Rule events returned.",
        "schema": {
          "generatedName": "RulesGetEventsResponse",
          "schema": "RuleEventsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/rules/events",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "eventName": {
                          "value": {
                            "value": "eventName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastDump": {
                          "value": {
                            "value": "lastDump",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "numCalls": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "nextAttempt": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "result": {
                          "value": "Pending",
                          "type": "enum"
                        },
                        "jobResult": {
                          "value": "Pending",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancels all events.",
      "audiences": [],
      "operationId": "Rules_DeleteEvents",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "deleteEvents"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteEventsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesDeleteEventsRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/rules/events",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Retry the event immediately.",
      "audiences": [],
      "operationId": "Rules_PutEvent",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "putEvent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesPutEventRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The event to enqueue.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesPutEventRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesPutEventRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App or rule event not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/rules/events/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancels an event.",
      "audiences": [],
      "operationId": "Rules_DeleteEvent",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "deleteEvent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteEventRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The event to enqueue.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesDeleteEventRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesDeleteEventRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App or rule event not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/rules/events/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Provide a list of all event types that are used in rules.",
      "audiences": [],
      "operationId": "Rules_GetEventTypes",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "getEventTypes"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesGetEventTypesRequest",
      "response": {
        "description": "Rule events returned.",
        "schema": {
          "value": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesGetEventTypesResponseItem",
            "groupName": [],
            "type": "primitive"
          },
          "generatedName": "RulesGetEventTypesResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/rules/eventtypes",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Provide the json schema for the event with the specified name.",
      "audiences": [],
      "operationId": "Rules_GetEventSchema",
      "tags": [
        "Rules"
      ],
      "sdkName": {
        "groupName": [
          "rules"
        ],
        "methodName": "getEventSchema"
      },
      "pathParameters": [
        {
          "description": "The type name of the event.",
          "name": "type",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RulesGetEventSchemaRequestType",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RulesGetEventSchemaRequest",
      "response": {
        "description": "Rule event type found.",
        "schema": {
          "generatedName": "RulesGetEventSchemaResponse",
          "type": "unknown"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Rule event not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/rules/eventtypes/{type}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "type",
              "value": {
                "value": {
                  "value": "type",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": "value",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get app plan information.",
      "audiences": [],
      "operationId": "AppPlans_GetPlans",
      "tags": [
        "Plans"
      ],
      "sdkName": {
        "groupName": [
          "plans"
        ],
        "methodName": "getPlans"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PlansGetPlansRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PlansGetPlansRequest",
      "response": {
        "description": "App plan information returned.",
        "schema": {
          "generatedName": "PlansGetPlansResponse",
          "schema": "PlansDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/plans",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "plans": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "costs": {
                          "value": {
                            "value": "costs",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "confirmText": {
                          "value": {
                            "value": "confirmText",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "yearlyConfirmText": {
                          "value": {
                            "value": "yearlyConfirmText",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "yearlyCosts": {
                          "value": {
                            "value": "yearlyCosts",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "yearlyId": {
                          "value": {
                            "value": "yearlyId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "maxApiBytes": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "maxApiCalls": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "maxAssetSize": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "maxContributors": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "currentPlanId": {
                  "value": {
                    "value": "currentPlanId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "planOwner": {
                  "value": {
                    "value": "planOwner",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "portalLink": {
                  "value": {
                    "value": "portalLink",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referral": {
                  "properties": {
                    "code": {
                      "value": {
                        "value": "code",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "earned": {
                      "value": {
                        "value": "earned",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "condition": {
                      "value": {
                        "value": "condition",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "locked": {
                  "value": "None",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Change the app plan.",
      "audiences": [],
      "operationId": "AppPlans_PutPlan",
      "tags": [
        "Plans"
      ],
      "sdkName": {
        "groupName": [
          "plans"
        ],
        "methodName": "putPlan"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PlansPutPlanRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PlansPutPlanRequest",
      "request": {
        "schema": {
          "generatedName": "PlansPutPlanRequest",
          "schema": "ChangePlanDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Plan changed or redirect url returned.",
        "schema": {
          "generatedName": "PlansPutPlanResponse",
          "schema": "PlanChangedDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Plan not owned by user.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/plan",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "planId": {
                "value": {
                  "value": "planId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "redirectUri": {
                  "value": {
                    "value": "redirectUri",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get team plan information.",
      "audiences": [],
      "operationId": "TeamPlans_GetTeamPlans",
      "tags": [
        "Plans"
      ],
      "sdkName": {
        "groupName": [
          "plans"
        ],
        "methodName": "getTeamPlans"
      },
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PlansGetTeamPlansRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PlansGetTeamPlansRequest",
      "response": {
        "description": "Team plan information returned.",
        "schema": {
          "generatedName": "PlansGetTeamPlansResponse",
          "schema": "PlansDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}/plans",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "plans": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "costs": {
                          "value": {
                            "value": "costs",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "confirmText": {
                          "value": {
                            "value": "confirmText",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "yearlyConfirmText": {
                          "value": {
                            "value": "yearlyConfirmText",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "yearlyCosts": {
                          "value": {
                            "value": "yearlyCosts",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "yearlyId": {
                          "value": {
                            "value": "yearlyId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "maxApiBytes": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "maxApiCalls": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "maxAssetSize": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "maxContributors": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "currentPlanId": {
                  "value": {
                    "value": "currentPlanId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "planOwner": {
                  "value": {
                    "value": "planOwner",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "portalLink": {
                  "value": {
                    "value": "portalLink",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referral": {
                  "properties": {
                    "code": {
                      "value": {
                        "value": "code",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "earned": {
                      "value": {
                        "value": "earned",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "condition": {
                      "value": {
                        "value": "condition",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "locked": {
                  "value": "None",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Change the team plan.",
      "audiences": [],
      "operationId": "TeamPlans_PutTeamPlan",
      "tags": [
        "Plans"
      ],
      "sdkName": {
        "groupName": [
          "plans"
        ],
        "methodName": "putTeamPlan"
      },
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PlansPutTeamPlanRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PlansPutTeamPlanRequest",
      "request": {
        "schema": {
          "generatedName": "PlansPutTeamPlanRequest",
          "schema": "ChangePlanDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Plan changed or redirect url returned.",
        "schema": {
          "generatedName": "PlansPutTeamPlanResponse",
          "schema": "PlanChangedDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/teams/{team}/plan",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "planId": {
                "value": {
                  "value": "planId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "redirectUri": {
                  "value": {
                    "value": "redirectUri",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get API information.",
      "audiences": [],
      "operationId": "Ping_GetInfo",
      "tags": [
        "Ping"
      ],
      "sdkName": {
        "groupName": [
          "ping"
        ],
        "methodName": "getInfo"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PingGetInfoRequest",
      "response": {
        "description": "Infos returned.",
        "schema": {
          "generatedName": "PingGetInfoResponse",
          "schema": "ExposedValues",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/info",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": "value",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get ping status of the API.",
      "audiences": [],
      "operationId": "Ping_GetPing",
      "tags": [
        "Ping"
      ],
      "sdkName": {
        "groupName": [
          "ping"
        ],
        "methodName": "getPing"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PingGetPingRequest",
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Can be used to test, if the Squidex API is alive and responding.",
      "authed": true,
      "method": "GET",
      "path": "/api/ping",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get ping status.",
      "audiences": [],
      "operationId": "Ping_GetAppPing",
      "tags": [
        "Ping"
      ],
      "sdkName": {
        "groupName": [
          "ping"
        ],
        "methodName": "getAppPing"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PingGetAppPingRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PingGetAppPingRequest",
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Can be used to test, if the Squidex API is alive and responding.",
      "authed": true,
      "method": "GET",
      "path": "/api/ping/{app}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get features since version.",
      "audiences": [],
      "operationId": "News_GetNews",
      "tags": [
        "News"
      ],
      "sdkName": {
        "groupName": [
          "news"
        ],
        "methodName": "getNews"
      },
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The latest received version.",
          "name": "version",
          "schema": {
            "generatedName": "NewsGetNewsRequestVersion",
            "value": {
              "schema": {
                "default": 0,
                "type": "int"
              },
              "generatedName": "NewsGetNewsRequestVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "NewsGetNewsRequest",
      "response": {
        "description": "Latest features returned.",
        "schema": {
          "generatedName": "NewsGetNewsResponse",
          "schema": "FeaturesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/news/features",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "features": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "text": {
                          "value": {
                            "value": "text",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "version": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get supported languages.",
      "audiences": [],
      "operationId": "Languages_GetLanguages",
      "tags": [
        "Languages"
      ],
      "sdkName": {
        "groupName": [
          "languages"
        ],
        "methodName": "getLanguages"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "LanguagesGetLanguagesRequest",
      "response": {
        "description": "Supported language codes returned.",
        "schema": {
          "value": {
            "generatedName": "LanguagesGetLanguagesResponseItem",
            "schema": "LanguageDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "LanguagesGetLanguagesResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Provide a list of supported language codes, following the ISO2Code standard.",
      "authed": true,
      "method": "GET",
      "path": "/api/languages",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "iso2Code": {
                      "value": {
                        "value": "iso2Code",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "englishName": {
                      "value": {
                        "value": "englishName",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "nativeName": {
                      "value": {
                        "value": "nativeName",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get historical events.",
      "audiences": [],
      "operationId": "History_GetAppHistory",
      "tags": [
        "History"
      ],
      "sdkName": {
        "groupName": [
          "history"
        ],
        "methodName": "getAppHistory"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "HistoryGetAppHistoryRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The name of the channel.",
          "name": "channel",
          "schema": {
            "generatedName": "HistoryGetAppHistoryRequestChannel",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "HistoryGetAppHistoryRequestChannel",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "HistoryGetAppHistoryRequest",
      "response": {
        "description": "Events returned.",
        "schema": {
          "value": {
            "generatedName": "HistoryGetAppHistoryResponseItem",
            "schema": "HistoryEventDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "HistoryGetAppHistoryResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/history",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "message": {
                      "value": {
                        "value": "message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "eventType": {
                      "value": {
                        "value": "eventType",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "actor": {
                      "value": {
                        "value": "actor",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "eventId": {
                      "value": {
                        "value": "eventId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "version": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get historical events for a team.",
      "audiences": [],
      "operationId": "History_GetTeamHistory",
      "tags": [
        "History"
      ],
      "sdkName": {
        "groupName": [
          "history"
        ],
        "methodName": "getTeamHistory"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "HistoryGetTeamHistoryRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The name of the channel.",
          "name": "channel",
          "schema": {
            "generatedName": "HistoryGetTeamHistoryRequestChannel",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "HistoryGetTeamHistoryRequestChannel",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "HistoryGetTeamHistoryRequest",
      "response": {
        "description": "Events returned.",
        "schema": {
          "value": {
            "generatedName": "HistoryGetTeamHistoryResponseItem",
            "schema": "HistoryEventDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "HistoryGetTeamHistoryResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Team not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}/history",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "message": {
                      "value": {
                        "value": "message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "eventType": {
                      "value": {
                        "value": "eventType",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "actor": {
                      "value": {
                        "value": "actor",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "eventId": {
                      "value": {
                        "value": "eventId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "version": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get event consumers.",
      "audiences": [],
      "operationId": "EventConsumers_GetEventConsumers",
      "tags": [
        "EventConsumers"
      ],
      "sdkName": {
        "groupName": [
          "eventConsumers"
        ],
        "methodName": "getEventConsumers"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EventConsumersGetEventConsumersRequest",
      "response": {
        "description": "Event consumers returned.",
        "schema": {
          "generatedName": "EventConsumersGetEventConsumersResponse",
          "schema": "EventConsumersDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/event-consumers",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "isStopped": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isResetting": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "position": {
                          "value": {
                            "value": "position",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Start an event consumer.",
      "audiences": [],
      "operationId": "EventConsumers_StartEventConsumer",
      "tags": [
        "EventConsumers"
      ],
      "sdkName": {
        "groupName": [
          "eventConsumers"
        ],
        "methodName": "startEventConsumer"
      },
      "pathParameters": [
        {
          "description": "The name of the event consumer.",
          "name": "consumerName",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EventConsumersStartEventConsumerRequestConsumerName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EventConsumersStartEventConsumerRequest",
      "response": {
        "description": "Event consumer started asynchronously.",
        "schema": {
          "generatedName": "EventConsumersStartEventConsumerResponse",
          "schema": "EventConsumerDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Event consumer not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/event-consumers/{consumerName}/start",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "consumerName",
              "value": {
                "value": {
                  "value": "consumerName",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "isStopped": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isResetting": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "position": {
                  "value": {
                    "value": "position",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Stop an event consumer.",
      "audiences": [],
      "operationId": "EventConsumers_StopEventConsumer",
      "tags": [
        "EventConsumers"
      ],
      "sdkName": {
        "groupName": [
          "eventConsumers"
        ],
        "methodName": "stopEventConsumer"
      },
      "pathParameters": [
        {
          "description": "The name of the event consumer.",
          "name": "consumerName",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EventConsumersStopEventConsumerRequestConsumerName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EventConsumersStopEventConsumerRequest",
      "response": {
        "description": "Event consumer stopped asynchronously.",
        "schema": {
          "generatedName": "EventConsumersStopEventConsumerResponse",
          "schema": "EventConsumerDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Event consumer not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/event-consumers/{consumerName}/stop",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "consumerName",
              "value": {
                "value": {
                  "value": "consumerName",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "isStopped": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isResetting": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "position": {
                  "value": {
                    "value": "position",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Reset an event consumer.",
      "audiences": [],
      "operationId": "EventConsumers_ResetEventConsumer",
      "tags": [
        "EventConsumers"
      ],
      "sdkName": {
        "groupName": [
          "eventConsumers"
        ],
        "methodName": "resetEventConsumer"
      },
      "pathParameters": [
        {
          "description": "The name of the event consumer.",
          "name": "consumerName",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EventConsumersResetEventConsumerRequestConsumerName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EventConsumersResetEventConsumerRequest",
      "response": {
        "description": "Event consumer resetted asynchronously.",
        "schema": {
          "generatedName": "EventConsumersResetEventConsumerResponse",
          "schema": "EventConsumerDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Event consumer not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/event-consumers/{consumerName}/reset",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "consumerName",
              "value": {
                "value": {
                  "value": "consumerName",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "isStopped": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "isResetting": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "position": {
                  "value": {
                    "value": "position",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Creates a dump and writes it into storage..",
      "audiences": [],
      "operationId": "Diagnostics_GetDump",
      "tags": [
        "Diagnostics"
      ],
      "sdkName": {
        "groupName": [
          "diagnostics"
        ],
        "methodName": "getDump"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DiagnosticsGetDumpRequest",
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "501": {
          "generatedName": "NotImplementedError",
          "schema": {
            "generatedName": "NotImplementedErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Not configured.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/diagnostics/dump",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Creates a gc dump and writes it into storage.",
      "audiences": [],
      "operationId": "Diagnostics_GetGCDump",
      "tags": [
        "Diagnostics"
      ],
      "sdkName": {
        "groupName": [
          "diagnostics"
        ],
        "methodName": "getGCDump"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DiagnosticsGetGcDumpRequest",
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "501": {
          "generatedName": "NotImplementedError",
          "schema": {
            "generatedName": "NotImplementedErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Not configured.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/diagnostics/gcdump",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Queries contents.",
      "audiences": [],
      "operationId": "Contents_GetContents",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "getContents"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentsRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional ids of the content to fetch.",
          "name": "ids",
          "schema": {
            "generatedName": "ContentsGetContentsRequestIds",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentsGetContentsRequestIds",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The optional json query.",
          "name": "q",
          "schema": {
            "generatedName": "ContentsGetContentsRequestQ",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentsGetContentsRequestQ",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ContentsGetContentsRequest",
      "response": {
        "description": "Contents returned.",
        "schema": {
          "generatedName": "ContentsGetContentsResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "GET",
      "path": "/api/content/{app}/{schema}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a content item.",
      "audiences": [],
      "operationId": "Contents_PostContent",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "postContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPostContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPostContentRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The initial status.",
          "name": "status",
          "schema": {
            "generatedName": "ContentsPostContentRequestStatus",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentsPostContentRequestStatus",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The optional custom content id.",
          "name": "id",
          "schema": {
            "generatedName": "ContentsPostContentRequestId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentsPostContentRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to automatically publish the content.",
          "name": "publish",
          "schema": {
            "generatedName": "ContentsPostContentRequestPublish",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ContentsPostContentRequestPublish",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ContentsPostContentRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsPostContentRequestBody",
          "schema": "ContentData",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Content created.",
        "schema": {
          "generatedName": "ContentsPostContentResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "POST",
      "path": "/api/content/{app}/{schema}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "key": {
                  "value": "key",
                  "type": "string"
                },
                "value": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              }
            ],
            "type": "map"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Queries contents.",
      "audiences": [],
      "operationId": "Contents_GetContentsPost",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "getContentsPost"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentsPostRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentsPostRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsGetContentsPostRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsGetContentsPostRequest",
          "schema": "QueryDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Contents returned.",
        "schema": {
          "generatedName": "ContentsGetContentsPostResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "POST",
      "path": "/api/content/{app}/{schema}/query",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a content item.",
      "audiences": [],
      "operationId": "Contents_GetContent",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "getContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional version.",
          "name": "version",
          "schema": {
            "generatedName": "ContentsGetContentRequestVersion",
            "value": {
              "schema": {
                "default": -2,
                "type": "int64"
              },
              "generatedName": "ContentsGetContentRequestVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ContentsGetContentRequest",
      "response": {
        "description": "Content returned.",
        "schema": {
          "generatedName": "ContentsGetContentResponse",
          "schema": "ContentDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "GET",
      "path": "/api/content/{app}/{schema}/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "data": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "referenceData": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "key",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    }
                  ],
                  "type": "map"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": {
                    "value": "status",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "newStatus": {
                  "value": {
                    "value": "newStatus",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "statusColor": {
                  "value": {
                    "value": "statusColor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "newStatusColor": {
                  "value": {
                    "value": "newStatusColor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "editToken": {
                  "value": {
                    "value": "editToken",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "scheduleJob": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": {
                        "value": "status",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dueTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "color": {
                      "value": {
                        "value": "color",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "scheduledBy": {
                      "value": {
                        "value": "scheduledBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "schemaId": {
                  "value": {
                    "value": "schemaId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "schemaName": {
                  "value": {
                    "value": "schemaName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "schemaDisplayName": {
                  "value": {
                    "value": "schemaDisplayName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referenceFields": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "fieldId": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isHidden": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isLocked": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isDisabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "partitioning": {
                          "value": {
                            "value": "partitioning",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "properties": {
                          "value": {
                            "value": {
                              "fieldType": {
                                "value": {
                                  "value": "UI",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "editor": {
                                "value": {
                                  "value": "Separator",
                                  "type": "string"
                                },
                                "type": "literal"
                              },
                              "isRequired": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isRequiredOnPublish": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              },
                              "isHalfWidth": {
                                "value": {
                                  "value": true,
                                  "type": "boolean"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "nested": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "isDeleted": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Upsert a content item.",
      "audiences": [],
      "operationId": "Contents_PostUpsertContent",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "postUpsertContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPostUpsertContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPostUpsertContentRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to update.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPostUpsertContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The initial status.",
          "name": "status",
          "schema": {
            "generatedName": "ContentsPostUpsertContentRequestStatus",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentsPostUpsertContentRequestStatus",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Makes the update as patch.",
          "name": "patch",
          "schema": {
            "generatedName": "ContentsPostUpsertContentRequestPatch",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ContentsPostUpsertContentRequestPatch",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to automatically publish the content.",
          "name": "publish",
          "schema": {
            "generatedName": "ContentsPostUpsertContentRequestPublish",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ContentsPostUpsertContentRequestPublish",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ContentsPostUpsertContentRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsPostUpsertContentRequestBody",
          "schema": "ContentData",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Content created or updated.",
        "schema": {
          "generatedName": "ContentsPostUpsertContentResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content references, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "POST",
      "path": "/api/content/{app}/{schema}/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "key": {
                  "value": "key",
                  "type": "string"
                },
                "value": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              }
            ],
            "type": "map"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a content item.",
      "audiences": [],
      "operationId": "Contents_PutContent",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "putContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPutContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPutContentRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to update.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPutContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsPutContentRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsPutContentRequest",
          "schema": "ContentData",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Content updated.",
        "schema": {
          "generatedName": "ContentsPutContentResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content references, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "PUT",
      "path": "/api/content/{app}/{schema}/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "key": {
                  "value": "key",
                  "type": "string"
                },
                "value": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              }
            ],
            "type": "map"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a content item.",
      "audiences": [],
      "operationId": "Contents_DeleteContent",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "deleteContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteContentRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to delete.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "True to check referrers of this content.",
          "name": "checkReferrers",
          "schema": {
            "generatedName": "ContentsDeleteContentRequestCheckReferrers",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ContentsDeleteContentRequestCheckReferrers",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to delete the content permanently.",
          "name": "permanent",
          "schema": {
            "generatedName": "ContentsDeleteContentRequestPermanent",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ContentsDeleteContentRequestPermanent",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ContentsDeleteContentRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content cannot be deleted.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can create an generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "DELETE",
      "path": "/api/content/{app}/{schema}/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Patchs a content item.",
      "audiences": [],
      "operationId": "Contents_PatchContent",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "patchContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPatchContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPatchContentRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to patch.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPatchContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsPatchContentRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsPatchContentRequest",
          "schema": "ContentData",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Content patched.",
        "schema": {
          "generatedName": "ContentsPatchContentResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "PATCH",
      "path": "/api/content/{app}/{schema}/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "key": {
                  "value": "key",
                  "type": "string"
                },
                "value": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              }
            ],
            "type": "map"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a content item validity.",
      "audiences": [],
      "operationId": "Contents_GetContentValidity",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "getContentValidity"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentValidityRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentValidityRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentValidityRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsGetContentValidityRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "GET",
      "path": "/api/content/{app}/{schema}/{id}/validity",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get all references of a content.",
      "audiences": [],
      "operationId": "Contents_GetReferences",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "getReferences"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetReferencesRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetReferencesRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetReferencesRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional json query.",
          "name": "q",
          "schema": {
            "generatedName": "ContentsGetReferencesRequestQ",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentsGetReferencesRequestQ",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ContentsGetReferencesRequest",
      "response": {
        "description": "Contents returned.",
        "schema": {
          "generatedName": "ContentsGetReferencesResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "GET",
      "path": "/api/content/{app}/{schema}/{id}/references",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a referencing contents of a content item.",
      "audiences": [],
      "operationId": "Contents_GetReferencing",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "getReferencing"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetReferencingRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetReferencingRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetReferencingRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional json query.",
          "name": "q",
          "schema": {
            "generatedName": "ContentsGetReferencingRequestQ",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentsGetReferencingRequestQ",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ContentsGetReferencingRequest",
      "response": {
        "description": "Content returned.",
        "schema": {
          "generatedName": "ContentsGetReferencingResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "GET",
      "path": "/api/content/{app}/{schema}/{id}/referencing",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a content by version.",
      "audiences": [],
      "operationId": "Contents_GetContentVersion",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "getContentVersion"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentVersionRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentVersionRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsGetContentVersionRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The version fo the content to fetch.",
          "name": "version",
          "schema": {
            "schema": {
              "type": "int"
            },
            "generatedName": "ContentsGetContentVersionRequestVersion",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsGetContentVersionRequest",
      "response": {
        "description": "Content version returned.",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "availability": "Deprecated",
      "method": "GET",
      "path": "/api/content/{app}/{schema}/{id}/{version}",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Import content items.",
      "audiences": [],
      "operationId": "Contents_PostContents",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "postContents"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPostContentsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPostContentsRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsPostContentsRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsPostContentsRequest",
          "schema": "ImportContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Contents created.",
        "schema": {
          "value": {
            "generatedName": "ContentsPostContentsResponseItem",
            "schema": "BulkResultDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ContentsPostContentsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content references, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "availability": "Deprecated",
      "method": "POST",
      "path": "/api/content/{app}/{schema}/import",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "datas": {
                "value": [
                  {
                    "value": [
                      {
                        "key": {
                          "value": "key",
                          "type": "string"
                        },
                        "value": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      }
                    ],
                    "type": "map"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "value": {
                            "value": "message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "errorCode": {
                          "value": {
                            "value": "errorCode",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "traceId": {
                          "value": {
                            "value": "traceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": {
                            "value": "type",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "details": {
                          "value": [
                            {
                              "value": {
                                "value": "details",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "statusCode": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "jobIndex": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentId": {
                      "value": {
                        "value": "contentId",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk update content items.",
      "audiences": [],
      "operationId": "Contents_BulkUpdateContents",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "bulkUpdateContents"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsBulkUpdateContentsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsBulkUpdateContentsRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsBulkUpdateContentsRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsBulkUpdateContentsRequest",
          "schema": "BulkUpdateContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "ContentsBulkUpdateContentsResponseItem",
            "schema": "BulkResultDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ContentsBulkUpdateContentsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Contents request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Contents references, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "POST",
      "path": "/api/content/{app}/{schema}/bulk",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "jobs": {
                "value": [
                  {
                    "properties": {},
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "value": {
                            "value": "message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "errorCode": {
                          "value": {
                            "value": "errorCode",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "traceId": {
                          "value": {
                            "value": "traceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": {
                            "value": "type",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "details": {
                          "value": [
                            {
                              "value": {
                                "value": "details",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "statusCode": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "jobIndex": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentId": {
                      "value": {
                        "value": "contentId",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Change status of a content item.",
      "audiences": [],
      "operationId": "Contents_PutContentStatus",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "putContentStatus"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPutContentStatusRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPutContentStatusRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to change.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsPutContentStatusRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsPutContentStatusRequest",
      "request": {
        "schema": {
          "generatedName": "ContentsPutContentStatusRequest",
          "schema": "ChangeStatusDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Content status changed.",
        "schema": {
          "generatedName": "ContentsPutContentStatusResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "PUT",
      "path": "/api/content/{app}/{schema}/{id}/status",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "status": {
                "value": {
                  "value": "status",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancel status change of a content item.",
      "audiences": [],
      "operationId": "Contents_DeleteContentStatus",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "deleteContentStatus"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteContentStatusRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteContentStatusRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to cancel.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteContentStatusRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsDeleteContentStatusRequest",
      "response": {
        "description": "Content status change cancelled.",
        "schema": {
          "generatedName": "ContentsDeleteContentStatusResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Content request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "DELETE",
      "path": "/api/content/{app}/{schema}/{id}/status",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new draft version.",
      "audiences": [],
      "operationId": "Contents_CreateDraft",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "createDraft"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsCreateDraftRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsCreateDraftRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to create the draft for.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsCreateDraftRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsCreateDraftRequest",
      "response": {
        "description": "Content draft created.",
        "schema": {
          "generatedName": "ContentsCreateDraftResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "POST",
      "path": "/api/content/{app}/{schema}/{id}/draft",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete the draft version.",
      "audiences": [],
      "operationId": "Contents_DeleteVersion",
      "tags": [
        "Contents"
      ],
      "sdkName": {
        "groupName": [
          "contents"
        ],
        "methodName": "deleteVersion"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteVersionRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteVersionRequestSchema",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the content item to delete the draft from.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ContentsDeleteVersionRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ContentsDeleteVersionRequest",
      "response": {
        "description": "Content draft deleted.",
        "schema": {
          "generatedName": "ContentsDeleteVersionResponse",
          "schema": "ContentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Content, schema or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "authed": true,
      "method": "DELETE",
      "path": "/api/content/{app}/{schema}/{id}/draft",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "schema",
              "value": {
                "value": {
                  "value": "schema",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "referenceData": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatus": {
                          "value": {
                            "value": "newStatus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "statusColor": {
                          "value": {
                            "value": "statusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "newStatusColor": {
                          "value": {
                            "value": "newStatusColor",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scheduleJob": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": {
                                "value": "status",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "dueTime": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "color",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scheduledBy": {
                              "value": {
                                "value": "scheduledBy",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "schemaId": {
                          "value": {
                            "value": "schemaId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaName": {
                          "value": {
                            "value": "schemaName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schemaDisplayName": {
                          "value": {
                            "value": "schemaDisplayName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceFields": {
                          "value": [
                            {
                              "properties": {
                                "_links": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "properties": {
                                          "href": {
                                            "value": {
                                              "value": "href",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          },
                                          "method": {
                                            "value": {
                                              "value": "method",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "fieldId": {
                                  "value": {
                                    "value": 1000000,
                                    "type": "int64"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "isHidden": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isLocked": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "isDisabled": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "partitioning": {
                                  "value": {
                                    "value": "partitioning",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "properties": {
                                  "value": {
                                    "value": {
                                      "fieldType": {
                                        "value": {
                                          "value": "UI",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "editor": {
                                        "value": {
                                          "value": "Separator",
                                          "type": "string"
                                        },
                                        "type": "literal"
                                      },
                                      "isRequired": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isRequiredOnPublish": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      },
                                      "isHalfWidth": {
                                        "value": {
                                          "value": true,
                                          "type": "boolean"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "discriminated"
                                  },
                                  "type": "oneOf"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isDeleted": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "statuses": {
                  "value": [
                    {
                      "properties": {
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "color": {
                          "value": {
                            "value": "color",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get all watching users..",
      "audiences": [],
      "operationId": "Comments_GetWatchingUsers",
      "tags": [
        "Comments"
      ],
      "sdkName": {
        "groupName": [
          "comments"
        ],
        "methodName": "getWatchingUsers"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsGetWatchingUsersRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The path to the resource.",
          "name": "resource",
          "schema": {
            "generatedName": "CommentsGetWatchingUsersRequestResource",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "CommentsGetWatchingUsersRequestResource",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CommentsGetWatchingUsersRequest",
      "response": {
        "description": "Watching users returned.",
        "schema": {
          "value": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsGetWatchingUsersResponseItem",
            "groupName": [],
            "type": "primitive"
          },
          "generatedName": "CommentsGetWatchingUsersResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/watching/{resource}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get all comments.",
      "audiences": [],
      "operationId": "Comments_GetComments",
      "tags": [
        "Comments"
      ],
      "sdkName": {
        "groupName": [
          "comments"
        ],
        "methodName": "getComments"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsGetCommentsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsGetCommentsRequestCommentsId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The current version.",
          "name": "version",
          "schema": {
            "generatedName": "CommentsGetCommentsRequestVersion",
            "value": {
              "schema": {
                "default": -2,
                "type": "int64"
              },
              "generatedName": "CommentsGetCommentsRequestVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "CommentsGetCommentsRequest",
      "response": {
        "description": "Comments returned.",
        "schema": {
          "generatedName": "CommentsGetCommentsResponse",
          "schema": "CommentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "When passing in a version you can retrieve all updates since then.",
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/comments/{commentsId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "commentsId",
              "value": {
                "value": {
                  "value": "commentsId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "createdComments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "time": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "text": {
                          "value": {
                            "value": "text",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "url": {
                          "value": {
                            "value": "url",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "updatedComments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "time": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "text": {
                          "value": {
                            "value": "text",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "url": {
                          "value": {
                            "value": "url",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "deletedComments": {
                  "value": [
                    {
                      "value": {
                        "value": "deletedComments",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new comment.",
      "audiences": [],
      "operationId": "Comments_PostComment",
      "tags": [
        "Comments"
      ],
      "sdkName": {
        "groupName": [
          "comments"
        ],
        "methodName": "postComment"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsPostCommentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsPostCommentRequestCommentsId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CommentsPostCommentRequest",
      "request": {
        "schema": {
          "generatedName": "CommentsPostCommentRequest",
          "schema": "UpsertCommentDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Comment created.",
        "schema": {
          "generatedName": "CommentsPostCommentResponse",
          "schema": "CommentDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Comment request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/comments/{commentsId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "commentsId",
              "value": {
                "value": {
                  "value": "commentsId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "text": {
                "value": {
                  "value": "text",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "time": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "user": {
                  "value": {
                    "value": "user",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "text": {
                  "value": {
                    "value": "text",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a comment.",
      "audiences": [],
      "operationId": "Comments_PutComment",
      "tags": [
        "Comments"
      ],
      "sdkName": {
        "groupName": [
          "comments"
        ],
        "methodName": "putComment"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsPutCommentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsPutCommentRequestCommentsId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the comment.",
          "name": "commentId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsPutCommentRequestCommentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CommentsPutCommentRequest",
      "request": {
        "schema": {
          "generatedName": "CommentsPutCommentRequest",
          "schema": "UpsertCommentDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Comment request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Comment or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "commentsId",
              "value": {
                "value": {
                  "value": "commentsId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "commentId",
              "value": {
                "value": {
                  "value": "commentId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "text": {
                "value": {
                  "value": "text",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a comment.",
      "audiences": [],
      "operationId": "Comments_DeleteComment",
      "tags": [
        "Comments"
      ],
      "sdkName": {
        "groupName": [
          "comments"
        ],
        "methodName": "deleteComment"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsDeleteCommentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsDeleteCommentRequestCommentsId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the comment.",
          "name": "commentId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CommentsDeleteCommentRequestCommentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CommentsDeleteCommentRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Comment or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "commentsId",
              "value": {
                "value": {
                  "value": "commentsId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "commentId",
              "value": {
                "value": {
                  "value": "commentId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get all notifications.",
      "audiences": [],
      "operationId": "UserNotifications_GetNotifications",
      "tags": [
        "Notifications"
      ],
      "sdkName": {
        "groupName": [
          "notifications"
        ],
        "methodName": "getNotifications"
      },
      "pathParameters": [
        {
          "description": "The user id.",
          "name": "userId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "NotificationsGetNotificationsRequestUserId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The current version.",
          "name": "version",
          "schema": {
            "generatedName": "NotificationsGetNotificationsRequestVersion",
            "value": {
              "schema": {
                "default": -2,
                "type": "int64"
              },
              "generatedName": "NotificationsGetNotificationsRequestVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "NotificationsGetNotificationsRequest",
      "response": {
        "description": "All comments returned.",
        "schema": {
          "generatedName": "NotificationsGetNotificationsResponse",
          "schema": "CommentsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "When passing in a version you can retrieve all updates since then.",
      "authed": true,
      "method": "GET",
      "path": "/api/users/{userId}/notifications",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "userId",
              "value": {
                "value": {
                  "value": "userId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "createdComments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "time": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "text": {
                          "value": {
                            "value": "text",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "url": {
                          "value": {
                            "value": "url",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "updatedComments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "time": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "text": {
                          "value": {
                            "value": "text",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "url": {
                          "value": {
                            "value": "url",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "deletedComments": {
                  "value": [
                    {
                      "value": {
                        "value": "deletedComments",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a notification.",
      "audiences": [],
      "operationId": "UserNotifications_DeleteComment",
      "tags": [
        "Notifications"
      ],
      "sdkName": {
        "groupName": [
          "notifications"
        ],
        "methodName": "deleteComment"
      },
      "pathParameters": [
        {
          "description": "The user id.",
          "name": "userId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "NotificationsDeleteCommentRequestUserId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the comment.",
          "name": "commentId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "NotificationsDeleteCommentRequestCommentId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "NotificationsDeleteCommentRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Comment not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/users/{userId}/notifications/{commentId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "userId",
              "value": {
                "value": {
                  "value": "userId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "commentId",
              "value": {
                "value": {
                  "value": "commentId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the backup content.",
      "audiences": [],
      "operationId": "BackupContent_GetBackupContent",
      "tags": [
        "Backups"
      ],
      "sdkName": {
        "groupName": [
          "backups"
        ],
        "methodName": "getBackupContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BackupsGetBackupContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the backup.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BackupsGetBackupContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BackupsGetBackupContentRequest",
      "response": {
        "description": "Backup found and content returned.",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Backup or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/backups/{id}",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a backup.",
      "audiences": [],
      "operationId": "Backups_DeleteBackup",
      "tags": [
        "Backups"
      ],
      "sdkName": {
        "groupName": [
          "backups"
        ],
        "methodName": "deleteBackup"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BackupsDeleteBackupRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the backup to delete.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BackupsDeleteBackupRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BackupsDeleteBackupRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Backup or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/backups/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the backup content.",
      "audiences": [],
      "operationId": "BackupContent_GetBackupContentV2",
      "tags": [
        "Backups"
      ],
      "sdkName": {
        "groupName": [
          "backups"
        ],
        "methodName": "getBackupContentV2"
      },
      "pathParameters": [
        {
          "description": "The ID of the backup.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BackupsGetBackupContentV2RequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The ID of the app.",
          "name": "appId",
          "schema": {
            "generatedName": "BackupsGetBackupContentV2RequestAppId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BackupsGetBackupContentV2RequestAppId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "generatedName": "BackupsGetBackupContentV2RequestApp",
            "value": {
              "schema": {
                "default": "",
                "type": "string"
              },
              "generatedName": "BackupsGetBackupContentV2RequestApp",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "BackupsGetBackupContentV2Request",
      "response": {
        "description": "Backup found and content returned.",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Backup or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/backups/{id}",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get all backup jobs.",
      "audiences": [],
      "operationId": "Backups_GetBackups",
      "tags": [
        "Backups"
      ],
      "sdkName": {
        "groupName": [
          "backups"
        ],
        "methodName": "getBackups"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BackupsGetBackupsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BackupsGetBackupsRequest",
      "response": {
        "description": "Backups returned.",
        "schema": {
          "generatedName": "BackupsGetBackupsResponse",
          "schema": "BackupJobsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/backups",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "started": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "stopped": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "handledEvents": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "handledAssets": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "Created",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Start a new backup.",
      "audiences": [],
      "operationId": "Backups_PostBackup",
      "tags": [
        "Backups"
      ],
      "sdkName": {
        "groupName": [
          "backups"
        ],
        "methodName": "postBackup"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BackupsPostBackupRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BackupsPostBackupRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Backup contingent reached.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/backups",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get current restore status.",
      "audiences": [],
      "operationId": "Restore_GetRestoreJob",
      "tags": [
        "Backups"
      ],
      "sdkName": {
        "groupName": [
          "backups"
        ],
        "methodName": "getRestoreJob"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BackupsGetRestoreJobRequest",
      "response": {
        "description": "Status returned.",
        "schema": {
          "generatedName": "BackupsGetRestoreJobResponse",
          "schema": "RestoreJobDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/restore",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "log": {
                  "value": [
                    {
                      "value": {
                        "value": "log",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "started": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "stopped": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "Created",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Restore a backup.",
      "audiences": [],
      "operationId": "Restore_PostRestoreJob",
      "tags": [
        "Backups"
      ],
      "sdkName": {
        "groupName": [
          "backups"
        ],
        "methodName": "postRestoreJob"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BackupsPostRestoreJobRequest",
      "request": {
        "schema": {
          "generatedName": "BackupsPostRestoreJobRequest",
          "schema": "RestoreRequestDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/restore",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "url": {
                "value": {
                  "value": "url",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the asset content.",
      "audiences": [],
      "operationId": "AssetContent_GetAssetContentBySlug",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "getAssetContentBySlug"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetContentBySlugRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The id or slug of the asset.",
          "name": "idOrSlug",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetContentBySlugRequestIdOrSlug",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional suffix that can be used to seo-optimize the link to the image Has not effect.",
          "name": "more",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestMore",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestMore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional version of the asset.",
          "name": "version",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestVersion",
            "value": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The cache duration in seconds.",
          "name": "cache",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestCache",
            "value": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestCache",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Set it to 0 to prevent download.",
          "name": "download",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestDownload",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestDownload",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The target width of the asset, if it is an image.",
          "name": "width",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestWidth",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestWidth",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The target height of the asset, if it is an image.",
          "name": "height",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestHeight",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestHeight",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional image quality, it is is an jpeg image.",
          "name": "quality",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestQuality",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestQuality",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The resize mode when the width and height is defined.",
          "name": "mode",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestMode",
            "value": {
              "generatedName": "AssetsGetAssetContentBySlugRequestMode",
              "schema": "ResizeMode",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional background color.",
          "name": "bg",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestBg",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestBg",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Override the y focus point.",
          "name": "focusX",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestFocusX",
            "value": {
              "schema": {
                "type": "float"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestFocusX",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Override the x focus point.",
          "name": "focusY",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestFocusY",
            "value": {
              "schema": {
                "type": "float"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestFocusY",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to ignore the asset focus point if any.",
          "name": "nofocus",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestNofocus",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestNofocus",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to use auto format.",
          "name": "auto",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestAuto",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestAuto",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "force",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestForce",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsGetAssetContentBySlugRequestForce",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "format",
          "schema": {
            "generatedName": "AssetsGetAssetContentBySlugRequestFormat",
            "value": {
              "generatedName": "AssetsGetAssetContentBySlugRequestFormat",
              "schema": "ImageFormat",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AssetsGetAssetContentBySlugRequest",
      "response": {
        "description": "Asset found and content or (resized) image returned.",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/assets/{app}/{idOrSlug}/{more}",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the asset content.",
      "audiences": [],
      "operationId": "AssetContent_GetAssetContent",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "getAssetContent"
      },
      "pathParameters": [
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional version of the asset.",
          "name": "version",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestVersion",
            "value": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetsGetAssetContentRequestVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The cache duration in seconds.",
          "name": "cache",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestCache",
            "value": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetsGetAssetContentRequestCache",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Set it to 0 to prevent download.",
          "name": "download",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestDownload",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentRequestDownload",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The target width of the asset, if it is an image.",
          "name": "width",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestWidth",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentRequestWidth",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The target height of the asset, if it is an image.",
          "name": "height",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestHeight",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentRequestHeight",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional image quality, it is is an jpeg image.",
          "name": "quality",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestQuality",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "AssetsGetAssetContentRequestQuality",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The resize mode when the width and height is defined.",
          "name": "mode",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestMode",
            "value": {
              "generatedName": "AssetsGetAssetContentRequestMode",
              "schema": "ResizeMode",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional background color.",
          "name": "bg",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestBg",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetContentRequestBg",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Override the y focus point.",
          "name": "focusX",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestFocusX",
            "value": {
              "schema": {
                "type": "float"
              },
              "generatedName": "AssetsGetAssetContentRequestFocusX",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Override the x focus point.",
          "name": "focusY",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestFocusY",
            "value": {
              "schema": {
                "type": "float"
              },
              "generatedName": "AssetsGetAssetContentRequestFocusY",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to ignore the asset focus point if any.",
          "name": "nofocus",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestNofocus",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsGetAssetContentRequestNofocus",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to use auto format.",
          "name": "auto",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestAuto",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsGetAssetContentRequestAuto",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "force",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestForce",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsGetAssetContentRequestForce",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "format",
          "schema": {
            "generatedName": "AssetsGetAssetContentRequestFormat",
            "value": {
              "generatedName": "AssetsGetAssetContentRequestFormat",
              "schema": "ImageFormat",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AssetsGetAssetContentRequest",
      "response": {
        "description": "Asset found and content or (resized) image returned.",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "availability": "Deprecated",
      "method": "GET",
      "path": "/api/assets/{id}",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get asset folders.",
      "audiences": [],
      "operationId": "AssetFolders_GetAssetFolders",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "getAssetFolders"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetFoldersRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "schema": {
            "generatedName": "AssetsGetAssetFoldersRequestParentId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetFoldersRequestParentId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The scope of the query.",
          "name": "scope",
          "schema": {
            "generatedName": "AssetsGetAssetFoldersRequestScope",
            "value": {
              "generatedName": "AssetsGetAssetFoldersRequestScope",
              "schema": "AssetFolderScope",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AssetsGetAssetFoldersRequest",
      "response": {
        "description": "Asset folders returned.",
        "schema": {
          "generatedName": "AssetsGetAssetFoldersResponse",
          "schema": "AssetFoldersDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get all asset folders for the app.",
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/assets/folders",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parentId": {
                          "value": {
                            "value": "parentId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "folderName": {
                          "value": {
                            "value": "folderName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "path": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parentId": {
                          "value": {
                            "value": "parentId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "folderName": {
                          "value": {
                            "value": "folderName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create an asset folder.",
      "audiences": [],
      "operationId": "AssetFolders_PostAssetFolder",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "postAssetFolder"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPostAssetFolderRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsPostAssetFolderRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsPostAssetFolderRequest",
          "schema": "CreateAssetFolderDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Asset folder created.",
        "schema": {
          "generatedName": "AssetsPostAssetFolderResponse",
          "schema": "AssetFolderDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset folder request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/assets/folders",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "folderName": {
                "value": {
                  "value": "folderName",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "folderName": {
                  "value": {
                    "value": "folderName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update an asset folder.",
      "audiences": [],
      "operationId": "AssetFolders_PutAssetFolder",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "putAssetFolder"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetFolderRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset folder.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetFolderRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsPutAssetFolderRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsPutAssetFolderRequest",
          "schema": "RenameAssetFolderDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Asset folder updated.",
        "schema": {
          "generatedName": "AssetsPutAssetFolderResponse",
          "schema": "AssetFolderDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset folder request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset folder or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/assets/folders/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "folderName": {
                "value": {
                  "value": "folderName",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "folderName": {
                  "value": {
                    "value": "folderName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete an asset folder.",
      "audiences": [],
      "operationId": "AssetFolders_DeleteAssetFolder",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "deleteAssetFolder"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsDeleteAssetFolderRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset folder to delete.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsDeleteAssetFolderRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsDeleteAssetFolderRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset folder or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/assets/folders/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Move an asset folder.",
      "audiences": [],
      "operationId": "AssetFolders_PutAssetFolderParent",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "putAssetFolderParent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetFolderParentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset folder.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetFolderParentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsPutAssetFolderParentRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsPutAssetFolderParentRequest",
          "schema": "MoveAssetFolderDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Asset folder moved.",
        "schema": {
          "generatedName": "AssetsPutAssetFolderParentResponse",
          "schema": "AssetFolderDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset folder request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset folder or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/assets/folders/{id}/parent",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "folderName": {
                  "value": {
                    "value": "folderName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get assets tags.",
      "audiences": [],
      "operationId": "Assets_GetTags",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "getTags"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetTagsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsGetTagsRequest",
      "response": {
        "description": "Assets tags returned.",
        "schema": {
          "key": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetTagsResponseKey",
            "groupName": [],
            "type": "primitive"
          },
          "value": {
            "schema": {
              "type": "int"
            },
            "generatedName": "AssetsGetTagsResponseValue",
            "groupName": [],
            "type": "primitive"
          },
          "generatedName": "AssetsGetTagsResponse",
          "groupName": [],
          "type": "map"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get all tags for assets.",
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/assets/tags",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Rename an asset tag.",
      "audiences": [],
      "operationId": "Assets_PutTag",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "putTag"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutTagRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The tag to return.",
          "name": "name",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutTagRequestName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsPutTagRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsPutTagRequest",
          "schema": "RenameTagDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Asset tag renamed and new tags returned.",
        "schema": {
          "key": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutTagResponseKey",
            "groupName": [],
            "type": "primitive"
          },
          "value": {
            "schema": {
              "type": "int"
            },
            "generatedName": "AssetsPutTagResponseValue",
            "groupName": [],
            "type": "primitive"
          },
          "generatedName": "AssetsPutTagResponse",
          "groupName": [],
          "type": "map"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/assets/tags/{name}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "name",
              "value": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "tagName": {
                "value": {
                  "value": "tagName",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get assets.",
      "audiences": [],
      "operationId": "Assets_GetAssets",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "getAssets"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "schema": {
            "generatedName": "AssetsGetAssetsRequestParentId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetsRequestParentId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The optional asset ids.",
          "name": "ids",
          "schema": {
            "generatedName": "AssetsGetAssetsRequestIds",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetsRequestIds",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The optional json query.",
          "name": "q",
          "schema": {
            "generatedName": "AssetsGetAssetsRequestQ",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetsRequestQ",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional number of items to take.",
          "name": "$top",
          "schema": {
            "generatedName": "AssetsGetAssetsRequestTop",
            "value": {
              "schema": {
                "type": "double"
              },
              "generatedName": "AssetsGetAssetsRequestTop",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional number of items to skip.",
          "name": "$skip",
          "schema": {
            "generatedName": "AssetsGetAssetsRequestSkip",
            "value": {
              "schema": {
                "type": "double"
              },
              "generatedName": "AssetsGetAssetsRequestSkip",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional OData order definition.",
          "name": "$orderby",
          "schema": {
            "generatedName": "AssetsGetAssetsRequestOrderby",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetsRequestOrderby",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Optional OData filter.",
          "name": "$filter",
          "schema": {
            "generatedName": "AssetsGetAssetsRequestFilter",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsGetAssetsRequestFilter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AssetsGetAssetsRequest",
      "response": {
        "description": "Assets returned.",
        "schema": {
          "generatedName": "AssetsGetAssetsResponse",
          "schema": "AssetsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get all assets for the app.",
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/assets",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parentId": {
                          "value": {
                            "value": "parentId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fileName": {
                          "value": {
                            "value": "fileName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fileHash": {
                          "value": {
                            "value": "fileHash",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isProtected": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "slug": {
                          "value": {
                            "value": "slug",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mimeType": {
                          "value": {
                            "value": "mimeType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fileType": {
                          "value": {
                            "value": "fileType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadataText": {
                          "value": {
                            "value": "metadataText",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadata": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "tags": {
                          "value": [
                            {
                              "value": {
                                "value": "tags",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "fileSize": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "fileVersion": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "Unknown",
                          "type": "enum"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "_meta": {
                          "properties": {
                            "isDuplicate": {
                              "value": {
                                "value": "isDuplicate",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "isImage": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "pixelWidth": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "pixelHeight": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Upload a new asset.",
      "audiences": [],
      "operationId": "Assets_PostAsset",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "postAsset"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPostAssetRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "schema": {
            "generatedName": "AssetsPostAssetRequestParentId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsPostAssetRequestParentId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The optional custom asset id.",
          "name": "id",
          "schema": {
            "generatedName": "AssetsPostAssetRequestId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsPostAssetRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to duplicate the asset, event if the file has been uploaded.",
          "name": "duplicate",
          "schema": {
            "generatedName": "AssetsPostAssetRequestDuplicate",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsPostAssetRequestDuplicate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AssetsPostAssetRequest",
      "request": {
        "properties": [
          {
            "key": "file",
            "schema": {
              "isOptional": true,
              "isArray": false,
              "type": "file"
            }
          }
        ],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "multipart"
      },
      "response": {
        "description": "Asset created.",
        "schema": {
          "generatedName": "AssetsPostAssetResponse",
          "schema": "AssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "413": {
          "generatedName": "ContentTooLargeError",
          "schema": {
            "generatedName": "ContentTooLargeErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset exceeds the maximum upload size.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/assets",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileName": {
                  "value": {
                    "value": "fileName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileHash": {
                  "value": {
                    "value": "fileHash",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isProtected": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "slug": {
                  "value": {
                    "value": "slug",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mimeType": {
                  "value": {
                    "value": "mimeType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileType": {
                  "value": {
                    "value": "fileType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadataText": {
                  "value": {
                    "value": "metadataText",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "editToken": {
                  "value": {
                    "value": "editToken",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tags",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fileSize": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "fileVersion": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Unknown",
                  "type": "enum"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isDuplicate": {
                      "value": {
                        "value": "isDuplicate",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "isImage": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "pixelWidth": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "pixelHeight": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get assets.",
      "audiences": [],
      "operationId": "Assets_GetAssetsPost",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "getAssetsPost"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetsPostRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsGetAssetsPostRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsGetAssetsPostRequest",
          "schema": "QueryDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Assets returned.",
        "schema": {
          "generatedName": "AssetsGetAssetsPostResponse",
          "schema": "AssetsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get all assets for the app.",
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/assets/query",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "total": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parentId": {
                          "value": {
                            "value": "parentId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fileName": {
                          "value": {
                            "value": "fileName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fileHash": {
                          "value": {
                            "value": "fileHash",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isProtected": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "slug": {
                          "value": {
                            "value": "slug",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mimeType": {
                          "value": {
                            "value": "mimeType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fileType": {
                          "value": {
                            "value": "fileType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadataText": {
                          "value": {
                            "value": "metadataText",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "editToken": {
                          "value": {
                            "value": "editToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadata": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "tags": {
                          "value": [
                            {
                              "value": {
                                "value": "tags",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "fileSize": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "fileVersion": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "Unknown",
                          "type": "enum"
                        },
                        "createdBy": {
                          "value": {
                            "value": "createdBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModifiedBy": {
                          "value": {
                            "value": "lastModifiedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "_meta": {
                          "properties": {
                            "isDuplicate": {
                              "value": {
                                "value": "isDuplicate",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "isImage": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "pixelWidth": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "pixelHeight": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get an asset by id.",
      "audiences": [],
      "operationId": "Assets_GetAsset",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "getAsset"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset to retrieve.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsGetAssetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsGetAssetRequest",
      "response": {
        "description": "Asset found.",
        "schema": {
          "generatedName": "AssetsGetAssetResponse",
          "schema": "AssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/assets/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileName": {
                  "value": {
                    "value": "fileName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileHash": {
                  "value": {
                    "value": "fileHash",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isProtected": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "slug": {
                  "value": {
                    "value": "slug",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mimeType": {
                  "value": {
                    "value": "mimeType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileType": {
                  "value": {
                    "value": "fileType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadataText": {
                  "value": {
                    "value": "metadataText",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "editToken": {
                  "value": {
                    "value": "editToken",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tags",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fileSize": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "fileVersion": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Unknown",
                  "type": "enum"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isDuplicate": {
                      "value": {
                        "value": "isDuplicate",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "isImage": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "pixelWidth": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "pixelHeight": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Upsert an asset.",
      "audiences": [],
      "operationId": "Assets_PostUpsertAsset",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "postUpsertAsset"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPostUpsertAssetRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The optional custom asset id.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPostUpsertAssetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "schema": {
            "generatedName": "AssetsPostUpsertAssetRequestParentId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetsPostUpsertAssetRequestParentId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to duplicate the asset, event if the file has been uploaded.",
          "name": "duplicate",
          "schema": {
            "generatedName": "AssetsPostUpsertAssetRequestDuplicate",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsPostUpsertAssetRequestDuplicate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AssetsPostUpsertAssetRequest",
      "request": {
        "properties": [
          {
            "key": "file",
            "schema": {
              "isOptional": true,
              "isArray": false,
              "type": "file"
            }
          }
        ],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "multipart"
      },
      "response": {
        "description": "Asset created or updated.",
        "schema": {
          "generatedName": "AssetsPostUpsertAssetResponse",
          "schema": "AssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "413": {
          "generatedName": "ContentTooLargeError",
          "schema": {
            "generatedName": "ContentTooLargeErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset exceeds the maximum upload size.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/assets/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileName": {
                  "value": {
                    "value": "fileName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileHash": {
                  "value": {
                    "value": "fileHash",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isProtected": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "slug": {
                  "value": {
                    "value": "slug",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mimeType": {
                  "value": {
                    "value": "mimeType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileType": {
                  "value": {
                    "value": "fileType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadataText": {
                  "value": {
                    "value": "metadataText",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "editToken": {
                  "value": {
                    "value": "editToken",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tags",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fileSize": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "fileVersion": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Unknown",
                  "type": "enum"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isDuplicate": {
                      "value": {
                        "value": "isDuplicate",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "isImage": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "pixelWidth": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "pixelHeight": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update an asset.",
      "audiences": [],
      "operationId": "Assets_PutAsset",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "putAsset"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsPutAssetRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsPutAssetRequest",
          "schema": "AnnotateAssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Asset updated.",
        "schema": {
          "generatedName": "AssetsPutAssetResponse",
          "schema": "AssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/assets/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileName": {
                  "value": {
                    "value": "fileName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileHash": {
                  "value": {
                    "value": "fileHash",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isProtected": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "slug": {
                  "value": {
                    "value": "slug",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mimeType": {
                  "value": {
                    "value": "mimeType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileType": {
                  "value": {
                    "value": "fileType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadataText": {
                  "value": {
                    "value": "metadataText",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "editToken": {
                  "value": {
                    "value": "editToken",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tags",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fileSize": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "fileVersion": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Unknown",
                  "type": "enum"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isDuplicate": {
                      "value": {
                        "value": "isDuplicate",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "isImage": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "pixelWidth": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "pixelHeight": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete an asset.",
      "audiences": [],
      "operationId": "Assets_DeleteAsset",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "deleteAsset"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsDeleteAssetRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset to delete.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsDeleteAssetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "True to check referrers of this asset.",
          "name": "checkReferrers",
          "schema": {
            "generatedName": "AssetsDeleteAssetRequestCheckReferrers",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsDeleteAssetRequestCheckReferrers",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "True to delete the asset permanently.",
          "name": "permanent",
          "schema": {
            "generatedName": "AssetsDeleteAssetRequestPermanent",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsDeleteAssetRequestPermanent",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AssetsDeleteAssetRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/assets/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Bulk update assets.",
      "audiences": [],
      "operationId": "Assets_BulkUpdateAssets",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "bulkUpdateAssets"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsBulkUpdateAssetsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsBulkUpdateAssetsRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsBulkUpdateAssetsRequest",
          "schema": "BulkUpdateAssetsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Assets created, update or delete.",
        "schema": {
          "value": {
            "generatedName": "AssetsBulkUpdateAssetsResponseItem",
            "schema": "BulkResultDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "AssetsBulkUpdateAssetsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Assets request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/assets/bulk",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "value": {
                            "value": "message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "errorCode": {
                          "value": {
                            "value": "errorCode",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "traceId": {
                          "value": {
                            "value": "traceId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": {
                            "value": "type",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "details": {
                          "value": [
                            {
                              "value": {
                                "value": "details",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "statusCode": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "jobIndex": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contentId": {
                      "value": {
                        "value": "contentId",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Replace asset content.",
      "audiences": [],
      "operationId": "Assets_PutAssetContent",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "putAssetContent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetContentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetContentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsPutAssetContentRequest",
      "request": {
        "properties": [
          {
            "key": "file",
            "schema": {
              "isOptional": true,
              "isArray": false,
              "type": "file"
            }
          }
        ],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "multipart"
      },
      "response": {
        "description": "Asset updated.",
        "schema": {
          "generatedName": "AssetsPutAssetContentResponse",
          "schema": "AssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "413": {
          "generatedName": "ContentTooLargeError",
          "schema": {
            "generatedName": "ContentTooLargeErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset exceeds the maximum upload size.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Use multipart request to upload an asset.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/assets/{id}/content",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileName": {
                  "value": {
                    "value": "fileName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileHash": {
                  "value": {
                    "value": "fileHash",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isProtected": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "slug": {
                  "value": {
                    "value": "slug",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mimeType": {
                  "value": {
                    "value": "mimeType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileType": {
                  "value": {
                    "value": "fileType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadataText": {
                  "value": {
                    "value": "metadataText",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "editToken": {
                  "value": {
                    "value": "editToken",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tags",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fileSize": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "fileVersion": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Unknown",
                  "type": "enum"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isDuplicate": {
                      "value": {
                        "value": "isDuplicate",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "isImage": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "pixelWidth": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "pixelHeight": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Moves the asset.",
      "audiences": [],
      "operationId": "Assets_PutAssetParent",
      "tags": [
        "Assets"
      ],
      "sdkName": {
        "groupName": [
          "assets"
        ],
        "methodName": "putAssetParent"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetParentRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AssetsPutAssetParentRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AssetsPutAssetParentRequest",
      "request": {
        "schema": {
          "generatedName": "AssetsPutAssetParentRequest",
          "schema": "MoveAssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Asset moved.",
        "schema": {
          "generatedName": "AssetsPutAssetParentResponse",
          "schema": "AssetDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Asset or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/assets/{id}/parent",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parentId": {
                  "value": {
                    "value": "parentId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileName": {
                  "value": {
                    "value": "fileName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileHash": {
                  "value": {
                    "value": "fileHash",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "isProtected": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "slug": {
                  "value": {
                    "value": "slug",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mimeType": {
                  "value": {
                    "value": "mimeType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fileType": {
                  "value": {
                    "value": "fileType",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadataText": {
                  "value": {
                    "value": "metadataText",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "editToken": {
                  "value": {
                    "value": "editToken",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tags",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "fileSize": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "fileVersion": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "Unknown",
                  "type": "enum"
                },
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastModifiedBy": {
                  "value": {
                    "value": "lastModifiedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isDuplicate": {
                      "value": {
                        "value": "isDuplicate",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "isImage": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "pixelWidth": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "pixelHeight": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the app asset scripts.",
      "audiences": [],
      "operationId": "AppAssets_GetAssetScripts",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getAssetScripts"
      },
      "pathParameters": [
        {
          "description": "The name of the app to get the asset scripts for.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetAssetScriptsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetAssetScriptsRequest",
      "response": {
        "description": "Asset scripts returned.",
        "schema": {
          "generatedName": "AppsGetAssetScriptsResponse",
          "schema": "AssetScriptsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/assets/scripts",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "query": {
                  "value": {
                    "value": "query",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "queryPre": {
                  "value": {
                    "value": "queryPre",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "create": {
                  "value": {
                    "value": "create",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "update": {
                  "value": {
                    "value": "update",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "annotate": {
                  "value": {
                    "value": "annotate",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "move": {
                  "value": {
                    "value": "move",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "delete": {
                  "value": {
                    "value": "delete",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update the app asset scripts.",
      "audiences": [],
      "operationId": "AppAssets_PutAssetScripts",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putAssetScripts"
      },
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutAssetScriptsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutAssetScriptsRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutAssetScriptsRequest",
          "schema": "UpdateAssetScriptsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Asset scripts updated.",
        "schema": {
          "generatedName": "AppsPutAssetScriptsResponse",
          "schema": "AssetScriptsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Asset request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/assets/scripts",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "query": {
                  "value": {
                    "value": "query",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "queryPre": {
                  "value": {
                    "value": "queryPre",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "create": {
                  "value": {
                    "value": "create",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "update": {
                  "value": {
                    "value": "update",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "annotate": {
                  "value": {
                    "value": "annotate",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "move": {
                  "value": {
                    "value": "move",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "delete": {
                  "value": {
                    "value": "delete",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get app clients.",
      "audiences": [],
      "operationId": "AppClients_GetClients",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getClients"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetClientsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetClientsRequest",
      "response": {
        "description": "Clients returned.",
        "schema": {
          "generatedName": "AppsGetClientsResponse",
          "schema": "ClientsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets all configured clients for the app with the specified name.",
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/clients",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "secret": {
                          "value": {
                            "value": "secret",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "apiCallsLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "apiTrafficLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "allowAnonymous": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new app client.",
      "audiences": [],
      "operationId": "AppClients_PostClient",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "postClient"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPostClientRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPostClientRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPostClientRequest",
          "schema": "CreateClientDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Client created.",
        "schema": {
          "generatedName": "AppsPostClientResponse",
          "schema": "ClientsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Client request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create a new client for the app with the specified name.\nThe client secret is auto generated on the server and returned. The client does not expire, the access token is valid for 30 days.",
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/clients",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "secret": {
                          "value": {
                            "value": "secret",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "apiCallsLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "apiTrafficLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "allowAnonymous": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Updates an app client.",
      "audiences": [],
      "operationId": "AppClients_PutClient",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putClient"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutClientRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the client that must be updated.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutClientRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutClientRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutClientRequest",
          "schema": "UpdateClientDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Client updated.",
        "schema": {
          "generatedName": "AppsPutClientResponse",
          "schema": "ClientsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Client request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Client or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Only the display name can be changed, create a new client if necessary.",
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/clients/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "secret": {
                          "value": {
                            "value": "secret",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "apiCallsLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "apiTrafficLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "allowAnonymous": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Revoke an app client.",
      "audiences": [],
      "operationId": "AppClients_DeleteClient",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteClient"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteClientRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the client that must be deleted.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteClientRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteClientRequest",
      "response": {
        "description": "Client deleted.",
        "schema": {
          "generatedName": "AppsDeleteClientResponse",
          "schema": "ClientsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Client or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "The application that uses this client credentials cannot access the API after it has been revoked.",
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/clients/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "secret": {
                          "value": {
                            "value": "secret",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "apiCallsLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "apiTrafficLimit": {
                          "value": {
                            "value": 1000000,
                            "type": "int64"
                          },
                          "type": "primitive"
                        },
                        "allowAnonymous": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get app contributors.",
      "audiences": [],
      "operationId": "AppContributors_GetContributors",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getContributors"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetContributorsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetContributorsRequest",
      "response": {
        "description": "Contributors returned.",
        "schema": {
          "generatedName": "AppsGetContributorsResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/contributors",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign contributor to app.",
      "audiences": [],
      "operationId": "AppContributors_PostContributor",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "postContributor"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPostContributorRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPostContributorRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPostContributorRequest",
          "schema": "AssignContributorDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Contributor assigned to app.",
        "schema": {
          "generatedName": "AppsPostContributorResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Contributor request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/contributors",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "contributorId": {
                "value": {
                  "value": "contributorId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove yourself.",
      "audiences": [],
      "operationId": "AppContributors_DeleteMyself",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteMyself"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteMyselfRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteMyselfRequest",
      "response": {
        "description": "Contributor removed.",
        "schema": {
          "generatedName": "AppsDeleteMyselfResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Contributor or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/contributors/me",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove contributor.",
      "audiences": [],
      "operationId": "AppContributors_DeleteContributor",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteContributor"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteContributorRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the contributor.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteContributorRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteContributorRequest",
      "response": {
        "description": "Contributor removed.",
        "schema": {
          "generatedName": "AppsDeleteContributorResponse",
          "schema": "ContributorsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Contributor or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/contributors/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "contributorId": {
                          "value": {
                            "value": "contributorId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorName": {
                          "value": {
                            "value": "contributorName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contributorEmail": {
                          "value": {
                            "value": "contributorEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "maxContributors": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "_meta": {
                  "properties": {
                    "isInvited": {
                      "value": {
                        "value": "isInvited",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the app image.",
      "audiences": [],
      "operationId": "AppImage_GetImage",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getImage"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetImageRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetImageRequest",
      "response": {
        "description": "App image found and content or (resized) image returned.",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/image",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Upload the app image.",
      "audiences": [],
      "operationId": "Apps_UploadImage",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "uploadImage"
      },
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsUploadImageRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsUploadImageRequest",
      "request": {
        "properties": [
          {
            "key": "file",
            "schema": {
              "isOptional": true,
              "isArray": false,
              "type": "file"
            }
          }
        ],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "multipart"
      },
      "response": {
        "description": "App image uploaded.",
        "schema": {
          "generatedName": "AppsUploadImageResponse",
          "schema": "AppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "App request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/image",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "teamId": {
                  "value": {
                    "value": "teamId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "canAccessApi": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "canAccessContent": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "roleProperties": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove the app image.",
      "audiences": [],
      "operationId": "Apps_DeleteImage",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteImage"
      },
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteImageRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteImageRequest",
      "response": {
        "description": "App image removed.",
        "schema": {
          "generatedName": "AppsDeleteImageResponse",
          "schema": "AppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/image",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "teamId": {
                  "value": {
                    "value": "teamId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "canAccessApi": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "canAccessContent": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "roleProperties": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get app languages.",
      "audiences": [],
      "operationId": "AppLanguages_GetLanguages",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getLanguages"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetLanguagesRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetLanguagesRequest",
      "response": {
        "description": "Languages returned.",
        "schema": {
          "generatedName": "AppsGetLanguagesResponse",
          "schema": "AppLanguagesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/languages",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "iso2Code": {
                          "value": {
                            "value": "iso2Code",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "englishName": {
                          "value": {
                            "value": "englishName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fallback": {
                          "value": [
                            {
                              "value": {
                                "value": "fallback",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "isMaster": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isOptional": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Attaches an app language.",
      "audiences": [],
      "operationId": "AppLanguages_PostLanguage",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "postLanguage"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPostLanguageRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPostLanguageRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPostLanguageRequest",
          "schema": "AddLanguageDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Language created.",
        "schema": {
          "generatedName": "AppsPostLanguageResponse",
          "schema": "AppLanguagesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Language request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/languages",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "language": {
                "value": {
                  "value": "language",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "iso2Code": {
                          "value": {
                            "value": "iso2Code",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "englishName": {
                          "value": {
                            "value": "englishName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fallback": {
                          "value": [
                            {
                              "value": {
                                "value": "fallback",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "isMaster": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isOptional": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Updates an app language.",
      "audiences": [],
      "operationId": "AppLanguages_PutLanguage",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putLanguage"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutLanguageRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The language to update.",
          "name": "language",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutLanguageRequestLanguage",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutLanguageRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutLanguageRequest",
          "schema": "UpdateLanguageDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Language updated.",
        "schema": {
          "generatedName": "AppsPutLanguageResponse",
          "schema": "AppLanguagesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Language request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Language or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/languages/{language}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "language",
              "value": {
                "value": {
                  "value": "language",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "iso2Code": {
                          "value": {
                            "value": "iso2Code",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "englishName": {
                          "value": {
                            "value": "englishName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fallback": {
                          "value": [
                            {
                              "value": {
                                "value": "fallback",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "isMaster": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isOptional": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Deletes an app language.",
      "audiences": [],
      "operationId": "AppLanguages_DeleteLanguage",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteLanguage"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteLanguageRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The language to delete from the app.",
          "name": "language",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteLanguageRequestLanguage",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteLanguageRequest",
      "response": {
        "description": "Language deleted.",
        "schema": {
          "generatedName": "AppsDeleteLanguageResponse",
          "schema": "AppLanguagesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Language is master language.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Language or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/languages/{language}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "language",
              "value": {
                "value": {
                  "value": "language",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "iso2Code": {
                          "value": {
                            "value": "iso2Code",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "englishName": {
                          "value": {
                            "value": "englishName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fallback": {
                          "value": [
                            {
                              "value": {
                                "value": "fallback",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "isMaster": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isOptional": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get app roles.",
      "audiences": [],
      "operationId": "AppRoles_GetRoles",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getRoles"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetRolesRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetRolesRequest",
      "response": {
        "description": "Roles returned.",
        "schema": {
          "generatedName": "AppsGetRolesResponse",
          "schema": "RolesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "numClients": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "numContributors": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "isDefaultRole": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "permissions",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "properties": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Add role to app.",
      "audiences": [],
      "operationId": "AppRoles_PostRole",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "postRole"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPostRoleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPostRoleRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPostRoleRequest",
          "schema": "AddRoleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Role created.",
        "schema": {
          "generatedName": "AppsPostRoleResponse",
          "schema": "RolesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Role request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/roles",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "numClients": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "numContributors": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "isDefaultRole": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "permissions",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "properties": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get app permissions.",
      "audiences": [],
      "operationId": "AppRoles_GetPermissions",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getPermissions"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetPermissionsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetPermissionsRequest",
      "response": {
        "description": "App permissions returned.",
        "schema": {
          "value": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetPermissionsResponseItem",
            "groupName": [],
            "type": "primitive"
          },
          "generatedName": "AppsGetPermissionsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/roles/permissions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update an app role.",
      "audiences": [],
      "operationId": "AppRoles_PutRole",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putRole"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutRoleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the role to be updated.",
          "name": "roleName",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutRoleRequestRoleName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutRoleRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutRoleRequest",
          "schema": "UpdateRoleDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Role updated.",
        "schema": {
          "generatedName": "AppsPutRoleResponse",
          "schema": "RolesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Role request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Role or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/roles/{roleName}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "roleName",
              "value": {
                "value": {
                  "value": "roleName",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "permissions": {
                "value": [
                  {
                    "value": {
                      "value": "permissions",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "numClients": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "numContributors": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "isDefaultRole": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "permissions",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "properties": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove role from app.",
      "audiences": [],
      "operationId": "AppRoles_DeleteRole",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteRole"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteRoleRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The name of the role.",
          "name": "roleName",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteRoleRequestRoleName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteRoleRequest",
      "response": {
        "description": "Role deleted.",
        "schema": {
          "generatedName": "AppsDeleteRoleResponse",
          "schema": "RolesDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Role is in use by contributor or client or a default role.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Role or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/roles/{roleName}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "roleName",
              "value": {
                "value": {
                  "value": "roleName",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "numClients": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "numContributors": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "isDefaultRole": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "permissions": {
                          "value": [
                            {
                              "value": {
                                "value": "permissions",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "properties": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get your apps.",
      "audiences": [],
      "operationId": "Apps_GetApps",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getApps"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetAppsRequest",
      "response": {
        "description": "Apps returned.",
        "schema": {
          "value": {
            "generatedName": "AppsGetAppsResponseItem",
            "schema": "AppDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "AppsGetAppsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).\nYou will retrieve all apps, where you are assigned as a contributor.",
      "authed": true,
      "method": "GET",
      "path": "/api/apps",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "_links": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "href": {
                                "value": {
                                  "value": "href",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "method": {
                                "value": {
                                  "value": "method",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    },
                    "created": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastModified": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "teamId": {
                      "value": {
                        "value": "teamId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "permissions": {
                      "value": [
                        {
                          "value": {
                            "value": "permissions",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "canAccessApi": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "canAccessContent": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "roleName": {
                      "value": {
                        "value": "roleName",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "roleProperties": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new app.",
      "audiences": [],
      "operationId": "Apps_PostApp",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "postApp"
      },
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPostAppRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPostAppRequest",
          "schema": "CreateAppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "App created.",
        "schema": {
          "generatedName": "AppsPostAppResponse",
          "schema": "AppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "App request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "409": {
          "generatedName": "ConflictError",
          "schema": {
            "generatedName": "ConflictErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "App name is already in use.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can only create an app when you are authenticated as a user (OpenID implicit flow).\nYou will be assigned as owner of the new app automatically.",
      "authed": true,
      "method": "POST",
      "path": "/api/apps",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "teamId": {
                  "value": {
                    "value": "teamId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "canAccessApi": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "canAccessContent": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "roleProperties": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get team apps.",
      "audiences": [],
      "operationId": "Apps_GetTeamApps",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getTeamApps"
      },
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetTeamAppsRequestTeam",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetTeamAppsRequest",
      "response": {
        "description": "Apps returned.",
        "schema": {
          "value": {
            "generatedName": "AppsGetTeamAppsResponseItem",
            "schema": "AppDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "AppsGetTeamAppsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).\nYou will retrieve all apps, where you are assigned as a contributor.",
      "authed": true,
      "method": "GET",
      "path": "/api/teams/{team}/apps",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "value": {
                  "value": "team",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "_links": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "properties": {
                              "href": {
                                "value": {
                                  "value": "href",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "method": {
                                "value": {
                                  "value": "method",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version": {
                      "value": {
                        "value": 1000000,
                        "type": "int64"
                      },
                      "type": "primitive"
                    },
                    "created": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastModified": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "teamId": {
                      "value": {
                        "value": "teamId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "permissions": {
                      "value": [
                        {
                          "value": {
                            "value": "permissions",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "canAccessApi": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "canAccessContent": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "roleName": {
                      "value": {
                        "value": "roleName",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "roleProperties": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get an app by name.",
      "audiences": [],
      "operationId": "Apps_GetApp",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getApp"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetAppRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetAppRequest",
      "response": {
        "description": "Apps returned.",
        "schema": {
          "generatedName": "AppsGetAppResponse",
          "schema": "AppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "teamId": {
                  "value": {
                    "value": "teamId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "canAccessApi": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "canAccessContent": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "roleProperties": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update the app.",
      "audiences": [],
      "operationId": "Apps_PutApp",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putApp"
      },
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutAppRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutAppRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutAppRequest",
          "schema": "UpdateAppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "App updated.",
        "schema": {
          "generatedName": "AppsPutAppResponse",
          "schema": "AppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "App request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "teamId": {
                  "value": {
                    "value": "teamId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "canAccessApi": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "canAccessContent": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "roleProperties": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete the app.",
      "audiences": [],
      "operationId": "Apps_DeleteApp",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteApp"
      },
      "pathParameters": [
        {
          "description": "The name of the app to delete.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteAppRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteAppRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Transfer the app.",
      "audiences": [],
      "operationId": "Apps_PutAppTeam",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putAppTeam"
      },
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutAppTeamRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutAppTeamRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutAppTeamRequest",
          "schema": "TransferToTeamDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "App transferred.",
        "schema": {
          "generatedName": "AppsPutAppTeamResponse",
          "schema": "AppDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "App request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/team",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastModified": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "teamId": {
                  "value": {
                    "value": "teamId",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "permissions": {
                  "value": [
                    {
                      "value": {
                        "value": "permissions",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "canAccessApi": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "canAccessContent": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "roleName": {
                  "value": {
                    "value": "roleName",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "roleProperties": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the app settings.",
      "audiences": [],
      "operationId": "AppSettings_GetSettings",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getSettings"
      },
      "pathParameters": [
        {
          "description": "The name of the app to get the settings for.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetSettingsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetSettingsRequest",
      "response": {
        "description": "App settings returned.",
        "schema": {
          "generatedName": "AppsGetSettingsResponse",
          "schema": "AppSettingsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/settings",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "patterns": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "regex": {
                          "value": {
                            "value": "regex",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "message": {
                          "value": {
                            "value": "message",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "editors": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "url": {
                          "value": {
                            "value": "url",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hideScheduler": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "hideDateTimeModeButton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update the app settings.",
      "audiences": [],
      "operationId": "AppSettings_PutSettings",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putSettings"
      },
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutSettingsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutSettingsRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutSettingsRequest",
          "schema": "UpdateAppSettingsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "App updated.",
        "schema": {
          "generatedName": "AppsPutSettingsResponse",
          "schema": "AppSettingsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "App request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/settings",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "patterns": {
                "value": [
                  {
                    "properties": {
                      "name": {
                        "value": {
                          "value": "name",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "regex": {
                        "value": {
                          "value": "regex",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "editors": {
                "value": [
                  {
                    "properties": {
                      "name": {
                        "value": {
                          "value": "name",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "url": {
                        "value": {
                          "value": "url",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "patterns": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "regex": {
                          "value": {
                            "value": "regex",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "message": {
                          "value": {
                            "value": "message",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "editors": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "url": {
                          "value": {
                            "value": "url",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "hideScheduler": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "hideDateTimeModeButton": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get app workflow.",
      "audiences": [],
      "operationId": "AppWorkflows_GetWorkflows",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "getWorkflows"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsGetWorkflowsRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsGetWorkflowsRequest",
      "response": {
        "description": "Workflows returned.",
        "schema": {
          "generatedName": "AppsGetWorkflowsResponse",
          "schema": "WorkflowsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "App not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/api/apps/{app}/workflows",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "steps": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {},
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "schemaIds": {
                          "value": [
                            {
                              "value": {
                                "value": "schemaIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "initial": {
                          "value": {
                            "value": "initial",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "errors": {
                  "value": [
                    {
                      "value": {
                        "value": "errors",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a workflow.",
      "audiences": [],
      "operationId": "AppWorkflows_PostWorkflow",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "postWorkflow"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPostWorkflowRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPostWorkflowRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPostWorkflowRequest",
          "schema": "AddWorkflowDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Workflow created.",
        "schema": {
          "generatedName": "AppsPostWorkflowResponse",
          "schema": "WorkflowsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Workflow request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Workflow or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/api/apps/{app}/workflows",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "steps": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {},
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "schemaIds": {
                          "value": [
                            {
                              "value": {
                                "value": "schemaIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "initial": {
                          "value": {
                            "value": "initial",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "errors": {
                  "value": [
                    {
                      "value": {
                        "value": "errors",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a workflow.",
      "audiences": [],
      "operationId": "AppWorkflows_PutWorkflow",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "putWorkflow"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutWorkflowRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the workflow to update.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsPutWorkflowRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsPutWorkflowRequest",
      "request": {
        "schema": {
          "generatedName": "AppsPutWorkflowRequest",
          "schema": "UpdateWorkflowDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Workflow updated.",
        "schema": {
          "generatedName": "AppsPutWorkflowResponse",
          "schema": "WorkflowsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Workflow request not valid.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Workflow or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/api/apps/{app}/workflows/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "steps": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "properties": {},
                      "type": "object"
                    }
                  }
                ],
                "type": "map"
              },
              "initial": {
                "value": {
                  "value": "initial",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "steps": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {},
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "schemaIds": {
                          "value": [
                            {
                              "value": {
                                "value": "schemaIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "initial": {
                          "value": {
                            "value": "initial",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "errors": {
                  "value": [
                    {
                      "value": {
                        "value": "errors",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a workflow.",
      "audiences": [],
      "operationId": "AppWorkflows_DeleteWorkflow",
      "tags": [
        "Apps"
      ],
      "sdkName": {
        "groupName": [
          "apps"
        ],
        "methodName": "deleteWorkflow"
      },
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteWorkflowRequestApp",
            "groupName": [],
            "type": "primitive"
          },
          "variableReference": "appName",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the workflow to update.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AppsDeleteWorkflowRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AppsDeleteWorkflowRequest",
      "response": {
        "description": "Workflow deleted.",
        "schema": {
          "generatedName": "AppsDeleteWorkflowResponse",
          "schema": "WorkflowsDto",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation error.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Workflow or app not found.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "ErrorDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Operation failed.",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "message",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "statusCode": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/api/apps/{app}/workflows/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "value": {
                  "value": "app",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_links": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "properties": {
                          "href": {
                            "value": {
                              "value": "href",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "method": {
                            "value": {
                              "value": "method",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "metadata": {
                            "value": {
                              "value": "metadata",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    }
                  ],
                  "type": "map"
                },
                "items": {
                  "value": [
                    {
                      "properties": {
                        "_links": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {
                                  "href": {
                                    "value": {
                                      "value": "href",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "method": {
                                    "value": {
                                      "value": "method",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "steps": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "properties": {},
                                "type": "object"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "schemaIds": {
                          "value": [
                            {
                              "value": {
                                "value": "schemaIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "initial": {
                          "value": {
                            "value": "initial",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "errors": {
                  "value": [
                    {
                      "value": {
                        "value": "errors",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "ErrorDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorDtoMessage",
            "key": "message",
            "schema": {
              "description": "Error message.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ErrorDtoMessage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorDtoErrorCode",
            "key": "errorCode",
            "schema": {
              "generatedName": "errorDtoErrorCode",
              "value": {
                "generatedName": "ErrorDtoErrorCode",
                "description": "The error code.",
                "value": {
                  "description": "The error code.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ErrorDtoErrorCode",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorDtoTraceId",
            "key": "traceId",
            "schema": {
              "generatedName": "errorDtoTraceId",
              "value": {
                "generatedName": "ErrorDtoTraceId",
                "description": "The optional trace id.",
                "value": {
                  "description": "The optional trace id.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ErrorDtoTraceId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorDtoType",
            "key": "type",
            "schema": {
              "generatedName": "errorDtoType",
              "value": {
                "generatedName": "ErrorDtoType",
                "description": "Link to the error details.",
                "value": {
                  "description": "Link to the error details.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ErrorDtoType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorDtoDetails",
            "key": "details",
            "schema": {
              "generatedName": "errorDtoDetails",
              "value": {
                "generatedName": "ErrorDtoDetails",
                "description": "Detailed error messages.",
                "value": {
                  "description": "Detailed error messages.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ErrorDtoDetailsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ErrorDtoDetails",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorDtoStatusCode",
            "key": "statusCode",
            "schema": {
              "description": "Status code of the http response.",
              "schema": {
                "type": "int"
              },
              "generatedName": "ErrorDtoStatusCode",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserProperty": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userPropertyName",
            "key": "name",
            "schema": {
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UserPropertyName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userPropertyValue",
            "key": "value",
            "schema": {
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UserPropertyValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserProperty",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UISettingsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "uiSettingsDtoCanCreateApps",
            "key": "canCreateApps",
            "schema": {
              "description": "True when the user can create apps.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UiSettingsDtoCanCreateApps",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "uiSettingsDtoCanCreateTeams",
            "key": "canCreateTeams",
            "schema": {
              "description": "True when the user can create teams.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UiSettingsDtoCanCreateTeams",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UiSettingsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateSettingDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateSettingDtoValue",
            "key": "value",
            "schema": {
              "generatedName": "UpdateSettingDtoValue",
              "type": "unknown"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateSettingDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContentsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contentsDtoTotal",
            "key": "total",
            "schema": {
              "description": "The total number of content items.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "ContentsDtoTotal",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentsDtoItems",
            "key": "items",
            "schema": {
              "description": "The content items.",
              "value": {
                "generatedName": "ContentsDtoItemsItem",
                "schema": "ContentDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ContentsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentsDtoStatuses",
            "key": "statuses",
            "schema": {
              "description": "The possible statuses.",
              "value": {
                "generatedName": "ContentsDtoStatusesItem",
                "schema": "StatusInfoDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ContentsDtoStatuses",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContentsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContentDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contentDtoId",
            "key": "id",
            "schema": {
              "description": "The if of the content item.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoCreatedBy",
            "key": "createdBy",
            "schema": {
              "description": "The user that has created the content item.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentDtoCreatedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoLastModifiedBy",
            "key": "lastModifiedBy",
            "schema": {
              "description": "The user that has updated the content item.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentDtoLastModifiedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoData",
            "key": "data",
            "schema": {
              "generatedName": "ContentDtoData",
              "type": "unknown"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoReferenceData",
            "key": "referenceData",
            "schema": {
              "generatedName": "contentDtoReferenceData",
              "value": {
                "description": "The reference data for the frontend UI.",
                "generatedName": "ContentDtoReferenceData",
                "schema": "ContentData",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "contentDtoCreated",
            "key": "created",
            "schema": {
              "description": "The date and time when the content item has been created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ContentDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoLastModified",
            "key": "lastModified",
            "schema": {
              "description": "The date and time when the content item has been modified last.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ContentDtoLastModified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoStatus",
            "key": "status",
            "schema": {
              "description": "The status of the content.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentDtoStatus",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoNewStatus",
            "key": "newStatus",
            "schema": {
              "generatedName": "contentDtoNewStatus",
              "value": {
                "generatedName": "ContentDtoNewStatus",
                "description": "The new status of the content.",
                "value": {
                  "description": "The new status of the content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContentDtoNewStatus",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoStatusColor",
            "key": "statusColor",
            "schema": {
              "description": "The color of the status.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentDtoStatusColor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoNewStatusColor",
            "key": "newStatusColor",
            "schema": {
              "generatedName": "contentDtoNewStatusColor",
              "value": {
                "generatedName": "ContentDtoNewStatusColor",
                "description": "The color of the new status.",
                "value": {
                  "description": "The color of the new status.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContentDtoNewStatusColor",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoEditToken",
            "key": "editToken",
            "schema": {
              "generatedName": "contentDtoEditToken",
              "value": {
                "generatedName": "ContentDtoEditToken",
                "description": "The UI token.",
                "value": {
                  "description": "The UI token.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContentDtoEditToken",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoScheduleJob",
            "key": "scheduleJob",
            "schema": {
              "generatedName": "contentDtoScheduleJob",
              "value": {
                "description": "The scheduled status.",
                "generatedName": "ContentDtoScheduleJob",
                "schema": "ScheduleJobDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "contentDtoSchemaId",
            "key": "schemaId",
            "schema": {
              "description": "The ID of the schema.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContentDtoSchemaId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoSchemaName",
            "key": "schemaName",
            "schema": {
              "generatedName": "contentDtoSchemaName",
              "value": {
                "generatedName": "ContentDtoSchemaName",
                "description": "The name of the schema.",
                "value": {
                  "description": "The name of the schema.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContentDtoSchemaName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoSchemaDisplayName",
            "key": "schemaDisplayName",
            "schema": {
              "generatedName": "contentDtoSchemaDisplayName",
              "value": {
                "generatedName": "ContentDtoSchemaDisplayName",
                "description": "The display name of the schema.",
                "value": {
                  "description": "The display name of the schema.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContentDtoSchemaDisplayName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoReferenceFields",
            "key": "referenceFields",
            "schema": {
              "generatedName": "contentDtoReferenceFields",
              "value": {
                "generatedName": "ContentDtoReferenceFields",
                "description": "The reference fields.",
                "value": {
                  "description": "The reference fields.",
                  "value": {
                    "generatedName": "ContentDtoReferenceFieldsItem",
                    "schema": "FieldDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ContentDtoReferenceFields",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoIsDeleted",
            "key": "isDeleted",
            "schema": {
              "description": "Indicates whether the content is deleted.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ContentDtoIsDeleted",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the content.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "ContentDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContentDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContentData": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ContentDataKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ContentDataValue",
          "schema": "ContentFieldData",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "generatedName": "ContentData",
        "groupName": [],
        "type": "map"
      },
      "ContentFieldData": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ContentFieldDataKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ContentFieldDataValue",
          "type": "unknown"
        },
        "generatedName": "ContentFieldData",
        "groupName": [],
        "type": "map"
      },
      "ScheduleJobDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "scheduleJobDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the schedule job.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ScheduleJobDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scheduleJobDtoStatus",
            "key": "status",
            "schema": {
              "description": "The new status.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ScheduleJobDtoStatus",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scheduleJobDtoDueTime",
            "key": "dueTime",
            "schema": {
              "description": "The target date and time when the content should be scheduled.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ScheduleJobDtoDueTime",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scheduleJobDtoColor",
            "key": "color",
            "schema": {
              "description": "The color of the scheduled status.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ScheduleJobDtoColor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scheduleJobDtoScheduledBy",
            "key": "scheduledBy",
            "schema": {
              "description": "The user who schedule the content.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ScheduleJobDtoScheduledBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ScheduleJobDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "FieldDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "fieldDtoFieldId",
            "key": "fieldId",
            "schema": {
              "description": "The ID of the field.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "FieldDtoFieldId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fieldDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the field. Must be unique within the schema.",
              "schema": {
                "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FieldDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fieldDtoIsHidden",
            "key": "isHidden",
            "schema": {
              "description": "Defines if the field is hidden.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "FieldDtoIsHidden",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fieldDtoIsLocked",
            "key": "isLocked",
            "schema": {
              "description": "Defines if the field is locked.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "FieldDtoIsLocked",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fieldDtoIsDisabled",
            "key": "isDisabled",
            "schema": {
              "description": "Defines if the field is disabled.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "FieldDtoIsDisabled",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fieldDtoPartitioning",
            "key": "partitioning",
            "schema": {
              "description": "Defines the partitioning of the field.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FieldDtoPartitioning",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fieldDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The field properties.",
              "generatedName": "FieldDtoProperties",
              "schema": "FieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "fieldDtoNested",
            "key": "nested",
            "schema": {
              "generatedName": "fieldDtoNested",
              "value": {
                "generatedName": "FieldDtoNested",
                "description": "The nested fields.",
                "value": {
                  "description": "The nested fields.",
                  "value": {
                    "generatedName": "FieldDtoNestedItem",
                    "schema": "NestedFieldDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "FieldDtoNested",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FieldDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "FieldPropertiesDto": {
        "value": {
          "commonProperties": [
            {
              "key": "label",
              "schema": {
                "generatedName": "FieldPropertiesDtoLabel",
                "description": "Optional label for the editor.",
                "value": {
                  "description": "Optional label for the editor.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "generatedName": "FieldPropertiesDtoLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "hints",
              "schema": {
                "generatedName": "FieldPropertiesDtoHints",
                "description": "Hints to describe the field.",
                "value": {
                  "description": "Hints to describe the field.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "generatedName": "FieldPropertiesDtoHints",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "placeholder",
              "schema": {
                "generatedName": "FieldPropertiesDtoPlaceholder",
                "description": "Placeholder to show when no value has been entered.",
                "value": {
                  "description": "Placeholder to show when no value has been entered.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "generatedName": "FieldPropertiesDtoPlaceholder",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "isRequired",
              "schema": {
                "description": "Indicates if the field is required.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "FieldPropertiesDtoIsRequired",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "isRequiredOnPublish",
              "schema": {
                "description": "Indicates if the field is required when publishing.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "FieldPropertiesDtoIsRequiredOnPublish",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "isHalfWidth",
              "schema": {
                "description": "Indicates if the field should be rendered with half width only.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "FieldPropertiesDtoIsHalfWidth",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "editorUrl",
              "schema": {
                "generatedName": "FieldPropertiesDtoEditorUrl",
                "description": "Optional url to the editor.",
                "value": {
                  "description": "Optional url to the editor.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "FieldPropertiesDtoEditorUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "tags",
              "schema": {
                "generatedName": "FieldPropertiesDtoTags",
                "description": "Tags for automation processes.",
                "value": {
                  "description": "Tags for automation processes.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FieldPropertiesDtoTagsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "FieldPropertiesDtoTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              }
            }
          ],
          "discriminantProperty": "fieldType",
          "generatedName": "FieldPropertiesDto",
          "schemas": {
            "Array": {
              "generatedName": "ComponentsSchemasArrayFieldPropertiesDto",
              "schema": "ArrayFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Assets": {
              "generatedName": "ComponentsSchemasAssetsFieldPropertiesDto",
              "schema": "AssetsFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Boolean": {
              "generatedName": "ComponentsSchemasBooleanFieldPropertiesDto",
              "schema": "BooleanFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Component": {
              "generatedName": "ComponentsSchemasComponentFieldPropertiesDto",
              "schema": "ComponentFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Components": {
              "generatedName": "ComponentsSchemasComponentsFieldPropertiesDto",
              "schema": "ComponentsFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "DateTime": {
              "generatedName": "ComponentsSchemasDateTimeFieldPropertiesDto",
              "schema": "DateTimeFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Geolocation": {
              "generatedName": "ComponentsSchemasGeolocationFieldPropertiesDto",
              "schema": "GeolocationFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Json": {
              "generatedName": "ComponentsSchemasJsonFieldPropertiesDto",
              "schema": "JsonFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Number": {
              "generatedName": "ComponentsSchemasNumberFieldPropertiesDto",
              "schema": "NumberFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "References": {
              "generatedName": "ComponentsSchemasReferencesFieldPropertiesDto",
              "schema": "ReferencesFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "String": {
              "generatedName": "ComponentsSchemasStringFieldPropertiesDto",
              "schema": "StringFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Tags": {
              "generatedName": "ComponentsSchemasTagsFieldPropertiesDto",
              "schema": "TagsFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "UI": {
              "generatedName": "ComponentsSchemasUiFieldPropertiesDto",
              "schema": "UIFieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "ArrayFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "arrayFieldPropertiesDtoMinItems",
            "key": "minItems",
            "schema": {
              "generatedName": "arrayFieldPropertiesDtoMinItems",
              "value": {
                "generatedName": "ArrayFieldPropertiesDtoMinItems",
                "description": "The minimum allowed items for the field value.",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ArrayFieldPropertiesDtoMinItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "arrayFieldPropertiesDtoMaxItems",
            "key": "maxItems",
            "schema": {
              "generatedName": "arrayFieldPropertiesDtoMaxItems",
              "value": {
                "generatedName": "ArrayFieldPropertiesDtoMaxItems",
                "description": "The maximum allowed items for the field value.",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ArrayFieldPropertiesDtoMaxItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "arrayFieldPropertiesDtoUniqueFields",
            "key": "uniqueFields",
            "schema": {
              "generatedName": "arrayFieldPropertiesDtoUniqueFields",
              "value": {
                "generatedName": "ArrayFieldPropertiesDtoUniqueFields",
                "description": "The fields that must be unique.",
                "value": {
                  "description": "The fields that must be unique.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ArrayFieldPropertiesDtoUniqueFieldsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ArrayFieldPropertiesDtoUniqueFields",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ArrayFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetsFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoPreviewMode",
            "key": "previewMode",
            "schema": {
              "description": "The preview mode for the asset.",
              "generatedName": "AssetsFieldPropertiesDtoPreviewMode",
              "schema": "AssetPreviewMode",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoDefaultValues",
            "key": "defaultValues",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoDefaultValues",
              "value": {
                "description": "The language specific default value as a list of asset ids.",
                "generatedName": "AssetsFieldPropertiesDtoDefaultValues",
                "schema": "LocalizedValueOfReadonlyListOfString",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoDefaultValue",
            "key": "defaultValue",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoDefaultValue",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoDefaultValue",
                "description": "The default value as a list of asset ids.",
                "value": {
                  "description": "The default value as a list of asset ids.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AssetsFieldPropertiesDtoDefaultValueItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoDefaultValue",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoFolderId",
            "key": "folderId",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoFolderId",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoFolderId",
                "description": "The initial id to the folder.",
                "value": {
                  "description": "The initial id to the folder.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoFolderId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoPreviewFormat",
            "key": "previewFormat",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoPreviewFormat",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoPreviewFormat",
                "description": "The preview format.",
                "value": {
                  "description": "The preview format.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoPreviewFormat",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMinItems",
            "key": "minItems",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMinItems",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMinItems",
                "description": "The minimum allowed items for the field value.",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMinItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMaxItems",
            "key": "maxItems",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMaxItems",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMaxItems",
                "description": "The maximum allowed items for the field value.",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMaxItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMinSize",
            "key": "minSize",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMinSize",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMinSize",
                "description": "The minimum file size in bytes.",
                "value": {
                  "description": "The minimum file size in bytes.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMinSize",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMaxSize",
            "key": "maxSize",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMaxSize",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMaxSize",
                "description": "The maximum file size in bytes.",
                "value": {
                  "description": "The maximum file size in bytes.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMaxSize",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMinWidth",
            "key": "minWidth",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMinWidth",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMinWidth",
                "description": "The minimum image width in pixels.",
                "value": {
                  "description": "The minimum image width in pixels.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMinWidth",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMaxWidth",
            "key": "maxWidth",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMaxWidth",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMaxWidth",
                "description": "The maximum image width in pixels.",
                "value": {
                  "description": "The maximum image width in pixels.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMaxWidth",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMinHeight",
            "key": "minHeight",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMinHeight",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMinHeight",
                "description": "The minimum image height in pixels.",
                "value": {
                  "description": "The minimum image height in pixels.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMinHeight",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMaxHeight",
            "key": "maxHeight",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoMaxHeight",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoMaxHeight",
                "description": "The maximum image height in pixels.",
                "value": {
                  "description": "The maximum image height in pixels.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoMaxHeight",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoAspectWidth",
            "key": "aspectWidth",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoAspectWidth",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoAspectWidth",
                "description": "The image aspect width in pixels.",
                "value": {
                  "description": "The image aspect width in pixels.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoAspectWidth",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoAspectHeight",
            "key": "aspectHeight",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoAspectHeight",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoAspectHeight",
                "description": "The image aspect height in pixels.",
                "value": {
                  "description": "The image aspect height in pixels.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoAspectHeight",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoExpectedType",
            "key": "expectedType",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoExpectedType",
              "value": {
                "description": "The expected type.",
                "generatedName": "AssetsFieldPropertiesDtoExpectedType",
                "schema": "AssetType",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoResolveFirst",
            "key": "resolveFirst",
            "schema": {
              "description": "True to resolve first asset in the content list.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsFieldPropertiesDtoResolveFirst",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoMustBeImage",
            "key": "mustBeImage",
            "schema": {
              "description": "True to resolve first image in the content list.",
              "availability": "Deprecated",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsFieldPropertiesDtoMustBeImage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoResolveImage",
            "key": "resolveImage",
            "schema": {
              "description": "True to resolve first image in the content list.",
              "availability": "Deprecated",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsFieldPropertiesDtoResolveImage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoAllowedExtensions",
            "key": "allowedExtensions",
            "schema": {
              "generatedName": "assetsFieldPropertiesDtoAllowedExtensions",
              "value": {
                "generatedName": "AssetsFieldPropertiesDtoAllowedExtensions",
                "description": "The allowed file extensions.",
                "value": {
                  "description": "The allowed file extensions.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AssetsFieldPropertiesDtoAllowedExtensionsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "AssetsFieldPropertiesDtoAllowedExtensions",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsFieldPropertiesDtoAllowDuplicates",
            "key": "allowDuplicates",
            "schema": {
              "description": "True, if duplicate values are allowed.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetsFieldPropertiesDtoAllowDuplicates",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetsFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetPreviewMode": {
        "description": "",
        "generatedName": "AssetPreviewMode",
        "values": [
          {
            "generatedName": "ImageAndFileName",
            "value": "ImageAndFileName",
            "casing": {}
          },
          {
            "generatedName": "Image",
            "value": "Image",
            "casing": {}
          },
          {
            "generatedName": "FileName",
            "value": "FileName",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "LocalizedValueOfReadonlyListOfString": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "LocalizedValueOfReadonlyListOfStringKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "value": {
            "schema": {
              "type": "string"
            },
            "generatedName": "LocalizedValueOfReadonlyListOfStringValueItem",
            "groupName": [],
            "type": "primitive"
          },
          "generatedName": "LocalizedValueOfReadonlyListOfStringValue",
          "groupName": [],
          "inline": true,
          "type": "array"
        },
        "generatedName": "LocalizedValueOfReadonlyListOfString",
        "groupName": [],
        "type": "map"
      },
      "AssetType": {
        "description": "",
        "generatedName": "AssetType",
        "values": [
          {
            "generatedName": "Unknown",
            "value": "Unknown",
            "casing": {}
          },
          {
            "generatedName": "Image",
            "value": "Image",
            "casing": {}
          },
          {
            "generatedName": "Audio",
            "value": "Audio",
            "casing": {}
          },
          {
            "generatedName": "Video",
            "value": "Video",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "BooleanFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "booleanFieldPropertiesDtoDefaultValues",
            "key": "defaultValues",
            "schema": {
              "generatedName": "booleanFieldPropertiesDtoDefaultValues",
              "value": {
                "description": "The language specific default value for the field value.",
                "generatedName": "BooleanFieldPropertiesDtoDefaultValues",
                "schema": "LocalizedValueOfNullableBoolean",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "booleanFieldPropertiesDtoDefaultValue",
            "key": "defaultValue",
            "schema": {
              "generatedName": "booleanFieldPropertiesDtoDefaultValue",
              "value": {
                "generatedName": "BooleanFieldPropertiesDtoDefaultValue",
                "description": "The default value for the field value.",
                "value": {
                  "description": "The default value for the field value.",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "BooleanFieldPropertiesDtoDefaultValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanFieldPropertiesDtoInlineEditable",
            "key": "inlineEditable",
            "schema": {
              "description": "Indicates that the inline editor is enabled for this field.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BooleanFieldPropertiesDtoInlineEditable",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "BooleanFieldPropertiesDtoEditor",
              "schema": "BooleanFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BooleanFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "LocalizedValueOfNullableBoolean": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "LocalizedValueOfNullableBooleanKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "LocalizedValueOfNullableBooleanValue",
          "value": {
            "schema": {
              "type": "boolean"
            },
            "generatedName": "LocalizedValueOfNullableBooleanValue",
            "groupName": [],
            "type": "primitive"
          },
          "groupName": [],
          "inline": true,
          "type": "nullable"
        },
        "generatedName": "LocalizedValueOfNullableBoolean",
        "groupName": [],
        "type": "map"
      },
      "BooleanFieldEditor": {
        "description": "",
        "generatedName": "BooleanFieldEditor",
        "values": [
          {
            "generatedName": "Checkbox",
            "value": "Checkbox",
            "casing": {}
          },
          {
            "generatedName": "Toggle",
            "value": "Toggle",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ComponentFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "componentFieldPropertiesDtoSchemaIds",
            "key": "schemaIds",
            "schema": {
              "generatedName": "componentFieldPropertiesDtoSchemaIds",
              "value": {
                "generatedName": "ComponentFieldPropertiesDtoSchemaIds",
                "description": "The ID of the embedded schemas.",
                "value": {
                  "description": "The ID of the embedded schemas.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ComponentFieldPropertiesDtoSchemaIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ComponentFieldPropertiesDtoSchemaIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ComponentFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ComponentsFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "componentsFieldPropertiesDtoMinItems",
            "key": "minItems",
            "schema": {
              "generatedName": "componentsFieldPropertiesDtoMinItems",
              "value": {
                "generatedName": "ComponentsFieldPropertiesDtoMinItems",
                "description": "The minimum allowed items for the field value.",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ComponentsFieldPropertiesDtoMinItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "componentsFieldPropertiesDtoMaxItems",
            "key": "maxItems",
            "schema": {
              "generatedName": "componentsFieldPropertiesDtoMaxItems",
              "value": {
                "generatedName": "ComponentsFieldPropertiesDtoMaxItems",
                "description": "The maximum allowed items for the field value.",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ComponentsFieldPropertiesDtoMaxItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "componentsFieldPropertiesDtoSchemaIds",
            "key": "schemaIds",
            "schema": {
              "generatedName": "componentsFieldPropertiesDtoSchemaIds",
              "value": {
                "generatedName": "ComponentsFieldPropertiesDtoSchemaIds",
                "description": "The ID of the embedded schemas.",
                "value": {
                  "description": "The ID of the embedded schemas.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ComponentsFieldPropertiesDtoSchemaIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ComponentsFieldPropertiesDtoSchemaIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "componentsFieldPropertiesDtoUniqueFields",
            "key": "uniqueFields",
            "schema": {
              "generatedName": "componentsFieldPropertiesDtoUniqueFields",
              "value": {
                "generatedName": "ComponentsFieldPropertiesDtoUniqueFields",
                "description": "The fields that must be unique.",
                "value": {
                  "description": "The fields that must be unique.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ComponentsFieldPropertiesDtoUniqueFieldsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ComponentsFieldPropertiesDtoUniqueFields",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ComponentsFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "DateTimeFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dateTimeFieldPropertiesDtoDefaultValues",
            "key": "defaultValues",
            "schema": {
              "generatedName": "dateTimeFieldPropertiesDtoDefaultValues",
              "value": {
                "description": "The language specific default value for the field value.",
                "generatedName": "DateTimeFieldPropertiesDtoDefaultValues",
                "schema": "LocalizedValueOfNullableInstant",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "dateTimeFieldPropertiesDtoDefaultValue",
            "key": "defaultValue",
            "schema": {
              "generatedName": "dateTimeFieldPropertiesDtoDefaultValue",
              "value": {
                "generatedName": "DateTimeFieldPropertiesDtoDefaultValue",
                "description": "The default value for the field value.",
                "value": {
                  "description": "The default value for the field value.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "DateTimeFieldPropertiesDtoDefaultValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dateTimeFieldPropertiesDtoMaxValue",
            "key": "maxValue",
            "schema": {
              "generatedName": "dateTimeFieldPropertiesDtoMaxValue",
              "value": {
                "generatedName": "DateTimeFieldPropertiesDtoMaxValue",
                "description": "The maximum allowed value for the field value.",
                "value": {
                  "description": "The maximum allowed value for the field value.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "DateTimeFieldPropertiesDtoMaxValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dateTimeFieldPropertiesDtoMinValue",
            "key": "minValue",
            "schema": {
              "generatedName": "dateTimeFieldPropertiesDtoMinValue",
              "value": {
                "generatedName": "DateTimeFieldPropertiesDtoMinValue",
                "description": "The minimum allowed value for the field value.",
                "value": {
                  "description": "The minimum allowed value for the field value.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "DateTimeFieldPropertiesDtoMinValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dateTimeFieldPropertiesDtoFormat",
            "key": "format",
            "schema": {
              "generatedName": "dateTimeFieldPropertiesDtoFormat",
              "value": {
                "generatedName": "DateTimeFieldPropertiesDtoFormat",
                "description": "The format pattern when displayed in the UI.",
                "value": {
                  "description": "The format pattern when displayed in the UI.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DateTimeFieldPropertiesDtoFormat",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dateTimeFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "DateTimeFieldPropertiesDtoEditor",
              "schema": "DateTimeFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "dateTimeFieldPropertiesDtoCalculatedDefaultValue",
            "key": "calculatedDefaultValue",
            "schema": {
              "generatedName": "dateTimeFieldPropertiesDtoCalculatedDefaultValue",
              "value": {
                "description": "The calculated default value for the field value.",
                "generatedName": "DateTimeFieldPropertiesDtoCalculatedDefaultValue",
                "schema": "DateTimeCalculatedDefaultValue",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DateTimeFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "LocalizedValueOfNullableInstant": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "LocalizedValueOfNullableInstantKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "LocalizedValueOfNullableInstantValue",
          "value": {
            "schema": {
              "type": "datetime"
            },
            "generatedName": "LocalizedValueOfNullableInstantValue",
            "groupName": [],
            "type": "primitive"
          },
          "groupName": [],
          "inline": true,
          "type": "nullable"
        },
        "generatedName": "LocalizedValueOfNullableInstant",
        "groupName": [],
        "type": "map"
      },
      "DateTimeFieldEditor": {
        "description": "",
        "generatedName": "DateTimeFieldEditor",
        "values": [
          {
            "generatedName": "Date",
            "value": "Date",
            "casing": {}
          },
          {
            "generatedName": "DateTime",
            "value": "DateTime",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "DateTimeCalculatedDefaultValue": {
        "description": "",
        "generatedName": "DateTimeCalculatedDefaultValue",
        "values": [
          {
            "generatedName": "Now",
            "value": "Now",
            "casing": {}
          },
          {
            "generatedName": "Today",
            "value": "Today",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "GeolocationFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "geolocationFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "GeolocationFieldPropertiesDtoEditor",
              "schema": "GeolocationFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GeolocationFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "GeolocationFieldEditor": {
        "description": "",
        "value": {
          "value": "Map",
          "type": "string"
        },
        "generatedName": "GeolocationFieldEditor",
        "groupName": [],
        "type": "literal"
      },
      "JsonFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "jsonFieldPropertiesDtoGraphQlSchema",
            "key": "graphQLSchema",
            "schema": {
              "generatedName": "jsonFieldPropertiesDtoGraphQlSchema",
              "value": {
                "generatedName": "JsonFieldPropertiesDtoGraphQlSchema",
                "description": "The GraphQL schema.",
                "value": {
                  "description": "The GraphQL schema.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "JsonFieldPropertiesDtoGraphQlSchema",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "JsonFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "NumberFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoDefaultValues",
            "key": "defaultValues",
            "schema": {
              "generatedName": "numberFieldPropertiesDtoDefaultValues",
              "value": {
                "description": "The language specific default value for the field value.",
                "generatedName": "NumberFieldPropertiesDtoDefaultValues",
                "schema": "LocalizedValueOfNullableDouble",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoDefaultValue",
            "key": "defaultValue",
            "schema": {
              "generatedName": "numberFieldPropertiesDtoDefaultValue",
              "value": {
                "generatedName": "NumberFieldPropertiesDtoDefaultValue",
                "description": "The default value for the field value.",
                "value": {
                  "description": "The default value for the field value.",
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "NumberFieldPropertiesDtoDefaultValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoMaxValue",
            "key": "maxValue",
            "schema": {
              "generatedName": "numberFieldPropertiesDtoMaxValue",
              "value": {
                "generatedName": "NumberFieldPropertiesDtoMaxValue",
                "description": "The maximum allowed value for the field value.",
                "value": {
                  "description": "The maximum allowed value for the field value.",
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "NumberFieldPropertiesDtoMaxValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoMinValue",
            "key": "minValue",
            "schema": {
              "generatedName": "numberFieldPropertiesDtoMinValue",
              "value": {
                "generatedName": "NumberFieldPropertiesDtoMinValue",
                "description": "The minimum allowed value for the field value.",
                "value": {
                  "description": "The minimum allowed value for the field value.",
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "NumberFieldPropertiesDtoMinValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoAllowedValues",
            "key": "allowedValues",
            "schema": {
              "generatedName": "numberFieldPropertiesDtoAllowedValues",
              "value": {
                "generatedName": "NumberFieldPropertiesDtoAllowedValues",
                "description": "The allowed values for the field value.",
                "value": {
                  "description": "The allowed values for the field value.",
                  "value": {
                    "schema": {
                      "type": "double"
                    },
                    "generatedName": "NumberFieldPropertiesDtoAllowedValuesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "NumberFieldPropertiesDtoAllowedValues",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoIsUnique",
            "key": "isUnique",
            "schema": {
              "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "NumberFieldPropertiesDtoIsUnique",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoInlineEditable",
            "key": "inlineEditable",
            "schema": {
              "description": "Indicates that the inline editor is enabled for this field.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "NumberFieldPropertiesDtoInlineEditable",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numberFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "NumberFieldPropertiesDtoEditor",
              "schema": "NumberFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "NumberFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "LocalizedValueOfNullableDouble": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "LocalizedValueOfNullableDoubleKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "LocalizedValueOfNullableDoubleValue",
          "value": {
            "schema": {
              "type": "double"
            },
            "generatedName": "LocalizedValueOfNullableDoubleValue",
            "groupName": [],
            "type": "primitive"
          },
          "groupName": [],
          "inline": true,
          "type": "nullable"
        },
        "generatedName": "LocalizedValueOfNullableDouble",
        "groupName": [],
        "type": "map"
      },
      "NumberFieldEditor": {
        "description": "",
        "generatedName": "NumberFieldEditor",
        "values": [
          {
            "generatedName": "Input",
            "value": "Input",
            "casing": {}
          },
          {
            "generatedName": "Radio",
            "value": "Radio",
            "casing": {}
          },
          {
            "generatedName": "Dropdown",
            "value": "Dropdown",
            "casing": {}
          },
          {
            "generatedName": "Stars",
            "value": "Stars",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ReferencesFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoDefaultValues",
            "key": "defaultValues",
            "schema": {
              "generatedName": "referencesFieldPropertiesDtoDefaultValues",
              "value": {
                "description": "The language specific default value as a list of content ids.",
                "generatedName": "ReferencesFieldPropertiesDtoDefaultValues",
                "schema": "LocalizedValueOfReadonlyListOfString",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoDefaultValue",
            "key": "defaultValue",
            "schema": {
              "generatedName": "referencesFieldPropertiesDtoDefaultValue",
              "value": {
                "generatedName": "ReferencesFieldPropertiesDtoDefaultValue",
                "description": "The default value as a list of content ids.",
                "value": {
                  "description": "The default value as a list of content ids.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ReferencesFieldPropertiesDtoDefaultValueItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ReferencesFieldPropertiesDtoDefaultValue",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoMinItems",
            "key": "minItems",
            "schema": {
              "generatedName": "referencesFieldPropertiesDtoMinItems",
              "value": {
                "generatedName": "ReferencesFieldPropertiesDtoMinItems",
                "description": "The minimum allowed items for the field value.",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ReferencesFieldPropertiesDtoMinItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoMaxItems",
            "key": "maxItems",
            "schema": {
              "generatedName": "referencesFieldPropertiesDtoMaxItems",
              "value": {
                "generatedName": "ReferencesFieldPropertiesDtoMaxItems",
                "description": "The maximum allowed items for the field value.",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ReferencesFieldPropertiesDtoMaxItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoAllowDuplicates",
            "key": "allowDuplicates",
            "schema": {
              "description": "True, if duplicate values are allowed.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ReferencesFieldPropertiesDtoAllowDuplicates",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoResolveReference",
            "key": "resolveReference",
            "schema": {
              "description": "True to resolve references in the content list.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ReferencesFieldPropertiesDtoResolveReference",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoMustBePublished",
            "key": "mustBePublished",
            "schema": {
              "description": "True when all references must be published.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ReferencesFieldPropertiesDtoMustBePublished",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "ReferencesFieldPropertiesDtoEditor",
              "schema": "ReferencesFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "referencesFieldPropertiesDtoSchemaIds",
            "key": "schemaIds",
            "schema": {
              "generatedName": "referencesFieldPropertiesDtoSchemaIds",
              "value": {
                "generatedName": "ReferencesFieldPropertiesDtoSchemaIds",
                "description": "The ID of the referenced schemas.",
                "value": {
                  "description": "The ID of the referenced schemas.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ReferencesFieldPropertiesDtoSchemaIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ReferencesFieldPropertiesDtoSchemaIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ReferencesFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ReferencesFieldEditor": {
        "description": "",
        "generatedName": "ReferencesFieldEditor",
        "values": [
          {
            "generatedName": "List",
            "value": "List",
            "casing": {}
          },
          {
            "generatedName": "Dropdown",
            "value": "Dropdown",
            "casing": {}
          },
          {
            "generatedName": "Tags",
            "value": "Tags",
            "casing": {}
          },
          {
            "generatedName": "Checkboxes",
            "value": "Checkboxes",
            "casing": {}
          },
          {
            "generatedName": "Input",
            "value": "Input",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "StringFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoDefaultValues",
            "key": "defaultValues",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoDefaultValues",
              "value": {
                "description": "The language specific default value for the field value.",
                "generatedName": "StringFieldPropertiesDtoDefaultValues",
                "schema": "LocalizedValueOfString",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoDefaultValue",
            "key": "defaultValue",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoDefaultValue",
              "value": {
                "generatedName": "StringFieldPropertiesDtoDefaultValue",
                "description": "The default value for the field value.",
                "value": {
                  "description": "The default value for the field value.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "StringFieldPropertiesDtoDefaultValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoPattern",
            "key": "pattern",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoPattern",
              "value": {
                "generatedName": "StringFieldPropertiesDtoPattern",
                "description": "The pattern to enforce a specific format for the field value.",
                "value": {
                  "description": "The pattern to enforce a specific format for the field value.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "StringFieldPropertiesDtoPattern",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoPatternMessage",
            "key": "patternMessage",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoPatternMessage",
              "value": {
                "generatedName": "StringFieldPropertiesDtoPatternMessage",
                "description": "The validation message for the pattern.",
                "value": {
                  "description": "The validation message for the pattern.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "StringFieldPropertiesDtoPatternMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoFolderId",
            "key": "folderId",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoFolderId",
              "value": {
                "generatedName": "StringFieldPropertiesDtoFolderId",
                "description": "The initial id to the folder when the control supports file uploads.",
                "value": {
                  "description": "The initial id to the folder when the control supports file uploads.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "StringFieldPropertiesDtoFolderId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoMinLength",
            "key": "minLength",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoMinLength",
              "value": {
                "generatedName": "StringFieldPropertiesDtoMinLength",
                "description": "The minimum allowed length for the field value.",
                "value": {
                  "description": "The minimum allowed length for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "StringFieldPropertiesDtoMinLength",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoMaxLength",
            "key": "maxLength",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoMaxLength",
              "value": {
                "generatedName": "StringFieldPropertiesDtoMaxLength",
                "description": "The maximum allowed length for the field value.",
                "value": {
                  "description": "The maximum allowed length for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "StringFieldPropertiesDtoMaxLength",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoMinCharacters",
            "key": "minCharacters",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoMinCharacters",
              "value": {
                "generatedName": "StringFieldPropertiesDtoMinCharacters",
                "description": "The minimum allowed of normal characters for the field value.",
                "value": {
                  "description": "The minimum allowed of normal characters for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "StringFieldPropertiesDtoMinCharacters",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoMaxCharacters",
            "key": "maxCharacters",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoMaxCharacters",
              "value": {
                "generatedName": "StringFieldPropertiesDtoMaxCharacters",
                "description": "The maximum allowed of normal characters for the field value.",
                "value": {
                  "description": "The maximum allowed of normal characters for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "StringFieldPropertiesDtoMaxCharacters",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoMinWords",
            "key": "minWords",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoMinWords",
              "value": {
                "generatedName": "StringFieldPropertiesDtoMinWords",
                "description": "The minimum allowed number of words for the field value.",
                "value": {
                  "description": "The minimum allowed number of words for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "StringFieldPropertiesDtoMinWords",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoMaxWords",
            "key": "maxWords",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoMaxWords",
              "value": {
                "generatedName": "StringFieldPropertiesDtoMaxWords",
                "description": "The maximum allowed number of words for the field value.",
                "value": {
                  "description": "The maximum allowed number of words for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "StringFieldPropertiesDtoMaxWords",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoAllowedValues",
            "key": "allowedValues",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoAllowedValues",
              "value": {
                "generatedName": "StringFieldPropertiesDtoAllowedValues",
                "description": "The allowed values for the field value.",
                "value": {
                  "description": "The allowed values for the field value.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "StringFieldPropertiesDtoAllowedValuesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "StringFieldPropertiesDtoAllowedValues",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoSchemaIds",
            "key": "schemaIds",
            "schema": {
              "generatedName": "stringFieldPropertiesDtoSchemaIds",
              "value": {
                "generatedName": "StringFieldPropertiesDtoSchemaIds",
                "description": "The allowed schema ids that can be embedded.",
                "value": {
                  "description": "The allowed schema ids that can be embedded.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "StringFieldPropertiesDtoSchemaIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "StringFieldPropertiesDtoSchemaIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoIsUnique",
            "key": "isUnique",
            "schema": {
              "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "StringFieldPropertiesDtoIsUnique",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoIsEmbeddable",
            "key": "isEmbeddable",
            "schema": {
              "description": "Indicates that other content items or references are embedded.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "StringFieldPropertiesDtoIsEmbeddable",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoInlineEditable",
            "key": "inlineEditable",
            "schema": {
              "description": "Indicates that the inline editor is enabled for this field.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "StringFieldPropertiesDtoInlineEditable",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoCreateEnum",
            "key": "createEnum",
            "schema": {
              "description": "Indicates whether GraphQL Enum should be created.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "StringFieldPropertiesDtoCreateEnum",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoContentType",
            "key": "contentType",
            "schema": {
              "description": "How the string content should be interpreted.",
              "generatedName": "StringFieldPropertiesDtoContentType",
              "schema": "StringContentType",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "stringFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "StringFieldPropertiesDtoEditor",
              "schema": "StringFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "StringFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "LocalizedValueOfString": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "LocalizedValueOfStringKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "schema": {
            "type": "string"
          },
          "generatedName": "LocalizedValueOfStringValue",
          "groupName": [],
          "type": "primitive"
        },
        "generatedName": "LocalizedValueOfString",
        "groupName": [],
        "type": "map"
      },
      "StringContentType": {
        "description": "",
        "generatedName": "StringContentType",
        "values": [
          {
            "generatedName": "Unspecified",
            "value": "Unspecified",
            "casing": {}
          },
          {
            "generatedName": "Html",
            "value": "Html",
            "casing": {}
          },
          {
            "generatedName": "Markdown",
            "value": "Markdown",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "StringFieldEditor": {
        "description": "",
        "generatedName": "StringFieldEditor",
        "values": [
          {
            "generatedName": "Input",
            "value": "Input",
            "casing": {}
          },
          {
            "generatedName": "Color",
            "value": "Color",
            "casing": {}
          },
          {
            "generatedName": "Markdown",
            "value": "Markdown",
            "casing": {}
          },
          {
            "generatedName": "Dropdown",
            "value": "Dropdown",
            "casing": {}
          },
          {
            "generatedName": "Html",
            "value": "Html",
            "casing": {}
          },
          {
            "generatedName": "Radio",
            "value": "Radio",
            "casing": {}
          },
          {
            "generatedName": "RichText",
            "value": "RichText",
            "casing": {}
          },
          {
            "generatedName": "Slug",
            "value": "Slug",
            "casing": {}
          },
          {
            "generatedName": "StockPhoto",
            "value": "StockPhoto",
            "casing": {}
          },
          {
            "generatedName": "TextArea",
            "value": "TextArea",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "TagsFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsFieldPropertiesDtoDefaultValues",
            "key": "defaultValues",
            "schema": {
              "generatedName": "tagsFieldPropertiesDtoDefaultValues",
              "value": {
                "description": "The language specific default value for the field value.",
                "generatedName": "TagsFieldPropertiesDtoDefaultValues",
                "schema": "LocalizedValueOfReadonlyListOfString",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "tagsFieldPropertiesDtoDefaultValue",
            "key": "defaultValue",
            "schema": {
              "generatedName": "tagsFieldPropertiesDtoDefaultValue",
              "value": {
                "generatedName": "TagsFieldPropertiesDtoDefaultValue",
                "description": "The default value.",
                "value": {
                  "description": "The default value.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TagsFieldPropertiesDtoDefaultValueItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "TagsFieldPropertiesDtoDefaultValue",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsFieldPropertiesDtoMinItems",
            "key": "minItems",
            "schema": {
              "generatedName": "tagsFieldPropertiesDtoMinItems",
              "value": {
                "generatedName": "TagsFieldPropertiesDtoMinItems",
                "description": "The minimum allowed items for the field value.",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "TagsFieldPropertiesDtoMinItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsFieldPropertiesDtoMaxItems",
            "key": "maxItems",
            "schema": {
              "generatedName": "tagsFieldPropertiesDtoMaxItems",
              "value": {
                "generatedName": "TagsFieldPropertiesDtoMaxItems",
                "description": "The maximum allowed items for the field value.",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "TagsFieldPropertiesDtoMaxItems",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsFieldPropertiesDtoAllowedValues",
            "key": "allowedValues",
            "schema": {
              "generatedName": "tagsFieldPropertiesDtoAllowedValues",
              "value": {
                "generatedName": "TagsFieldPropertiesDtoAllowedValues",
                "description": "The allowed values for the field value.",
                "value": {
                  "description": "The allowed values for the field value.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TagsFieldPropertiesDtoAllowedValuesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "TagsFieldPropertiesDtoAllowedValues",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsFieldPropertiesDtoCreateEnum",
            "key": "createEnum",
            "schema": {
              "description": "Indicates whether GraphQL Enum should be created.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TagsFieldPropertiesDtoCreateEnum",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "TagsFieldPropertiesDtoEditor",
              "schema": "TagsFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TagsFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TagsFieldEditor": {
        "description": "",
        "generatedName": "TagsFieldEditor",
        "values": [
          {
            "generatedName": "Tags",
            "value": "Tags",
            "casing": {}
          },
          {
            "generatedName": "Checkboxes",
            "value": "Checkboxes",
            "casing": {}
          },
          {
            "generatedName": "Dropdown",
            "value": "Dropdown",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "UIFieldPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "uiFieldPropertiesDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The editor that is used to manage this field.",
              "generatedName": "UiFieldPropertiesDtoEditor",
              "schema": "UIFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UiFieldPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UIFieldEditor": {
        "description": "",
        "value": {
          "value": "Separator",
          "type": "string"
        },
        "generatedName": "UiFieldEditor",
        "groupName": [],
        "type": "literal"
      },
      "NestedFieldDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "nestedFieldDtoFieldId",
            "key": "fieldId",
            "schema": {
              "description": "The ID of the field.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "NestedFieldDtoFieldId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nestedFieldDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the field. Must be unique within the schema.",
              "schema": {
                "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "NestedFieldDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nestedFieldDtoIsHidden",
            "key": "isHidden",
            "schema": {
              "description": "Defines if the field is hidden.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "NestedFieldDtoIsHidden",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nestedFieldDtoIsLocked",
            "key": "isLocked",
            "schema": {
              "description": "Defines if the field is locked.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "NestedFieldDtoIsLocked",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nestedFieldDtoIsDisabled",
            "key": "isDisabled",
            "schema": {
              "description": "Defines if the field is disabled.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "NestedFieldDtoIsDisabled",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "nestedFieldDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The field properties.",
              "generatedName": "NestedFieldDtoProperties",
              "schema": "FieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "NestedFieldDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "Resource": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceLinks",
            "key": "_links",
            "schema": {
              "description": "The links.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResourceLinksKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "ResourceLinksValue",
                "schema": "ResourceLink",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ResourceLinks",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Resource",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourceLink": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resourceLinkHref",
            "key": "href",
            "schema": {
              "description": "The link url.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ResourceLinkHref",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceLinkMethod",
            "key": "method",
            "schema": {
              "description": "The link method.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ResourceLinkMethod",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resourceLinkMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "resourceLinkMetadata",
              "value": {
                "generatedName": "ResourceLinkMetadata",
                "description": "Additional data about the link.",
                "value": {
                  "description": "Additional data about the link.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResourceLinkMetadata",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourceLink",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "StatusInfoDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "statusInfoDtoStatus",
            "key": "status",
            "schema": {
              "description": "The name of the status.",
              "schema": {
                "type": "string"
              },
              "generatedName": "StatusInfoDtoStatus",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statusInfoDtoColor",
            "key": "color",
            "schema": {
              "description": "The color of the status.",
              "schema": {
                "type": "string"
              },
              "generatedName": "StatusInfoDtoColor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "StatusInfoDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AllContentsByPostDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "allContentsByPostDtoIds",
            "key": "ids",
            "schema": {
              "generatedName": "allContentsByPostDtoIds",
              "value": {
                "generatedName": "AllContentsByPostDtoIds",
                "description": "The list of ids to query.",
                "value": {
                  "description": "The list of ids to query.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AllContentsByPostDtoIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "AllContentsByPostDtoIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "allContentsByPostDtoScheduledFrom",
            "key": "scheduledFrom",
            "schema": {
              "generatedName": "allContentsByPostDtoScheduledFrom",
              "value": {
                "generatedName": "AllContentsByPostDtoScheduledFrom",
                "description": "The start of the schedule.",
                "value": {
                  "description": "The start of the schedule.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "AllContentsByPostDtoScheduledFrom",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "allContentsByPostDtoScheduledTo",
            "key": "scheduledTo",
            "schema": {
              "generatedName": "allContentsByPostDtoScheduledTo",
              "value": {
                "generatedName": "AllContentsByPostDtoScheduledTo",
                "description": "The end of the schedule.",
                "value": {
                  "description": "The end of the schedule.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "AllContentsByPostDtoScheduledTo",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "allContentsByPostDtoReferencing",
            "key": "referencing",
            "schema": {
              "generatedName": "allContentsByPostDtoReferencing",
              "value": {
                "generatedName": "AllContentsByPostDtoReferencing",
                "description": "The ID of the referencing content item.",
                "value": {
                  "description": "The ID of the referencing content item.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AllContentsByPostDtoReferencing",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "allContentsByPostDtoReferences",
            "key": "references",
            "schema": {
              "generatedName": "allContentsByPostDtoReferences",
              "value": {
                "generatedName": "AllContentsByPostDtoReferences",
                "description": "The ID of the reference content item.",
                "value": {
                  "description": "The ID of the reference content item.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AllContentsByPostDtoReferences",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "allContentsByPostDtoOData",
            "key": "oData",
            "schema": {
              "generatedName": "allContentsByPostDtoOData",
              "value": {
                "generatedName": "AllContentsByPostDtoOData",
                "description": "The optional odata query.",
                "value": {
                  "description": "The optional odata query.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AllContentsByPostDtoOData",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "allContentsByPostDtoQ",
            "key": "q",
            "schema": {
              "generatedName": "allContentsByPostDtoQ",
              "value": {
                "generatedName": "AllContentsByPostDtoQ",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AllContentsByPostDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BulkResultDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bulkResultDtoError",
            "key": "error",
            "schema": {
              "generatedName": "bulkResultDtoError",
              "value": {
                "description": "The error when the bulk job failed.",
                "generatedName": "BulkResultDtoError",
                "schema": "ErrorDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "bulkResultDtoJobIndex",
            "key": "jobIndex",
            "schema": {
              "description": "The index of the bulk job where the result belongs to. The order can change.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BulkResultDtoJobIndex",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkResultDtoId",
            "key": "id",
            "schema": {
              "generatedName": "bulkResultDtoId",
              "value": {
                "generatedName": "BulkResultDtoId",
                "description": "The ID of the entity that has been handled successfully or not.",
                "value": {
                  "description": "The ID of the entity that has been handled successfully or not.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BulkResultDtoId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkResultDtoContentId",
            "key": "contentId",
            "schema": {
              "generatedName": "bulkResultDtoContentId",
              "availability": "Deprecated",
              "value": {
                "generatedName": "BulkResultDtoContentId",
                "description": "The ID of the entity that has been handled successfully or not.",
                "availability": "Deprecated",
                "value": {
                  "description": "The ID of the entity that has been handled successfully or not.",
                  "availability": "Deprecated",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BulkResultDtoContentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BulkResultDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BulkUpdateContentsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsDtoJobs",
            "key": "jobs",
            "schema": {
              "description": "The contents to update or insert.",
              "value": {
                "generatedName": "BulkUpdateContentsDtoJobsItem",
                "schema": "BulkUpdateContentsJobDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "BulkUpdateContentsDtoJobs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsDtoPublish",
            "key": "publish",
            "schema": {
              "generatedName": "bulkUpdateContentsDtoPublish",
              "availability": "Deprecated",
              "value": {
                "description": "True to automatically publish the content.",
                "availability": "Deprecated",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsDtoPublish",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsDtoDoNotScript",
            "key": "doNotScript",
            "schema": {
              "generatedName": "bulkUpdateContentsDtoDoNotScript",
              "value": {
                "description": "True to turn off scripting for faster inserts. Default: true.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsDtoDoNotScript",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsDtoDoNotValidate",
            "key": "doNotValidate",
            "schema": {
              "generatedName": "bulkUpdateContentsDtoDoNotValidate",
              "value": {
                "description": "True to turn off validation for faster inserts. Default: false.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsDtoDoNotValidate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsDtoDoNotValidateWorkflow",
            "key": "doNotValidateWorkflow",
            "schema": {
              "generatedName": "bulkUpdateContentsDtoDoNotValidateWorkflow",
              "value": {
                "description": "True to turn off validation of workflow rules. Default: false.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsDtoDoNotValidateWorkflow",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsDtoCheckReferrers",
            "key": "checkReferrers",
            "schema": {
              "generatedName": "bulkUpdateContentsDtoCheckReferrers",
              "value": {
                "description": "True to check referrers of deleted contents.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsDtoCheckReferrers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsDtoOptimizeValidation",
            "key": "optimizeValidation",
            "schema": {
              "generatedName": "bulkUpdateContentsDtoOptimizeValidation",
              "value": {
                "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsDtoOptimizeValidation",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BulkUpdateContentsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BulkUpdateContentsJobDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoQuery",
            "key": "query",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoQuery",
              "value": {
                "description": "An optional query to identify the content to update.",
                "generatedName": "BulkUpdateContentsJobDtoQuery",
                "schema": "QueryJsonDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoId",
            "key": "id",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoId",
              "value": {
                "generatedName": "BulkUpdateContentsJobDtoId",
                "description": "An optional ID of the content to update.",
                "value": {
                  "description": "An optional ID of the content to update.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BulkUpdateContentsJobDtoId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoData",
            "key": "data",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoData",
              "value": {
                "description": "The data of the content when type is set to 'Upsert', 'Create', 'Update' or 'Patch.",
                "generatedName": "BulkUpdateContentsJobDtoData",
                "schema": "ContentData",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoStatus",
            "key": "status",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoStatus",
              "value": {
                "generatedName": "BulkUpdateContentsJobDtoStatus",
                "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
                "value": {
                  "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BulkUpdateContentsJobDtoStatus",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoDueTime",
            "key": "dueTime",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoDueTime",
              "value": {
                "generatedName": "BulkUpdateContentsJobDtoDueTime",
                "description": "The due time.",
                "value": {
                  "description": "The due time.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "BulkUpdateContentsJobDtoDueTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoType",
            "key": "type",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoType",
              "value": {
                "description": "The update type.",
                "generatedName": "BulkUpdateContentsJobDtoType",
                "schema": "BulkUpdateContentType",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoSchema",
            "key": "schema",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoSchema",
              "value": {
                "generatedName": "BulkUpdateContentsJobDtoSchema",
                "description": "The optional schema id or name.",
                "value": {
                  "description": "The optional schema id or name.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BulkUpdateContentsJobDtoSchema",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoPatch",
            "key": "patch",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoPatch",
              "value": {
                "description": "Makes the update as patch.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsJobDtoPatch",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoPermanent",
            "key": "permanent",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoPermanent",
              "value": {
                "description": "True to delete the content permanently.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateContentsJobDtoPermanent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoExpectedCount",
            "key": "expectedCount",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoExpectedCount",
              "value": {
                "description": "The number of expected items. Set it to a higher number to update multiple items when a query is defined.",
                "schema": {
                  "type": "int64"
                },
                "generatedName": "BulkUpdateContentsJobDtoExpectedCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateContentsJobDtoExpectedVersion",
            "key": "expectedVersion",
            "schema": {
              "generatedName": "bulkUpdateContentsJobDtoExpectedVersion",
              "value": {
                "description": "The expected version.",
                "schema": {
                  "type": "int64"
                },
                "generatedName": "BulkUpdateContentsJobDtoExpectedVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BulkUpdateContentsJobDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "QueryJsonDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "queryJsonDtoFilter",
            "key": "filter",
            "schema": {
              "generatedName": "queryJsonDtoFilter",
              "value": {
                "generatedName": "QueryJsonDtoFilter",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryJsonDtoFullText",
            "key": "fullText",
            "schema": {
              "generatedName": "queryJsonDtoFullText",
              "value": {
                "generatedName": "QueryJsonDtoFullText",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "QueryJsonDtoFullText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryJsonDtoSkip",
            "key": "skip",
            "schema": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "QueryJsonDtoSkip",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryJsonDtoTake",
            "key": "take",
            "schema": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "QueryJsonDtoTake",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryJsonDtoRandom",
            "key": "random",
            "schema": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "QueryJsonDtoRandom",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryJsonDtoTop",
            "key": "top",
            "schema": {
              "schema": {
                "type": "int64"
              },
              "generatedName": "QueryJsonDtoTop",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryJsonDtoSort",
            "key": "sort",
            "schema": {
              "generatedName": "queryJsonDtoSort",
              "value": {
                "generatedName": "QueryJsonDtoSort",
                "value": {
                  "value": {
                    "generatedName": "QueryJsonDtoSortItem",
                    "schema": "SortNode",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "QueryJsonDtoSort",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "QueryJsonDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SortNode": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sortNodePath",
            "key": "path",
            "schema": {
              "generatedName": "SortNodePath",
              "schema": "PropertyPath",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sortNodeOrder",
            "key": "order",
            "schema": {
              "generatedName": "SortNodeOrder",
              "schema": "SortOrder",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SortNode",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PropertyPath": {
        "value": {
          "schema": {
            "type": "string"
          },
          "generatedName": "PropertyPathItem",
          "groupName": [],
          "type": "primitive"
        },
        "generatedName": "PropertyPath",
        "groupName": [],
        "type": "array"
      },
      "SortOrder": {
        "description": "",
        "generatedName": "SortOrder",
        "values": [
          {
            "generatedName": "Ascending",
            "value": "Ascending",
            "casing": {}
          },
          {
            "generatedName": "Descending",
            "value": "Descending",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "BulkUpdateContentType": {
        "description": "",
        "generatedName": "BulkUpdateContentType",
        "values": [
          {
            "generatedName": "Upsert",
            "value": "Upsert",
            "casing": {}
          },
          {
            "generatedName": "ChangeStatus",
            "value": "ChangeStatus",
            "casing": {}
          },
          {
            "generatedName": "Create",
            "value": "Create",
            "casing": {}
          },
          {
            "generatedName": "Delete",
            "value": "Delete",
            "casing": {}
          },
          {
            "generatedName": "Patch",
            "value": "Patch",
            "casing": {}
          },
          {
            "generatedName": "Update",
            "value": "Update",
            "casing": {}
          },
          {
            "generatedName": "Validate",
            "value": "Validate",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "UsersDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "usersDtoTotal",
            "key": "total",
            "schema": {
              "description": "The total number of users.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "UsersDtoTotal",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "usersDtoItems",
            "key": "items",
            "schema": {
              "description": "The users.",
              "value": {
                "generatedName": "UsersDtoItemsItem",
                "schema": "UserDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "UsersDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UsersDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UserDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the user.",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userDtoEmail",
            "key": "email",
            "schema": {
              "description": "The email of the user. Unique value.",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserDtoEmail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userDtoDisplayName",
            "key": "displayName",
            "schema": {
              "description": "The display name (usually first name and last name) of the user.",
              "schema": {
                "type": "string"
              },
              "generatedName": "UserDtoDisplayName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userDtoIsLocked",
            "key": "isLocked",
            "schema": {
              "description": "Determines if the user is locked.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UserDtoIsLocked",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userDtoPermissions",
            "key": "permissions",
            "schema": {
              "description": "Additional permissions for the user.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserDtoPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "UserDtoPermissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateUserDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createUserDtoEmail",
            "key": "email",
            "schema": {
              "description": "The email of the user. Unique value.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateUserDtoEmail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createUserDtoDisplayName",
            "key": "displayName",
            "schema": {
              "description": "The display name (usually first name and last name) of the user.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateUserDtoDisplayName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createUserDtoPassword",
            "key": "password",
            "schema": {
              "description": "The password of the user.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateUserDtoPassword",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createUserDtoPermissions",
            "key": "permissions",
            "schema": {
              "description": "Additional permissions for the user.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CreateUserDtoPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "CreateUserDtoPermissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateUserDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateUserDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateUserDtoEmail",
            "key": "email",
            "schema": {
              "description": "The email of the user. Unique value.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpdateUserDtoEmail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateUserDtoDisplayName",
            "key": "displayName",
            "schema": {
              "description": "The display name (usually first name and last name) of the user.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpdateUserDtoDisplayName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateUserDtoPassword",
            "key": "password",
            "schema": {
              "generatedName": "updateUserDtoPassword",
              "value": {
                "generatedName": "UpdateUserDtoPassword",
                "description": "The password of the user.",
                "value": {
                  "description": "The password of the user.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateUserDtoPassword",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateUserDtoPermissions",
            "key": "permissions",
            "schema": {
              "description": "Additional permissions for the user.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateUserDtoPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "UpdateUserDtoPermissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateUserDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResourcesDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ResourcesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TranslationDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "translationDtoResult",
            "key": "result",
            "schema": {
              "description": "The result of the translation.",
              "generatedName": "TranslationDtoResult",
              "schema": "TranslationResultCode",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "translationDtoText",
            "key": "text",
            "schema": {
              "generatedName": "translationDtoText",
              "value": {
                "generatedName": "TranslationDtoText",
                "description": "The translated text.",
                "value": {
                  "description": "The translated text.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TranslationDtoText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TranslationDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TranslationResultCode": {
        "description": "",
        "generatedName": "TranslationResultCode",
        "values": [
          {
            "generatedName": "Translated",
            "value": "Translated",
            "casing": {}
          },
          {
            "generatedName": "LanguageNotSupported",
            "value": "LanguageNotSupported",
            "casing": {}
          },
          {
            "generatedName": "NotTranslated",
            "value": "NotTranslated",
            "casing": {}
          },
          {
            "generatedName": "NotConfigured",
            "value": "NotConfigured",
            "casing": {}
          },
          {
            "generatedName": "Unauthorized",
            "value": "Unauthorized",
            "casing": {}
          },
          {
            "generatedName": "Failed",
            "value": "Failed",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "TranslateDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "translateDtoText",
            "key": "text",
            "schema": {
              "description": "The text to translate.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TranslateDtoText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "translateDtoTargetLanguage",
            "key": "targetLanguage",
            "schema": {
              "description": "The target language.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TranslateDtoTargetLanguage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "translateDtoSourceLanguage",
            "key": "sourceLanguage",
            "schema": {
              "generatedName": "translateDtoSourceLanguage",
              "value": {
                "description": "The optional source language.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TranslateDtoSourceLanguage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TranslateDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TemplatesDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "templatesDtoItems",
            "key": "items",
            "schema": {
              "description": "The event consumers.",
              "value": {
                "generatedName": "TemplatesDtoItemsItem",
                "schema": "TemplateDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TemplatesDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TemplatesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TemplateDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "templateDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the template.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TemplateDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "templateDtoTitle",
            "key": "title",
            "schema": {
              "description": "The title of the template.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TemplateDtoTitle",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "templateDtoDescription",
            "key": "description",
            "schema": {
              "description": "The description of the template.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TemplateDtoDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "templateDtoIsStarter",
            "key": "isStarter",
            "schema": {
              "description": "True, if the template is a starter.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "TemplateDtoIsStarter",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TemplateDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TemplateDetailsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "templateDetailsDtoDetails",
            "key": "details",
            "schema": {
              "description": "The details of the template.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TemplateDetailsDtoDetails",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TemplateDetailsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContributorsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contributorsDtoItems",
            "key": "items",
            "schema": {
              "description": "The contributors.",
              "value": {
                "generatedName": "ContributorsDtoItemsItem",
                "schema": "ContributorDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ContributorsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contributorsDtoMaxContributors",
            "key": "maxContributors",
            "schema": {
              "description": "The maximum number of allowed contributors.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "ContributorsDtoMaxContributors",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contributorsDtoMeta",
            "key": "_meta",
            "schema": {
              "generatedName": "contributorsDtoMeta",
              "value": {
                "description": "The metadata to provide information about this request.",
                "generatedName": "ContributorsDtoMeta",
                "schema": "ContributorsMetadata",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContributorsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContributorDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contributorDtoContributorId",
            "key": "contributorId",
            "schema": {
              "description": "The ID of the user that contributes to the app.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContributorDtoContributorId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contributorDtoContributorName",
            "key": "contributorName",
            "schema": {
              "description": "The display name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContributorDtoContributorName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contributorDtoContributorEmail",
            "key": "contributorEmail",
            "schema": {
              "description": "The email address.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContributorDtoContributorEmail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contributorDtoRole",
            "key": "role",
            "schema": {
              "generatedName": "contributorDtoRole",
              "value": {
                "generatedName": "ContributorDtoRole",
                "description": "The role of the contributor.",
                "value": {
                  "description": "The role of the contributor.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ContributorDtoRole",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContributorDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContributorsMetadata": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contributorsMetadataIsInvited",
            "key": "isInvited",
            "schema": {
              "description": "Indicates whether the user has been invited.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ContributorsMetadataIsInvited",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContributorsMetadata",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssignContributorDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assignContributorDtoContributorId",
            "key": "contributorId",
            "schema": {
              "description": "The id or email of the user to add to the app.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AssignContributorDtoContributorId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assignContributorDtoRole",
            "key": "role",
            "schema": {
              "generatedName": "assignContributorDtoRole",
              "value": {
                "generatedName": "AssignContributorDtoRole",
                "description": "The role of the contributor.",
                "value": {
                  "description": "The role of the contributor.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssignContributorDtoRole",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assignContributorDtoInvite",
            "key": "invite",
            "schema": {
              "generatedName": "assignContributorDtoInvite",
              "value": {
                "description": "Set to true to invite the user if he does not exist.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AssignContributorDtoInvite",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssignContributorDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TeamDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "teamDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the team.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TeamDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the team.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TeamDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the team.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "TeamDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamDtoCreated",
            "key": "created",
            "schema": {
              "description": "The timestamp when the team has been created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TeamDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamDtoLastModified",
            "key": "lastModified",
            "schema": {
              "description": "The timestamp when the team has been modified last.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TeamDtoLastModified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "teamDtoRoleName",
            "key": "roleName",
            "schema": {
              "generatedName": "teamDtoRoleName",
              "value": {
                "generatedName": "TeamDtoRoleName",
                "description": "The role name of the user.",
                "value": {
                  "description": "The role name of the user.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TeamDtoRoleName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TeamDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateTeamDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createTeamDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the team.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateTeamDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateTeamDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateTeamDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateTeamDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the team.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpdateTeamDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateTeamDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "LogDownloadDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "logDownloadDtoDownloadUrl",
            "key": "downloadUrl",
            "schema": {
              "generatedName": "logDownloadDtoDownloadUrl",
              "value": {
                "generatedName": "LogDownloadDtoDownloadUrl",
                "description": "The url to download the log.",
                "value": {
                  "description": "The url to download the log.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LogDownloadDtoDownloadUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LogDownloadDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CallsUsageDtoDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoTotalCalls",
            "key": "totalCalls",
            "schema": {
              "description": "The total number of API calls.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsageDtoDtoTotalCalls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoTotalBytes",
            "key": "totalBytes",
            "schema": {
              "description": "The total number of bytes transferred.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsageDtoDtoTotalBytes",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoMonthCalls",
            "key": "monthCalls",
            "schema": {
              "description": "The total number of API calls this month.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsageDtoDtoMonthCalls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoMonthBytes",
            "key": "monthBytes",
            "schema": {
              "description": "The total number of bytes transferred this month.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsageDtoDtoMonthBytes",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoBlockingApiCalls",
            "key": "blockingApiCalls",
            "schema": {
              "description": "The amount of calls that will block the app.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsageDtoDtoBlockingApiCalls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoAllowedBytes",
            "key": "allowedBytes",
            "schema": {
              "description": "The included API traffic.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsageDtoDtoAllowedBytes",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoAllowedCalls",
            "key": "allowedCalls",
            "schema": {
              "description": "The included API calls.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsageDtoDtoAllowedCalls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoAverageElapsedMs",
            "key": "averageElapsedMs",
            "schema": {
              "description": "The average duration in milliseconds.",
              "schema": {
                "type": "double"
              },
              "generatedName": "CallsUsageDtoDtoAverageElapsedMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsageDtoDtoDetails",
            "key": "details",
            "schema": {
              "description": "The statistics by date and group.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CallsUsageDtoDtoDetailsKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "value": {
                  "generatedName": "CallsUsageDtoDtoDetailsValueItem",
                  "schema": "CallsUsagePerDateDto",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CallsUsageDtoDtoDetailsValue",
                "groupName": [],
                "inline": true,
                "type": "array"
              },
              "generatedName": "CallsUsageDtoDtoDetails",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CallsUsageDtoDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CallsUsagePerDateDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "callsUsagePerDateDtoDate",
            "key": "date",
            "schema": {
              "description": "The date when the usage was tracked.",
              "schema": {
                "format": "date",
                "type": "string"
              },
              "generatedName": "CallsUsagePerDateDtoDate",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsagePerDateDtoTotalCalls",
            "key": "totalCalls",
            "schema": {
              "description": "The total number of API calls.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsagePerDateDtoTotalCalls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsagePerDateDtoTotalBytes",
            "key": "totalBytes",
            "schema": {
              "description": "The total number of bytes transferred.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CallsUsagePerDateDtoTotalBytes",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "callsUsagePerDateDtoAverageElapsedMs",
            "key": "averageElapsedMs",
            "schema": {
              "description": "The average duration in milliseconds.",
              "schema": {
                "type": "double"
              },
              "generatedName": "CallsUsagePerDateDtoAverageElapsedMs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CallsUsagePerDateDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CurrentStorageDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "currentStorageDtoSize",
            "key": "size",
            "schema": {
              "description": "The size in bytes.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CurrentStorageDtoSize",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "currentStorageDtoMaxAllowed",
            "key": "maxAllowed",
            "schema": {
              "description": "The maximum allowed asset size.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CurrentStorageDtoMaxAllowed",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CurrentStorageDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "StorageUsagePerDateDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "storageUsagePerDateDtoDate",
            "key": "date",
            "schema": {
              "description": "The date when the usage was tracked.",
              "schema": {
                "format": "date",
                "type": "string"
              },
              "generatedName": "StorageUsagePerDateDtoDate",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "storageUsagePerDateDtoTotalCount",
            "key": "totalCount",
            "schema": {
              "description": "The number of assets.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "StorageUsagePerDateDtoTotalCount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "storageUsagePerDateDtoTotalSize",
            "key": "totalSize",
            "schema": {
              "description": "The size in bytes.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "StorageUsagePerDateDtoTotalSize",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "StorageUsagePerDateDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchResultDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchResultDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the search result.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchResultDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchResultDtoType",
            "key": "type",
            "schema": {
              "description": "The type of the search result.",
              "generatedName": "SearchResultDtoType",
              "schema": "SearchResultType",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "searchResultDtoLabel",
            "key": "label",
            "schema": {
              "generatedName": "searchResultDtoLabel",
              "value": {
                "generatedName": "SearchResultDtoLabel",
                "description": "An optional label.",
                "value": {
                  "description": "An optional label.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SearchResultDtoLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchResultDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchResultType": {
        "description": "",
        "generatedName": "SearchResultType",
        "values": [
          {
            "generatedName": "Asset",
            "value": "Asset",
            "casing": {}
          },
          {
            "generatedName": "Content",
            "value": "Content",
            "casing": {}
          },
          {
            "generatedName": "Dashboard",
            "value": "Dashboard",
            "casing": {}
          },
          {
            "generatedName": "Setting",
            "value": "Setting",
            "casing": {}
          },
          {
            "generatedName": "Rule",
            "value": "Rule",
            "casing": {}
          },
          {
            "generatedName": "Schema",
            "value": "Schema",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "SchemaDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the schema.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SchemaDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoCreatedBy",
            "key": "createdBy",
            "schema": {
              "description": "The user that has created the schema.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SchemaDtoCreatedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoLastModifiedBy",
            "key": "lastModifiedBy",
            "schema": {
              "description": "The user that has updated the schema.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SchemaDtoLastModifiedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the schema. Unique within the app.",
              "schema": {
                "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SchemaDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoType",
            "key": "type",
            "schema": {
              "description": "The type of the schema.",
              "generatedName": "SchemaDtoType",
              "schema": "SchemaType",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoCategory",
            "key": "category",
            "schema": {
              "generatedName": "schemaDtoCategory",
              "value": {
                "generatedName": "SchemaDtoCategory",
                "description": "The name of the category.",
                "value": {
                  "description": "The name of the category.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaDtoCategory",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The schema properties.",
              "generatedName": "SchemaDtoProperties",
              "schema": "SchemaPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoIsSingleton",
            "key": "isSingleton",
            "schema": {
              "description": "Indicates if the schema is a singleton.",
              "availability": "Deprecated",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SchemaDtoIsSingleton",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoIsPublished",
            "key": "isPublished",
            "schema": {
              "description": "Indicates if the schema is published.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SchemaDtoIsPublished",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoCreated",
            "key": "created",
            "schema": {
              "description": "The date and time when the schema has been created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SchemaDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoLastModified",
            "key": "lastModified",
            "schema": {
              "description": "The date and time when the schema has been modified last.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SchemaDtoLastModified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the schema.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "SchemaDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoScripts",
            "key": "scripts",
            "schema": {
              "description": "The scripts.",
              "generatedName": "SchemaDtoScripts",
              "schema": "SchemaScriptsDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoPreviewUrls",
            "key": "previewUrls",
            "schema": {
              "description": "The preview Urls.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SchemaDtoPreviewUrlsKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SchemaDtoPreviewUrlsValue",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "SchemaDtoPreviewUrls",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoFieldsInLists",
            "key": "fieldsInLists",
            "schema": {
              "description": "The name of fields that are used in content lists.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SchemaDtoFieldsInListsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "SchemaDtoFieldsInLists",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoFieldsInReferences",
            "key": "fieldsInReferences",
            "schema": {
              "description": "The name of fields that are used in content references.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SchemaDtoFieldsInReferencesItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "SchemaDtoFieldsInReferences",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoFieldRules",
            "key": "fieldRules",
            "schema": {
              "description": "The field rules.",
              "value": {
                "generatedName": "SchemaDtoFieldRulesItem",
                "schema": "FieldRuleDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SchemaDtoFieldRules",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaDtoFields",
            "key": "fields",
            "schema": {
              "description": "The list of fields.",
              "value": {
                "generatedName": "SchemaDtoFieldsItem",
                "schema": "FieldDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SchemaDtoFields",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaType": {
        "description": "",
        "generatedName": "SchemaType",
        "values": [
          {
            "generatedName": "Default",
            "value": "Default",
            "casing": {}
          },
          {
            "generatedName": "Singleton",
            "value": "Singleton",
            "casing": {}
          },
          {
            "generatedName": "Component",
            "value": "Component",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "SchemaPropertiesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaPropertiesDtoLabel",
            "key": "label",
            "schema": {
              "generatedName": "schemaPropertiesDtoLabel",
              "value": {
                "generatedName": "SchemaPropertiesDtoLabel",
                "description": "Optional label for the editor.",
                "value": {
                  "description": "Optional label for the editor.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "generatedName": "SchemaPropertiesDtoLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaPropertiesDtoHints",
            "key": "hints",
            "schema": {
              "generatedName": "schemaPropertiesDtoHints",
              "value": {
                "generatedName": "SchemaPropertiesDtoHints",
                "description": "Hints to describe the schema.",
                "value": {
                  "description": "Hints to describe the schema.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "generatedName": "SchemaPropertiesDtoHints",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaPropertiesDtoContentsSidebarUrl",
            "key": "contentsSidebarUrl",
            "schema": {
              "generatedName": "schemaPropertiesDtoContentsSidebarUrl",
              "value": {
                "generatedName": "SchemaPropertiesDtoContentsSidebarUrl",
                "description": "The url to a the sidebar plugin for content lists.",
                "value": {
                  "description": "The url to a the sidebar plugin for content lists.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaPropertiesDtoContentsSidebarUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaPropertiesDtoContentSidebarUrl",
            "key": "contentSidebarUrl",
            "schema": {
              "generatedName": "schemaPropertiesDtoContentSidebarUrl",
              "value": {
                "generatedName": "SchemaPropertiesDtoContentSidebarUrl",
                "description": "The url to a the sidebar plugin for content items.",
                "value": {
                  "description": "The url to a the sidebar plugin for content items.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaPropertiesDtoContentSidebarUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaPropertiesDtoContentEditorUrl",
            "key": "contentEditorUrl",
            "schema": {
              "generatedName": "schemaPropertiesDtoContentEditorUrl",
              "value": {
                "generatedName": "SchemaPropertiesDtoContentEditorUrl",
                "description": "The url to the editor plugin.",
                "value": {
                  "description": "The url to the editor plugin.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaPropertiesDtoContentEditorUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaPropertiesDtoValidateOnPublish",
            "key": "validateOnPublish",
            "schema": {
              "description": "True to validate the content items on publish.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SchemaPropertiesDtoValidateOnPublish",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaPropertiesDtoTags",
            "key": "tags",
            "schema": {
              "generatedName": "schemaPropertiesDtoTags",
              "value": {
                "generatedName": "SchemaPropertiesDtoTags",
                "description": "Tags for automation processes.",
                "value": {
                  "description": "Tags for automation processes.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "SchemaPropertiesDtoTagsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "SchemaPropertiesDtoTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaPropertiesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaScriptsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaScriptsDtoQuery",
            "key": "query",
            "schema": {
              "generatedName": "schemaScriptsDtoQuery",
              "value": {
                "generatedName": "SchemaScriptsDtoQuery",
                "description": "The script that is executed for each content when querying contents.",
                "value": {
                  "description": "The script that is executed for each content when querying contents.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaScriptsDtoQuery",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaScriptsDtoQueryPre",
            "key": "queryPre",
            "schema": {
              "generatedName": "schemaScriptsDtoQueryPre",
              "value": {
                "generatedName": "SchemaScriptsDtoQueryPre",
                "description": "The script that is executed for all contents when querying contents.",
                "value": {
                  "description": "The script that is executed for all contents when querying contents.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaScriptsDtoQueryPre",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaScriptsDtoCreate",
            "key": "create",
            "schema": {
              "generatedName": "schemaScriptsDtoCreate",
              "value": {
                "generatedName": "SchemaScriptsDtoCreate",
                "description": "The script that is executed when creating a content.",
                "value": {
                  "description": "The script that is executed when creating a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaScriptsDtoCreate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaScriptsDtoUpdate",
            "key": "update",
            "schema": {
              "generatedName": "schemaScriptsDtoUpdate",
              "value": {
                "generatedName": "SchemaScriptsDtoUpdate",
                "description": "The script that is executed when updating a content.",
                "value": {
                  "description": "The script that is executed when updating a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaScriptsDtoUpdate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaScriptsDtoDelete",
            "key": "delete",
            "schema": {
              "generatedName": "schemaScriptsDtoDelete",
              "value": {
                "generatedName": "SchemaScriptsDtoDelete",
                "description": "The script that is executed when deleting a content.",
                "value": {
                  "description": "The script that is executed when deleting a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaScriptsDtoDelete",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaScriptsDtoChange",
            "key": "change",
            "schema": {
              "generatedName": "schemaScriptsDtoChange",
              "value": {
                "generatedName": "SchemaScriptsDtoChange",
                "description": "The script that is executed when change a content status.",
                "value": {
                  "description": "The script that is executed when change a content status.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaScriptsDtoChange",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaScriptsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "FieldRuleDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "fieldRuleDtoAction",
            "key": "action",
            "schema": {
              "description": "The action to perform when the condition is met.",
              "generatedName": "FieldRuleDtoAction",
              "schema": "FieldRuleAction",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "fieldRuleDtoField",
            "key": "field",
            "schema": {
              "description": "The field to update.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FieldRuleDtoField",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fieldRuleDtoCondition",
            "key": "condition",
            "schema": {
              "generatedName": "fieldRuleDtoCondition",
              "value": {
                "generatedName": "FieldRuleDtoCondition",
                "description": "The condition.",
                "value": {
                  "description": "The condition.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "FieldRuleDtoCondition",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FieldRuleDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "FieldRuleAction": {
        "description": "",
        "generatedName": "FieldRuleAction",
        "values": [
          {
            "generatedName": "Disable",
            "value": "Disable",
            "casing": {}
          },
          {
            "generatedName": "Hide",
            "value": "Hide",
            "casing": {}
          },
          {
            "generatedName": "Require",
            "value": "Require",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AddFieldDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addFieldDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the field. Must be unique within the schema.",
              "schema": {
                "pattern": "^[a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AddFieldDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addFieldDtoPartitioning",
            "key": "partitioning",
            "schema": {
              "generatedName": "addFieldDtoPartitioning",
              "value": {
                "generatedName": "AddFieldDtoPartitioning",
                "description": "Determines the optional partitioning of the field.",
                "value": {
                  "description": "Determines the optional partitioning of the field.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AddFieldDtoPartitioning",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addFieldDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The field properties.",
              "generatedName": "AddFieldDtoProperties",
              "schema": "FieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AddFieldDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConfigureUIFieldsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "configureUiFieldsDtoFieldsInLists",
            "key": "fieldsInLists",
            "schema": {
              "generatedName": "configureUiFieldsDtoFieldsInLists",
              "value": {
                "generatedName": "ConfigureUiFieldsDtoFieldsInLists",
                "description": "The name of fields that are used in content lists.",
                "value": {
                  "description": "The name of fields that are used in content lists.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ConfigureUiFieldsDtoFieldsInListsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ConfigureUiFieldsDtoFieldsInLists",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "configureUiFieldsDtoFieldsInReferences",
            "key": "fieldsInReferences",
            "schema": {
              "generatedName": "configureUiFieldsDtoFieldsInReferences",
              "value": {
                "generatedName": "ConfigureUiFieldsDtoFieldsInReferences",
                "description": "The name of fields that are used in content references.",
                "value": {
                  "description": "The name of fields that are used in content references.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ConfigureUiFieldsDtoFieldsInReferencesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ConfigureUiFieldsDtoFieldsInReferences",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConfigureUiFieldsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ReorderFieldsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "reorderFieldsDtoFieldIds",
            "key": "fieldIds",
            "schema": {
              "description": "The field ids in the target order.",
              "value": {
                "schema": {
                  "type": "int64"
                },
                "generatedName": "ReorderFieldsDtoFieldIdsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ReorderFieldsDtoFieldIds",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ReorderFieldsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateFieldDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateFieldDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The field properties.",
              "generatedName": "UpdateFieldDtoProperties",
              "schema": "FieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateFieldDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemasDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemasDtoItems",
            "key": "items",
            "schema": {
              "description": "The schemas.",
              "value": {
                "generatedName": "SchemasDtoItemsItem",
                "schema": "SchemaDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SchemasDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemasDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateSchemaDto": {
        "allOf": [
          {
            "generatedName": "UpsertSchemaDto",
            "schema": "UpsertSchemaDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createSchemaDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the schema.",
              "schema": {
                "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateSchemaDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createSchemaDtoType",
            "key": "type",
            "schema": {
              "description": "The type of the schema.",
              "generatedName": "CreateSchemaDtoType",
              "schema": "SchemaType",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "createSchemaDtoIsSingleton",
            "key": "isSingleton",
            "schema": {
              "description": "Set to true to allow a single content item only.",
              "availability": "Deprecated",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateSchemaDtoIsSingleton",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "availability": "Deprecated"
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateSchemaDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpsertSchemaDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoProperties",
            "key": "properties",
            "schema": {
              "generatedName": "upsertSchemaDtoProperties",
              "value": {
                "description": "The optional properties.",
                "generatedName": "UpsertSchemaDtoProperties",
                "schema": "SchemaPropertiesDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoScripts",
            "key": "scripts",
            "schema": {
              "generatedName": "upsertSchemaDtoScripts",
              "value": {
                "description": "The optional scripts.",
                "generatedName": "UpsertSchemaDtoScripts",
                "schema": "SchemaScriptsDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoFieldsInReferences",
            "key": "fieldsInReferences",
            "schema": {
              "generatedName": "upsertSchemaDtoFieldsInReferences",
              "value": {
                "generatedName": "UpsertSchemaDtoFieldsInReferences",
                "description": "The names of the fields that should be used in references.",
                "value": {
                  "description": "The names of the fields that should be used in references.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpsertSchemaDtoFieldsInReferencesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "UpsertSchemaDtoFieldsInReferences",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoFieldsInLists",
            "key": "fieldsInLists",
            "schema": {
              "generatedName": "upsertSchemaDtoFieldsInLists",
              "value": {
                "generatedName": "UpsertSchemaDtoFieldsInLists",
                "description": "The names of the fields that should be shown in lists, including meta fields.",
                "value": {
                  "description": "The names of the fields that should be shown in lists, including meta fields.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpsertSchemaDtoFieldsInListsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "UpsertSchemaDtoFieldsInLists",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoFields",
            "key": "fields",
            "schema": {
              "generatedName": "upsertSchemaDtoFields",
              "value": {
                "generatedName": "UpsertSchemaDtoFields",
                "description": "Optional fields.",
                "value": {
                  "description": "Optional fields.",
                  "value": {
                    "generatedName": "UpsertSchemaDtoFieldsItem",
                    "schema": "UpsertSchemaFieldDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "UpsertSchemaDtoFields",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoPreviewUrls",
            "key": "previewUrls",
            "schema": {
              "generatedName": "upsertSchemaDtoPreviewUrls",
              "value": {
                "generatedName": "UpsertSchemaDtoPreviewUrls",
                "description": "The optional preview urls.",
                "value": {
                  "description": "The optional preview urls.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpsertSchemaDtoPreviewUrlsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "UpsertSchemaDtoPreviewUrlsValue",
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "UpsertSchemaDtoPreviewUrlsValue",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "inline": true,
                    "type": "nullable"
                  },
                  "generatedName": "UpsertSchemaDtoPreviewUrls",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoFieldRules",
            "key": "fieldRules",
            "schema": {
              "generatedName": "upsertSchemaDtoFieldRules",
              "value": {
                "generatedName": "UpsertSchemaDtoFieldRules",
                "description": "The optional field Rules.",
                "value": {
                  "description": "The optional field Rules.",
                  "value": {
                    "generatedName": "UpsertSchemaDtoFieldRulesItem",
                    "schema": "FieldRuleDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "UpsertSchemaDtoFieldRules",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoCategory",
            "key": "category",
            "schema": {
              "generatedName": "upsertSchemaDtoCategory",
              "value": {
                "generatedName": "UpsertSchemaDtoCategory",
                "description": "The category.",
                "value": {
                  "description": "The category.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpsertSchemaDtoCategory",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaDtoIsPublished",
            "key": "isPublished",
            "schema": {
              "description": "Set it to true to autopublish the schema.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpsertSchemaDtoIsPublished",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpsertSchemaDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpsertSchemaFieldDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "upsertSchemaFieldDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the field. Must be unique within the schema.",
              "schema": {
                "pattern": "^[a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpsertSchemaFieldDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaFieldDtoIsHidden",
            "key": "isHidden",
            "schema": {
              "description": "Defines if the field is hidden.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpsertSchemaFieldDtoIsHidden",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaFieldDtoIsLocked",
            "key": "isLocked",
            "schema": {
              "description": "Defines if the field is locked.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpsertSchemaFieldDtoIsLocked",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaFieldDtoIsDisabled",
            "key": "isDisabled",
            "schema": {
              "description": "Defines if the field is disabled.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpsertSchemaFieldDtoIsDisabled",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaFieldDtoPartitioning",
            "key": "partitioning",
            "schema": {
              "generatedName": "upsertSchemaFieldDtoPartitioning",
              "value": {
                "generatedName": "UpsertSchemaFieldDtoPartitioning",
                "description": "Determines the optional partitioning of the field.",
                "value": {
                  "description": "Determines the optional partitioning of the field.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpsertSchemaFieldDtoPartitioning",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaFieldDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The field properties.",
              "generatedName": "UpsertSchemaFieldDtoProperties",
              "schema": "FieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaFieldDtoNested",
            "key": "nested",
            "schema": {
              "generatedName": "upsertSchemaFieldDtoNested",
              "value": {
                "generatedName": "UpsertSchemaFieldDtoNested",
                "description": "The nested fields.",
                "value": {
                  "description": "The nested fields.",
                  "value": {
                    "generatedName": "UpsertSchemaFieldDtoNestedItem",
                    "schema": "UpsertSchemaNestedFieldDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "UpsertSchemaFieldDtoNested",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpsertSchemaFieldDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpsertSchemaNestedFieldDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "upsertSchemaNestedFieldDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the field. Must be unique within the schema.",
              "schema": {
                "pattern": "^[a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpsertSchemaNestedFieldDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaNestedFieldDtoIsHidden",
            "key": "isHidden",
            "schema": {
              "description": "Defines if the field is hidden.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpsertSchemaNestedFieldDtoIsHidden",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaNestedFieldDtoIsLocked",
            "key": "isLocked",
            "schema": {
              "description": "Defines if the field is locked.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpsertSchemaNestedFieldDtoIsLocked",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaNestedFieldDtoIsDisabled",
            "key": "isDisabled",
            "schema": {
              "description": "Defines if the field is disabled.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpsertSchemaNestedFieldDtoIsDisabled",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSchemaNestedFieldDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The field properties.",
              "generatedName": "UpsertSchemaNestedFieldDtoProperties",
              "schema": "FieldPropertiesDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpsertSchemaNestedFieldDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateSchemaDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateSchemaDtoLabel",
            "key": "label",
            "schema": {
              "generatedName": "updateSchemaDtoLabel",
              "value": {
                "generatedName": "UpdateSchemaDtoLabel",
                "description": "Optional label for the editor.",
                "value": {
                  "description": "Optional label for the editor.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "generatedName": "UpdateSchemaDtoLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateSchemaDtoHints",
            "key": "hints",
            "schema": {
              "generatedName": "updateSchemaDtoHints",
              "value": {
                "generatedName": "UpdateSchemaDtoHints",
                "description": "Hints to describe the schema.",
                "value": {
                  "description": "Hints to describe the schema.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "generatedName": "UpdateSchemaDtoHints",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateSchemaDtoContentsSidebarUrl",
            "key": "contentsSidebarUrl",
            "schema": {
              "generatedName": "updateSchemaDtoContentsSidebarUrl",
              "value": {
                "generatedName": "UpdateSchemaDtoContentsSidebarUrl",
                "description": "The url to a the sidebar plugin for content lists.",
                "value": {
                  "description": "The url to a the sidebar plugin for content lists.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateSchemaDtoContentsSidebarUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateSchemaDtoContentSidebarUrl",
            "key": "contentSidebarUrl",
            "schema": {
              "generatedName": "updateSchemaDtoContentSidebarUrl",
              "value": {
                "generatedName": "UpdateSchemaDtoContentSidebarUrl",
                "description": "The url to a the sidebar plugin for content items.",
                "value": {
                  "description": "The url to a the sidebar plugin for content items.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateSchemaDtoContentSidebarUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateSchemaDtoContentEditorUrl",
            "key": "contentEditorUrl",
            "schema": {
              "generatedName": "updateSchemaDtoContentEditorUrl",
              "value": {
                "generatedName": "UpdateSchemaDtoContentEditorUrl",
                "description": "The url to the editor plugin.",
                "value": {
                  "description": "The url to the editor plugin.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateSchemaDtoContentEditorUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateSchemaDtoValidateOnPublish",
            "key": "validateOnPublish",
            "schema": {
              "description": "True to validate the content items on publish.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "UpdateSchemaDtoValidateOnPublish",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateSchemaDtoTags",
            "key": "tags",
            "schema": {
              "generatedName": "updateSchemaDtoTags",
              "value": {
                "generatedName": "UpdateSchemaDtoTags",
                "description": "Tags for automation processes.",
                "value": {
                  "description": "Tags for automation processes.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpdateSchemaDtoTagsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "UpdateSchemaDtoTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateSchemaDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SynchronizeSchemaDto": {
        "allOf": [
          {
            "generatedName": "UpsertSchemaDto",
            "schema": "UpsertSchemaDto",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "synchronizeSchemaDtoNoFieldDeletion",
            "key": "noFieldDeletion",
            "schema": {
              "description": "True, when fields should not be deleted.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SynchronizeSchemaDtoNoFieldDeletion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "synchronizeSchemaDtoNoFieldRecreation",
            "key": "noFieldRecreation",
            "schema": {
              "description": "True, when fields with different types should not be recreated.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SynchronizeSchemaDtoNoFieldRecreation",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SynchronizeSchemaDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChangeCategoryDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "changeCategoryDtoName",
            "key": "name",
            "schema": {
              "generatedName": "changeCategoryDtoName",
              "value": {
                "generatedName": "ChangeCategoryDtoName",
                "description": "The name of the category.",
                "value": {
                  "description": "The name of the category.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ChangeCategoryDtoName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ChangeCategoryDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConfigurePreviewUrlsDto": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ConfigurePreviewUrlsDtoKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ConfigurePreviewUrlsDtoValue",
          "groupName": [],
          "type": "primitive"
        },
        "generatedName": "ConfigurePreviewUrlsDto",
        "groupName": [],
        "type": "map"
      },
      "ConfigureFieldRulesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "configureFieldRulesDtoFieldRules",
            "key": "fieldRules",
            "schema": {
              "generatedName": "configureFieldRulesDtoFieldRules",
              "value": {
                "generatedName": "ConfigureFieldRulesDtoFieldRules",
                "description": "The field rules to configure.",
                "value": {
                  "description": "The field rules to configure.",
                  "value": {
                    "generatedName": "ConfigureFieldRulesDtoFieldRulesItem",
                    "schema": "FieldRuleDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ConfigureFieldRulesDtoFieldRules",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConfigureFieldRulesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleElementDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ruleElementDtoDescription",
            "key": "description",
            "schema": {
              "description": "Describes the action or trigger type.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleElementDtoDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementDtoDisplay",
            "key": "display",
            "schema": {
              "description": "The label for the action or trigger type.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleElementDtoDisplay",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementDtoTitle",
            "key": "title",
            "schema": {
              "generatedName": "ruleElementDtoTitle",
              "value": {
                "generatedName": "RuleElementDtoTitle",
                "description": "Optional title.",
                "value": {
                  "description": "Optional title.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RuleElementDtoTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementDtoIconColor",
            "key": "iconColor",
            "schema": {
              "generatedName": "ruleElementDtoIconColor",
              "value": {
                "generatedName": "RuleElementDtoIconColor",
                "description": "The color for the icon.",
                "value": {
                  "description": "The color for the icon.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RuleElementDtoIconColor",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementDtoIconImage",
            "key": "iconImage",
            "schema": {
              "generatedName": "ruleElementDtoIconImage",
              "value": {
                "generatedName": "RuleElementDtoIconImage",
                "description": "The image for the icon.",
                "value": {
                  "description": "The image for the icon.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RuleElementDtoIconImage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementDtoReadMore",
            "key": "readMore",
            "schema": {
              "generatedName": "ruleElementDtoReadMore",
              "value": {
                "generatedName": "RuleElementDtoReadMore",
                "description": "The optional link to the product that is integrated.",
                "value": {
                  "description": "The optional link to the product that is integrated.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RuleElementDtoReadMore",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementDtoProperties",
            "key": "properties",
            "schema": {
              "description": "The properties.",
              "value": {
                "generatedName": "RuleElementDtoPropertiesItem",
                "schema": "RuleElementPropertyDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RuleElementDtoProperties",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RuleElementDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleElementPropertyDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ruleElementPropertyDtoEditor",
            "key": "editor",
            "schema": {
              "description": "The html editor.",
              "generatedName": "RuleElementPropertyDtoEditor",
              "schema": "RuleFieldEditor",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ruleElementPropertyDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the editor.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleElementPropertyDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementPropertyDtoDisplay",
            "key": "display",
            "schema": {
              "description": "The label to use.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleElementPropertyDtoDisplay",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementPropertyDtoOptions",
            "key": "options",
            "schema": {
              "generatedName": "ruleElementPropertyDtoOptions",
              "value": {
                "generatedName": "RuleElementPropertyDtoOptions",
                "description": "The options, if the editor is a dropdown.",
                "value": {
                  "description": "The options, if the editor is a dropdown.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "RuleElementPropertyDtoOptionsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "RuleElementPropertyDtoOptions",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementPropertyDtoDescription",
            "key": "description",
            "schema": {
              "generatedName": "ruleElementPropertyDtoDescription",
              "value": {
                "generatedName": "RuleElementPropertyDtoDescription",
                "description": "The optional description.",
                "value": {
                  "description": "The optional description.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RuleElementPropertyDtoDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementPropertyDtoIsFormattable",
            "key": "isFormattable",
            "schema": {
              "description": "Indicates if the property is formattable.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "RuleElementPropertyDtoIsFormattable",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleElementPropertyDtoIsRequired",
            "key": "isRequired",
            "schema": {
              "description": "Indicates if the property is required.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "RuleElementPropertyDtoIsRequired",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RuleElementPropertyDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleFieldEditor": {
        "description": "",
        "generatedName": "RuleFieldEditor",
        "values": [
          {
            "generatedName": "Checkbox",
            "value": "Checkbox",
            "casing": {}
          },
          {
            "generatedName": "Dropdown",
            "value": "Dropdown",
            "casing": {}
          },
          {
            "generatedName": "Email",
            "value": "Email",
            "casing": {}
          },
          {
            "generatedName": "Javascript",
            "value": "Javascript",
            "casing": {}
          },
          {
            "generatedName": "Number",
            "value": "Number",
            "casing": {}
          },
          {
            "generatedName": "Password",
            "value": "Password",
            "casing": {}
          },
          {
            "generatedName": "Text",
            "value": "Text",
            "casing": {}
          },
          {
            "generatedName": "TextArea",
            "value": "TextArea",
            "casing": {}
          },
          {
            "generatedName": "Url",
            "value": "Url",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RulesDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "rulesDtoItems",
            "key": "items",
            "schema": {
              "description": "The rules.",
              "value": {
                "generatedName": "RulesDtoItemsItem",
                "schema": "RuleDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RulesDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "rulesDtoRunningRuleId",
            "key": "runningRuleId",
            "schema": {
              "generatedName": "rulesDtoRunningRuleId",
              "value": {
                "generatedName": "RulesDtoRunningRuleId",
                "description": "The ID of the rule that is currently rerunning.",
                "value": {
                  "description": "The ID of the rule that is currently rerunning.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RulesDtoRunningRuleId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RulesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ruleDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the rule.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoCreatedBy",
            "key": "createdBy",
            "schema": {
              "description": "The user that has created the rule.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleDtoCreatedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoLastModifiedBy",
            "key": "lastModifiedBy",
            "schema": {
              "description": "The user that has updated the rule.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleDtoLastModifiedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoCreated",
            "key": "created",
            "schema": {
              "description": "The date and time when the rule has been created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RuleDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoLastModified",
            "key": "lastModified",
            "schema": {
              "description": "The date and time when the rule has been modified last.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RuleDtoLastModified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the rule.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "RuleDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoIsEnabled",
            "key": "isEnabled",
            "schema": {
              "description": "Determines if the rule is enabled.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "RuleDtoIsEnabled",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoName",
            "key": "name",
            "schema": {
              "generatedName": "ruleDtoName",
              "value": {
                "generatedName": "RuleDtoName",
                "description": "Optional rule name.",
                "value": {
                  "description": "Optional rule name.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RuleDtoName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoTrigger",
            "key": "trigger",
            "schema": {
              "description": "The trigger properties.",
              "generatedName": "RuleDtoTrigger",
              "schema": "RuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoAction",
            "key": "action",
            "schema": {
              "description": "The action properties.",
              "generatedName": "RuleDtoAction",
              "schema": "RuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoNumSucceeded",
            "key": "numSucceeded",
            "schema": {
              "description": "The number of completed executions.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "RuleDtoNumSucceeded",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoNumFailed",
            "key": "numFailed",
            "schema": {
              "description": "The number of failed executions.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "RuleDtoNumFailed",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleDtoLastExecuted",
            "key": "lastExecuted",
            "schema": {
              "generatedName": "ruleDtoLastExecuted",
              "availability": "Deprecated",
              "value": {
                "generatedName": "RuleDtoLastExecuted",
                "description": "The date and time when the rule was executed the last time.",
                "availability": "Deprecated",
                "value": {
                  "description": "The date and time when the rule was executed the last time.",
                  "availability": "Deprecated",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "RuleDtoLastExecuted",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RuleDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleTriggerDto": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "triggerType",
          "generatedName": "RuleTriggerDto",
          "schemas": {
            "AssetChanged": {
              "generatedName": "ComponentsSchemasAssetChangedRuleTriggerDto",
              "schema": "AssetChangedRuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Comment": {
              "generatedName": "ComponentsSchemasCommentRuleTriggerDto",
              "schema": "CommentRuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "ContentChanged": {
              "generatedName": "ComponentsSchemasContentChangedRuleTriggerDto",
              "schema": "ContentChangedRuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Manual": {
              "generatedName": "ComponentsSchemasManualRuleTriggerDto",
              "schema": "ManualRuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "SchemaChanged": {
              "generatedName": "ComponentsSchemasSchemaChangedRuleTriggerDto",
              "schema": "SchemaChangedRuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Usage": {
              "generatedName": "ComponentsSchemasUsageRuleTriggerDto",
              "schema": "UsageRuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "AssetChangedRuleTriggerDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetChangedRuleTriggerDtoCondition",
            "key": "condition",
            "schema": {
              "generatedName": "assetChangedRuleTriggerDtoCondition",
              "value": {
                "generatedName": "AssetChangedRuleTriggerDtoCondition",
                "description": "Javascript condition when to trigger.",
                "value": {
                  "description": "Javascript condition when to trigger.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetChangedRuleTriggerDtoCondition",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetChangedRuleTriggerDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CommentRuleTriggerDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "commentRuleTriggerDtoCondition",
            "key": "condition",
            "schema": {
              "generatedName": "commentRuleTriggerDtoCondition",
              "value": {
                "generatedName": "CommentRuleTriggerDtoCondition",
                "description": "Javascript condition when to trigger.",
                "value": {
                  "description": "Javascript condition when to trigger.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CommentRuleTriggerDtoCondition",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CommentRuleTriggerDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContentChangedRuleTriggerDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "contentChangedRuleTriggerDtoSchemas",
            "key": "schemas",
            "schema": {
              "generatedName": "contentChangedRuleTriggerDtoSchemas",
              "value": {
                "generatedName": "ContentChangedRuleTriggerDtoSchemas",
                "description": "The schema settings.",
                "value": {
                  "description": "The schema settings.",
                  "value": {
                    "generatedName": "ContentChangedRuleTriggerDtoSchemasItem",
                    "schema": "SchemaCondition",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ContentChangedRuleTriggerDtoSchemas",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentChangedRuleTriggerDtoReferencedSchemas",
            "key": "referencedSchemas",
            "schema": {
              "generatedName": "contentChangedRuleTriggerDtoReferencedSchemas",
              "value": {
                "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemas",
                "description": "The schema references.",
                "value": {
                  "description": "The schema references.",
                  "value": {
                    "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemasItem",
                    "schema": "SchemaCondition",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemas",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "contentChangedRuleTriggerDtoHandleAll",
            "key": "handleAll",
            "schema": {
              "description": "Determines whether the trigger should handle all content changes events.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ContentChangedRuleTriggerDtoHandleAll",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ContentChangedRuleTriggerDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaCondition": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaConditionSchemaId",
            "key": "schemaId",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SchemaConditionSchemaId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaConditionCondition",
            "key": "condition",
            "schema": {
              "generatedName": "schemaConditionCondition",
              "value": {
                "generatedName": "SchemaConditionCondition",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaConditionCondition",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaCondition",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ManualRuleTriggerDto": {
        "allOf": [],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ManualRuleTriggerDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaChangedRuleTriggerDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaChangedRuleTriggerDtoCondition",
            "key": "condition",
            "schema": {
              "generatedName": "schemaChangedRuleTriggerDtoCondition",
              "value": {
                "generatedName": "SchemaChangedRuleTriggerDtoCondition",
                "description": "Javascript condition when to trigger.",
                "value": {
                  "description": "Javascript condition when to trigger.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SchemaChangedRuleTriggerDtoCondition",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaChangedRuleTriggerDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UsageRuleTriggerDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "usageRuleTriggerDtoLimit",
            "key": "limit",
            "schema": {
              "description": "The number of monthly api calls.",
              "schema": {
                "type": "int"
              },
              "generatedName": "UsageRuleTriggerDtoLimit",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "usageRuleTriggerDtoNumDays",
            "key": "numDays",
            "schema": {
              "generatedName": "usageRuleTriggerDtoNumDays",
              "value": {
                "generatedName": "UsageRuleTriggerDtoNumDays",
                "description": "The number of days to check or null for the current month.",
                "value": {
                  "description": "The number of days to check or null for the current month.",
                  "schema": {
                    "minimum": 1,
                    "maximum": 30,
                    "type": "int"
                  },
                  "generatedName": "UsageRuleTriggerDtoNumDays",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UsageRuleTriggerDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleActionDto": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "actionType",
          "generatedName": "RuleActionDto",
          "schemas": {
            "Algolia": {
              "generatedName": "ComponentsSchemasAlgoliaRuleActionDto",
              "schema": "AlgoliaRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "AzureQueue": {
              "generatedName": "ComponentsSchemasAzureQueueRuleActionDto",
              "schema": "AzureQueueRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Comment": {
              "generatedName": "ComponentsSchemasCommentRuleActionDto",
              "schema": "CommentRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "CreateContent": {
              "generatedName": "ComponentsSchemasCreateContentRuleActionDto",
              "schema": "CreateContentRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Discourse": {
              "generatedName": "ComponentsSchemasDiscourseRuleActionDto",
              "schema": "DiscourseRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "ElasticSearch": {
              "generatedName": "ComponentsSchemasElasticSearchRuleActionDto",
              "schema": "ElasticSearchRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Email": {
              "generatedName": "ComponentsSchemasEmailRuleActionDto",
              "schema": "EmailRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Fastly": {
              "generatedName": "ComponentsSchemasFastlyRuleActionDto",
              "schema": "FastlyRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Medium": {
              "generatedName": "ComponentsSchemasMediumRuleActionDto",
              "schema": "MediumRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Notification": {
              "generatedName": "ComponentsSchemasNotificationRuleActionDto",
              "schema": "NotificationRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "OpenSearch": {
              "generatedName": "ComponentsSchemasOpenSearchRuleActionDto",
              "schema": "OpenSearchRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Prerender": {
              "generatedName": "ComponentsSchemasPrerenderRuleActionDto",
              "schema": "PrerenderRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Script": {
              "generatedName": "ComponentsSchemasScriptRuleActionDto",
              "schema": "ScriptRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "SignalR": {
              "generatedName": "ComponentsSchemasSignalRRuleActionDto",
              "schema": "SignalRRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Slack": {
              "generatedName": "ComponentsSchemasSlackRuleActionDto",
              "schema": "SlackRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Tweet": {
              "generatedName": "ComponentsSchemasTweetRuleActionDto",
              "schema": "TweetRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Typesense": {
              "generatedName": "ComponentsSchemasTypesenseRuleActionDto",
              "schema": "TypesenseRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "Webhook": {
              "generatedName": "ComponentsSchemasWebhookRuleActionDto",
              "schema": "WebhookRuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "AlgoliaRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "algoliaRuleActionDtoAppId",
            "key": "appId",
            "schema": {
              "description": "The application ID.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AlgoliaRuleActionDtoAppId",
              "title": "Application Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "algoliaRuleActionDtoApiKey",
            "key": "apiKey",
            "schema": {
              "description": "The API key to grant access to Squidex.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AlgoliaRuleActionDtoApiKey",
              "title": "Api Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "algoliaRuleActionDtoIndexName",
            "key": "indexName",
            "schema": {
              "description": "The name of the index.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AlgoliaRuleActionDtoIndexName",
              "title": "Index Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "algoliaRuleActionDtoDocument",
            "key": "document",
            "schema": {
              "description": "The optional custom document.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AlgoliaRuleActionDtoDocument",
              "nameOverride": "Document",
              "title": "Document",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "algoliaRuleActionDtoDelete",
            "key": "delete",
            "schema": {
              "description": "The condition when to delete the entry.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AlgoliaRuleActionDtoDelete",
              "nameOverride": "Deletion",
              "title": "Deletion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AlgoliaRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureQueueRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureQueueRuleActionDtoConnectionString",
            "key": "connectionString",
            "schema": {
              "description": "The connection string to the storage account.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AzureQueueRuleActionDtoConnectionString",
              "nameOverride": "Connection",
              "title": "Connection",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureQueueRuleActionDtoQueue",
            "key": "queue",
            "schema": {
              "description": "The name of the queue.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AzureQueueRuleActionDtoQueue",
              "nameOverride": "Queue",
              "title": "Queue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureQueueRuleActionDtoPayload",
            "key": "payload",
            "schema": {
              "description": "Leave it empty to use the full event as body.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AzureQueueRuleActionDtoPayload",
              "title": "Payload (Optional)",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureQueueRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CommentRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "commentRuleActionDtoText",
            "key": "text",
            "schema": {
              "description": "The comment text.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CommentRuleActionDtoText",
              "nameOverride": "Text",
              "title": "Text",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentRuleActionDtoClient",
            "key": "client",
            "schema": {
              "description": "An optional client name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CommentRuleActionDtoClient",
              "nameOverride": "Client",
              "title": "Client",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CommentRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateContentRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createContentRuleActionDtoData",
            "key": "data",
            "schema": {
              "description": "The content data.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateContentRuleActionDtoData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createContentRuleActionDtoSchema",
            "key": "schema",
            "schema": {
              "description": "The name of the schema.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateContentRuleActionDtoSchema",
              "nameOverride": "Schema",
              "title": "Schema",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createContentRuleActionDtoClient",
            "key": "client",
            "schema": {
              "description": "An optional client name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateContentRuleActionDtoClient",
              "nameOverride": "Client",
              "title": "Client",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createContentRuleActionDtoPublish",
            "key": "publish",
            "schema": {
              "description": "Publish the content.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateContentRuleActionDtoPublish",
              "nameOverride": "Publish",
              "title": "Publish",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateContentRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "DiscourseRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "discourseRuleActionDtoUrl",
            "key": "url",
            "schema": {
              "description": "The url to the discourse server.",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "DiscourseRuleActionDtoUrl",
              "title": "Server Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "discourseRuleActionDtoApiKey",
            "key": "apiKey",
            "schema": {
              "description": "The api key to authenticate to your discourse server.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "DiscourseRuleActionDtoApiKey",
              "title": "Api Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "discourseRuleActionDtoApiUsername",
            "key": "apiUsername",
            "schema": {
              "description": "The api username to authenticate to your discourse server.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "DiscourseRuleActionDtoApiUsername",
              "title": "Api User",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "discourseRuleActionDtoText",
            "key": "text",
            "schema": {
              "description": "The text as markdown.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "DiscourseRuleActionDtoText",
              "nameOverride": "Text",
              "title": "Text",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "discourseRuleActionDtoTitle",
            "key": "title",
            "schema": {
              "description": "The optional title when creating new topics.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DiscourseRuleActionDtoTitle",
              "nameOverride": "Title",
              "title": "Title",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "discourseRuleActionDtoTopic",
            "key": "topic",
            "schema": {
              "generatedName": "discourseRuleActionDtoTopic",
              "value": {
                "generatedName": "DiscourseRuleActionDtoTopic",
                "nameOverride": "Topic",
                "title": "Topic",
                "description": "The optional topic id.",
                "value": {
                  "description": "The optional topic id.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "DiscourseRuleActionDtoTopic",
                  "nameOverride": "Topic",
                  "title": "Topic",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "discourseRuleActionDtoCategory",
            "key": "category",
            "schema": {
              "generatedName": "discourseRuleActionDtoCategory",
              "value": {
                "generatedName": "DiscourseRuleActionDtoCategory",
                "nameOverride": "Category",
                "title": "Category",
                "description": "The optional category id.",
                "value": {
                  "description": "The optional category id.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "DiscourseRuleActionDtoCategory",
                  "nameOverride": "Category",
                  "title": "Category",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DiscourseRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ElasticSearchRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "elasticSearchRuleActionDtoHost",
            "key": "host",
            "schema": {
              "description": "The url to the instance or cluster.",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ElasticSearchRuleActionDtoHost",
              "title": "Server Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "elasticSearchRuleActionDtoIndexName",
            "key": "indexName",
            "schema": {
              "description": "The name of the index.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ElasticSearchRuleActionDtoIndexName",
              "title": "Index Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "elasticSearchRuleActionDtoUsername",
            "key": "username",
            "schema": {
              "description": "The optional username.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ElasticSearchRuleActionDtoUsername",
              "nameOverride": "Username",
              "title": "Username",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "elasticSearchRuleActionDtoPassword",
            "key": "password",
            "schema": {
              "description": "The optional password.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ElasticSearchRuleActionDtoPassword",
              "nameOverride": "Password",
              "title": "Password",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "elasticSearchRuleActionDtoDocument",
            "key": "document",
            "schema": {
              "description": "The optional custom document.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ElasticSearchRuleActionDtoDocument",
              "nameOverride": "Document",
              "title": "Document",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "elasticSearchRuleActionDtoDelete",
            "key": "delete",
            "schema": {
              "description": "The condition when to delete the document.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ElasticSearchRuleActionDtoDelete",
              "nameOverride": "Deletion",
              "title": "Deletion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ElasticSearchRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EmailRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoServerHost",
            "key": "serverHost",
            "schema": {
              "description": "The IP address or host to the SMTP server.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EmailRuleActionDtoServerHost",
              "title": "Server Host",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoServerPort",
            "key": "serverPort",
            "schema": {
              "description": "The port to the SMTP server.",
              "schema": {
                "type": "int"
              },
              "generatedName": "EmailRuleActionDtoServerPort",
              "title": "Server Port",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoServerUsername",
            "key": "serverUsername",
            "schema": {
              "description": "The username for the SMTP server.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EmailRuleActionDtoServerUsername",
              "nameOverride": "Username",
              "title": "Username",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoServerPassword",
            "key": "serverPassword",
            "schema": {
              "description": "The password for the SMTP server.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EmailRuleActionDtoServerPassword",
              "nameOverride": "Password",
              "title": "Password",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoMessageFrom",
            "key": "messageFrom",
            "schema": {
              "description": "The email sending address.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EmailRuleActionDtoMessageFrom",
              "title": "From Address",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoMessageTo",
            "key": "messageTo",
            "schema": {
              "description": "The email message will be sent to.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EmailRuleActionDtoMessageTo",
              "title": "To Address",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoMessageSubject",
            "key": "messageSubject",
            "schema": {
              "description": "The subject line for this email message.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EmailRuleActionDtoMessageSubject",
              "nameOverride": "Subject",
              "title": "Subject",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "emailRuleActionDtoMessageBody",
            "key": "messageBody",
            "schema": {
              "description": "The message body.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EmailRuleActionDtoMessageBody",
              "nameOverride": "Body",
              "title": "Body",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EmailRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "FastlyRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "fastlyRuleActionDtoApiKey",
            "key": "apiKey",
            "schema": {
              "description": "The API key to grant access to Squidex.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FastlyRuleActionDtoApiKey",
              "title": "Api Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "fastlyRuleActionDtoServiceId",
            "key": "serviceId",
            "schema": {
              "description": "The ID of the fastly service.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "FastlyRuleActionDtoServiceId",
              "title": "Service Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FastlyRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "MediumRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mediumRuleActionDtoAccessToken",
            "key": "accessToken",
            "schema": {
              "description": "The self issued access token.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "MediumRuleActionDtoAccessToken",
              "title": "Access Token",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediumRuleActionDtoTitle",
            "key": "title",
            "schema": {
              "description": "The title, used for the url.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "MediumRuleActionDtoTitle",
              "nameOverride": "Title",
              "title": "Title",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediumRuleActionDtoContent",
            "key": "content",
            "schema": {
              "description": "The content, either html or markdown.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "MediumRuleActionDtoContent",
              "nameOverride": "Content",
              "title": "Content",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediumRuleActionDtoCanonicalUrl",
            "key": "canonicalUrl",
            "schema": {
              "description": "The original home of this content, if it was originally published elsewhere.",
              "schema": {
                "type": "string"
              },
              "generatedName": "MediumRuleActionDtoCanonicalUrl",
              "title": "Canonical Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediumRuleActionDtoTags",
            "key": "tags",
            "schema": {
              "description": "The optional comma separated list of tags.",
              "schema": {
                "type": "string"
              },
              "generatedName": "MediumRuleActionDtoTags",
              "nameOverride": "Tags",
              "title": "Tags",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediumRuleActionDtoPublicationId",
            "key": "publicationId",
            "schema": {
              "description": "Optional publication id.",
              "schema": {
                "type": "string"
              },
              "generatedName": "MediumRuleActionDtoPublicationId",
              "title": "Publication Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediumRuleActionDtoIsHtml",
            "key": "isHtml",
            "schema": {
              "description": "Indicates whether the content is markdown or html.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "MediumRuleActionDtoIsHtml",
              "title": "Is Html",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MediumRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "NotificationRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "notificationRuleActionDtoUser",
            "key": "user",
            "schema": {
              "description": "The user id or email.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "NotificationRuleActionDtoUser",
              "nameOverride": "User",
              "title": "User",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "notificationRuleActionDtoText",
            "key": "text",
            "schema": {
              "description": "The text to send.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "NotificationRuleActionDtoText",
              "nameOverride": "Title",
              "title": "Title",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "notificationRuleActionDtoUrl",
            "key": "url",
            "schema": {
              "description": "The optional url to attach to the notification.",
              "schema": {
                "type": "string"
              },
              "generatedName": "NotificationRuleActionDtoUrl",
              "nameOverride": "Url",
              "title": "Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "notificationRuleActionDtoClient",
            "key": "client",
            "schema": {
              "description": "An optional client name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "NotificationRuleActionDtoClient",
              "nameOverride": "Client",
              "title": "Client",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "NotificationRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "OpenSearchRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "openSearchRuleActionDtoHost",
            "key": "host",
            "schema": {
              "description": "The url to the instance or cluster.",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "OpenSearchRuleActionDtoHost",
              "title": "Server Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "openSearchRuleActionDtoIndexName",
            "key": "indexName",
            "schema": {
              "description": "The name of the index.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "OpenSearchRuleActionDtoIndexName",
              "title": "Index Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "openSearchRuleActionDtoUsername",
            "key": "username",
            "schema": {
              "description": "The optional username.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OpenSearchRuleActionDtoUsername",
              "nameOverride": "Username",
              "title": "Username",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "openSearchRuleActionDtoPassword",
            "key": "password",
            "schema": {
              "description": "The optional password.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OpenSearchRuleActionDtoPassword",
              "nameOverride": "Password",
              "title": "Password",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "openSearchRuleActionDtoDocument",
            "key": "document",
            "schema": {
              "description": "The optional custom document.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OpenSearchRuleActionDtoDocument",
              "nameOverride": "Document",
              "title": "Document",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "openSearchRuleActionDtoDelete",
            "key": "delete",
            "schema": {
              "description": "The condition when to delete the document.",
              "schema": {
                "type": "string"
              },
              "generatedName": "OpenSearchRuleActionDtoDelete",
              "nameOverride": "Deletion",
              "title": "Deletion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OpenSearchRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PrerenderRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "prerenderRuleActionDtoToken",
            "key": "token",
            "schema": {
              "description": "The prerender token from your account.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "PrerenderRuleActionDtoToken",
              "nameOverride": "Token",
              "title": "Token",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "prerenderRuleActionDtoUrl",
            "key": "url",
            "schema": {
              "description": "The url to recache.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "PrerenderRuleActionDtoUrl",
              "nameOverride": "Url",
              "title": "Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PrerenderRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ScriptRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "scriptRuleActionDtoScript",
            "key": "script",
            "schema": {
              "description": "The script to render.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ScriptRuleActionDtoScript",
              "nameOverride": "Script",
              "title": "Script",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ScriptRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SignalRRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "signalRRuleActionDtoConnectionString",
            "key": "connectionString",
            "schema": {
              "description": "The connection string to the Azure SignalR.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SignalRRuleActionDtoConnectionString",
              "nameOverride": "Connection",
              "title": "Connection",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signalRRuleActionDtoHubName",
            "key": "hubName",
            "schema": {
              "description": "The name of the hub.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SignalRRuleActionDtoHubName",
              "title": "Hub Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signalRRuleActionDtoAction",
            "key": "action",
            "schema": {
              "description": "* Broadcast = send to all users.\n * User = send to all target users(s).\n * Group = send to all target group(s).",
              "generatedName": "SignalRRuleActionDtoAction",
              "schema": "ActionTypeEnum",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "signalRRuleActionDtoMethodName",
            "key": "methodName",
            "schema": {
              "description": "Set the Name of the hub method received by the customer.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SignalRRuleActionDtoMethodName",
              "title": "Methode Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signalRRuleActionDtoTarget",
            "key": "target",
            "schema": {
              "description": "Define target users or groups by id or name. One item per line. Not needed for Broadcast action.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SignalRRuleActionDtoTarget",
              "title": "Target (Optional)",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signalRRuleActionDtoPayload",
            "key": "payload",
            "schema": {
              "description": "Leave it empty to use the full event as body.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SignalRRuleActionDtoPayload",
              "title": "Payload (Optional)",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SignalRRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ActionTypeEnum": {
        "description": "",
        "generatedName": "ActionTypeEnum",
        "values": [
          {
            "generatedName": "Broadcast",
            "value": "Broadcast",
            "casing": {}
          },
          {
            "generatedName": "User",
            "value": "User",
            "casing": {}
          },
          {
            "generatedName": "Group",
            "value": "Group",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "SlackRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "slackRuleActionDtoWebhookUrl",
            "key": "webhookUrl",
            "schema": {
              "description": "The slack webhook url.",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SlackRuleActionDtoWebhookUrl",
              "title": "Webhook Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackRuleActionDtoText",
            "key": "text",
            "schema": {
              "description": "The text that is sent as message to slack.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SlackRuleActionDtoText",
              "nameOverride": "Text",
              "title": "Text",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SlackRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TweetRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tweetRuleActionDtoAccessToken",
            "key": "accessToken",
            "schema": {
              "description": " The generated access token.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TweetRuleActionDtoAccessToken",
              "title": "Access Token",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tweetRuleActionDtoAccessSecret",
            "key": "accessSecret",
            "schema": {
              "description": " The generated access secret.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TweetRuleActionDtoAccessSecret",
              "title": "Access Secret",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tweetRuleActionDtoText",
            "key": "text",
            "schema": {
              "description": "The text that is sent as tweet to twitter.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TweetRuleActionDtoText",
              "nameOverride": "Text",
              "title": "Text",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TweetRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TypesenseRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "typesenseRuleActionDtoHost",
            "key": "host",
            "schema": {
              "description": "The url to the instance or cluster.",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TypesenseRuleActionDtoHost",
              "title": "Server Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesenseRuleActionDtoIndexName",
            "key": "indexName",
            "schema": {
              "description": "The name of the index.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TypesenseRuleActionDtoIndexName",
              "title": "Index Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesenseRuleActionDtoApiKey",
            "key": "apiKey",
            "schema": {
              "description": "The api key.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TypesenseRuleActionDtoApiKey",
              "title": "Api Key",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesenseRuleActionDtoDocument",
            "key": "document",
            "schema": {
              "description": "The optional custom document.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TypesenseRuleActionDtoDocument",
              "nameOverride": "Document",
              "title": "Document",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesenseRuleActionDtoDelete",
            "key": "delete",
            "schema": {
              "description": "The condition when to delete the document.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TypesenseRuleActionDtoDelete",
              "nameOverride": "Deletion",
              "title": "Deletion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TypesenseRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "WebhookRuleActionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookRuleActionDtoUrl",
            "key": "url",
            "schema": {
              "description": "The url to the webhook.",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "WebhookRuleActionDtoUrl",
              "nameOverride": "Url",
              "title": "Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookRuleActionDtoMethod",
            "key": "method",
            "schema": {
              "description": "The type of the request.",
              "generatedName": "WebhookRuleActionDtoMethod",
              "schema": "WebhookMethod",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookRuleActionDtoPayload",
            "key": "payload",
            "schema": {
              "description": "Leave it empty to use the full event as body.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookRuleActionDtoPayload",
              "title": "Payload (Optional)",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookRuleActionDtoPayloadType",
            "key": "payloadType",
            "schema": {
              "description": "The mime type of the payload.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookRuleActionDtoPayloadType",
              "title": "Payload Type",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookRuleActionDtoHeaders",
            "key": "headers",
            "schema": {
              "description": "The message headers in the format '[Key]=[Value]', one entry per line.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookRuleActionDtoHeaders",
              "title": "Headers (Optional)",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookRuleActionDtoSharedSecret",
            "key": "sharedSecret",
            "schema": {
              "description": "The shared secret that is used to calculate the payload signature.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookRuleActionDtoSharedSecret",
              "title": "Shared Secret",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookRuleActionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "WebhookMethod": {
        "description": "",
        "generatedName": "WebhookMethod",
        "values": [
          {
            "generatedName": "POST",
            "value": "POST",
            "casing": {}
          },
          {
            "generatedName": "PUT",
            "value": "PUT",
            "casing": {}
          },
          {
            "generatedName": "GET",
            "value": "GET",
            "casing": {}
          },
          {
            "generatedName": "DELETE",
            "value": "DELETE",
            "casing": {}
          },
          {
            "generatedName": "PATCH",
            "value": "PATCH",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CreateRuleDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createRuleDtoTrigger",
            "key": "trigger",
            "schema": {
              "description": "The trigger properties.",
              "generatedName": "CreateRuleDtoTrigger",
              "schema": "RuleTriggerDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "createRuleDtoAction",
            "key": "action",
            "schema": {
              "description": "The action properties.",
              "generatedName": "CreateRuleDtoAction",
              "schema": "RuleActionDto",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateRuleDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateRuleDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateRuleDtoName",
            "key": "name",
            "schema": {
              "generatedName": "updateRuleDtoName",
              "value": {
                "generatedName": "UpdateRuleDtoName",
                "description": "Optional rule name.",
                "value": {
                  "description": "Optional rule name.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateRuleDtoName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateRuleDtoTrigger",
            "key": "trigger",
            "schema": {
              "generatedName": "updateRuleDtoTrigger",
              "value": {
                "description": "The trigger properties.",
                "generatedName": "UpdateRuleDtoTrigger",
                "schema": "RuleTriggerDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "updateRuleDtoAction",
            "key": "action",
            "schema": {
              "generatedName": "updateRuleDtoAction",
              "value": {
                "description": "The action properties.",
                "generatedName": "UpdateRuleDtoAction",
                "schema": "RuleActionDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "updateRuleDtoIsEnabled",
            "key": "isEnabled",
            "schema": {
              "generatedName": "updateRuleDtoIsEnabled",
              "value": {
                "generatedName": "UpdateRuleDtoIsEnabled",
                "description": "Enable or disable the rule.",
                "value": {
                  "description": "Enable or disable the rule.",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "UpdateRuleDtoIsEnabled",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateRuleDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SimulatedRuleEventsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventsDtoTotal",
            "key": "total",
            "schema": {
              "description": "The total number of simulated rule events.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "SimulatedRuleEventsDtoTotal",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventsDtoItems",
            "key": "items",
            "schema": {
              "description": "The simulated rule events.",
              "value": {
                "generatedName": "SimulatedRuleEventsDtoItemsItem",
                "schema": "SimulatedRuleEventDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SimulatedRuleEventsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SimulatedRuleEventsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SimulatedRuleEventDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoEventId",
            "key": "eventId",
            "schema": {
              "description": "The unique event id.",
              "schema": {
                "format": "guid",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SimulatedRuleEventDtoEventId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoUniqueId",
            "key": "uniqueId",
            "schema": {
              "description": "The the unique id of the simulated event.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SimulatedRuleEventDtoUniqueId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoEventName",
            "key": "eventName",
            "schema": {
              "description": "The name of the event.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SimulatedRuleEventDtoEventName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoEvent",
            "key": "event",
            "schema": {
              "generatedName": "SimulatedRuleEventDtoEvent",
              "type": "unknown"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoEnrichedEvent",
            "key": "enrichedEvent",
            "schema": {
              "generatedName": "simulatedRuleEventDtoEnrichedEvent",
              "value": {
                "generatedName": "SimulatedRuleEventDtoEnrichedEvent",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoActionName",
            "key": "actionName",
            "schema": {
              "generatedName": "simulatedRuleEventDtoActionName",
              "value": {
                "generatedName": "SimulatedRuleEventDtoActionName",
                "description": "The data for the action.",
                "value": {
                  "description": "The data for the action.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SimulatedRuleEventDtoActionName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoActionData",
            "key": "actionData",
            "schema": {
              "generatedName": "simulatedRuleEventDtoActionData",
              "value": {
                "generatedName": "SimulatedRuleEventDtoActionData",
                "description": "The name of the action.",
                "value": {
                  "description": "The name of the action.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SimulatedRuleEventDtoActionData",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoError",
            "key": "error",
            "schema": {
              "generatedName": "simulatedRuleEventDtoError",
              "value": {
                "generatedName": "SimulatedRuleEventDtoError",
                "description": "The name of the event.",
                "value": {
                  "description": "The name of the event.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SimulatedRuleEventDtoError",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "simulatedRuleEventDtoSkipReasons",
            "key": "skipReasons",
            "schema": {
              "description": "The reason why the event has been skipped.",
              "value": {
                "generatedName": "SimulatedRuleEventDtoSkipReasonsItem",
                "schema": "SkipReason",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SimulatedRuleEventDtoSkipReasons",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SimulatedRuleEventDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "SkipReason": {
        "description": "",
        "generatedName": "SkipReason",
        "values": [
          {
            "generatedName": "None",
            "value": "None",
            "casing": {}
          },
          {
            "generatedName": "ConditionDoesNotMatch",
            "value": "ConditionDoesNotMatch",
            "casing": {}
          },
          {
            "generatedName": "ConditionPrecheckDoesNotMatch",
            "value": "ConditionPrecheckDoesNotMatch",
            "casing": {}
          },
          {
            "generatedName": "Disabled",
            "value": "Disabled",
            "casing": {}
          },
          {
            "generatedName": "Failed",
            "value": "Failed",
            "casing": {}
          },
          {
            "generatedName": "FromRule",
            "value": "FromRule",
            "casing": {}
          },
          {
            "generatedName": "NoAction",
            "value": "NoAction",
            "casing": {}
          },
          {
            "generatedName": "NoTrigger",
            "value": "NoTrigger",
            "casing": {}
          },
          {
            "generatedName": "TooOld",
            "value": "TooOld",
            "casing": {}
          },
          {
            "generatedName": "WrongEvent",
            "value": "WrongEvent",
            "casing": {}
          },
          {
            "generatedName": "WrongEventForTrigger",
            "value": "WrongEventForTrigger",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RuleEventsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ruleEventsDtoTotal",
            "key": "total",
            "schema": {
              "description": "The total number of rule events.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "RuleEventsDtoTotal",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventsDtoItems",
            "key": "items",
            "schema": {
              "description": "The rule events.",
              "value": {
                "generatedName": "RuleEventsDtoItemsItem",
                "schema": "RuleEventDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RuleEventsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RuleEventsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleEventDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ruleEventDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the event.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleEventDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoCreated",
            "key": "created",
            "schema": {
              "description": "The time when the event has been created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RuleEventDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoDescription",
            "key": "description",
            "schema": {
              "description": "The description.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleEventDtoDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoEventName",
            "key": "eventName",
            "schema": {
              "description": "The name of the event.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RuleEventDtoEventName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoLastDump",
            "key": "lastDump",
            "schema": {
              "generatedName": "ruleEventDtoLastDump",
              "value": {
                "generatedName": "RuleEventDtoLastDump",
                "description": "The last dump.",
                "value": {
                  "description": "The last dump.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RuleEventDtoLastDump",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoNumCalls",
            "key": "numCalls",
            "schema": {
              "description": "The number of calls.",
              "schema": {
                "type": "int"
              },
              "generatedName": "RuleEventDtoNumCalls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoNextAttempt",
            "key": "nextAttempt",
            "schema": {
              "generatedName": "ruleEventDtoNextAttempt",
              "value": {
                "generatedName": "RuleEventDtoNextAttempt",
                "description": "The next attempt.",
                "value": {
                  "description": "The next attempt.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "RuleEventDtoNextAttempt",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoResult",
            "key": "result",
            "schema": {
              "description": "The result of the event.",
              "generatedName": "RuleEventDtoResult",
              "schema": "RuleResult",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ruleEventDtoJobResult",
            "key": "jobResult",
            "schema": {
              "description": "The result of the job.",
              "generatedName": "RuleEventDtoJobResult",
              "schema": "RuleJobResult",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RuleEventDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RuleResult": {
        "description": "",
        "generatedName": "RuleResult",
        "values": [
          {
            "generatedName": "Pending",
            "value": "Pending",
            "casing": {}
          },
          {
            "generatedName": "Success",
            "value": "Success",
            "casing": {}
          },
          {
            "generatedName": "Failed",
            "value": "Failed",
            "casing": {}
          },
          {
            "generatedName": "Timeout",
            "value": "Timeout",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RuleJobResult": {
        "description": "",
        "generatedName": "RuleJobResult",
        "values": [
          {
            "generatedName": "Pending",
            "value": "Pending",
            "casing": {}
          },
          {
            "generatedName": "Success",
            "value": "Success",
            "casing": {}
          },
          {
            "generatedName": "Retry",
            "value": "Retry",
            "casing": {}
          },
          {
            "generatedName": "Failed",
            "value": "Failed",
            "casing": {}
          },
          {
            "generatedName": "Cancelled",
            "value": "Cancelled",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PlansDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "plansDtoPlans",
            "key": "plans",
            "schema": {
              "description": "The available plans.",
              "value": {
                "generatedName": "PlansDtoPlansItem",
                "schema": "PlanDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PlansDtoPlans",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "plansDtoCurrentPlanId",
            "key": "currentPlanId",
            "schema": {
              "generatedName": "plansDtoCurrentPlanId",
              "value": {
                "generatedName": "PlansDtoCurrentPlanId",
                "description": "The current plan id.",
                "value": {
                  "description": "The current plan id.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PlansDtoCurrentPlanId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "plansDtoPlanOwner",
            "key": "planOwner",
            "schema": {
              "generatedName": "plansDtoPlanOwner",
              "value": {
                "generatedName": "PlansDtoPlanOwner",
                "description": "The plan owner.",
                "value": {
                  "description": "The plan owner.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PlansDtoPlanOwner",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "plansDtoPortalLink",
            "key": "portalLink",
            "schema": {
              "generatedName": "plansDtoPortalLink",
              "value": {
                "generatedName": "PlansDtoPortalLink",
                "description": "The link to the management portal.",
                "value": {
                  "description": "The link to the management portal.",
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "PlansDtoPortalLink",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "plansDtoReferral",
            "key": "referral",
            "schema": {
              "generatedName": "plansDtoReferral",
              "value": {
                "description": "The referral management.",
                "generatedName": "PlansDtoReferral",
                "schema": "ReferralInfo",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "plansDtoLocked",
            "key": "locked",
            "schema": {
              "description": "The reason why the plan cannot be changed.",
              "generatedName": "PlansDtoLocked",
              "schema": "PlansLockedReason",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PlansDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PlanDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "planDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the plan.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PlanDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the plan.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PlanDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoCosts",
            "key": "costs",
            "schema": {
              "description": "The monthly costs of the plan.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PlanDtoCosts",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoConfirmText",
            "key": "confirmText",
            "schema": {
              "generatedName": "planDtoConfirmText",
              "value": {
                "generatedName": "PlanDtoConfirmText",
                "description": "An optional confirm text for the monthly subscription.",
                "value": {
                  "description": "An optional confirm text for the monthly subscription.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PlanDtoConfirmText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoYearlyConfirmText",
            "key": "yearlyConfirmText",
            "schema": {
              "generatedName": "planDtoYearlyConfirmText",
              "value": {
                "generatedName": "PlanDtoYearlyConfirmText",
                "description": "An optional confirm text for the yearly subscription.",
                "value": {
                  "description": "An optional confirm text for the yearly subscription.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PlanDtoYearlyConfirmText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoYearlyCosts",
            "key": "yearlyCosts",
            "schema": {
              "generatedName": "planDtoYearlyCosts",
              "value": {
                "generatedName": "PlanDtoYearlyCosts",
                "description": "The yearly costs of the plan.",
                "value": {
                  "description": "The yearly costs of the plan.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PlanDtoYearlyCosts",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoYearlyId",
            "key": "yearlyId",
            "schema": {
              "generatedName": "planDtoYearlyId",
              "value": {
                "generatedName": "PlanDtoYearlyId",
                "description": "The yearly ID of the plan.",
                "value": {
                  "description": "The yearly ID of the plan.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PlanDtoYearlyId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoMaxApiBytes",
            "key": "maxApiBytes",
            "schema": {
              "description": "The maximum number of API traffic.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "PlanDtoMaxApiBytes",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoMaxApiCalls",
            "key": "maxApiCalls",
            "schema": {
              "description": "The maximum number of API calls.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "PlanDtoMaxApiCalls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoMaxAssetSize",
            "key": "maxAssetSize",
            "schema": {
              "description": "The maximum allowed asset size.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "PlanDtoMaxAssetSize",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "planDtoMaxContributors",
            "key": "maxContributors",
            "schema": {
              "description": "The maximum number of contributors.",
              "schema": {
                "type": "int"
              },
              "generatedName": "PlanDtoMaxContributors",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PlanDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ReferralInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "referralInfoCode",
            "key": "code",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ReferralInfoCode",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referralInfoEarned",
            "key": "earned",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ReferralInfoEarned",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "referralInfoCondition",
            "key": "condition",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ReferralInfoCondition",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ReferralInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PlansLockedReason": {
        "description": "",
        "generatedName": "PlansLockedReason",
        "values": [
          {
            "generatedName": "None",
            "value": "None",
            "casing": {}
          },
          {
            "generatedName": "NotOwner",
            "value": "NotOwner",
            "casing": {}
          },
          {
            "generatedName": "NoPermission",
            "value": "NoPermission",
            "casing": {}
          },
          {
            "generatedName": "ManagedByTeam",
            "value": "ManagedByTeam",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PlanChangedDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "planChangedDtoRedirectUri",
            "key": "redirectUri",
            "schema": {
              "generatedName": "planChangedDtoRedirectUri",
              "value": {
                "generatedName": "PlanChangedDtoRedirectUri",
                "description": "Optional redirect uri.",
                "value": {
                  "description": "Optional redirect uri.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PlanChangedDtoRedirectUri",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PlanChangedDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChangePlanDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "changePlanDtoPlanId",
            "key": "planId",
            "schema": {
              "description": "The new plan id.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ChangePlanDtoPlanId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ChangePlanDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ExposedValues": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ExposedValuesKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ExposedValuesValue",
          "groupName": [],
          "type": "primitive"
        },
        "generatedName": "ExposedValues",
        "groupName": [],
        "type": "map"
      },
      "FeaturesDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "featuresDtoFeatures",
            "key": "features",
            "schema": {
              "description": "The latest features.",
              "value": {
                "generatedName": "FeaturesDtoFeaturesItem",
                "schema": "FeatureDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "FeaturesDtoFeatures",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "featuresDtoVersion",
            "key": "version",
            "schema": {
              "description": "The recent version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "FeaturesDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FeaturesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "FeatureDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "featureDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the feature.",
              "schema": {
                "type": "string"
              },
              "generatedName": "FeatureDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "featureDtoText",
            "key": "text",
            "schema": {
              "description": "The description text.",
              "schema": {
                "type": "string"
              },
              "generatedName": "FeatureDtoText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FeatureDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "LanguageDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "languageDtoIso2Code",
            "key": "iso2Code",
            "schema": {
              "description": "The iso code of the language.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LanguageDtoIso2Code",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languageDtoEnglishName",
            "key": "englishName",
            "schema": {
              "description": "The english name of the language.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LanguageDtoEnglishName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "languageDtoNativeName",
            "key": "nativeName",
            "schema": {
              "description": "The native name of the language.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LanguageDtoNativeName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LanguageDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "HistoryEventDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "historyEventDtoMessage",
            "key": "message",
            "schema": {
              "description": "The message for the event.",
              "schema": {
                "type": "string"
              },
              "generatedName": "HistoryEventDtoMessage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "historyEventDtoEventType",
            "key": "eventType",
            "schema": {
              "description": "The type of the original event.",
              "schema": {
                "type": "string"
              },
              "generatedName": "HistoryEventDtoEventType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "historyEventDtoActor",
            "key": "actor",
            "schema": {
              "description": "The user who called the action.",
              "schema": {
                "type": "string"
              },
              "generatedName": "HistoryEventDtoActor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "historyEventDtoEventId",
            "key": "eventId",
            "schema": {
              "description": "Gets a unique id for the event.",
              "schema": {
                "type": "string"
              },
              "generatedName": "HistoryEventDtoEventId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "historyEventDtoCreated",
            "key": "created",
            "schema": {
              "description": "The time when the event happened.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "HistoryEventDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "historyEventDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version identifier.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "HistoryEventDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "HistoryEventDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EventConsumersDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventConsumersDtoItems",
            "key": "items",
            "schema": {
              "description": "The event consumers.",
              "value": {
                "generatedName": "EventConsumersDtoItemsItem",
                "schema": "EventConsumerDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EventConsumersDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventConsumersDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EventConsumerDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventConsumerDtoIsStopped",
            "key": "isStopped",
            "schema": {
              "description": "Indicates if the event consumer has been started.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EventConsumerDtoIsStopped",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "eventConsumerDtoIsResetting",
            "key": "isResetting",
            "schema": {
              "description": "Indicates if the event consumer is resetting at the moment.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EventConsumerDtoIsResetting",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "eventConsumerDtoCount",
            "key": "count",
            "schema": {
              "description": "The number of handled events.",
              "schema": {
                "type": "int"
              },
              "generatedName": "EventConsumerDtoCount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "eventConsumerDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the event consumer.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EventConsumerDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "eventConsumerDtoError",
            "key": "error",
            "schema": {
              "generatedName": "eventConsumerDtoError",
              "value": {
                "generatedName": "EventConsumerDtoError",
                "description": "The error details if the event consumer has been stopped after a failure.",
                "value": {
                  "description": "The error details if the event consumer has been stopped after a failure.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EventConsumerDtoError",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "eventConsumerDtoPosition",
            "key": "position",
            "schema": {
              "generatedName": "eventConsumerDtoPosition",
              "value": {
                "generatedName": "EventConsumerDtoPosition",
                "description": "The position within the vent stream.",
                "value": {
                  "description": "The position within the vent stream.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EventConsumerDtoPosition",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventConsumerDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "QueryDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "queryDtoIds",
            "key": "ids",
            "schema": {
              "generatedName": "queryDtoIds",
              "value": {
                "generatedName": "QueryDtoIds",
                "description": "The optional list of ids to query.",
                "value": {
                  "description": "The optional list of ids to query.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "QueryDtoIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "QueryDtoIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryDtoOData",
            "key": "oData",
            "schema": {
              "generatedName": "queryDtoOData",
              "value": {
                "generatedName": "QueryDtoOData",
                "description": "The optional odata query.",
                "value": {
                  "description": "The optional odata query.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "QueryDtoOData",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryDtoQ",
            "key": "q",
            "schema": {
              "generatedName": "queryDtoQ",
              "value": {
                "generatedName": "QueryDtoQ",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryDtoParentId",
            "key": "parentId",
            "schema": {
              "generatedName": "queryDtoParentId",
              "value": {
                "generatedName": "QueryDtoParentId",
                "description": "The parent id (for assets).",
                "value": {
                  "description": "The parent id (for assets).",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "QueryDtoParentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "QueryDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ImportContentsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "importContentsDtoDatas",
            "key": "datas",
            "schema": {
              "description": "The data to import.",
              "value": {
                "generatedName": "ImportContentsDtoDatasItem",
                "schema": "ContentData",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ImportContentsDtoDatas",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "importContentsDtoPublish",
            "key": "publish",
            "schema": {
              "generatedName": "importContentsDtoPublish",
              "availability": "Deprecated",
              "value": {
                "description": "True to automatically publish the content.",
                "availability": "Deprecated",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ImportContentsDtoPublish",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "importContentsDtoDoNotScript",
            "key": "doNotScript",
            "schema": {
              "generatedName": "importContentsDtoDoNotScript",
              "value": {
                "description": "True to turn off scripting for faster inserts. Default: true.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ImportContentsDtoDoNotScript",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "importContentsDtoOptimizeValidation",
            "key": "optimizeValidation",
            "schema": {
              "generatedName": "importContentsDtoOptimizeValidation",
              "value": {
                "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ImportContentsDtoOptimizeValidation",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ImportContentsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChangeStatusDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "changeStatusDtoStatus",
            "key": "status",
            "schema": {
              "description": "The new status.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ChangeStatusDtoStatus",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "changeStatusDtoDueTime",
            "key": "dueTime",
            "schema": {
              "generatedName": "changeStatusDtoDueTime",
              "value": {
                "generatedName": "ChangeStatusDtoDueTime",
                "description": "The due time.",
                "value": {
                  "description": "The due time.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "ChangeStatusDtoDueTime",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "changeStatusDtoCheckReferrers",
            "key": "checkReferrers",
            "schema": {
              "generatedName": "changeStatusDtoCheckReferrers",
              "value": {
                "description": "True to check referrers of this content.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ChangeStatusDtoCheckReferrers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ChangeStatusDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CommentsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "commentsDtoCreatedComments",
            "key": "createdComments",
            "schema": {
              "generatedName": "commentsDtoCreatedComments",
              "value": {
                "generatedName": "CommentsDtoCreatedComments",
                "description": "The created comments including the updates.",
                "value": {
                  "description": "The created comments including the updates.",
                  "value": {
                    "generatedName": "CommentsDtoCreatedCommentsItem",
                    "schema": "CommentDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "CommentsDtoCreatedComments",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentsDtoUpdatedComments",
            "key": "updatedComments",
            "schema": {
              "generatedName": "commentsDtoUpdatedComments",
              "value": {
                "generatedName": "CommentsDtoUpdatedComments",
                "description": "The updates comments since the last version.",
                "value": {
                  "description": "The updates comments since the last version.",
                  "value": {
                    "generatedName": "CommentsDtoUpdatedCommentsItem",
                    "schema": "CommentDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "CommentsDtoUpdatedComments",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentsDtoDeletedComments",
            "key": "deletedComments",
            "schema": {
              "generatedName": "commentsDtoDeletedComments",
              "value": {
                "generatedName": "CommentsDtoDeletedComments",
                "description": "The deleted comments since the last version.",
                "value": {
                  "description": "The deleted comments since the last version.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "CommentsDtoDeletedCommentsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "CommentsDtoDeletedComments",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentsDtoVersion",
            "key": "version",
            "schema": {
              "description": "The current version.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "CommentsDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CommentsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CommentDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "commentDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the comment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CommentDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentDtoTime",
            "key": "time",
            "schema": {
              "description": "The time when the comment was created or updated last.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "CommentDtoTime",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentDtoUser",
            "key": "user",
            "schema": {
              "description": "The user who created or updated the comment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CommentDtoUser",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentDtoText",
            "key": "text",
            "schema": {
              "description": "The text of the comment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CommentDtoText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "commentDtoUrl",
            "key": "url",
            "schema": {
              "generatedName": "commentDtoUrl",
              "value": {
                "generatedName": "CommentDtoUrl",
                "description": "The url where the comment is created.",
                "value": {
                  "description": "The url where the comment is created.",
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "CommentDtoUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CommentDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpsertCommentDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "upsertCommentDtoText",
            "key": "text",
            "schema": {
              "description": "The comment text.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpsertCommentDtoText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertCommentDtoUrl",
            "key": "url",
            "schema": {
              "generatedName": "upsertCommentDtoUrl",
              "value": {
                "generatedName": "UpsertCommentDtoUrl",
                "description": "The url where the comment is created.",
                "value": {
                  "description": "The url where the comment is created.",
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "UpsertCommentDtoUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpsertCommentDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BackupJobsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "backupJobsDtoItems",
            "key": "items",
            "schema": {
              "description": "The backups.",
              "value": {
                "generatedName": "BackupJobsDtoItemsItem",
                "schema": "BackupJobDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "BackupJobsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BackupJobsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BackupJobDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "backupJobDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the backup job.",
              "schema": {
                "type": "string"
              },
              "generatedName": "BackupJobDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "backupJobDtoStarted",
            "key": "started",
            "schema": {
              "description": "The time when the job has been started.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BackupJobDtoStarted",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "backupJobDtoStopped",
            "key": "stopped",
            "schema": {
              "generatedName": "backupJobDtoStopped",
              "value": {
                "generatedName": "BackupJobDtoStopped",
                "description": "The time when the job has been stopped.",
                "value": {
                  "description": "The time when the job has been stopped.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "BackupJobDtoStopped",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "backupJobDtoHandledEvents",
            "key": "handledEvents",
            "schema": {
              "description": "The number of handled events.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BackupJobDtoHandledEvents",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "backupJobDtoHandledAssets",
            "key": "handledAssets",
            "schema": {
              "description": "The number of handled assets.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BackupJobDtoHandledAssets",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "backupJobDtoStatus",
            "key": "status",
            "schema": {
              "description": "The status of the operation.",
              "generatedName": "BackupJobDtoStatus",
              "schema": "JobStatus",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BackupJobDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "JobStatus": {
        "description": "",
        "generatedName": "JobStatus",
        "values": [
          {
            "generatedName": "Created",
            "value": "Created",
            "casing": {}
          },
          {
            "generatedName": "Started",
            "value": "Started",
            "casing": {}
          },
          {
            "generatedName": "Completed",
            "value": "Completed",
            "casing": {}
          },
          {
            "generatedName": "Failed",
            "value": "Failed",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RestoreJobDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "restoreJobDtoUrl",
            "key": "url",
            "schema": {
              "description": "The uri to load from.",
              "schema": {
                "format": "uri",
                "type": "string"
              },
              "generatedName": "RestoreJobDtoUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "restoreJobDtoLog",
            "key": "log",
            "schema": {
              "description": "The status log.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RestoreJobDtoLogItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "RestoreJobDtoLog",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "restoreJobDtoStarted",
            "key": "started",
            "schema": {
              "description": "The time when the job has been started.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RestoreJobDtoStarted",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "restoreJobDtoStopped",
            "key": "stopped",
            "schema": {
              "generatedName": "restoreJobDtoStopped",
              "value": {
                "generatedName": "RestoreJobDtoStopped",
                "description": "The time when the job has been stopped.",
                "value": {
                  "description": "The time when the job has been stopped.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "RestoreJobDtoStopped",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "restoreJobDtoStatus",
            "key": "status",
            "schema": {
              "description": "The status of the operation.",
              "generatedName": "RestoreJobDtoStatus",
              "schema": "JobStatus",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RestoreJobDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RestoreRequestDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "restoreRequestDtoName",
            "key": "name",
            "schema": {
              "generatedName": "restoreRequestDtoName",
              "value": {
                "generatedName": "RestoreRequestDtoName",
                "description": "The name of the app.",
                "value": {
                  "description": "The name of the app.",
                  "schema": {
                    "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                    "type": "string"
                  },
                  "generatedName": "RestoreRequestDtoName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "restoreRequestDtoUrl",
            "key": "url",
            "schema": {
              "description": "The url to the restore file.",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RestoreRequestDtoUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RestoreRequestDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResizeMode": {
        "description": "",
        "generatedName": "ResizeMode",
        "values": [
          {
            "generatedName": "Crop",
            "value": "Crop",
            "casing": {}
          },
          {
            "generatedName": "CropUpsize",
            "value": "CropUpsize",
            "casing": {}
          },
          {
            "generatedName": "Pad",
            "value": "Pad",
            "casing": {}
          },
          {
            "generatedName": "BoxPad",
            "value": "BoxPad",
            "casing": {}
          },
          {
            "generatedName": "Max",
            "value": "Max",
            "casing": {}
          },
          {
            "generatedName": "Min",
            "value": "Min",
            "casing": {}
          },
          {
            "generatedName": "Stretch",
            "value": "Stretch",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ImageFormat": {
        "description": "",
        "generatedName": "ImageFormat",
        "values": [
          {
            "generatedName": "AVIF",
            "value": "AVIF",
            "casing": {}
          },
          {
            "generatedName": "BMP",
            "value": "BMP",
            "casing": {}
          },
          {
            "generatedName": "GIF",
            "value": "GIF",
            "casing": {}
          },
          {
            "generatedName": "JPEG",
            "value": "JPEG",
            "casing": {}
          },
          {
            "generatedName": "PNG",
            "value": "PNG",
            "casing": {}
          },
          {
            "generatedName": "TGA",
            "value": "TGA",
            "casing": {}
          },
          {
            "generatedName": "TIFF",
            "value": "TIFF",
            "casing": {}
          },
          {
            "generatedName": "WEBP",
            "value": "WEBP",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AssetFoldersDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetFoldersDtoTotal",
            "key": "total",
            "schema": {
              "description": "The total number of assets.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetFoldersDtoTotal",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetFoldersDtoItems",
            "key": "items",
            "schema": {
              "description": "The assets folders.",
              "value": {
                "generatedName": "AssetFoldersDtoItemsItem",
                "schema": "AssetFolderDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AssetFoldersDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetFoldersDtoPath",
            "key": "path",
            "schema": {
              "description": "The path to the current folder.",
              "value": {
                "generatedName": "AssetFoldersDtoPathItem",
                "schema": "AssetFolderDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AssetFoldersDtoPath",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetFoldersDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetFolderDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetFolderDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the asset.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetFolderDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetFolderDtoParentId",
            "key": "parentId",
            "schema": {
              "description": "The ID of the parent folder. Empty for files without parent.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetFolderDtoParentId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetFolderDtoFolderName",
            "key": "folderName",
            "schema": {
              "description": "The folder name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetFolderDtoFolderName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetFolderDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the asset folder.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetFolderDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetFolderDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetFolderScope": {
        "description": "",
        "generatedName": "AssetFolderScope",
        "values": [
          {
            "generatedName": "PathAndItems",
            "value": "PathAndItems",
            "casing": {}
          },
          {
            "generatedName": "Path",
            "value": "Path",
            "casing": {}
          },
          {
            "generatedName": "Items",
            "value": "Items",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CreateAssetFolderDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createAssetFolderDtoFolderName",
            "key": "folderName",
            "schema": {
              "description": "The name of the folder.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateAssetFolderDtoFolderName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createAssetFolderDtoParentId",
            "key": "parentId",
            "schema": {
              "generatedName": "createAssetFolderDtoParentId",
              "value": {
                "description": "The ID of the parent folder.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CreateAssetFolderDtoParentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateAssetFolderDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RenameAssetFolderDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "renameAssetFolderDtoFolderName",
            "key": "folderName",
            "schema": {
              "description": "The name of the folder.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RenameAssetFolderDtoFolderName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RenameAssetFolderDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "MoveAssetFolderDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "moveAssetFolderDtoParentId",
            "key": "parentId",
            "schema": {
              "generatedName": "moveAssetFolderDtoParentId",
              "value": {
                "description": "The parent folder id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "MoveAssetFolderDtoParentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MoveAssetFolderDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RenameTagDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "renameTagDtoTagName",
            "key": "tagName",
            "schema": {
              "description": "The new name for the tag.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RenameTagDtoTagName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RenameTagDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetsDtoTotal",
            "key": "total",
            "schema": {
              "description": "The total number of assets.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetsDtoTotal",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetsDtoItems",
            "key": "items",
            "schema": {
              "description": "The assets.",
              "value": {
                "generatedName": "AssetsDtoItemsItem",
                "schema": "AssetDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AssetsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the asset.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoParentId",
            "key": "parentId",
            "schema": {
              "description": "The ID of the parent folder. Empty for files without parent.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoParentId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoFileName",
            "key": "fileName",
            "schema": {
              "description": "The file name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoFileName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoFileHash",
            "key": "fileHash",
            "schema": {
              "generatedName": "assetDtoFileHash",
              "value": {
                "generatedName": "AssetDtoFileHash",
                "description": "The file hash.",
                "value": {
                  "description": "The file hash.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetDtoFileHash",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoIsProtected",
            "key": "isProtected",
            "schema": {
              "description": "True, when the asset is not public.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetDtoIsProtected",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoSlug",
            "key": "slug",
            "schema": {
              "description": "The slug.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoSlug",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoMimeType",
            "key": "mimeType",
            "schema": {
              "description": "The mime type.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoMimeType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoFileType",
            "key": "fileType",
            "schema": {
              "description": "The file type.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoFileType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoMetadataText",
            "key": "metadataText",
            "schema": {
              "description": "The formatted text representation of the metadata.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoMetadataText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoEditToken",
            "key": "editToken",
            "schema": {
              "generatedName": "assetDtoEditToken",
              "value": {
                "generatedName": "AssetDtoEditToken",
                "description": "The UI token.",
                "value": {
                  "description": "The UI token.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetDtoEditToken",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoMetadata",
            "key": "metadata",
            "schema": {
              "description": "The asset metadata.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AssetDtoMetadataKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "AssetDtoMetadataValue",
                "type": "unknown"
              },
              "generatedName": "AssetDtoMetadata",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoTags",
            "key": "tags",
            "schema": {
              "generatedName": "assetDtoTags",
              "value": {
                "generatedName": "AssetDtoTags",
                "description": "The asset tags.",
                "value": {
                  "description": "The asset tags.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AssetDtoTagsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "AssetDtoTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoFileSize",
            "key": "fileSize",
            "schema": {
              "description": "The size of the file in bytes.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetDtoFileSize",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoFileVersion",
            "key": "fileVersion",
            "schema": {
              "description": "The version of the file.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetDtoFileVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoType",
            "key": "type",
            "schema": {
              "description": "The type of the asset.",
              "generatedName": "AssetDtoType",
              "schema": "AssetType",
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "assetDtoCreatedBy",
            "key": "createdBy",
            "schema": {
              "description": "The user that has created the schema.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoCreatedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoLastModifiedBy",
            "key": "lastModifiedBy",
            "schema": {
              "description": "The user that has updated the asset.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetDtoLastModifiedBy",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoCreated",
            "key": "created",
            "schema": {
              "description": "The date and time when the asset has been created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "AssetDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoLastModified",
            "key": "lastModified",
            "schema": {
              "description": "The date and time when the asset has been modified last.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "AssetDtoLastModified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the asset.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetDtoMeta",
            "key": "_meta",
            "schema": {
              "generatedName": "assetDtoMeta",
              "value": {
                "description": "The metadata.",
                "generatedName": "AssetDtoMeta",
                "schema": "AssetMeta",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "assetDtoIsImage",
            "key": "isImage",
            "schema": {
              "description": "Determines of the created file is an image.",
              "availability": "Deprecated",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AssetDtoIsImage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "assetDtoPixelWidth",
            "key": "pixelWidth",
            "schema": {
              "generatedName": "assetDtoPixelWidth",
              "availability": "Deprecated",
              "value": {
                "generatedName": "AssetDtoPixelWidth",
                "description": "The width of the image in pixels if the asset is an image.",
                "availability": "Deprecated",
                "value": {
                  "description": "The width of the image in pixels if the asset is an image.",
                  "availability": "Deprecated",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetDtoPixelWidth",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "assetDtoPixelHeight",
            "key": "pixelHeight",
            "schema": {
              "generatedName": "assetDtoPixelHeight",
              "availability": "Deprecated",
              "value": {
                "generatedName": "AssetDtoPixelHeight",
                "description": "The height of the image in pixels if the asset is an image.",
                "availability": "Deprecated",
                "value": {
                  "description": "The height of the image in pixels if the asset is an image.",
                  "availability": "Deprecated",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "AssetDtoPixelHeight",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetMeta": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetMetaIsDuplicate",
            "key": "isDuplicate",
            "schema": {
              "description": "Indicates whether the asset is a duplicate.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AssetMetaIsDuplicate",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetMeta",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BulkUpdateAssetsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsDtoJobs",
            "key": "jobs",
            "schema": {
              "generatedName": "bulkUpdateAssetsDtoJobs",
              "value": {
                "generatedName": "BulkUpdateAssetsDtoJobs",
                "description": "The contents to update or insert.",
                "value": {
                  "description": "The contents to update or insert.",
                  "value": {
                    "generatedName": "BulkUpdateAssetsDtoJobsItem",
                    "schema": "BulkUpdateAssetsJobDto",
                    "source": {
                      "file": "../openapi.json",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "BulkUpdateAssetsDtoJobs",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsDtoCheckReferrers",
            "key": "checkReferrers",
            "schema": {
              "generatedName": "bulkUpdateAssetsDtoCheckReferrers",
              "value": {
                "description": "True to check referrers of deleted assets.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateAssetsDtoCheckReferrers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsDtoOptimizeValidation",
            "key": "optimizeValidation",
            "schema": {
              "generatedName": "bulkUpdateAssetsDtoOptimizeValidation",
              "value": {
                "description": "True to turn off costly validation: Folder checks. Default: true.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateAssetsDtoOptimizeValidation",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsDtoDoNotScript",
            "key": "doNotScript",
            "schema": {
              "generatedName": "bulkUpdateAssetsDtoDoNotScript",
              "value": {
                "description": "True to turn off scripting for faster inserts. Default: true.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateAssetsDtoDoNotScript",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BulkUpdateAssetsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BulkUpdateAssetsJobDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoId",
            "key": "id",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoId",
              "value": {
                "description": "An optional ID of the asset to update.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BulkUpdateAssetsJobDtoId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoType",
            "key": "type",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoType",
              "value": {
                "description": "The update type.",
                "generatedName": "BulkUpdateAssetsJobDtoType",
                "schema": "BulkUpdateAssetType",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoParentId",
            "key": "parentId",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoParentId",
              "value": {
                "description": "The parent folder id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BulkUpdateAssetsJobDtoParentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoFileName",
            "key": "fileName",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoFileName",
              "value": {
                "generatedName": "BulkUpdateAssetsJobDtoFileName",
                "description": "The new name of the asset.",
                "value": {
                  "description": "The new name of the asset.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BulkUpdateAssetsJobDtoFileName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoSlug",
            "key": "slug",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoSlug",
              "value": {
                "generatedName": "BulkUpdateAssetsJobDtoSlug",
                "description": "The new slug of the asset.",
                "value": {
                  "description": "The new slug of the asset.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BulkUpdateAssetsJobDtoSlug",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoIsProtected",
            "key": "isProtected",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoIsProtected",
              "value": {
                "generatedName": "BulkUpdateAssetsJobDtoIsProtected",
                "description": "True, when the asset is not public.",
                "value": {
                  "description": "True, when the asset is not public.",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "BulkUpdateAssetsJobDtoIsProtected",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoTags",
            "key": "tags",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoTags",
              "value": {
                "generatedName": "BulkUpdateAssetsJobDtoTags",
                "description": "The new asset tags.",
                "value": {
                  "description": "The new asset tags.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BulkUpdateAssetsJobDtoTagsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "BulkUpdateAssetsJobDtoTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoMetadata",
              "value": {
                "generatedName": "BulkUpdateAssetsJobDtoMetadata",
                "description": "The asset metadata.",
                "value": {
                  "description": "The asset metadata.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BulkUpdateAssetsJobDtoMetadataKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "BulkUpdateAssetsJobDtoMetadataValue",
                    "type": "unknown"
                  },
                  "generatedName": "BulkUpdateAssetsJobDtoMetadata",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoPermanent",
            "key": "permanent",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoPermanent",
              "value": {
                "description": "True to delete the asset permanently.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BulkUpdateAssetsJobDtoPermanent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bulkUpdateAssetsJobDtoExpectedVersion",
            "key": "expectedVersion",
            "schema": {
              "generatedName": "bulkUpdateAssetsJobDtoExpectedVersion",
              "value": {
                "description": "The expected version.",
                "schema": {
                  "type": "int64"
                },
                "generatedName": "BulkUpdateAssetsJobDtoExpectedVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BulkUpdateAssetsJobDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "BulkUpdateAssetType": {
        "description": "",
        "generatedName": "BulkUpdateAssetType",
        "values": [
          {
            "generatedName": "Annotate",
            "value": "Annotate",
            "casing": {}
          },
          {
            "generatedName": "Move",
            "value": "Move",
            "casing": {}
          },
          {
            "generatedName": "Delete",
            "value": "Delete",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AnnotateAssetDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "annotateAssetDtoFileName",
            "key": "fileName",
            "schema": {
              "generatedName": "annotateAssetDtoFileName",
              "value": {
                "generatedName": "AnnotateAssetDtoFileName",
                "description": "The new name of the asset.",
                "value": {
                  "description": "The new name of the asset.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AnnotateAssetDtoFileName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "annotateAssetDtoSlug",
            "key": "slug",
            "schema": {
              "generatedName": "annotateAssetDtoSlug",
              "value": {
                "generatedName": "AnnotateAssetDtoSlug",
                "description": "The new slug of the asset.",
                "value": {
                  "description": "The new slug of the asset.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AnnotateAssetDtoSlug",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "annotateAssetDtoIsProtected",
            "key": "isProtected",
            "schema": {
              "generatedName": "annotateAssetDtoIsProtected",
              "value": {
                "generatedName": "AnnotateAssetDtoIsProtected",
                "description": "True, when the asset is not public.",
                "value": {
                  "description": "True, when the asset is not public.",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "AnnotateAssetDtoIsProtected",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "annotateAssetDtoTags",
            "key": "tags",
            "schema": {
              "generatedName": "annotateAssetDtoTags",
              "value": {
                "generatedName": "AnnotateAssetDtoTags",
                "description": "The new asset tags.",
                "value": {
                  "description": "The new asset tags.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AnnotateAssetDtoTagsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "AnnotateAssetDtoTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "annotateAssetDtoMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "annotateAssetDtoMetadata",
              "value": {
                "generatedName": "AnnotateAssetDtoMetadata",
                "description": "The asset metadata.",
                "value": {
                  "description": "The asset metadata.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AnnotateAssetDtoMetadataKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "AnnotateAssetDtoMetadataValue",
                    "type": "unknown"
                  },
                  "generatedName": "AnnotateAssetDtoMetadata",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AnnotateAssetDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "MoveAssetDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "moveAssetDtoParentId",
            "key": "parentId",
            "schema": {
              "generatedName": "moveAssetDtoParentId",
              "value": {
                "description": "The parent folder id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "MoveAssetDtoParentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MoveAssetDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AssetScriptsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoQuery",
            "key": "query",
            "schema": {
              "generatedName": "assetScriptsDtoQuery",
              "value": {
                "generatedName": "AssetScriptsDtoQuery",
                "description": "The script that is executed for each asset when querying assets.",
                "value": {
                  "description": "The script that is executed for each asset when querying assets.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetScriptsDtoQuery",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoQueryPre",
            "key": "queryPre",
            "schema": {
              "generatedName": "assetScriptsDtoQueryPre",
              "value": {
                "generatedName": "AssetScriptsDtoQueryPre",
                "description": "The script that is executed for all assets when querying assets.",
                "value": {
                  "description": "The script that is executed for all assets when querying assets.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetScriptsDtoQueryPre",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoCreate",
            "key": "create",
            "schema": {
              "generatedName": "assetScriptsDtoCreate",
              "value": {
                "generatedName": "AssetScriptsDtoCreate",
                "description": "The script that is executed when creating an asset.",
                "value": {
                  "description": "The script that is executed when creating an asset.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetScriptsDtoCreate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoUpdate",
            "key": "update",
            "schema": {
              "generatedName": "assetScriptsDtoUpdate",
              "value": {
                "generatedName": "AssetScriptsDtoUpdate",
                "description": "The script that is executed when updating a content.",
                "value": {
                  "description": "The script that is executed when updating a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetScriptsDtoUpdate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoAnnotate",
            "key": "annotate",
            "schema": {
              "generatedName": "assetScriptsDtoAnnotate",
              "value": {
                "generatedName": "AssetScriptsDtoAnnotate",
                "description": "The script that is executed when annotating a content.",
                "value": {
                  "description": "The script that is executed when annotating a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetScriptsDtoAnnotate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoMove",
            "key": "move",
            "schema": {
              "generatedName": "assetScriptsDtoMove",
              "value": {
                "generatedName": "AssetScriptsDtoMove",
                "description": "The script that is executed when moving a content.",
                "value": {
                  "description": "The script that is executed when moving a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetScriptsDtoMove",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoDelete",
            "key": "delete",
            "schema": {
              "generatedName": "assetScriptsDtoDelete",
              "value": {
                "generatedName": "AssetScriptsDtoDelete",
                "description": "The script that is executed when deleting a content.",
                "value": {
                  "description": "The script that is executed when deleting a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AssetScriptsDtoDelete",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "assetScriptsDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the app.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AssetScriptsDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AssetScriptsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateAssetScriptsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateAssetScriptsDtoQuery",
            "key": "query",
            "schema": {
              "generatedName": "updateAssetScriptsDtoQuery",
              "value": {
                "generatedName": "UpdateAssetScriptsDtoQuery",
                "description": "The script that is executed for each asset when querying assets.",
                "value": {
                  "description": "The script that is executed for each asset when querying assets.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAssetScriptsDtoQuery",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAssetScriptsDtoQueryPre",
            "key": "queryPre",
            "schema": {
              "generatedName": "updateAssetScriptsDtoQueryPre",
              "value": {
                "generatedName": "UpdateAssetScriptsDtoQueryPre",
                "description": "The script that is executed for all assets when querying assets.",
                "value": {
                  "description": "The script that is executed for all assets when querying assets.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAssetScriptsDtoQueryPre",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAssetScriptsDtoCreate",
            "key": "create",
            "schema": {
              "generatedName": "updateAssetScriptsDtoCreate",
              "value": {
                "generatedName": "UpdateAssetScriptsDtoCreate",
                "description": "The script that is executed when creating an asset.",
                "value": {
                  "description": "The script that is executed when creating an asset.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAssetScriptsDtoCreate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAssetScriptsDtoUpdate",
            "key": "update",
            "schema": {
              "generatedName": "updateAssetScriptsDtoUpdate",
              "value": {
                "generatedName": "UpdateAssetScriptsDtoUpdate",
                "description": "The script that is executed when updating a content.",
                "value": {
                  "description": "The script that is executed when updating a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAssetScriptsDtoUpdate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAssetScriptsDtoAnnotate",
            "key": "annotate",
            "schema": {
              "generatedName": "updateAssetScriptsDtoAnnotate",
              "value": {
                "generatedName": "UpdateAssetScriptsDtoAnnotate",
                "description": "The script that is executed when annotating a content.",
                "value": {
                  "description": "The script that is executed when annotating a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAssetScriptsDtoAnnotate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAssetScriptsDtoMove",
            "key": "move",
            "schema": {
              "generatedName": "updateAssetScriptsDtoMove",
              "value": {
                "generatedName": "UpdateAssetScriptsDtoMove",
                "description": "The script that is executed when moving a content.",
                "value": {
                  "description": "The script that is executed when moving a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAssetScriptsDtoMove",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAssetScriptsDtoDelete",
            "key": "delete",
            "schema": {
              "generatedName": "updateAssetScriptsDtoDelete",
              "value": {
                "generatedName": "UpdateAssetScriptsDtoDelete",
                "description": "The script that is executed when deleting a content.",
                "value": {
                  "description": "The script that is executed when deleting a content.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAssetScriptsDtoDelete",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateAssetScriptsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ClientsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "clientsDtoItems",
            "key": "items",
            "schema": {
              "description": "The clients.",
              "value": {
                "generatedName": "ClientsDtoItemsItem",
                "schema": "ClientDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ClientsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ClientsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "ClientDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "clientDtoId",
            "key": "id",
            "schema": {
              "description": "The client id.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ClientDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "clientDtoSecret",
            "key": "secret",
            "schema": {
              "description": "The client secret.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ClientDtoSecret",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "clientDtoName",
            "key": "name",
            "schema": {
              "description": "The client name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ClientDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "clientDtoRole",
            "key": "role",
            "schema": {
              "generatedName": "clientDtoRole",
              "value": {
                "generatedName": "ClientDtoRole",
                "description": "The role of the client.",
                "value": {
                  "description": "The role of the client.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ClientDtoRole",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "clientDtoApiCallsLimit",
            "key": "apiCallsLimit",
            "schema": {
              "description": "The number of allowed api calls per month for this client.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "ClientDtoApiCallsLimit",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "clientDtoApiTrafficLimit",
            "key": "apiTrafficLimit",
            "schema": {
              "description": "The number of allowed api traffic bytes per month for this client.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "ClientDtoApiTrafficLimit",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "clientDtoAllowAnonymous",
            "key": "allowAnonymous",
            "schema": {
              "description": "True to allow anonymous access without an access token for this client.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ClientDtoAllowAnonymous",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ClientDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateClientDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createClientDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the client.",
              "schema": {
                "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateClientDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateClientDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateClientDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateClientDtoName",
            "key": "name",
            "schema": {
              "generatedName": "updateClientDtoName",
              "value": {
                "generatedName": "UpdateClientDtoName",
                "description": "The new display name of the client.",
                "value": {
                  "description": "The new display name of the client.",
                  "schema": {
                    "minLength": 0,
                    "maxLength": 20,
                    "type": "string"
                  },
                  "generatedName": "UpdateClientDtoName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateClientDtoRole",
            "key": "role",
            "schema": {
              "generatedName": "updateClientDtoRole",
              "value": {
                "generatedName": "UpdateClientDtoRole",
                "description": "The role of the client.",
                "value": {
                  "description": "The role of the client.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateClientDtoRole",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateClientDtoAllowAnonymous",
            "key": "allowAnonymous",
            "schema": {
              "generatedName": "updateClientDtoAllowAnonymous",
              "value": {
                "generatedName": "UpdateClientDtoAllowAnonymous",
                "description": "True to allow anonymous access without an access token for this client.",
                "value": {
                  "description": "True to allow anonymous access without an access token for this client.",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "UpdateClientDtoAllowAnonymous",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateClientDtoApiCallsLimit",
            "key": "apiCallsLimit",
            "schema": {
              "generatedName": "updateClientDtoApiCallsLimit",
              "value": {
                "generatedName": "UpdateClientDtoApiCallsLimit",
                "description": "The number of allowed api calls per month for this client.",
                "value": {
                  "description": "The number of allowed api calls per month for this client.",
                  "schema": {
                    "type": "int64"
                  },
                  "generatedName": "UpdateClientDtoApiCallsLimit",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateClientDtoApiTrafficLimit",
            "key": "apiTrafficLimit",
            "schema": {
              "generatedName": "updateClientDtoApiTrafficLimit",
              "value": {
                "generatedName": "UpdateClientDtoApiTrafficLimit",
                "description": "The number of allowed api traffic bytes per month for this client.",
                "value": {
                  "description": "The number of allowed api traffic bytes per month for this client.",
                  "schema": {
                    "type": "int64"
                  },
                  "generatedName": "UpdateClientDtoApiTrafficLimit",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateClientDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AppLanguagesDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "appLanguagesDtoItems",
            "key": "items",
            "schema": {
              "description": "The languages.",
              "value": {
                "generatedName": "AppLanguagesDtoItemsItem",
                "schema": "AppLanguageDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AppLanguagesDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AppLanguagesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AppLanguageDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "appLanguageDtoIso2Code",
            "key": "iso2Code",
            "schema": {
              "description": "The iso code of the language.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AppLanguageDtoIso2Code",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appLanguageDtoEnglishName",
            "key": "englishName",
            "schema": {
              "description": "The english name of the language.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AppLanguageDtoEnglishName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appLanguageDtoFallback",
            "key": "fallback",
            "schema": {
              "description": "The fallback languages.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AppLanguageDtoFallbackItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "AppLanguageDtoFallback",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appLanguageDtoIsMaster",
            "key": "isMaster",
            "schema": {
              "description": "Indicates if the language is the master language.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AppLanguageDtoIsMaster",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appLanguageDtoIsOptional",
            "key": "isOptional",
            "schema": {
              "description": "Indicates if the language is optional.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AppLanguageDtoIsOptional",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AppLanguageDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AddLanguageDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addLanguageDtoLanguage",
            "key": "language",
            "schema": {
              "description": "The language to add.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AddLanguageDtoLanguage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AddLanguageDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateLanguageDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateLanguageDtoIsMaster",
            "key": "isMaster",
            "schema": {
              "generatedName": "updateLanguageDtoIsMaster",
              "value": {
                "generatedName": "UpdateLanguageDtoIsMaster",
                "description": "Set the value to true to make the language the master.",
                "value": {
                  "description": "Set the value to true to make the language the master.",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "UpdateLanguageDtoIsMaster",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateLanguageDtoIsOptional",
            "key": "isOptional",
            "schema": {
              "generatedName": "updateLanguageDtoIsOptional",
              "value": {
                "description": "Set the value to true to make the language optional.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "UpdateLanguageDtoIsOptional",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateLanguageDtoFallback",
            "key": "fallback",
            "schema": {
              "generatedName": "updateLanguageDtoFallback",
              "value": {
                "generatedName": "UpdateLanguageDtoFallback",
                "description": "Optional fallback languages.",
                "value": {
                  "description": "Optional fallback languages.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpdateLanguageDtoFallbackItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "UpdateLanguageDtoFallback",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateLanguageDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RolesDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "rolesDtoItems",
            "key": "items",
            "schema": {
              "description": "The roles.",
              "value": {
                "generatedName": "RolesDtoItemsItem",
                "schema": "RoleDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RolesDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RolesDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "RoleDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "roleDtoName",
            "key": "name",
            "schema": {
              "description": "The role name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RoleDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleDtoNumClients",
            "key": "numClients",
            "schema": {
              "description": "The number of clients with this role.",
              "schema": {
                "type": "int"
              },
              "generatedName": "RoleDtoNumClients",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleDtoNumContributors",
            "key": "numContributors",
            "schema": {
              "description": "The number of contributors with this role.",
              "schema": {
                "type": "int"
              },
              "generatedName": "RoleDtoNumContributors",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleDtoIsDefaultRole",
            "key": "isDefaultRole",
            "schema": {
              "description": "Indicates if the role is an builtin default role.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "RoleDtoIsDefaultRole",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleDtoPermissions",
            "key": "permissions",
            "schema": {
              "description": "Associated list of permissions.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RoleDtoPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "RoleDtoPermissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "roleDtoProperties",
            "key": "properties",
            "schema": {
              "description": "Associated list of UI properties.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RoleDtoPropertiesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "RoleDtoPropertiesValue",
                "type": "unknown"
              },
              "generatedName": "RoleDtoProperties",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RoleDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AddRoleDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addRoleDtoName",
            "key": "name",
            "schema": {
              "description": "The role name.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AddRoleDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AddRoleDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateRoleDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateRoleDtoPermissions",
            "key": "permissions",
            "schema": {
              "description": "Associated list of permissions.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateRoleDtoPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "UpdateRoleDtoPermissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateRoleDtoProperties",
            "key": "properties",
            "schema": {
              "generatedName": "updateRoleDtoProperties",
              "value": {
                "description": "Associated list of UI properties.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateRoleDtoPropertiesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "UpdateRoleDtoPropertiesValue",
                  "type": "unknown"
                },
                "generatedName": "UpdateRoleDtoProperties",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateRoleDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AppDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "appDtoId",
            "key": "id",
            "schema": {
              "description": "The ID of the app.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AppDtoId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the app.",
              "schema": {
                "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "type": "string"
              },
              "generatedName": "AppDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoLabel",
            "key": "label",
            "schema": {
              "generatedName": "appDtoLabel",
              "value": {
                "generatedName": "AppDtoLabel",
                "description": "The optional label of the app.",
                "value": {
                  "description": "The optional label of the app.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AppDtoLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoDescription",
            "key": "description",
            "schema": {
              "generatedName": "appDtoDescription",
              "value": {
                "generatedName": "AppDtoDescription",
                "description": "The optional description of the app.",
                "value": {
                  "description": "The optional description of the app.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AppDtoDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the app.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AppDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoCreated",
            "key": "created",
            "schema": {
              "description": "The timestamp when the app has been created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "AppDtoCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoLastModified",
            "key": "lastModified",
            "schema": {
              "description": "The timestamp when the app has been modified last.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "AppDtoLastModified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoTeamId",
            "key": "teamId",
            "schema": {
              "generatedName": "appDtoTeamId",
              "value": {
                "generatedName": "AppDtoTeamId",
                "description": "The ID of the team.",
                "value": {
                  "description": "The ID of the team.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AppDtoTeamId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoPermissions",
            "key": "permissions",
            "schema": {
              "description": "The permission level of the user.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AppDtoPermissionsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "AppDtoPermissions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoCanAccessApi",
            "key": "canAccessApi",
            "schema": {
              "description": "Indicates if the user can access the api.",
              "availability": "Deprecated",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AppDtoCanAccessApi",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "appDtoCanAccessContent",
            "key": "canAccessContent",
            "schema": {
              "description": "Indicates if the user can access at least one content.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AppDtoCanAccessContent",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoRoleName",
            "key": "roleName",
            "schema": {
              "generatedName": "appDtoRoleName",
              "value": {
                "generatedName": "AppDtoRoleName",
                "description": "The role name of the user.",
                "value": {
                  "description": "The role name of the user.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AppDtoRoleName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appDtoRoleProperties",
            "key": "roleProperties",
            "schema": {
              "description": "The properties from the role.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AppDtoRolePropertiesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "AppDtoRolePropertiesValue",
                "type": "unknown"
              },
              "generatedName": "AppDtoRoleProperties",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AppDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateAppDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createAppDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the app.",
              "schema": {
                "pattern": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "CreateAppDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createAppDtoTemplate",
            "key": "template",
            "schema": {
              "generatedName": "createAppDtoTemplate",
              "value": {
                "generatedName": "CreateAppDtoTemplate",
                "description": "Initialize the app with the inbuilt template.",
                "value": {
                  "description": "Initialize the app with the inbuilt template.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CreateAppDtoTemplate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateAppDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateAppDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateAppDtoLabel",
            "key": "label",
            "schema": {
              "generatedName": "updateAppDtoLabel",
              "value": {
                "generatedName": "UpdateAppDtoLabel",
                "description": "The optional label of your app.",
                "value": {
                  "description": "The optional label of your app.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAppDtoLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAppDtoDescription",
            "key": "description",
            "schema": {
              "generatedName": "updateAppDtoDescription",
              "value": {
                "generatedName": "UpdateAppDtoDescription",
                "description": "The optional description of your app.",
                "value": {
                  "description": "The optional description of your app.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateAppDtoDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateAppDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransferToTeamDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transferToTeamDtoTeamId",
            "key": "teamId",
            "schema": {
              "generatedName": "transferToTeamDtoTeamId",
              "value": {
                "generatedName": "TransferToTeamDtoTeamId",
                "description": "The ID of the team.",
                "value": {
                  "description": "The ID of the team.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TransferToTeamDtoTeamId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransferToTeamDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AppSettingsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "appSettingsDtoPatterns",
            "key": "patterns",
            "schema": {
              "description": "The configured app patterns.",
              "value": {
                "generatedName": "AppSettingsDtoPatternsItem",
                "schema": "PatternDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AppSettingsDtoPatterns",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appSettingsDtoEditors",
            "key": "editors",
            "schema": {
              "description": "The configured UI editors.",
              "value": {
                "generatedName": "AppSettingsDtoEditorsItem",
                "schema": "EditorDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AppSettingsDtoEditors",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appSettingsDtoHideScheduler",
            "key": "hideScheduler",
            "schema": {
              "description": "Hide the scheduler for content items.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AppSettingsDtoHideScheduler",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appSettingsDtoHideDateTimeModeButton",
            "key": "hideDateTimeModeButton",
            "schema": {
              "description": "Hide the datetime mode button.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "AppSettingsDtoHideDateTimeModeButton",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "appSettingsDtoVersion",
            "key": "version",
            "schema": {
              "description": "The version of the app.",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AppSettingsDtoVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AppSettingsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "PatternDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "patternDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the suggestion.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PatternDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "patternDtoRegex",
            "key": "regex",
            "schema": {
              "description": "The regex pattern.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PatternDtoRegex",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "patternDtoMessage",
            "key": "message",
            "schema": {
              "generatedName": "patternDtoMessage",
              "value": {
                "generatedName": "PatternDtoMessage",
                "description": "The regex message.",
                "value": {
                  "description": "The regex message.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PatternDtoMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PatternDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "EditorDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "editorDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the editor.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EditorDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "editorDtoUrl",
            "key": "url",
            "schema": {
              "description": "The url to the editor.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EditorDtoUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EditorDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateAppSettingsDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateAppSettingsDtoPatterns",
            "key": "patterns",
            "schema": {
              "description": "The configured app patterns.",
              "value": {
                "generatedName": "UpdateAppSettingsDtoPatternsItem",
                "schema": "PatternDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "UpdateAppSettingsDtoPatterns",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAppSettingsDtoEditors",
            "key": "editors",
            "schema": {
              "description": "The configured UI editors.",
              "value": {
                "generatedName": "UpdateAppSettingsDtoEditorsItem",
                "schema": "EditorDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "UpdateAppSettingsDtoEditors",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAppSettingsDtoHideScheduler",
            "key": "hideScheduler",
            "schema": {
              "generatedName": "updateAppSettingsDtoHideScheduler",
              "value": {
                "description": "Hide the scheduler for content items.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "UpdateAppSettingsDtoHideScheduler",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateAppSettingsDtoHideDateTimeModeButton",
            "key": "hideDateTimeModeButton",
            "schema": {
              "generatedName": "updateAppSettingsDtoHideDateTimeModeButton",
              "value": {
                "description": "Hide the datetime mode button.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "UpdateAppSettingsDtoHideDateTimeModeButton",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateAppSettingsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowsDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowsDtoItems",
            "key": "items",
            "schema": {
              "description": "The workflow.",
              "value": {
                "generatedName": "WorkflowsDtoItemsItem",
                "schema": "WorkflowDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorkflowsDtoItems",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowsDtoErrors",
            "key": "errors",
            "schema": {
              "description": "The errros that should be fixed.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowsDtoErrorsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorkflowsDtoErrors",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowsDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowDto": {
        "allOf": [
          {
            "generatedName": "Resource",
            "schema": "Resource",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowDtoId",
            "key": "id",
            "schema": {
              "generatedName": "workflowDtoId",
              "value": {
                "description": "The workflow id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowDtoId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowDtoName",
            "key": "name",
            "schema": {
              "generatedName": "workflowDtoName",
              "value": {
                "generatedName": "WorkflowDtoName",
                "description": "The name of the workflow.",
                "value": {
                  "description": "The name of the workflow.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowDtoName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowDtoSteps",
            "key": "steps",
            "schema": {
              "generatedName": "workflowDtoSteps",
              "value": {
                "description": "The workflow steps.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowDtoStepsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "WorkflowDtoStepsValue",
                  "schema": "WorkflowStepDto",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WorkflowDtoSteps",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowDtoSchemaIds",
            "key": "schemaIds",
            "schema": {
              "generatedName": "workflowDtoSchemaIds",
              "value": {
                "generatedName": "WorkflowDtoSchemaIds",
                "description": "The schema ids.",
                "value": {
                  "description": "The schema ids.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "WorkflowDtoSchemaIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "WorkflowDtoSchemaIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowDtoInitial",
            "key": "initial",
            "schema": {
              "generatedName": "workflowDtoInitial",
              "value": {
                "description": "The initial step.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowDtoInitial",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowStepDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowStepDtoTransitions",
            "key": "transitions",
            "schema": {
              "generatedName": "workflowStepDtoTransitions",
              "value": {
                "description": "The transitions.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowStepDtoTransitionsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "WorkflowStepDtoTransitionsValue",
                  "schema": "WorkflowTransitionDto",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WorkflowStepDtoTransitions",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowStepDtoColor",
            "key": "color",
            "schema": {
              "generatedName": "workflowStepDtoColor",
              "value": {
                "generatedName": "WorkflowStepDtoColor",
                "description": "The optional color.",
                "value": {
                  "description": "The optional color.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowStepDtoColor",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowStepDtoValidate",
            "key": "validate",
            "schema": {
              "generatedName": "workflowStepDtoValidate",
              "value": {
                "description": "True if the content should be validated when moving to this step.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "WorkflowStepDtoValidate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowStepDtoNoUpdate",
            "key": "noUpdate",
            "schema": {
              "generatedName": "workflowStepDtoNoUpdate",
              "value": {
                "description": "Indicates if updates should not be allowed.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "WorkflowStepDtoNoUpdate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowStepDtoNoUpdateExpression",
            "key": "noUpdateExpression",
            "schema": {
              "generatedName": "workflowStepDtoNoUpdateExpression",
              "value": {
                "generatedName": "WorkflowStepDtoNoUpdateExpression",
                "description": "Optional expression that must evaluate to true when you want to prevent updates.",
                "value": {
                  "description": "Optional expression that must evaluate to true when you want to prevent updates.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowStepDtoNoUpdateExpression",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowStepDtoNoUpdateRoles",
            "key": "noUpdateRoles",
            "schema": {
              "generatedName": "workflowStepDtoNoUpdateRoles",
              "value": {
                "generatedName": "WorkflowStepDtoNoUpdateRoles",
                "description": "Optional list of roles to restrict the updates for users with these roles.",
                "value": {
                  "description": "Optional list of roles to restrict the updates for users with these roles.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "WorkflowStepDtoNoUpdateRolesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "WorkflowStepDtoNoUpdateRoles",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowStepDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowTransitionDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowTransitionDtoExpression",
            "key": "expression",
            "schema": {
              "generatedName": "workflowTransitionDtoExpression",
              "value": {
                "generatedName": "WorkflowTransitionDtoExpression",
                "description": "The optional expression.",
                "value": {
                  "description": "The optional expression.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowTransitionDtoExpression",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowTransitionDtoRoles",
            "key": "roles",
            "schema": {
              "generatedName": "workflowTransitionDtoRoles",
              "value": {
                "generatedName": "WorkflowTransitionDtoRoles",
                "description": "The optional restricted role.",
                "value": {
                  "description": "The optional restricted role.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "WorkflowTransitionDtoRolesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "WorkflowTransitionDtoRoles",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowTransitionDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AddWorkflowDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addWorkflowDtoName",
            "key": "name",
            "schema": {
              "description": "The name of the workflow.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AddWorkflowDtoName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AddWorkflowDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateWorkflowDto": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateWorkflowDtoName",
            "key": "name",
            "schema": {
              "generatedName": "updateWorkflowDtoName",
              "value": {
                "generatedName": "UpdateWorkflowDtoName",
                "description": "The name of the workflow.",
                "value": {
                  "description": "The name of the workflow.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateWorkflowDtoName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateWorkflowDtoSteps",
            "key": "steps",
            "schema": {
              "description": "The workflow steps.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateWorkflowDtoStepsKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "UpdateWorkflowDtoStepsValue",
                "schema": "WorkflowStepDto",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "UpdateWorkflowDtoSteps",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateWorkflowDtoSchemaIds",
            "key": "schemaIds",
            "schema": {
              "generatedName": "updateWorkflowDtoSchemaIds",
              "value": {
                "generatedName": "UpdateWorkflowDtoSchemaIds",
                "description": "The schema ids.",
                "value": {
                  "description": "The schema ids.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpdateWorkflowDtoSchemaIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "UpdateWorkflowDtoSchemaIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateWorkflowDtoInitial",
            "key": "initial",
            "schema": {
              "description": "The initial step.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UpdateWorkflowDtoInitial",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateWorkflowDto",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {
    "appName": {
      "generatedName": "AppName",
      "schema": {
        "type": "string"
      }
    }
  },
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "squidex-oauth-auth": {
      "type": "bearer"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}