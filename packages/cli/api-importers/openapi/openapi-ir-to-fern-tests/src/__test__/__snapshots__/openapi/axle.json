{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "types": {
          "Address": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "addressLine1": {
                "type": "optional<string>",
              },
              "addressLine2": {
                "type": "optional<string>",
              },
              "city": {
                "type": "optional<string>",
              },
              "country": {
                "type": "optional<string>",
              },
              "postalCode": {
                "type": "optional<string>",
              },
              "state": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Carrier": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "type": "Address",
              },
              "domain": "string",
              "id": "string",
              "logoUrl": {
                "type": "optional<string>",
              },
              "modifiedAt": "string",
              "name": "string",
              "phone": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Coverage": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "CoverageCode",
              "deductible": {
                "type": "optional<integer>",
              },
              "label": "string",
              "limitPerAccident": {
                "type": "optional<integer>",
              },
              "limitPerPerson": {
                "type": "optional<integer>",
              },
              "property": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CoverageCode": {
            "enum": [
              "BI",
              "PD",
              "UMBI",
              "UMPD",
              "UIMBI",
              "UIMPD",
              "COLL",
              "COMP",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Error": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "Provides a reason for why the operation failed, if available.",
                "type": "optional<string>",
              },
              "success": {
                "type": "optional<Success>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Insured": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "dateOfBirth": {
                "type": "optional<string>",
              },
              "dateOfBirthYear": {
                "type": "optional<string>",
              },
              "firstName": "string",
              "lastName": "string",
              "licenseNo": {
                "type": "optional<string>",
              },
              "licenseState": {
                "type": "optional<string>",
              },
              "licenseStatus": {
                "type": "optional<string>",
              },
              "property": {
                "type": "optional<string>",
              },
              "type": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Property": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": {
                "type": "Vehicle",
              },
              "id": "string",
              "type": "literal<"vehicle">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Success": {
            "docs": "Indicates whether the operation was performed successfully.",
            "type": "boolean",
          },
          "ThirdParty": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "type": "optional<Address>",
              },
              "name": "string",
              "property": {
                "type": "optional<string>",
              },
              "type": {
                "default": "interest",
                "type": "ThirdPartyType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ThirdPartyType": {
            "default": "interest",
            "enum": [
              "lienholder",
              "lessor",
              "interest",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "User": {
            "docs": "User to attach to Ignition session. If user is set, unique `id` must be provided.",
            "inline": undefined,
            "properties": {
              "email": {
                "docs": "User's email address.",
                "type": "optional<string>",
              },
              "firstName": {
                "docs": "User's first name.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Your application's unique user id.",
                "type": "string",
              },
              "lastName": {
                "docs": "User's last name.",
                "type": "optional<string>",
              },
              "phone": {
                "docs": "User's phone number in E.164 format.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Vehicle": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "bodyStyle": {
                "type": "optional<string>",
              },
              "make": "string",
              "model": "string",
              "vin": "string",
              "year": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  Address:
    properties:
      addressLine1:
        type: optional<string>
      country:
        type: optional<string>
      addressLine2:
        type: optional<string>
      state:
        type: optional<string>
      city:
        type: optional<string>
      postalCode:
        type: optional<string>
    source:
      openapi: ../openapi.yml
  Carrier:
    properties:
      id: string
      name: string
      domain: string
      address:
        type: Address
      phone: string
      logoUrl:
        type: optional<string>
      modifiedAt: string
    source:
      openapi: ../openapi.yml
  CoverageCode:
    enum:
      - BI
      - PD
      - UMBI
      - UMPD
      - UIMBI
      - UIMPD
      - COLL
      - COMP
    inline: true
    source:
      openapi: ../openapi.yml
  Coverage:
    properties:
      property:
        type: optional<string>
      code: CoverageCode
      label: string
      limitPerPerson:
        type: optional<integer>
      limitPerAccident:
        type: optional<integer>
      deductible:
        type: optional<integer>
    source:
      openapi: ../openapi.yml
  Property:
    properties:
      id: string
      type: literal<"vehicle">
      data:
        type: Vehicle
    source:
      openapi: ../openapi.yml
  Vehicle:
    properties:
      bodyStyle:
        type: optional<string>
      vin: string
      model: string
      year: string
      make: string
    source:
      openapi: ../openapi.yml
  Insured:
    properties:
      property:
        type: optional<string>
      firstName: string
      lastName: string
      dateOfBirthYear:
        type: optional<string>
      licenseNo:
        type: optional<string>
      licenseState:
        type: optional<string>
      licenseStatus:
        type: optional<string>
      dateOfBirth:
        type: optional<string>
      type:
        type: optional<string>
    source:
      openapi: ../openapi.yml
  ThirdPartyType:
    enum:
      - lienholder
      - lessor
      - interest
    default: interest
    inline: true
    source:
      openapi: ../openapi.yml
  ThirdParty:
    properties:
      property:
        type: optional<string>
      type:
        type: ThirdPartyType
        default: interest
      name: string
      address:
        type: optional<Address>
    source:
      openapi: ../openapi.yml
  User:
    docs: >-
      User to attach to Ignition session. If user is set, unique `id` must be
      provided.
    properties:
      id:
        type: string
        docs: Your application's unique user id.
      firstName:
        type: optional<string>
        docs: User's first name.
      lastName:
        type: optional<string>
        docs: User's last name.
      email:
        type: optional<string>
        docs: User's email address.
      phone:
        type: optional<string>
        docs: User's phone number in E.164 format.
    source:
      openapi: ../openapi.yml
  Success:
    type: boolean
    docs: Indicates whether the operation was performed successfully.
  Error:
    properties:
      success:
        type: optional<Success>
      message:
        type: optional<string>
        docs: Provides a reason for why the operation failed, if available.
    source:
      openapi: ../openapi.yml
",
    },
    "accounts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "GetAccount": {
              "auth": false,
              "display-name": "Get Account",
              "docs": "The Get Account method will return an Account object including high-level account information (e.g., name) and any children objects (e.g., Policies) associated with the Account. Please note that this method will NOT refresh the Account object.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "carrier": "carrier",
                        "createdAt": "createdAt",
                        "email": "email",
                        "firstName": "firstName",
                        "id": "id",
                        "lastName": "lastName",
                        "modifiedAt": "modifiedAt",
                        "phone": "phone",
                        "policies": [
                          "policies",
                        ],
                        "refreshedAt": "refreshedAt",
                      },
                      "success": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/accounts/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique ID for the requested account. Returned as part of the Token Exchange flow in exchangeToken.",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetAccountRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Set to *true* if you would like to expand related entities (e.g., account, policy). Defaults to *false*.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "GetAccountResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Account": {
            "docs": "An Account represents an account with an insurance carrier and includes high-level account information (e.g. name) and any Policy objects associated with the Account.",
            "inline": undefined,
            "properties": {
              "carrier": "string",
              "createdAt": "string",
              "email": {
                "type": "optional<string>",
              },
              "firstName": "string",
              "id": "string",
              "lastName": "string",
              "modifiedAt": "string",
              "phone": {
                "type": "optional<string>",
              },
              "policies": "list<string>",
              "refreshedAt": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetAccountResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<Account>",
              "success": "optional<root.Success>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Policy": {
            "docs": "A Policy represents a specific policy associated with an Account and includes high-level policy information (e.g. policy number) and any children objects (e.g., coverages) associated with the policy.",
            "inline": undefined,
            "properties": {
              "account": "string",
              "address": {
                "type": "root.Address",
              },
              "carrier": "string",
              "coverages": {
                "docs": "",
                "type": "list<root.Coverage>",
              },
              "createdAt": "string",
              "effectiveDate": "string",
              "expirationDate": "string",
              "id": "string",
              "insureds": {
                "docs": "",
                "type": "list<root.Insured>",
              },
              "isActive": "boolean",
              "modifiedAt": "string",
              "policyNumber": "string",
              "properties": {
                "docs": "",
                "type": "list<root.Property>",
              },
              "refreshedAt": "string",
              "thirdParties": {
                "docs": "",
                "type": "list<root.ThirdParty>",
              },
              "type": "PolicyType",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PolicyType": {
            "enum": [
              "auto",
              "motorcycle",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetAccountResponse:
    properties:
      success: optional<root.Success>
      data: optional<Account>
    source:
      openapi: ../openapi.yml
  Account:
    docs: >-
      An Account represents an account with an insurance carrier and includes
      high-level account information (e.g. name) and any Policy objects
      associated with the Account.
    properties:
      id: string
      carrier: string
      firstName: string
      lastName: string
      phone:
        type: optional<string>
      email:
        type: optional<string>
      policies: list<string>
      createdAt: string
      modifiedAt: string
      refreshedAt: string
    source:
      openapi: ../openapi.yml
  PolicyType:
    enum:
      - auto
      - motorcycle
    inline: true
    source:
      openapi: ../openapi.yml
  Policy:
    docs: >-
      A Policy represents a specific policy associated with an Account and
      includes high-level policy information (e.g. policy number) and any
      children objects (e.g., coverages) associated with the policy.
    properties:
      id: string
      account: string
      type: PolicyType
      carrier: string
      policyNumber: string
      isActive: boolean
      effectiveDate: string
      expirationDate: string
      address:
        type: root.Address
      coverages:
        docs: ''
        type: list<root.Coverage>
      properties:
        docs: ''
        type: list<root.Property>
      insureds:
        docs: ''
        type: list<root.Insured>
      thirdParties:
        docs: ''
        type: list<root.ThirdParty>
      createdAt: string
      modifiedAt: string
      refreshedAt: string
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    GetAccount:
      path: /accounts/{id}
      method: GET
      auth: false
      docs: >-
        The Get Account method will return an Account object including
        high-level account information (e.g., name) and any children objects
        (e.g., Policies) associated with the Account. Please note that this
        method will NOT refresh the Account object.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The unique ID for the requested account. Returned as part of the
            Token Exchange flow in exchangeToken.
      display-name: Get Account
      request:
        name: GetAccountRequest
        query-parameters:
          expand:
            type: optional<boolean>
            docs: >-
              Set to *true* if you would like to expand related entities (e.g.,
              account, policy). Defaults to *false*.
      response:
        docs: ''
        type: GetAccountResponse
        status-code: 200
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              success: true
              data:
                id: id
                carrier: carrier
                firstName: firstName
                lastName: lastName
                phone: phone
                email: email
                policies:
                  - policies
                createdAt: createdAt
                modifiedAt: modifiedAt
                refreshedAt: refreshedAt
  source:
    openapi: ../openapi.yml
",
    },
    "carriers.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "GetCarrier": {
              "auth": false,
              "display-name": "Get Carrier",
              "docs": "The Get Carrier method returns a Carrier object that include additional details about an Axle-supported insurance carrier.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "address": {
                          "addressLine1": "addressLine1",
                          "addressLine2": "addressLine2",
                          "city": "city",
                          "country": "country",
                          "postalCode": "postalCode",
                          "state": "state",
                        },
                        "domain": "domain",
                        "id": "id",
                        "logoUrl": "logoUrl",
                        "modifiedAt": "modifiedAt",
                        "name": "name",
                        "phone": "phone",
                      },
                      "success": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/carriers/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique ID for the requested carrier. Returned in Account and Policy objects as `carrier`.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "GetCarrierResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "GetCarriers": {
              "auth": false,
              "display-name": "Get Carriers",
              "docs": "The Get Carriers method returns an array of Carrier objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "data": [
                        {
                          "address": {},
                          "domain": "domain",
                          "id": "id",
                          "logoUrl": "logoUrl",
                          "modifiedAt": "modifiedAt",
                          "name": "name",
                          "phone": "phone",
                        },
                      ],
                      "success": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/carriers",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "GetCarriersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetCarrierResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<root.Carrier>",
              "success": "optional<root.Success>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCarriersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<list<root.Carrier>>",
              "success": "optional<root.Success>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  GetCarrierResponse:
    properties:
      success: optional<root.Success>
      data: optional<root.Carrier>
    source:
      openapi: ../openapi.yml
  GetCarriersResponse:
    properties:
      success: optional<root.Success>
      data: optional<list<root.Carrier>>
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    GetCarrier:
      path: /carriers/{id}
      method: GET
      auth: false
      docs: >-
        The Get Carrier method returns a Carrier object that include additional
        details about an Axle-supported insurance carrier.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The unique ID for the requested carrier. Returned in Account and
            Policy objects as `carrier`.
      display-name: Get Carrier
      response:
        docs: ''
        type: GetCarrierResponse
        status-code: 200
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              success: true
              data:
                id: id
                name: name
                domain: domain
                address:
                  addressLine1: addressLine1
                  country: country
                  addressLine2: addressLine2
                  state: state
                  city: city
                  postalCode: postalCode
                phone: phone
                logoUrl: logoUrl
                modifiedAt: modifiedAt
    GetCarriers:
      path: /carriers
      method: GET
      auth: false
      docs: The Get Carriers method returns an array of Carrier objects.
      source:
        openapi: ../openapi.yml
      display-name: Get Carriers
      response:
        docs: ''
        type: GetCarriersResponse
        status-code: 200
      examples:
        - headers: {}
          response:
            body:
              success: true
              data:
                - id: id
                  name: name
                  domain: domain
                  address: {}
                  phone: phone
                  logoUrl: logoUrl
                  modifiedAt: modifiedAt
  source:
    openapi: ../openapi.yml
",
    },
    "ignition.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "StartIgnition": {
              "auth": false,
              "display-name": "Start Ignition",
              "docs": "Start an Ignition session. Returns the ignitionUri to direct the user to authenticate.",
              "examples": [
                {
                  "headers": {},
                  "request": {
                    "redirectUri": "https://example.com/redirect",
                    "webhookUri": "https://example.com/webhook",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "ignitionToken": "ur7EPeAa0km4wRlDrPJ4Z",
                        "ignitionUri": "https://ignition.dev.axle.insure/?token=ur7EPeAa0km4wRlDrPJ4Z",
                      },
                      "success": true,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/ignition",
              "request": {
                "body": {
                  "properties": {
                    "metadata": {
                      "docs": "Optional object to store ephermeral information about the session, such as `reservationTime`. Will be returned in webhook events.",
                      "type": "optional<map<string, unknown>>",
                    },
                    "redirectUri": {
                      "docs": "The URI we should direct the user to after authenticating successfully.",
                      "type": "optional<string>",
                    },
                    "user": "optional<root.User>",
                    "webhookUri": {
                      "docs": "The URI we should send updates about this session or the resulting account to.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "StartIgnitionRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "StartIgnitionResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "StartIgnitionResponse": {
            "docs": "",
            "inline": undefined,
            "properties": {
              "data": "StartIgnitionResponseData",
              "success": {
                "type": "root.Success",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "StartIgnitionResponseData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "ignitionToken": {
                "docs": "The unique ID for the ignition session.",
                "type": "string",
              },
              "ignitionUri": {
                "docs": "The url you should direct the user to to link their account.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  StartIgnitionResponseData:
    properties:
      ignitionUri:
        type: string
        docs: The url you should direct the user to to link their account.
      ignitionToken:
        type: string
        docs: The unique ID for the ignition session.
    source:
      openapi: ../openapi.yml
    inline: true
  StartIgnitionResponse:
    docs: ''
    properties:
      success:
        type: root.Success
      data: StartIgnitionResponseData
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    StartIgnition:
      path: /ignition
      method: POST
      auth: false
      docs: >-
        Start an Ignition session. Returns the ignitionUri to direct the user to
        authenticate.
      source:
        openapi: ../openapi.yml
      display-name: Start Ignition
      request:
        name: StartIgnitionRequest
        body:
          properties:
            redirectUri:
              type: optional<string>
              docs: >-
                The URI we should direct the user to after authenticating
                successfully.
            webhookUri:
              type: optional<string>
              docs: >-
                The URI we should send updates about this session or the
                resulting account to.
            user: optional<root.User>
            metadata:
              type: optional<map<string, unknown>>
              docs: >-
                Optional object to store ephermeral information about the
                session, such as `reservationTime`. Will be returned in webhook
                events.
        content-type: application/json
      response:
        docs: ''
        type: StartIgnitionResponse
        status-code: 200
      examples:
        - headers: {}
          request:
            redirectUri: https://example.com/redirect
            webhookUri: https://example.com/webhook
          response:
            body:
              success: true
              data:
                ignitionUri: https://ignition.dev.axle.insure/?token=ur7EPeAa0km4wRlDrPJ4Z
                ignitionToken: ur7EPeAa0km4wRlDrPJ4Z
  source:
    openapi: ../openapi.yml
",
    },
    "policies.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "accounts": "accounts.yml",
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "GetPolicy": {
              "auth": false,
              "display-name": "Get Policy",
              "docs": "The Get Policy method returns a Policy object including high-level policy information (e.g., policy number) and any children objects (e.g., Coverages) associated with the Policy. Please note that this method will NOT refresh the Policy object.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "account": "account",
                        "address": {
                          "addressLine1": "addressLine1",
                          "addressLine2": "addressLine2",
                          "city": "city",
                          "country": "country",
                          "postalCode": "postalCode",
                          "state": "state",
                        },
                        "carrier": "carrier",
                        "coverages": [
                          {
                            "code": "BI",
                            "label": "Bodily Injury Liability",
                            "limitPerAccident": 500000,
                            "limitPerPerson": 250000,
                          },
                        ],
                        "createdAt": "createdAt",
                        "effectiveDate": "effectiveDate",
                        "expirationDate": "expirationDate",
                        "id": "id",
                        "insureds": [
                          {
                            "dateOfBirth": "",
                            "dateOfBirthYear": "1993",
                            "firstName": "Armaan",
                            "lastName": "Sikand",
                            "licenseNo": "•••••7259",
                            "licenseState": "GA",
                            "licenseStatus": "Valid",
                            "type": "Primary named insured",
                          },
                        ],
                        "isActive": true,
                        "modifiedAt": "modifiedAt",
                        "policyNumber": "policyNumber",
                        "properties": [
                          {
                            "data": {
                              "make": "TRIUMPH",
                              "model": "STREET SCRAMBLER",
                              "vin": "SMTD44GN3HT812287",
                              "year": "2017",
                            },
                            "id": "prp_uSdzLVpi8c76H7kl6AQ-F",
                            "type": "vehicle",
                          },
                        ],
                        "refreshedAt": "refreshedAt",
                        "thirdParties": [
                          {
                            "address": {
                              "addressLine1": "Po Box 105205",
                              "city": "Atlanta",
                              "postalCode": "30348-5205",
                              "state": "GA",
                            },
                            "name": "Georgias Own Credit Union",
                            "type": "lienholder",
                          },
                        ],
                        "type": "auto",
                      },
                      "success": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/policies/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique ID for the requested policy. Returned by Get Account for each Policy associated with the Account.",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetPolicyRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Set to *true* if you would like to expand related entities (e.g., account, policy). Defaults to *false*.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "GetPolicyResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetPolicyResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<accounts.Policy>",
              "success": "optional<root.Success>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
  accounts: accounts.yml
types:
  GetPolicyResponse:
    properties:
      success: optional<root.Success>
      data: optional<accounts.Policy>
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    GetPolicy:
      path: /policies/{id}
      method: GET
      auth: false
      docs: >-
        The Get Policy method returns a Policy object including high-level
        policy information (e.g., policy number) and any children objects (e.g.,
        Coverages) associated with the Policy. Please note that this method will
        NOT refresh the Policy object.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The unique ID for the requested policy. Returned by Get Account for
            each Policy associated with the Account.
      display-name: Get Policy
      request:
        name: GetPolicyRequest
        query-parameters:
          expand:
            type: optional<boolean>
            docs: >-
              Set to *true* if you would like to expand related entities (e.g.,
              account, policy). Defaults to *false*.
      response:
        docs: ''
        type: GetPolicyResponse
        status-code: 200
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              success: true
              data:
                id: id
                account: account
                type: auto
                carrier: carrier
                policyNumber: policyNumber
                isActive: true
                effectiveDate: effectiveDate
                expirationDate: expirationDate
                address:
                  addressLine1: addressLine1
                  country: country
                  addressLine2: addressLine2
                  state: state
                  city: city
                  postalCode: postalCode
                coverages:
                  - code: BI
                    label: Bodily Injury Liability
                    limitPerPerson: 250000
                    limitPerAccident: 500000
                properties:
                  - id: prp_uSdzLVpi8c76H7kl6AQ-F
                    type: vehicle
                    data:
                      vin: SMTD44GN3HT812287
                      model: STREET SCRAMBLER
                      year: '2017'
                      make: TRIUMPH
                insureds:
                  - firstName: Armaan
                    lastName: Sikand
                    dateOfBirthYear: '1993'
                    licenseNo: •••••7259
                    licenseState: GA
                    licenseStatus: Valid
                    dateOfBirth: ''
                    type: Primary named insured
                thirdParties:
                  - type: lienholder
                    name: Georgias Own Credit Union
                    address:
                      addressLine1: Po Box 105205
                      state: GA
                      city: Atlanta
                      postalCode: 30348-5205
                createdAt: createdAt
                modifiedAt: modifiedAt
                refreshedAt: refreshedAt
  source:
    openapi: ../openapi.yml
",
    },
    "tokens.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "ExchangeToken": {
              "auth": false,
              "display-name": "Exchange Token",
              "docs": "Exchange an authorization code for an access token. Ignition returns an authCode as a query parameter at the redirectUrl upon successful completion of the Ignition flow.

Auth codes are ephemeral and expire after 10 minutes, while accessTokens do not expire.",
              "examples": [
                {
                  "headers": {},
                  "request": {
                    "authCode": "authCode",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "accessToken": "accessToken",
                        "account": "account",
                        "policies": [
                          {
                            "key": "value",
                          },
                        ],
                      },
                      "success": true,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/token/exchange",
              "request": {
                "body": {
                  "properties": {
                    "authCode": {
                      "docs": "The authorization code obtained after a user successfully links their account via Ignition. Returned as a query parameter at the redirectUri.",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ExchangeTokenRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "ExchangeTokenResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ExchangeTokenResponse": {
            "docs": "",
            "inline": undefined,
            "properties": {
              "data": "ExchangeTokenResponseData",
              "success": {
                "type": "root.Success",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ExchangeTokenResponseData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accessToken": {
                "docs": "The token required for access to the requested Account and Policy objects.",
                "type": "string",
              },
              "account": {
                "docs": "The unique id for the Account object.",
                "type": "string",
              },
              "policies": {
                "docs": "List of unique ids for the Policy objects. If Ignition is configured to select a single policy (as is the default), the list will only contain 1 item.",
                "type": "list<unknown>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  ExchangeTokenResponseData:
    properties:
      accessToken:
        type: string
        docs: >-
          The token required for access to the requested Account and Policy
          objects.
      account:
        type: string
        docs: The unique id for the Account object.
      policies:
        docs: >-
          List of unique ids for the Policy objects. If Ignition is configured
          to select a single policy (as is the default), the list will only
          contain 1 item.
        type: list<unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ExchangeTokenResponse:
    docs: ''
    properties:
      success:
        type: root.Success
      data: ExchangeTokenResponseData
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    ExchangeToken:
      path: /token/exchange
      method: POST
      auth: false
      docs: >-
        Exchange an authorization code for an access token. Ignition returns an
        authCode as a query parameter at the redirectUrl upon successful
        completion of the Ignition flow.


        Auth codes are ephemeral and expire after 10 minutes, while accessTokens
        do not expire.
      source:
        openapi: ../openapi.yml
      display-name: Exchange Token
      request:
        name: ExchangeTokenRequest
        body:
          properties:
            authCode:
              type: string
              docs: >-
                The authorization code obtained after a user successfully links
                their account via Ignition. Returned as a query parameter at the
                redirectUri.
        content-type: application/json
      response:
        docs: ''
        type: ExchangeTokenResponse
        status-code: 200
      examples:
        - headers: {}
          request:
            authCode: authCode
          response:
            body:
              success: true
              data:
                accessToken: accessToken
                account: account
                policies:
                  - key: value
  source:
    openapi: ../openapi.yml
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "apiKeyAuth",
      "auth-schemes": {
        "apiKeyAuth": {
          "header": "x-access-token",
          "name": "apiKey",
          "type": "string",
        },
      },
      "default-environment": "Production",
      "display-name": "Axle API",
      "environments": {
        "Production": "https://api.axle.insure",
        "Sandbox": "https://sandbox.axle.insure",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "headers": {
        "x-client-id": {
          "docs": "Your client ID. This will be shared with you during onboarding.",
          "name": "clientId",
          "type": "string",
        },
        "x-client-secret": {
          "docs": "Your secret API key. This will be shared with you during onboarding and should be considered sensitive - it’s a password after all!",
          "name": "clientSecret",
          "type": "string",
        },
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Axle API
default-environment: Production
environments:
  Production: https://api.axle.insure
  Sandbox: https://sandbox.axle.insure
headers:
  x-client-id:
    type: string
    name: clientId
    docs: Your client ID. This will be shared with you during onboarding.
  x-client-secret:
    type: string
    name: clientSecret
    docs: >-
      Your secret API key. This will be shared with you during onboarding and
      should be considered sensitive - it’s a password after all!
auth-schemes:
  apiKeyAuth:
    header: x-access-token
    name: apiKey
    type: string
auth: apiKeyAuth
",
  },
}