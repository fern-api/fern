{
  "type": "openapi",
  "value": {
    "openapi": "3.0.0",
    "info": {
      "title": "Axle API",
      "contact": {},
      "version": "1.0"
    },
    "servers": [
      {
        "url": "https://api.axle.insure",
        "variables": {},
        "description": "Production",
        "x-fern-server-name": "Production"
      },
      {
        "description": "Sandbox",
        "url": "https://sandbox.axle.insure",
        "x-fern-server-name": "Sandbox"
      }
    ],
    "paths": {
      "/ignition": {
        "post": {
          "summary": "Start Ignition",
          "description": "Start an Ignition session. Returns the ignitionUri to direct the user to authenticate.",
          "operationId": "StartIgnition",
          "parameters": [
            {
              "$ref": "#/components/parameters/x-client-id"
            },
            {
              "$ref": "#/components/parameters/x-client-secret"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "redirectUri": {
                      "type": "string",
                      "description": "The URI we should direct the user to after authenticating successfully."
                    },
                    "webhookUri": {
                      "type": "string",
                      "description": "The URI we should send updates about this session or the resulting account to."
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Optional object to store ephermeral information about the session, such as `reservationTime`. Will be returned in webhook events."
                    }
                  }
                },
                "example": {
                  "redirectUri": "https://example.com/redirect",
                  "webhookUri": "https://example.com/webhook"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "description": "",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "success": true,
                        "data": {
                          "ignitionToken": "ur7EPeAa0km4wRlDrPJ4Z",
                          "ignitionUri": "https://ignition.dev.axle.insure/?token=ur7EPeAa0km4wRlDrPJ4Z"
                        }
                      }
                    },
                    "properties": {
                      "success": {
                        "$ref": "#/components/schemas/Success"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "ignitionUri",
                          "ignitionToken"
                        ],
                        "properties": {
                          "ignitionUri": {
                            "type": "string",
                            "description": "The url you should direct the user to to link their account."
                          },
                          "ignitionToken": {
                            "type": "string",
                            "description": "The unique ID for the ignition session."
                          }
                        }
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  },
                  "example": {
                    "success": true,
                    "data": {
                      "ignitionToken": "ur7EPeAa0km4wRlDrPJ4Z",
                      "ignitionUri": "https://ignition.dev.axle.insure/?token=ur7EPeAa0km4wRlDrPJ4Z"
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "tags": [
            "Ignition"
          ]
        }
      },
      "/token/exchange": {
        "post": {
          "summary": "Exchange Token",
          "description": "Exchange an authorization code for an access token. Ignition returns an authCode as a query parameter at the redirectUrl upon successful completion of the Ignition flow.\n\nAuth codes are ephemeral and expire after 10 minutes, while accessTokens do not expire.",
          "operationId": "ExchangeToken",
          "parameters": [
            {
              "$ref": "#/components/parameters/x-client-id"
            },
            {
              "$ref": "#/components/parameters/x-client-secret"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "authCode": "LGUgD5ZnqWy3pThdOLUsT"
                    }
                  },
                  "properties": {
                    "authCode": {
                      "type": "string",
                      "description": "The authorization code obtained after a user successfully links their account via Ignition. Returned as a query parameter at the redirectUri."
                    }
                  },
                  "required": [
                    "authCode"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "description": "",
                    "type": "object",
                    "properties": {
                      "success": {
                        "$ref": "#/components/schemas/Success"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "accessToken",
                          "account",
                          "policies"
                        ],
                        "properties": {
                          "accessToken": {
                            "type": "string",
                            "description": "The token required for access to the requested Account and Policy objects."
                          },
                          "account": {
                            "type": "string",
                            "description": "The unique id for the Account object."
                          },
                          "policies": {
                            "type": "array",
                            "description": "List of unique ids for the Policy objects. If Ignition is configured to select a single policy (as is the default), the list will only contain 1 item."
                          }
                        }
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  }
                }
              }
            }
          },
          "deprecated": false,
          "tags": [
            "Tokens"
          ]
        }
      },
      "/accounts/{id}": {
        "get": {
          "summary": "Get Account",
          "description": "The Get Account method will return an Account object including high-level account information (e.g., name) and any children objects (e.g., Policies) associated with the Account. Please note that this method will NOT refresh the Account object.",
          "operationId": "GetAccount",
          "parameters": [
            {
              "$ref": "#/components/parameters/x-client-id"
            },
            {
              "$ref": "#/components/parameters/x-client-secret"
            },
            {
              "$ref": "#/components/parameters/expand"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "$ref": "#/components/schemas/Success"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "tags": [
            "Accounts"
          ]
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/account"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "/policies/{id}": {
        "get": {
          "summary": "Get Policy",
          "description": "The Get Policy method returns a Policy object including high-level policy information (e.g., policy number) and any children objects (e.g., Coverages) associated with the Policy. Please note that this method will NOT refresh the Policy object.",
          "operationId": "GetPolicy",
          "parameters": [
            {
              "$ref": "#/components/parameters/x-client-id"
            },
            {
              "$ref": "#/components/parameters/x-client-secret"
            },
            {
              "$ref": "#/components/parameters/expand"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "$ref": "#/components/schemas/Success"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Policy"
                      }
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "tags": [
            "Policies"
          ]
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/policy"
          }
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "/carriers/{id}": {
        "get": {
          "summary": "Get Carrier",
          "description": "The Get Carrier method returns a Carrier object that include additional details about an Axle-supported insurance carrier.",
          "operationId": "GetCarrier",
          "parameters": [
            {
              "$ref": "#/components/parameters/x-client-id"
            },
            {
              "$ref": "#/components/parameters/x-client-secret"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "$ref": "#/components/schemas/Success"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Carrier"
                      }
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "tags": [
            "Carriers"
          ]
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/carrier"
          }
        ]
      },
      "/carriers": {
        "get": {
          "summary": "Get Carriers",
          "description": "The Get Carriers method returns an array of Carrier objects.",
          "operationId": "GetCarriers",
          "parameters": [
            {
              "$ref": "#/components/parameters/x-client-id"
            },
            {
              "$ref": "#/components/parameters/x-client-secret"
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "$ref": "#/components/schemas/Success"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Carrier"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "tags": [
            "Carriers"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "Account": {
          "title": "Account",
          "type": "object",
          "description": "An Account represents an account with an insurance carrier and includes high-level account information (e.g. name) and any Policy objects associated with the Account.",
          "x-examples": {
            "example": {
              "id": "acc_gM2wn_gaqUv76ZljeVXOv",
              "firstName": "John",
              "lastName": "Smith",
              "email": "john.smith@grr.la",
              "carrier": "state-farm",
              "policies": [
                "pol_CbxGmGWnp9bGAFCC-eod2"
              ],
              "connection": {
                "status": "active",
                "updatedAt": "2022-01-01T00:00:00.000Z"
              },
              "createdAt": "2022-01-01T00:00:00.000Z",
              "modifiedAt": "2022-01-01T00:00:00.000Z",
              "refreshedAt": "2022-01-01T00:00:00.000Z"
            }
          },
          "x-tags": [
            "Accounts"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "carrier": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "createdAt": {
              "type": "string"
            },
            "modifiedAt": {
              "type": "string"
            },
            "refreshedAt": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "carrier",
            "firstName",
            "lastName",
            "policies",
            "createdAt",
            "modifiedAt",
            "refreshedAt"
          ]
        },
        "Policy": {
          "title": "Policy",
          "type": "object",
          "description": "A Policy represents a specific policy associated with an Account and includes high-level policy information (e.g. policy number) and any children objects (e.g., coverages) associated with the policy.",
          "x-examples": {
            "example": {
              "id": "pol_CbxGmGWnp9bGAFCC-eod2",
              "account": "acc_gM2wn_gaqUv76ZljeVXOv",
              "type": "auto",
              "carrier": "state-farm",
              "policyNumber": "123456789",
              "isActive": true,
              "effectiveDate": "2021-10-22T04:00:00.000Z",
              "expirationDate": "2022-10-22T04:00:00.000Z",
              "address": {
                "addressLine1": "123 Fake St.",
                "addressLine2": "Unit 456",
                "city": "Atlanta",
                "state": "Georgia",
                "postalCode": "30315",
                "country": "USA"
              },
              "coverages": [
                {
                  "limitPerPerson": 250000,
                  "code": "BI",
                  "label": "Bodily Injury Liability",
                  "limitPerAccident": 500000,
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F"
                },
                {
                  "code": "PD",
                  "label": "Property Damage Liability",
                  "limitPerAccident": 100000,
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F"
                },
                {
                  "limitPerPerson": 100000,
                  "code": "UMBI",
                  "label": "Uninsured Bodily Injury Liability",
                  "limitPerAccident": 300000,
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F"
                },
                {
                  "code": "COMP",
                  "label": "Comprehensive",
                  "deductible": 375,
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F"
                },
                {
                  "code": "COLL",
                  "label": "Collision",
                  "deductible": 375,
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F"
                },
                {
                  "limitPerPerson": 250000,
                  "code": "BI",
                  "label": "Bodily Injury Liability",
                  "limitPerAccident": 500000,
                  "property": "prp_tmGUxLpgHjmW9r6M6WjhS"
                },
                {
                  "code": "PD",
                  "label": "Property Damage Liability",
                  "limitPerAccident": 100000,
                  "property": "prp_tmGUxLpgHjmW9r6M6WjhS"
                },
                {
                  "limitPerPerson": 100000,
                  "code": "UMBI",
                  "label": "Uninsured Bodily Injury Liability",
                  "limitPerAccident": 300000,
                  "property": "prp_tmGUxLpgHjmW9r6M6WjhS"
                }
              ],
              "properties": [
                {
                  "id": "prp_uSdzLVpi8c76H7kl6AQ-F",
                  "type": "vehicle",
                  "data": {
                    "bodyStyle": "sedan",
                    "vin": "WDDWJ8EB4KF776265",
                    "model": "C 300",
                    "year": "2019",
                    "make": "Mercedes-Benz"
                  }
                },
                {
                  "id": "prp_tmGUxLpgHjmW9r6M6WjhS",
                  "type": "vehicle",
                  "data": {
                    "bodyStyle": "minivan",
                    "vin": "5FNRL38209B014050",
                    "model": "Odyssey",
                    "year": "2009",
                    "make": "Honda"
                  }
                }
              ],
              "thirdParties": [
                {
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F",
                  "type": "lienholder",
                  "name": "Super Credit Union",
                  "address": {
                    "addressLine1": "PO Box 123456",
                    "country": null,
                    "addressLine2": null,
                    "state": "GA",
                    "city": "Atlanta",
                    "postalCode": "30348-5245"
                  }
                },
                {
                  "property": "prp_tmGUxLpgHjmW9r6M6WjhS",
                  "type": "lessor",
                  "name": "Super Leasing Trust",
                  "address": {
                    "addressLine1": "PO Box 123456",
                    "country": null,
                    "addressLine2": null,
                    "state": "GA",
                    "city": "Atlanta",
                    "postalCode": "30348-5245"
                  }
                }
              ],
              "insureds": [
                {
                  "firstName": "John",
                  "lastName": "Smith",
                  "dateOfBirthYear": "1990",
                  "licenseNo": "•••••1234",
                  "licenseState": "GA",
                  "licenseStatus": "Valid",
                  "type": "Primary",
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F"
                },
                {
                  "firstName": "Jane",
                  "lastName": "Doe",
                  "dateOfBirthYear": "1992",
                  "licenseNo": "•••••5678",
                  "licenseState": "GA",
                  "licenseStatus": "Valid",
                  "type": "Secondary",
                  "property": "prp_uSdzLVpi8c76H7kl6AQ-F"
                },
                {
                  "firstName": "Jane",
                  "lastName": "Doe",
                  "dateOfBirthYear": "1992",
                  "licenseNo": "•••••5678",
                  "licenseState": "GA",
                  "licenseStatus": "Valid",
                  "type": "Primary",
                  "property": "prp_tmGUxLpgHjmW9r6M6WjhS"
                }
              ],
              "createdAt": "2022-01-01T00:00:00.000Z",
              "modifiedAt": "2022-01-01T00:00:00.000Z",
              "refreshedAt": "2022-01-01T00:00:00.000Z"
            }
          },
          "x-tags": [
            "Accounts"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "account": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "auto",
                "motorcycle"
              ]
            },
            "carrier": {
              "type": "string"
            },
            "policyNumber": {
              "type": "string"
            },
            "isActive": {
              "type": "boolean"
            },
            "effectiveDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            },
            "address": {
              "$ref": "#/components/schemas/Address"
            },
            "coverages": {
              "type": "array",
              "description": "",
              "items": {
                "$ref": "#/components/schemas/Coverage"
              }
            },
            "properties": {
              "type": "array",
              "description": "",
              "items": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "insureds": {
              "type": "array",
              "description": "",
              "items": {
                "$ref": "#/components/schemas/Insured"
              }
            },
            "thirdParties": {
              "type": "array",
              "description": "",
              "items": {
                "$ref": "#/components/schemas/ThirdParty"
              }
            },
            "createdAt": {
              "type": "string"
            },
            "modifiedAt": {
              "type": "string"
            },
            "refreshedAt": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "account",
            "type",
            "carrier",
            "policyNumber",
            "isActive",
            "effectiveDate",
            "expirationDate",
            "address",
            "coverages",
            "properties",
            "insureds",
            "thirdParties",
            "createdAt",
            "modifiedAt",
            "refreshedAt"
          ]
        },
        "Address": {
          "title": "Address",
          "type": "object",
          "x-examples": {
            "example-1": {
              "addressLine1": "string",
              "country": "string",
              "addressLine2": "string",
              "state": "string",
              "city": "string",
              "postalCode": "string"
            }
          },
          "x-internal": false,
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            }
          }
        },
        "Carrier": {
          "title": "Carrier",
          "type": "object",
          "x-examples": {
            "example-1": {
              "id": "state-farm",
              "name": "State Farm",
              "domain": "www.statefarm.com",
              "address": {
                "addressLine1": "One State Farm Plaza",
                "addressLine2": "",
                "city": "Bloomington",
                "state": "IL",
                "postalCode": "61710"
              },
              "phone": "+18007828332",
              "logoUrl": "https://example.com/state-farm.svg",
              "modifiedAt": "2023-04-04T19:27:55.523Z"
            }
          },
          "x-internal": false,
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "address": {
              "$ref": "#/components/schemas/Address"
            },
            "phone": {
              "type": "string"
            },
            "logoUrl": {
              "type": "string"
            },
            "modifiedAt": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "domain",
            "address",
            "phone",
            "modifiedAt"
          ]
        },
        "Coverage": {
          "title": "Coverage",
          "type": "object",
          "example": {
            "limitPerPerson": 250000,
            "code": "BI",
            "label": "Bodily Injury Liability",
            "limitPerAccident": 500000
          },
          "x-internal": false,
          "properties": {
            "property": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "enum": [
                "BI",
                "PD",
                "UMBI",
                "UMPD",
                "UIMBI",
                "UIMPD",
                "COLL",
                "COMP"
              ]
            },
            "label": {
              "type": "string"
            },
            "limitPerPerson": {
              "type": "integer",
              "format": "int32"
            },
            "limitPerAccident": {
              "type": "integer",
              "format": "int32"
            },
            "deductible": {
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "code",
            "label"
          ]
        },
        "Property": {
          "title": "Property",
          "type": "object",
          "example": {
            "id": "prp_uSdzLVpi8c76H7kl6AQ-F",
            "type": "vehicle",
            "data": {
              "vin": "SMTD44GN3HT812287",
              "model": "STREET SCRAMBLER",
              "year": "2017",
              "make": "TRIUMPH"
            }
          },
          "x-internal": false,
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "vehicle"
              ]
            },
            "data": {
              "$ref": "#/components/schemas/Vehicle"
            }
          },
          "required": [
            "id",
            "type",
            "data"
          ]
        },
        "Vehicle": {
          "title": "Vehicle",
          "type": "object",
          "x-examples": {
            "example": {
              "bodyStyle": "",
              "vin": "SMTD44GN3HT812287",
              "model": "STREET SCRAMBLER",
              "year": "2017",
              "make": "TRIUMPH"
            }
          },
          "x-internal": false,
          "properties": {
            "bodyStyle": {
              "type": "string"
            },
            "vin": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "year": {
              "type": "string"
            },
            "make": {
              "type": "string"
            }
          },
          "required": [
            "vin",
            "model",
            "year",
            "make"
          ]
        },
        "Insured": {
          "title": "Insured",
          "type": "object",
          "example": {
            "firstName": "Armaan",
            "lastName": "Sikand",
            "dateOfBirthYear": "1993",
            "licenseNo": "•••••7259",
            "licenseState": "GA",
            "licenseStatus": "Valid",
            "dateOfBirth": "",
            "type": "Primary named insured"
          },
          "x-internal": false,
          "properties": {
            "property": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "dateOfBirthYear": {
              "type": "string"
            },
            "licenseNo": {
              "type": "string"
            },
            "licenseState": {
              "type": "string"
            },
            "licenseStatus": {
              "type": "string"
            },
            "dateOfBirth": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ]
        },
        "ThirdParty": {
          "title": "Third Party",
          "type": "object",
          "example": {
            "name": "Georgias Own Credit Union",
            "type": "lienholder",
            "address": {
              "addressLine1": "Po Box 105205",
              "state": "GA",
              "city": "Atlanta",
              "postalCode": "30348-5205"
            }
          },
          "x-internal": false,
          "properties": {
            "property": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "lienholder",
                "lessor",
                "interest"
              ],
              "default": "interest"
            },
            "name": {
              "type": "string"
            },
            "address": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "required": [
            "type",
            "name"
          ]
        },
        "User": {
          "title": "User",
          "type": "object",
          "x-examples": {
            "example": {
              "id": "usr_foqnkvhwerq7h81",
              "firstName": "John",
              "lastName": "Smith",
              "email": "john@smith.com"
            }
          },
          "description": "User to attach to Ignition session. If user is set, unique `id` must be provided.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Your application's unique user id."
            },
            "firstName": {
              "type": "string",
              "description": "User's first name."
            },
            "lastName": {
              "type": "string",
              "description": "User's last name."
            },
            "email": {
              "type": "string",
              "description": "User's email address."
            },
            "phone": {
              "type": "string",
              "description": "User's phone number in E.164 format."
            }
          },
          "required": [
            "id"
          ]
        },
        "Success": {
          "title": "Success",
          "type": "boolean",
          "description": "Indicates whether the operation was performed successfully.",
          "x-internal": false,
          "x-examples": {}
        },
        "Error": {
          "title": "Error",
          "type": "object",
          "x-internal": false,
          "properties": {
            "success": {
              "$ref": "#/components/schemas/Success"
            },
            "message": {
              "type": "string",
              "description": "Provides a reason for why the operation failed, if available."
            }
          }
        }
      },
      "parameters": {
        "x-client-id": {
          "name": "x-client-id",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Your client ID. This will be shared with you during onboarding."
        },
        "x-client-secret": {
          "name": "x-client-secret",
          "in": "header",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Your secret API key. This will be shared with you during onboarding and should be considered sensitive - it’s a password after all!"
        },
        "account": {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique ID for the requested account. Returned as part of the Token Exchange flow in exchangeToken."
        },
        "policy": {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique ID for the requested policy. Returned by Get Account for each Policy associated with the Account."
        },
        "carrier": {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique ID for the requested carrier. Returned in Account and Policy objects as `carrier`."
        },
        "refresh": {
          "name": "refresh",
          "in": "query",
          "required": false,
          "schema": {
            "type": "boolean"
          },
          "description": "Set to *true* if you would like to request an update. Defaults to *false*."
        },
        "expand": {
          "name": "expand",
          "in": "query",
          "required": false,
          "schema": {
            "type": "boolean"
          },
          "description": "Set to *true* if you would like to expand related entities (e.g., account, policy). Defaults to *false*."
        },
        "type": {
          "name": "type",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Set to \"relink-account\" to start Ignition session to re-authenticate user. Must also provide `account`. "
        }
      },
      "responses": {},
      "securitySchemes": {
        "apiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "x-access-token"
        }
      }
    }
  }
}