{
  "title": "Deepgram API Specification",
  "description": "Deepgram's voice AI platform provides APIs for speech-to-text, text-to-speech, and language understanding. From medical transcription to autonomous agents, Deepgram is the go-to choice for developers of voice AI experiences.\nThe Deepgram API allows you to interact with Deepgram programmatically.\nYou can use our API to: - Transcribe speech to text. - Transform text to speech. - Analyze text. - Administer your Deepgram account.\n",
  "servers": [
    {
      "url": "https://api.deepgram.com",
      "description": "Deepgram Production API"
    }
  ],
  "websocketServers": [
    {
      "name": "public",
      "url": "wss://api.deepgram.com"
    }
  ],
  "tags": {
    "tagsById": {
      "Speech to Text": {
        "id": "Speech to Text",
        "description": "Power your apps with world-class speech recognition"
      },
      "Audio Intelligence": {
        "id": "Audio Intelligence",
        "description": "Analyze audio sources"
      },
      "Text Intelligence": {
        "id": "Text Intelligence",
        "description": "Analyze the content of text sources"
      },
      "Text to Speech": {
        "id": "Text to Speech",
        "description": "Transform text to speech"
      },
      "Management API": {
        "id": "Management API",
        "description": "Manage your projects"
      }
    },
    "orderedTagIds": [
      "Speech to Text",
      "Audio Intelligence",
      "Text Intelligence",
      "Text to Speech",
      "Management API"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "Transcribe and analyze pre-recorded audio",
      "audiences": [],
      "operationId": "listen",
      "tags": [
        "Speech to Text"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "URL to which we'll make the callback request",
          "name": "callback",
          "schema": {
            "generatedName": "ListenRequestCallback",
            "value": {
              "schema": {
                "example": "https://example.com",
                "type": "string"
              },
              "generatedName": "ListenRequestCallback",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "HTTP method by which the callback request will be made",
          "name": "callback_method",
          "schema": {
            "generatedName": "ListenRequestCallbackMethod",
            "value": {
              "generatedName": "ListenRequestCallbackMethod",
              "values": [
                {
                  "generatedName": "POST",
                  "value": "POST",
                  "casing": {}
                },
                {
                  "generatedName": "PUT",
                  "value": "PUT",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "POST",
                "value": "POST",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Custom topics you want the model to detect within your input audio or text if present Submit up to 100",
          "name": "custom_topic",
          "schema": {
            "generatedName": "ListenRequestCustomTopic",
            "value": {
              "value": {
                "generatedName": "ListenRequestCustomTopic",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListenRequestCustomTopic",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ListenRequestCustomTopicItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestCustomTopic",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param",
          "name": "custom_topic_mode",
          "schema": {
            "generatedName": "ListenRequestCustomTopicMode",
            "value": {
              "generatedName": "ListenRequestCustomTopicMode",
              "values": [
                {
                  "generatedName": "extended",
                  "value": "extended",
                  "casing": {}
                },
                {
                  "generatedName": "strict",
                  "value": "strict",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "extended",
                "value": "extended",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Custom intents you want the model to detect within your input audio if present",
          "name": "custom_intent",
          "schema": {
            "generatedName": "ListenRequestCustomIntent",
            "value": {
              "value": {
                "generatedName": "ListenRequestCustomIntent",
                "schemas": [
                  {
                    "schema": {
                      "example": "unsubscribe",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestCustomIntent",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "example": "unsubscribe, account deletion",
                        "type": "string"
                      },
                      "generatedName": "ListenRequestCustomIntentItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestCustomIntent",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Sets how the model will interpret intents submitted to the `custom_intent` param. When `strict`, the model will only return intents submitted using the `custom_intent` param. When `extended`, the model will return its own detected intents in addition those submitted using the `custom_intents` param",
          "name": "custom_intent_mode",
          "schema": {
            "generatedName": "ListenRequestCustomIntentMode",
            "value": {
              "generatedName": "ListenRequestCustomIntentMode",
              "values": [
                {
                  "generatedName": "extended",
                  "value": "extended",
                  "casing": {}
                },
                {
                  "generatedName": "strict",
                  "value": "strict",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "extended",
                "value": "extended",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identifies and extracts key entities from content in submitted audio",
          "name": "detect_entities",
          "schema": {
            "generatedName": "ListenRequestDetectEntities",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestDetectEntities",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identifies the dominant language spoken in submitted audio",
          "name": "detect_language",
          "schema": {
            "generatedName": "ListenRequestDetectLanguage",
            "value": {
              "value": {
                "generatedName": "ListenRequestDetectLanguage",
                "schemas": [
                  {
                    "schema": {
                      "default": false,
                      "example": true,
                      "type": "boolean"
                    },
                    "generatedName": "ListenRequestDetectLanguage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "example": "en, fr",
                        "type": "string"
                      },
                      "generatedName": "ListenRequestDetectLanguageItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestDetectLanguage",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API)",
          "name": "diarize_version",
          "schema": {
            "generatedName": "ListenRequestDiarizeVersion",
            "value": {
              "schema": {
                "default": "v2",
                "example": "v2",
                "type": "string"
              },
              "generatedName": "ListenRequestDiarizeVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
          "name": "diarize",
          "schema": {
            "generatedName": "ListenRequestDiarize",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestDiarize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identify and extract key entities from content in submitted audio",
          "name": "dictation",
          "schema": {
            "generatedName": "ListenRequestDictation",
            "value": {
              "schema": {
                "default": false,
                "example": true,
                "type": "boolean"
              },
              "generatedName": "ListenRequestDictation",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Specify the expected encoding of your submitted audio",
          "name": "encoding",
          "schema": {
            "generatedName": "ListenRequestEncoding",
            "value": {
              "generatedName": "ListenRequestEncoding",
              "values": [
                {
                  "generatedName": "linear16",
                  "value": "linear16",
                  "casing": {}
                },
                {
                  "generatedName": "flac",
                  "value": "flac",
                  "casing": {}
                },
                {
                  "generatedName": "mulaw",
                  "value": "mulaw",
                  "casing": {}
                },
                {
                  "generatedName": "AmrNb",
                  "value": "amr-nb",
                  "casing": {}
                },
                {
                  "generatedName": "AmrWb",
                  "value": "amr-wb",
                  "casing": {}
                },
                {
                  "generatedName": "opus",
                  "value": "opus",
                  "casing": {}
                },
                {
                  "generatedName": "speex",
                  "value": "speex",
                  "casing": {}
                },
                {
                  "generatedName": "g729",
                  "value": "g729",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Arbitrary key-value pairs that are attached to the API response for usage in downstream processing",
          "name": "extra",
          "schema": {
            "generatedName": "ListenRequestExtra",
            "value": {
              "value": {
                "generatedName": "ListenRequestExtra",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListenRequestExtra",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ListenRequestExtraItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestExtra",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filler Words can help transcribe interruptions in your audio, like \"uh\" and \"um\"",
          "name": "filler_words",
          "schema": {
            "generatedName": "ListenRequestFillerWords",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestFillerWords",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Recognizes speaker intent throughout a transcript or text",
          "name": "intents",
          "schema": {
            "generatedName": "ListenRequestIntents",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestIntents",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Key term prompting can boost or suppress specialized terminology and brands. Only compatible with Nova-3",
          "name": "keyterm",
          "schema": {
            "generatedName": "ListenRequestKeyterm",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ListenRequestKeytermItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ListenRequestKeyterm",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Keywords can boost or suppress specialized terminology and brands",
          "name": "keywords",
          "schema": {
            "generatedName": "ListenRequestKeywords",
            "value": {
              "value": {
                "generatedName": "ListenRequestKeywords",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListenRequestKeywords",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ListenRequestKeywordsItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestKeywords",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
          "name": "language",
          "schema": {
            "generatedName": "ListenRequestLanguage",
            "value": {
              "generatedName": "ListenRequestLanguage",
              "values": [
                {
                  "generatedName": "bg",
                  "value": "bg",
                  "casing": {}
                },
                {
                  "generatedName": "ca",
                  "value": "ca",
                  "casing": {}
                },
                {
                  "generatedName": "zh",
                  "value": "zh",
                  "casing": {}
                },
                {
                  "generatedName": "ZhCn",
                  "value": "zh-CN",
                  "casing": {}
                },
                {
                  "generatedName": "ZhTw",
                  "value": "zh-TW",
                  "casing": {}
                },
                {
                  "generatedName": "ZhHk",
                  "value": "zh-HK",
                  "casing": {}
                },
                {
                  "generatedName": "ZhHans",
                  "value": "zh-Hans",
                  "casing": {}
                },
                {
                  "generatedName": "ZhHant",
                  "value": "zh-Hant",
                  "casing": {}
                },
                {
                  "generatedName": "cs",
                  "value": "cs",
                  "casing": {}
                },
                {
                  "generatedName": "da",
                  "value": "da",
                  "casing": {}
                },
                {
                  "generatedName": "DaDk",
                  "value": "da-DK",
                  "casing": {}
                },
                {
                  "generatedName": "nl",
                  "value": "nl",
                  "casing": {}
                },
                {
                  "generatedName": "NlBe",
                  "value": "nl-BE",
                  "casing": {}
                },
                {
                  "generatedName": "en",
                  "value": "en",
                  "casing": {}
                },
                {
                  "generatedName": "EnUs",
                  "value": "en-US",
                  "casing": {}
                },
                {
                  "generatedName": "EnAu",
                  "value": "en-AU",
                  "casing": {}
                },
                {
                  "generatedName": "EnGb",
                  "value": "en-GB",
                  "casing": {}
                },
                {
                  "generatedName": "EnNz",
                  "value": "en-NZ",
                  "casing": {}
                },
                {
                  "generatedName": "EnIn",
                  "value": "en-IN",
                  "casing": {}
                },
                {
                  "generatedName": "et",
                  "value": "et",
                  "casing": {}
                },
                {
                  "generatedName": "fi",
                  "value": "fi",
                  "casing": {}
                },
                {
                  "generatedName": "fr",
                  "value": "fr",
                  "casing": {}
                },
                {
                  "generatedName": "FrCa",
                  "value": "fr-CA",
                  "casing": {}
                },
                {
                  "generatedName": "de",
                  "value": "de",
                  "casing": {}
                },
                {
                  "generatedName": "DeCh",
                  "value": "de-CH",
                  "casing": {}
                },
                {
                  "generatedName": "el",
                  "value": "el",
                  "casing": {}
                },
                {
                  "generatedName": "hi",
                  "value": "hi",
                  "casing": {}
                },
                {
                  "generatedName": "HiLatn",
                  "value": "hi-Latn",
                  "casing": {}
                },
                {
                  "generatedName": "hu",
                  "value": "hu",
                  "casing": {}
                },
                {
                  "generatedName": "id",
                  "value": "id",
                  "casing": {}
                },
                {
                  "generatedName": "it",
                  "value": "it",
                  "casing": {}
                },
                {
                  "generatedName": "ja",
                  "value": "ja",
                  "casing": {}
                },
                {
                  "generatedName": "ko",
                  "value": "ko",
                  "casing": {}
                },
                {
                  "generatedName": "KoKr",
                  "value": "ko-KR",
                  "casing": {}
                },
                {
                  "generatedName": "lv",
                  "value": "lv",
                  "casing": {}
                },
                {
                  "generatedName": "lt",
                  "value": "lt",
                  "casing": {}
                },
                {
                  "generatedName": "ms",
                  "value": "ms",
                  "casing": {}
                },
                {
                  "generatedName": "no",
                  "value": "no",
                  "casing": {}
                },
                {
                  "generatedName": "pl",
                  "value": "pl",
                  "casing": {}
                },
                {
                  "generatedName": "pt",
                  "value": "pt",
                  "casing": {}
                },
                {
                  "generatedName": "PtBr",
                  "value": "pt-BR",
                  "casing": {}
                },
                {
                  "generatedName": "PtPt",
                  "value": "pt-PT",
                  "casing": {}
                },
                {
                  "generatedName": "ro",
                  "value": "ro",
                  "casing": {}
                },
                {
                  "generatedName": "ru",
                  "value": "ru",
                  "casing": {}
                },
                {
                  "generatedName": "sk",
                  "value": "sk",
                  "casing": {}
                },
                {
                  "generatedName": "es",
                  "value": "es",
                  "casing": {}
                },
                {
                  "generatedName": "Es419",
                  "value": "es-419",
                  "casing": {}
                },
                {
                  "generatedName": "EsLatam",
                  "value": "es-LATAM",
                  "casing": {}
                },
                {
                  "generatedName": "sv",
                  "value": "sv",
                  "casing": {}
                },
                {
                  "generatedName": "SvSe",
                  "value": "sv-SE",
                  "casing": {}
                },
                {
                  "generatedName": "taq",
                  "value": "taq",
                  "casing": {}
                },
                {
                  "generatedName": "th",
                  "value": "th",
                  "casing": {}
                },
                {
                  "generatedName": "ThTh",
                  "value": "th-TH",
                  "casing": {}
                },
                {
                  "generatedName": "tr",
                  "value": "tr",
                  "casing": {}
                },
                {
                  "generatedName": "uk",
                  "value": "uk",
                  "casing": {}
                },
                {
                  "generatedName": "vi",
                  "value": "vi",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "en",
                "value": "en",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Spoken measurements will be converted to their corresponding abbreviations",
          "name": "measurements",
          "schema": {
            "generatedName": "ListenRequestMeasurements",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestMeasurements",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "AI model used to process submitted audio",
          "name": "model",
          "schema": {
            "generatedName": "ListenRequestModel",
            "value": {
              "value": {
                "generatedName": "ListenRequestModel",
                "schemas": [
                  {
                    "value": {
                      "value": "nova-3",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova3",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-3-general",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova3General",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-general",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2General",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-meeting",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Meeting",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-finance",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Finance",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-conversationalai",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Conversationalai",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-voicemail",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Voicemail",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-video",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Video",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-medical",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Medical",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-drivethru",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Drivethru",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-2-automotive",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova2Automotive",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNova",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-general",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNovaGeneral",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-phonecall",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNovaPhonecall",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "nova-medical",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelNovaMedical",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "enhanced",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelEnhanced",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "enhanced-general",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelEnhancedGeneral",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "enhanced-meeting",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelEnhancedMeeting",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "enhanced-phonecall",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelEnhancedPhonecall",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "enhanced-finance",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelEnhancedFinance",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "base",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelBase",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "meeting",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelMeeting",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "phonecall",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelPhonecall",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "finance",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelFinance",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "conversationalai",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelConversationalai",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "voicemail",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelVoicemail",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "video",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModelVideo",
                    "type": "literal"
                  },
                  {
                    "description": "Custom string if you've had a model trained by Deepgram",
                    "schema": {
                      "example": "custom-model-123",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestModel",
                    "groupName": [],
                    "type": "primitive"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Transcribe each audio channel independently",
          "name": "multichannel",
          "schema": {
            "generatedName": "ListenRequestMultichannel",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestMultichannel",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Numerals converts numbers from written format to numerical format",
          "name": "numerals",
          "schema": {
            "generatedName": "ListenRequestNumerals",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestNumerals",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Splits audio into paragraphs to improve transcript readability",
          "name": "paragraphs",
          "schema": {
            "generatedName": "ListenRequestParagraphs",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestParagraphs",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
          "name": "profanity_filter",
          "schema": {
            "generatedName": "ListenRequestProfanityFilter",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestProfanityFilter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Add punctuation and capitalization to the transcript",
          "name": "punctuate",
          "schema": {
            "generatedName": "ListenRequestPunctuate",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestPunctuate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Redaction removes sensitive information from your transcripts",
          "name": "redact",
          "schema": {
            "generatedName": "ListenRequestRedact",
            "value": {
              "value": {
                "generatedName": "ListenRequestRedact",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListenRequestRedact",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "generatedName": "ListenRequestRedactItem",
                      "values": [
                        {
                          "generatedName": "pci",
                          "value": "pci",
                          "casing": {}
                        },
                        {
                          "generatedName": "pii",
                          "value": "pii",
                          "casing": {}
                        },
                        {
                          "generatedName": "numbers",
                          "value": "numbers",
                          "casing": {}
                        }
                      ],
                      "groupName": [],
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "enum"
                    },
                    "generatedName": "ListenRequestRedact",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Search for terms or phrases in submitted audio and replaces them",
          "name": "replace",
          "schema": {
            "generatedName": "ListenRequestReplace",
            "value": {
              "value": {
                "generatedName": "ListenRequestReplace",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListenRequestReplace",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ListenRequestReplaceItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestReplace",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Search for terms or phrases in submitted audio",
          "name": "search",
          "schema": {
            "generatedName": "ListenRequestSearch",
            "value": {
              "value": {
                "generatedName": "ListenRequestSearch",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListenRequestSearch",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ListenRequestSearchItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestSearch",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Recognizes the sentiment throughout a transcript or text",
          "name": "sentiment",
          "schema": {
            "generatedName": "ListenRequestSentiment",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestSentiment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
          "name": "smart_format",
          "schema": {
            "generatedName": "ListenRequestSmartFormat",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestSmartFormat",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Summarize content",
          "name": "summarize",
          "schema": {
            "generatedName": "ListenRequestSummarize",
            "value": {
              "value": {
                "generatedName": "ListenRequestSummarize",
                "schemas": [
                  {
                    "value": {
                      "value": "v2",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestSummarizeV2",
                    "type": "literal"
                  },
                  {
                    "value": {
                      "value": "v1",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestSummarizeV1",
                    "type": "literal"
                  },
                  {
                    "schema": {
                      "type": "boolean"
                    },
                    "generatedName": "ListenRequestSummarize",
                    "nameOverride": "Legacy",
                    "title": "Legacy",
                    "groupName": [],
                    "type": "primitive"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Label your requests for the purpose of identification during usage reporting",
          "name": "tag",
          "schema": {
            "generatedName": "ListenRequestTag",
            "value": {
              "value": {
                "generatedName": "ListenRequestTag",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListenRequestTag",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ListenRequestTagItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "ListenRequestTag",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Detect topics throughout a transcript or text",
          "name": "topics",
          "schema": {
            "generatedName": "ListenRequestTopics",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestTopics",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Segments speech into meaningful semantic units",
          "name": "utterances",
          "schema": {
            "generatedName": "ListenRequestUtterances",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "ListenRequestUtterances",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Seconds to wait before detecting a pause between words in submitted audio",
          "name": "utt_split",
          "schema": {
            "generatedName": "ListenRequestUttSplit",
            "value": {
              "schema": {
                "default": 0.8,
                "type": "double"
              },
              "generatedName": "ListenRequestUttSplit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Version of an AI model to use",
          "name": "version",
          "schema": {
            "generatedName": "ListenRequestVersion",
            "value": {
              "value": {
                "generatedName": "ListenRequestVersion",
                "schemas": [
                  {
                    "value": {
                      "value": "latest",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestVersionLatest",
                    "type": "literal"
                  },
                  {
                    "description": "Use a previous version of a model",
                    "schema": {
                      "example": "model-123",
                      "type": "string"
                    },
                    "generatedName": "ListenRequestVersion",
                    "groupName": [],
                    "type": "primitive"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListenRequest",
      "request": {
        "schema": {
          "generatedName": "ListenRequestBody",
          "schema": "ListenRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful transcription",
        "schema": {
          "generatedName": "ListenResponse",
          "schema": "response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyErrCode",
                "key": "err_code",
                "schema": {
                  "generatedName": "badRequestErrorBodyErrCode",
                  "value": {
                    "description": "The error code",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyErrCode",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyErrMsg",
                "key": "err_msg",
                "schema": {
                  "generatedName": "badRequestErrorBodyErrMsg",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyErrMsg",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "err_code": {
                    "value": {
                      "value": "INVALID_QUERY_PARAMETER",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "err_msg": {
                    "value": {
                      "value": "Failed to deserialize query parameters...",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Transcribe audio using Deepgram's speech-to-text API",
      "authed": true,
      "method": "POST",
      "path": "/v1/listen",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "callback",
              "value": {
                "value": {
                  "value": "https://example.com",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "custom_intent",
              "value": {
                "value": {
                  "value": "unsubscribe",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "detect_language",
              "value": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            {
              "name": "diarize_version",
              "value": {
                "value": {
                  "value": "v2",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "dictation",
              "value": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            {
              "name": "model",
              "value": {
                "value": {
                  "value": "nova-3",
                  "type": "string"
                },
                "type": "literal"
              }
            },
            {
              "name": "version",
              "value": {
                "value": {
                  "value": "latest",
                  "type": "string"
                },
                "type": "literal"
              }
            }
          ],
          "headers": [],
          "request": {
            "properties": {
              "url": {
                "value": {
                  "value": "https://dpgr.am/spacewalk.wav",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "metadata": {
                  "properties": {
                    "transaction_key": {
                      "value": {
                        "value": "transaction_key",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "request_id": {
                      "value": {
                        "value": "a847f427-4ad5-4d67-9b95-db801e58251c",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sha256": {
                      "value": {
                        "value": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created": {
                      "value": {
                        "value": "2024-05-12T18:57:13.426Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "duration": {
                      "value": {
                        "value": 25.933313,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "channels": {
                      "value": {
                        "value": 1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "models": {
                      "value": [
                        {
                          "value": {
                            "value": "30089e05-99d1-4376-b32e-c263170674af",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "model_info": {
                      "value": [
                        {
                          "key": {
                            "value": "30089e05-99d1-4376-b32e-c263170674af",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "2-general-nova",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "version",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "2024-01-09.29447",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "arch",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "nova-2",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "summary_info": {
                      "properties": {
                        "model_uuid": {
                          "value": {
                            "value": "67875a7f-c9c4-48a0-aa55-5bdb8a91c34a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "input_tokens": {
                          "value": {
                            "value": 95,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 63,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "sentiment_info": {
                      "properties": {
                        "model_uuid": {
                          "value": {
                            "value": "80ab3179-d113-4254-bd6b-4a2f96498695",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "input_tokens": {
                          "value": {
                            "value": 105,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 105,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "topics_info": {
                      "properties": {
                        "model_uuid": {
                          "value": {
                            "value": "80ab3179-d113-4254-bd6b-4a2f96498695",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "input_tokens": {
                          "value": {
                            "value": 105,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 7,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "intents_info": {
                      "properties": {
                        "model_uuid": {
                          "value": {
                            "value": "80ab3179-d113-4254-bd6b-4a2f96498695",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "input_tokens": {
                          "value": {
                            "value": 105,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 4,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "tags": {
                      "value": [
                        {
                          "value": {
                            "value": "test",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "results": {
                  "properties": {
                    "channels": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "utterances": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "summary": {
                      "properties": {
                        "result": {
                          "value": {
                            "value": "success",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "short": {
                          "value": {
                            "value": "Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past.",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "sentiments": {
                      "properties": {
                        "segments": {
                          "value": [
                            {
                              "properties": {
                                "text": {
                                  "value": {
                                    "value": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "start_word": {
                                  "value": {
                                    "value": 0,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "end_word": {
                                  "value": {
                                    "value": 69,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "sentiment": {
                                  "value": {
                                    "value": "positive",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "sentiment_score": {
                                  "value": {
                                    "value": 0.5810546875,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "average": {
                          "properties": {
                            "sentiment": {
                              "value": {
                                "value": "positive",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "sentiment_score": {
                              "value": {
                                "value": 0.5810185185185185,
                                "type": "double"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Analyze text content",
      "audiences": [],
      "operationId": "TextRead",
      "tags": [
        "Text Intelligence"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "URL to which we'll make the callback request",
          "name": "callback",
          "schema": {
            "generatedName": "TextReadRequestCallback",
            "value": {
              "schema": {
                "example": "https://example.com",
                "type": "string"
              },
              "generatedName": "TextReadRequestCallback",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "HTTP method by which the callback request will be made",
          "name": "callback_method",
          "schema": {
            "generatedName": "TextReadRequestCallbackMethod",
            "value": {
              "generatedName": "TextReadRequestCallbackMethod",
              "values": [
                {
                  "generatedName": "POST",
                  "value": "POST",
                  "casing": {}
                },
                {
                  "generatedName": "PUT",
                  "value": "PUT",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "POST",
                "value": "POST",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Custom topics you want the model to detect within your input audio or text if present Submit up to 100",
          "name": "custom_topic",
          "schema": {
            "generatedName": "TextReadRequestCustomTopic",
            "value": {
              "value": {
                "generatedName": "TextReadRequestCustomTopic",
                "schemas": [
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TextReadRequestCustomTopic",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "TextReadRequestCustomTopicItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "generatedName": "TextReadRequestCustomTopic",
                    "groupName": [],
                    "type": "array"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Sets how the model will interpret strings submitted to the `custom_topic` param. When `strict`, the model will only return topics submitted using the `custom_topic` param. When `extended`, the model will return its own detected topics in addition to those submitted using the `custom_topic` param",
          "name": "custom_topic_mode",
          "schema": {
            "generatedName": "TextReadRequestCustomTopicMode",
            "value": {
              "generatedName": "TextReadRequestCustomTopicMode",
              "values": [
                {
                  "generatedName": "extended",
                  "value": "extended",
                  "casing": {}
                },
                {
                  "generatedName": "strict",
                  "value": "strict",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "extended",
                "value": "extended",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Recognizes speaker intent throughout a transcript or text",
          "name": "intents",
          "schema": {
            "generatedName": "TextReadRequestIntents",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "TextReadRequestIntents",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language",
          "name": "read_language",
          "schema": {
            "generatedName": "TextReadRequestReadLanguage",
            "value": {
              "value": {
                "value": "en",
                "type": "string"
              },
              "generatedName": "TextReadRequestReadLanguage",
              "groupName": [],
              "type": "literal"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Recognizes the sentiment throughout a transcript or text",
          "name": "sentiment",
          "schema": {
            "generatedName": "TextReadRequestSentiment",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "TextReadRequestSentiment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Summarize text",
          "name": "read_summarize",
          "schema": {
            "generatedName": "TextReadRequestReadSummarize",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "TextReadRequestReadSummarize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Detect topics throughout a transcript or text",
          "name": "topics",
          "schema": {
            "generatedName": "TextReadRequestTopics",
            "value": {
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "TextReadRequestTopics",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TextReadRequest",
      "request": {
        "schema": {
          "generatedName": "TextReadRequestBody",
          "schema": "text_request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful text analysis",
        "schema": {
          "generatedName": "TextReadResponse",
          "schema": "text_response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyErrCode",
                "key": "err_code",
                "schema": {
                  "generatedName": "badRequestErrorBodyErrCode",
                  "value": {
                    "description": "The error code",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyErrCode",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyErrMsg",
                "key": "err_msg",
                "schema": {
                  "generatedName": "badRequestErrorBodyErrMsg",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyErrMsg",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "err_code": {
                    "value": {
                      "value": "INVALID_QUERY_PARAMETER",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "err_msg": {
                    "value": {
                      "value": "Failed to deserialize query parameters...",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Analyze text content using Deepgram's text analysis API",
      "authed": true,
      "method": "POST",
      "path": "/v1/read",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "callback",
              "value": {
                "value": {
                  "value": "https://example.com",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "request": {
            "properties": {
              "url": {
                "value": {
                  "value": "url",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "metadata": {
                  "properties": {
                    "metadata": {
                      "properties": {
                        "request_id": {
                          "value": {
                            "value": "d04af392-db11-4c1d-83e1-20e34f0b8999",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2024-11-18T23:47:44.674Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "language": {
                          "value": {
                            "value": "en",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "results": {
                  "properties": {
                    "sentiments": {
                      "properties": {
                        "segments": {
                          "value": [
                            {
                              "properties": {
                                "text": {
                                  "value": {
                                    "value": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "start_word": {
                                  "value": {
                                    "value": 0,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "end_word": {
                                  "value": {
                                    "value": 69,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "sentiment": {
                                  "value": {
                                    "value": "positive",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "sentiment_score": {
                                  "value": {
                                    "value": 0.5810546875,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "average": {
                          "properties": {
                            "sentiment": {
                              "value": {
                                "value": "positive",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "sentiment_score": {
                              "value": {
                                "value": 0.5810185185185185,
                                "type": "double"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Text to Speech transformation",
      "audiences": [],
      "operationId": "speak",
      "tags": [
        "Text to Speech"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The bitrate of the audio in bits per second. Choose from predefined ranges or specific values based on the encoding type.",
          "name": "bit_rate",
          "schema": {
            "description": "Encoding -aac. Bitrate range - 4000-192000 bps.",
            "schema": {
              "minimum": 4000,
              "maximum": 192000,
              "type": "int"
            },
            "generatedName": "SpeakRequestBitRate",
            "nameOverride": "aac",
            "title": "aac",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "URL to which we'll make the callback request",
          "name": "callback",
          "schema": {
            "generatedName": "SpeakRequestCallback",
            "value": {
              "schema": {
                "example": "https://example.com",
                "type": "string"
              },
              "generatedName": "SpeakRequestCallback",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Container specifies the file format wrapper for the output audio. The available options depend on the encoding type.",
          "name": "container",
          "schema": {
            "generatedName": "SpeakRequestContainer",
            "value": {
              "generatedName": "SpeakRequestContainer",
              "values": [
                {
                  "generatedName": "wav",
                  "value": "wav",
                  "casing": {}
                },
                {
                  "generatedName": "ogg",
                  "value": "ogg",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "wav",
                "value": "wav",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Encoding allows you to specify the expected encoding of your audio output",
          "name": "speak_encoding",
          "schema": {
            "generatedName": "SpeakRequestSpeakEncoding",
            "value": {
              "generatedName": "SpeakRequestSpeakEncoding",
              "values": [
                {
                  "generatedName": "linear16",
                  "value": "linear16",
                  "casing": {}
                },
                {
                  "generatedName": "flac",
                  "value": "flac",
                  "casing": {}
                },
                {
                  "generatedName": "mulaw",
                  "value": "mulaw",
                  "casing": {}
                },
                {
                  "generatedName": "alaw",
                  "value": "alaw",
                  "casing": {}
                },
                {
                  "generatedName": "mp3",
                  "value": "mp3",
                  "casing": {}
                },
                {
                  "generatedName": "opus",
                  "value": "opus",
                  "casing": {}
                },
                {
                  "generatedName": "aac",
                  "value": "aac",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "mp3",
                "value": "mp3",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "AI model used to process submitted text",
          "name": "speak_model",
          "schema": {
            "generatedName": "SpeakRequestSpeakModel",
            "value": {
              "generatedName": "SpeakRequestSpeakModel",
              "values": [
                {
                  "generatedName": "AuraAsteriaEn",
                  "value": "aura-asteria-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraLunaEn",
                  "value": "aura-luna-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraStellaEn",
                  "value": "aura-stella-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraAthenaEn",
                  "value": "aura-athena-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraHeraEn",
                  "value": "aura-hera-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraOrionEn",
                  "value": "aura-orion-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraArcasEn",
                  "value": "aura-arcas-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraPerseusEn",
                  "value": "aura-perseus-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraAngusEn",
                  "value": "aura-angus-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraOrpheusEn",
                  "value": "aura-orpheus-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraHeliosEn",
                  "value": "aura-helios-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraZeusEn",
                  "value": "aura-zeus-en",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "AuraAsteriaEn",
                "value": "aura-asteria-en",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Sample Rate specifies the sample rate for the output audio. Based on the encoding, different sample rates are supported. For some encodings, the sample rate is not configurable",
          "name": "speak_sample_rate",
          "schema": {
            "description": "Encoding - opus. Sample rate is fixed at 48000 Hz.",
            "schema": {
              "type": "int"
            },
            "generatedName": "SpeakRequestSpeakSampleRate",
            "nameOverride": "opus",
            "title": "opus",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SpeakRequest",
      "request": {
        "schema": {
          "generatedName": "SpeakRequestBody",
          "schema": "speak_request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful text to speech",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyErrCode",
                "key": "err_code",
                "schema": {
                  "generatedName": "badRequestErrorBodyErrCode",
                  "value": {
                    "description": "The error code",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyErrCode",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyErrMsg",
                "key": "err_msg",
                "schema": {
                  "generatedName": "badRequestErrorBodyErrMsg",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyErrMsg",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "err_code": {
                    "value": {
                      "value": "INVALID_QUERY_PARAMETER",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "err_msg": {
                    "value": {
                      "value": "Failed to deserialize query parameters...",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyErrCode",
                "key": "err_code",
                "schema": {
                  "generatedName": "forbiddenErrorBodyErrCode",
                  "value": {
                    "description": "The error code",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyErrCode",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyErrMsg",
                "key": "err_msg",
                "schema": {
                  "generatedName": "forbiddenErrorBodyErrMsg",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyErrMsg",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Insufficient permissions, Model not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "err_code": {
                    "value": {
                      "value": "INSUFFICIENT_PERMISSIONS",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "err_msg": {
                    "value": {
                      "value": "Project does not have access to the requested model.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "413": {
          "generatedName": "ContentTooLargeError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "contentTooLargeErrorBodyErrCode",
                "key": "err_code",
                "schema": {
                  "generatedName": "contentTooLargeErrorBodyErrCode",
                  "value": {
                    "description": "The error code",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ContentTooLargeErrorBodyErrCode",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "contentTooLargeErrorBodyErrMsg",
                "key": "err_msg",
                "schema": {
                  "generatedName": "contentTooLargeErrorBodyErrMsg",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ContentTooLargeErrorBodyErrMsg",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "contentTooLargeErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "contentTooLargeErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ContentTooLargeErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ContentTooLargeErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Payload too large",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "err_code": {
                    "value": {
                      "value": "Payload too large",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "err_msg": {
                    "value": {
                      "value": "Input text exceeds maximum character limit of 2000.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "415": {
          "generatedName": "UnsupportedMediaTypeError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "unsupportedMediaTypeErrorBodyErrCode",
                "key": "err_code",
                "schema": {
                  "generatedName": "unsupportedMediaTypeErrorBodyErrCode",
                  "value": {
                    "description": "The error code",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UnsupportedMediaTypeErrorBodyErrCode",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "unsupportedMediaTypeErrorBodyErrMsg",
                "key": "err_msg",
                "schema": {
                  "generatedName": "unsupportedMediaTypeErrorBodyErrMsg",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UnsupportedMediaTypeErrorBodyErrMsg",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "unsupportedMediaTypeErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "unsupportedMediaTypeErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UnsupportedMediaTypeErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "UnsupportedMediaTypeErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Unsupported media type",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "err_code": {
                    "value": {
                      "value": "UNSUPPORTED_MEDIA_TYPE",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "err_msg": {
                    "value": {
                      "value": "Content-Type header is not supported. Content-Type must be either text/plain or application/json.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Convert text into natural-sounding speech using Deepgram's TTS API",
      "authed": true,
      "method": "POST",
      "path": "/v1/speak",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Projects",
      "audiences": [],
      "operationId": "listProjects",
      "tags": [
        "Management API"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProjectsRequest",
      "response": {
        "description": "A list of projects",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectsResponseProjects",
              "key": "projects",
              "schema": {
                "generatedName": "listProjectsResponseProjects",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listProjectsResponseProjectsItemProjectId",
                        "key": "project_id",
                        "schema": {
                          "generatedName": "listProjectsResponseProjectsItemProjectId",
                          "value": {
                            "description": "The unique identifier of the project",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ListProjectsResponseProjectsItemProjectId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectsResponseProjectsItemName",
                        "key": "name",
                        "schema": {
                          "generatedName": "listProjectsResponseProjectsItemName",
                          "value": {
                            "description": "The name of the project",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ListProjectsResponseProjectsItemName",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListProjectsResponseProjectsItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListProjectsResponseProjects",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves basic information about the projects associated with the API key",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "projects": {
                  "value": [
                    {
                      "properties": {
                        "project_id": {
                          "value": {
                            "value": "project_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a Project",
      "audiences": [],
      "operationId": "getProject",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Number of results to return per page. Default 10. Range [1,1000]",
          "name": "limit",
          "schema": {
            "generatedName": "GetProjectRequestLimit",
            "value": {
              "schema": {
                "default": 10,
                "minimum": 1,
                "maximum": 1000,
                "type": "int"
              },
              "generatedName": "GetProjectRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "start",
          "schema": {
            "generatedName": "GetProjectRequestStart",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetProjectRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "end",
          "schema": {
            "generatedName": "GetProjectRequestEnd",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetProjectRequestEnd",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Navigate and return the results to retrieve specific portions of information of the response",
          "name": "page",
          "schema": {
            "generatedName": "GetProjectRequestPage",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetProjectRequestPage",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetProjectRequest",
      "response": {
        "description": "A project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getProjectResponseProjectId",
              "key": "project_id",
              "schema": {
                "generatedName": "getProjectResponseProjectId",
                "value": {
                  "description": "The unique identifier of the project",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "GetProjectResponseProjectId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectResponseName",
              "key": "name",
              "schema": {
                "generatedName": "getProjectResponseName",
                "value": {
                  "description": "The name of the project",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "GetProjectResponseName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetProjectResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves information about the specified project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "start",
              "value": {
                "value": {
                  "value": "2024-07-01T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            },
            {
              "name": "end",
              "value": {
                "value": {
                  "value": "2024-07-31T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "project_id": {
                  "value": {
                    "value": "project_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a Project",
      "audiences": [],
      "operationId": "deleteProject",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteProjectRequest",
      "response": {
        "description": "A project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteProjectResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "deleteProjectResponseMessage",
                "value": {
                  "description": "confirmation message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DeleteProjectResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "DeleteProjectResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Deletes the specified project",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/projects/{project_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "Successfully deleted a project.",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a Project",
      "audiences": [],
      "operationId": "updateProject",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "UpdateProjectRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "UpdateProjectRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateProjectRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateProjectRequest",
          "schema": "update_projects",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "A project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "updateProjectResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "updateProjectResponseMessage",
                "value": {
                  "description": "confirmation message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateProjectResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "UpdateProjectResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Updates the name or other properties of an existing project",
      "authed": true,
      "method": "PATCH",
      "path": "/v1/projects/{project_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "My Project",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "Successfully updated project info.",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Project Balances",
      "audiences": [],
      "operationId": "getProjectBalances",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectBalancesRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetProjectBalancesRequest",
      "response": {
        "description": "A list of outstanding balances",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getProjectBalancesResponseBalances",
              "key": "balances",
              "schema": {
                "generatedName": "getProjectBalancesResponseBalances",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "getProjectBalancesResponseBalancesItemBalanceId",
                        "key": "balance_id",
                        "schema": {
                          "generatedName": "getProjectBalancesResponseBalancesItemBalanceId",
                          "value": {
                            "description": "The unique identifier of the balance",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "GetProjectBalancesResponseBalancesItemBalanceId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "getProjectBalancesResponseBalancesItemAmount",
                        "key": "amount",
                        "schema": {
                          "generatedName": "getProjectBalancesResponseBalancesItemAmount",
                          "value": {
                            "description": "The amount of the balance",
                            "schema": {
                              "default": 0,
                              "type": "int"
                            },
                            "generatedName": "GetProjectBalancesResponseBalancesItemAmount",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "getProjectBalancesResponseBalancesItemUnits",
                        "key": "units",
                        "schema": {
                          "generatedName": "getProjectBalancesResponseBalancesItemUnits",
                          "value": {
                            "description": "The units of the balance, such as \"USD\"",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "GetProjectBalancesResponseBalancesItemUnits",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "getProjectBalancesResponseBalancesItemPurchaseOrderId",
                        "key": "purchase_order_id",
                        "schema": {
                          "generatedName": "getProjectBalancesResponseBalancesItemPurchaseOrderId",
                          "value": {
                            "description": "Description or reference of the purchase",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "GetProjectBalancesResponseBalancesItemPurchaseOrderId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "GetProjectBalancesResponseBalancesItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "GetProjectBalancesResponseBalances",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetProjectBalancesResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [
          {
            "value": {
              "balances": [
                {
                  "balance_id": "b123456-7890-1234-5678-901234",
                  "amount": 250,
                  "units": "usd",
                  "purchase_order_id": "b123456-7890-1234-5678-901234"
                }
              ]
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Generates a list of outstanding balances for the specified project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/balances",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "balances": {
                  "value": [
                    {
                      "properties": {
                        "balance_id": {
                          "value": {
                            "value": "b123456-7890-1234-5678-901234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": 250,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "units": {
                          "value": {
                            "value": "usd",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "purchase_order_id": {
                          "value": {
                            "value": "b123456-7890-1234-5678-901234",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a Project Balance",
      "audiences": [],
      "operationId": "getProjectBalance",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectBalanceRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the balance",
          "name": "balance_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectBalanceRequestBalanceId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetProjectBalanceRequest",
      "response": {
        "description": "A specific balance",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getProjectBalanceResponseBalanceId",
              "key": "balance_id",
              "schema": {
                "generatedName": "getProjectBalanceResponseBalanceId",
                "value": {
                  "description": "The unique identifier of the balance",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "GetProjectBalanceResponseBalanceId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectBalanceResponseAmount",
              "key": "amount",
              "schema": {
                "generatedName": "getProjectBalanceResponseAmount",
                "value": {
                  "description": "The amount of the balance",
                  "schema": {
                    "default": 0,
                    "type": "int"
                  },
                  "generatedName": "GetProjectBalanceResponseAmount",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectBalanceResponseUnits",
              "key": "units",
              "schema": {
                "generatedName": "getProjectBalanceResponseUnits",
                "value": {
                  "description": "The units of the balance, such as \"USD\"",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "GetProjectBalanceResponseUnits",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectBalanceResponsePurchaseOrderId",
              "key": "purchase_order_id",
              "schema": {
                "generatedName": "getProjectBalanceResponsePurchaseOrderId",
                "value": {
                  "description": "Description or reference of the purchase",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "GetProjectBalanceResponsePurchaseOrderId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetProjectBalanceResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [
          {
            "value": {
              "balance_id": "b123456-7890-1234-5678-901234",
              "amount": 250,
              "units": "usd",
              "purchase_order_id": "b123456-7890-1234-5678-901234"
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves details about the specified balance",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/balances/{balance_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "balance_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "balance_id": {
                  "value": {
                    "value": "b123456-7890-1234-5678-901234",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "amount": {
                  "value": {
                    "value": 250,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "units": {
                  "value": {
                    "value": "usd",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "purchase_order_id": {
                  "value": {
                    "value": "b123456-7890-1234-5678-901234",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Returns metadata on all the latest models",
      "audiences": [],
      "operationId": "listProjectModels",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectModelsRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "returns non-latest versions of models",
          "name": "include_outdated",
          "schema": {
            "schema": {
              "type": "boolean"
            },
            "generatedName": "ListProjectModelsRequestIncludeOutdated",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListProjectModelsRequest",
      "response": {
        "description": "A list of models",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectModelsResponseStt",
              "key": "stt",
              "schema": {
                "generatedName": "listProjectModelsResponseStt",
                "value": {
                  "value": {
                    "generatedName": "ListProjectModelsResponseSttItem",
                    "schema": "stt_models",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ListProjectModelsResponseStt",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "listProjectModelsResponseTts",
              "key": "tts",
              "schema": {
                "generatedName": "listProjectModelsResponseTts",
                "value": {
                  "value": {
                    "generatedName": "ListProjectModelsResponseTtsItem",
                    "schema": "tts_models",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ListProjectModelsResponseTts",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectModelsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Returns metadata on all the latest models that a specific project has access to, including non-public models",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/models",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "include_outdated",
              "value": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "stt": {
                  "value": [
                    {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "conversationalai",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "canonical_name": {
                              "value": {
                                "value": "conversationalai",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "architecture": {
                              "value": {
                                "value": "base",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version": {
                              "value": {
                                "value": "2021-11-10.1",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "uuid": {
                              "value": {
                                "value": "6b28e919-8427-4f32-9847-492e2efd7daf",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "batch": {
                              "value": {
                                "value": true,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            },
                            "streaming": {
                              "value": {
                                "value": true,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            },
                            "formatted_output": {
                              "value": {
                                "value": true,
                                "type": "boolean"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  ],
                  "type": "array"
                },
                "tts": {
                  "value": [
                    {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "zeus",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "canonical_name": {
                              "value": {
                                "value": "aura-zeus-en",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "architecture": {
                              "value": {
                                "value": "aura",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version": {
                              "value": {
                                "value": "2024-07-30.0",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "uuid": {
                              "value": {
                                "value": "9c28bce5-f144-4d32-9034-843aa7aed63e",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a Project Model",
      "audiences": [],
      "operationId": "getProjectModel",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectModelRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The specific UUID of the model",
          "name": "model_id",
          "schema": {
            "schema": {
              "example": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291",
              "type": "string"
            },
            "generatedName": "GetProjectModelRequestModelId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetProjectModelRequest",
      "response": {
        "description": "A specific model",
        "schema": {
          "value": {
            "generatedName": "GetProjectModelResponse",
            "schemas": [
              {
                "generatedName": "GetProjectModelResponseZero",
                "schema": "stt_models",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              {
                "generatedName": "GetProjectModelResponseOne",
                "schema": "tts_models",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Returns metadata for a specific model",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/models/{model_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "model_id",
              "value": {
                "value": {
                  "value": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "conversationalai",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "canonical_name": {
                      "value": {
                        "value": "conversationalai",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "architecture": {
                      "value": {
                        "value": "base",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "languages": {
                      "value": [
                        {
                          "value": {
                            "value": "en",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "en-us",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "version": {
                      "value": {
                        "value": "2021-11-10.1",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "uuid": {
                      "value": {
                        "value": "6b28e919-8427-4f32-9847-492e2efd7daf",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "batch": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "streaming": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "formatted_output": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Keys",
      "audiences": [],
      "operationId": "listProjectKeys",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectKeysRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectKeysRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProjectKeysRequest",
      "response": {
        "description": "A list of API keys",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectKeysResponseApiKeys",
              "key": "api_keys",
              "schema": {
                "generatedName": "listProjectKeysResponseApiKeys",
                "value": {
                  "value": {
                    "generatedName": "ListProjectKeysResponseApiKeysItem",
                    "schema": "keys",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ListProjectKeysResponseApiKeys",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectKeysResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves all API keys associated with the specified project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/keys",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "api_keys": {
                  "value": [
                    {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Project Key",
      "audiences": [],
      "operationId": "createProjectKey",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "CreateProjectKeyRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "CreateProjectKeyRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateProjectKeyRequest",
      "request": {
        "schema": {
          "generatedName": "CreateProjectKeyRequest",
          "schema": "keys",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "API key created successfully",
        "schema": {
          "generatedName": "CreateProjectKeyResponse",
          "schema": "key_created",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Creates a new API key with specified settings for the project",
      "authed": true,
      "method": "POST",
      "path": "/v1/projects/{project_id}/keys",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "properties": {},
                "type": "object"
              }
            ],
            "type": "array"
          },
          "response": {
            "value": {
              "properties": {
                "api_key_id": {
                  "value": {
                    "value": "1234567890abcdef1234567890abcdef",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key": {
                  "value": {
                    "value": "1234567890abcdef1234567890abcdef",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "comment": {
                  "value": {
                    "value": "comment",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "scopes": {
                  "value": [
                    {
                      "value": {
                        "value": "member",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tag-1",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a Project Key",
      "audiences": [],
      "operationId": "getProjectKey",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectKeyRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the API key",
          "name": "key_id",
          "schema": {
            "schema": {
              "example": "123456789012345678901234",
              "type": "string"
            },
            "generatedName": "GetProjectKeyRequestKeyId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetProjectKeyRequest",
      "response": {
        "description": "A specific API key",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getProjectKeyResponseItem",
              "key": "item",
              "schema": {
                "generatedName": "getProjectKeyResponseItem",
                "value": {
                  "generatedName": "GetProjectKeyResponseItem",
                  "schema": "key",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false,
              "writeonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetProjectKeyResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves information about a specified API key",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/keys/{key_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "key_id",
              "value": {
                "value": {
                  "value": "123456789012345678901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "item": {
                  "properties": {
                    "member": {
                      "properties": {
                        "member_id": {
                          "value": {
                            "value": "1000-2000-3000-4000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email": {
                          "value": {
                            "value": "john@test.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "first_name": {
                          "value": {
                            "value": "John",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_name": {
                          "value": {
                            "value": "Doe",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "api_key": {
                          "properties": {
                            "api_key_id": {
                              "value": {
                                "value": "1234567890abcdef1234567890abcdef",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "comment": {
                              "value": {
                                "value": "A comment",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created": {
                              "value": {
                                "value": "2021-01-01T00:00:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deletes an API key for a specific project",
      "audiences": [],
      "operationId": "deleteProjectKey",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectKeyRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the API key",
          "name": "key_id",
          "schema": {
            "schema": {
              "example": "123456789012345678901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectKeyRequestKeyId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteProjectKeyRequest",
      "response": {
        "description": "API key deleted",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteProjectKeyResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "deleteProjectKeyResponseMessage",
                "value": {
                  "description": "A message indicating that the API key was deleted",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DeleteProjectKeyResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "DeleteProjectKeyResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [
          {
            "value": {
              "message": "Successfully deleted the API key!"
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Deletes an API key for a specific project",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/projects/{project_id}/keys/{key_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "key_id",
              "value": {
                "value": {
                  "value": "123456789012345678901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "Successfully deleted the API key!",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Members",
      "audiences": [],
      "operationId": "listProjectMembers",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectMembersRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProjectMembersRequest",
      "response": {
        "description": "A list of account objects",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectMembersResponseMembers",
              "key": "members",
              "schema": {
                "generatedName": "listProjectMembersResponseMembers",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listProjectMembersResponseMembersItemMemberId",
                        "key": "member_id",
                        "schema": {
                          "generatedName": "listProjectMembersResponseMembersItemMemberId",
                          "value": {
                            "description": "The unique identifier of the member",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ListProjectMembersResponseMembersItemMemberId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListProjectMembersResponseMembersItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListProjectMembersResponseMembers",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectMembersResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves a list of account objects for a specific project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/members",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "members": {
                  "value": [
                    {
                      "properties": {
                        "member_id": {
                          "value": {
                            "value": "member_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a Project Member",
      "audiences": [],
      "operationId": "deleteProjectMember",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectMemberRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the Member",
          "name": "member_id",
          "schema": {
            "schema": {
              "example": "123456789012345678901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectMemberRequestMemberId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteProjectMemberRequest",
      "response": {
        "description": "Delete the specific member from the project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteProjectMemberResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "deleteProjectMemberResponseMessage",
                "value": {
                  "description": "confirmation message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DeleteProjectMemberResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "DeleteProjectMemberResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Removes a member from the project using their unique member ID",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/projects/{project_id}/members/{member_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "member_id",
              "value": {
                "value": {
                  "value": "123456789012345678901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "Successfully removed account from project.",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Member Scopes",
      "audiences": [],
      "operationId": "listProjectMemberScopes",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectMemberScopesRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the Member",
          "name": "member_id",
          "schema": {
            "schema": {
              "example": "123456789012345678901234",
              "type": "string"
            },
            "generatedName": "ListProjectMemberScopesRequestMemberId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProjectMemberScopesRequest",
      "response": {
        "description": "A list of scopes for a specific member",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectMemberScopesResponseScopes",
              "key": "scopes",
              "schema": {
                "generatedName": "listProjectMemberScopesResponseScopes",
                "value": {
                  "description": "The API scopes of the member",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListProjectMemberScopesResponseScopesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ListProjectMemberScopesResponseScopes",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectMemberScopesResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves a list of scopes for a specific member",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/members/{member_id}/scopes",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "member_id",
              "value": {
                "value": {
                  "value": "123456789012345678901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "scopes": {
                  "value": [
                    {
                      "value": {
                        "value": "scopes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Project Member Scopes",
      "audiences": [],
      "operationId": "updateProjectMemberScopes",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "UpdateProjectMemberScopesRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the Member",
          "name": "member_id",
          "schema": {
            "schema": {
              "example": "123456789012345678901234",
              "type": "string"
            },
            "generatedName": "UpdateProjectMemberScopesRequestMemberId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateProjectMemberScopesRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateProjectMemberScopesRequest",
          "schema": "update_member_scope",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Updated the scopes for a specific member",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "updateProjectMemberScopesResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "updateProjectMemberScopesResponseMessage",
                "value": {
                  "description": "confirmation message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UpdateProjectMemberScopesResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "UpdateProjectMemberScopesResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Updates the scopes for a specific member",
      "authed": true,
      "method": "PUT",
      "path": "/v1/projects/{project_id}/members/{member_id}/scopes",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "member_id",
              "value": {
                "value": {
                  "value": "123456789012345678901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "scope": {
                "value": {
                  "value": "admin",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "Successfully updated the account scopes.",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Invites",
      "audiences": [],
      "operationId": "listProjectInvites",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectInvitesRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProjectInvitesRequest",
      "response": {
        "description": "A list of invites for a specific project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectInvitesResponseInvites",
              "key": "invites",
              "schema": {
                "generatedName": "listProjectInvitesResponseInvites",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listProjectInvitesResponseInvitesItemEmail",
                        "key": "email",
                        "schema": {
                          "generatedName": "listProjectInvitesResponseInvitesItemEmail",
                          "value": {
                            "description": "The email address of the invitee",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ListProjectInvitesResponseInvitesItemEmail",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectInvitesResponseInvitesItemScope",
                        "key": "scope",
                        "schema": {
                          "generatedName": "listProjectInvitesResponseInvitesItemScope",
                          "value": {
                            "description": "The scope of the invitee",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ListProjectInvitesResponseInvitesItemScope",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListProjectInvitesResponseInvitesItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListProjectInvitesResponseInvites",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectInvitesResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "servers": [],
      "description": "Generates a list of invites for a specific project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/invites",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "invites": {
                  "value": [
                    {
                      "properties": {
                        "email": {
                          "value": {
                            "value": "email",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scope": {
                          "value": {
                            "value": "scope",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Project Invite",
      "audiences": [],
      "operationId": "createProjectInvite",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "CreateProjectInviteRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateProjectInviteRequest",
      "request": {
        "schema": {
          "generatedName": "CreateProjectInviteRequest",
          "schema": "create_project_invite",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "The invite was successfully generated",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "createProjectInviteResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "createProjectInviteResponseMessage",
                "value": {
                  "description": "confirmation message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CreateProjectInviteResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "CreateProjectInviteResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Invalid Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UnauthorizedErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "User does not have sufficient permissions.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Generates an invite for a specific project",
      "authed": true,
      "method": "POST",
      "path": "/v1/projects/{project_id}/invites",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "email": {
                "value": {
                  "value": "email",
                  "type": "string"
                },
                "type": "primitive"
              },
              "scope": {
                "value": {
                  "value": "scope",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a Project Invite",
      "audiences": [],
      "operationId": "deleteProjectInvite",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectInviteRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The email address of the member",
          "name": "email",
          "schema": {
            "schema": {
              "example": "john.doe@example.com",
              "type": "string"
            },
            "generatedName": "DeleteProjectInviteRequestEmail",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteProjectInviteRequest",
      "response": {
        "description": "The invite was successfully deleted",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteProjectInviteResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "deleteProjectInviteResponseMessage",
                "value": {
                  "description": "confirmation message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DeleteProjectInviteResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "DeleteProjectInviteResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Invalid Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UnauthorizedErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "User does not have sufficient permissions.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Deletes an invite for a specific project",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/projects/{project_id}/invites/{email}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "email",
              "value": {
                "value": {
                  "value": "john.doe@example.com",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Leave a Project",
      "audiences": [],
      "operationId": "deleteProjectLeave",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "DeleteProjectLeaveRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteProjectLeaveRequest",
      "response": {
        "description": "Successfully removed account from project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteProjectLeaveResponseMessage",
              "key": "message",
              "schema": {
                "generatedName": "deleteProjectLeaveResponseMessage",
                "value": {
                  "description": "confirmation message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DeleteProjectLeaveResponseMessage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "DeleteProjectLeaveResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Invalid Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UnauthorizedErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "User does not have sufficient permissions.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Removes the authenticated account from the specific project",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/projects/{project_id}/leave",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Requests",
      "audiences": [],
      "operationId": "listProjectRequests",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectRequestsRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "start",
          "schema": {
            "generatedName": "ListProjectRequestsRequestStart",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListProjectRequestsRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "end",
          "schema": {
            "generatedName": "ListProjectRequestsRequestEnd",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListProjectRequestsRequestEnd",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page. Default 10. Range [1,1000]",
          "name": "limit",
          "schema": {
            "generatedName": "ListProjectRequestsRequestLimit",
            "value": {
              "schema": {
                "default": 10,
                "minimum": 1,
                "maximum": 1000,
                "type": "int"
              },
              "generatedName": "ListProjectRequestsRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Navigate and return the results to retrieve specific portions of information of the response",
          "name": "page",
          "schema": {
            "generatedName": "ListProjectRequestsRequestPage",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListProjectRequestsRequestPage",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListProjectRequestsRequest",
      "response": {
        "description": "A list of requests for a specific project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectRequestsResponsePage",
              "key": "page",
              "schema": {
                "generatedName": "listProjectRequestsResponsePage",
                "value": {
                  "description": "The page number of the paginated response",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ListProjectRequestsResponsePage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "listProjectRequestsResponseLimit",
              "key": "limit",
              "schema": {
                "generatedName": "listProjectRequestsResponseLimit",
                "value": {
                  "description": "The number of results per page",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ListProjectRequestsResponseLimit",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "listProjectRequestsResponseRequests",
              "key": "requests",
              "schema": {
                "generatedName": "listProjectRequestsResponseRequests",
                "value": {
                  "value": {
                    "generatedName": "ListProjectRequestsResponseRequestsItem",
                    "schema": "request",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ListProjectRequestsResponseRequests",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectRequestsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Generates a list of requests for a specific project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/requests",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "start",
              "value": {
                "value": {
                  "value": "2024-07-01T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            },
            {
              "name": "end",
              "value": {
                "value": {
                  "value": "2024-07-31T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "page": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "limit": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "requests": {
                  "value": [
                    {
                      "properties": {
                        "request_id": {
                          "value": {
                            "value": "request_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_uuid": {
                          "value": {
                            "value": "project_uuid",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "path": {
                          "value": {
                            "value": "path",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "api_key_id": {
                          "value": {
                            "value": "api_key_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "response": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "code": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "deployment": {
                          "value": {
                            "value": "deployment",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "callback": {
                          "value": {
                            "value": "callback",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a Project Request",
      "audiences": [],
      "operationId": "getProjectRequest",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectRequestRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The unique identifier of the request",
          "name": "request_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectRequestRequestRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetProjectRequestRequest",
      "response": {
        "description": "A specific request for a specific project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getProjectRequestResponseRequest",
              "key": "request",
              "schema": {
                "generatedName": "getProjectRequestResponseRequest",
                "value": {
                  "generatedName": "GetProjectRequestResponseRequest",
                  "schema": "request",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": [],
              "readonly": false,
              "writeonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetProjectRequestResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "servers": [],
      "description": "Retrieves a specific request for a specific project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/requests/{request_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "request_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "request": {
                  "properties": {
                    "request_id": {
                      "value": {
                        "value": "request_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "project_uuid": {
                      "value": {
                        "value": "project_uuid",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "created": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "path": {
                      "value": {
                        "value": "path",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "api_key_id": {
                      "value": {
                        "value": "api_key_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "response": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "code": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "deployment": {
                      "value": {
                        "value": "deployment",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "callback": {
                      "value": {
                        "value": "callback",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Project Usage",
      "audiences": [],
      "operationId": "getProjectUsage",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectUsageRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "start",
          "schema": {
            "generatedName": "GetProjectUsageRequestStart",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetProjectUsageRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "end",
          "schema": {
            "generatedName": "GetProjectUsageRequestEnd",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetProjectUsageRequestEnd",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Common filter parameters",
          "name": "project_filters",
          "schema": {
            "generatedName": "GetProjectUsageRequestProjectFilters",
            "value": {
              "generatedName": "GetProjectUsageRequestProjectFilters",
              "values": [
                {
                  "generatedName": "AlternativesYml",
                  "value": "alternatives.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CallbackMethodYml",
                  "value": "callback_method.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CallbackYml",
                  "value": "callback.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ChannelsYml",
                  "value": "channels.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomIntentModeYml",
                  "value": "custom_intent_mode.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomIntentYml",
                  "value": "custom_intent.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomTopicModeYml",
                  "value": "custom_topic_mode.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomTopicYml",
                  "value": "custom_topic.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DetectEntitiesYml",
                  "value": "detect_entities.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DetectLanguageYml",
                  "value": "detect_language.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DiarizeYml",
                  "value": "diarize.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DiarizeVersionYml",
                  "value": "diarize_version.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DictationYml",
                  "value": "dictation.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DetectTopicsYml",
                  "value": "detect_topics.yml",
                  "casing": {}
                },
                {
                  "generatedName": "EncodingYml",
                  "value": "encoding.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ExtraYml",
                  "value": "extra.yml",
                  "casing": {}
                },
                {
                  "generatedName": "FillerWordsYml",
                  "value": "filler_words.yml",
                  "casing": {}
                },
                {
                  "generatedName": "IntentsYml",
                  "value": "intents.yml",
                  "casing": {}
                },
                {
                  "generatedName": "KeywordsYml",
                  "value": "keywords.yml",
                  "casing": {}
                },
                {
                  "generatedName": "LanguageYml",
                  "value": "language.yml",
                  "casing": {}
                },
                {
                  "generatedName": "MeasurementsYml",
                  "value": "measurements.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ModelYml",
                  "value": "model.yml",
                  "casing": {}
                },
                {
                  "generatedName": "MultichannelYml",
                  "value": "multichannel.yml",
                  "casing": {}
                },
                {
                  "generatedName": "NumeralsYml",
                  "value": "numerals.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ParagraphsYml",
                  "value": "paragraphs.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ProfanityFilterYml",
                  "value": "profanity_filter.yml",
                  "casing": {}
                },
                {
                  "generatedName": "PunctuateYml",
                  "value": "punctuate.yml",
                  "casing": {}
                },
                {
                  "generatedName": "RedactYml",
                  "value": "redact.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ReplaceYml",
                  "value": "replace.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SampleRateYml",
                  "value": "sample_rate.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SmartFormatYml",
                  "value": "smart_format.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SearchYml",
                  "value": "search.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SentimentYml",
                  "value": "sentiment.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SummarizeYml",
                  "value": "summarize.yml",
                  "casing": {}
                },
                {
                  "generatedName": "TagYml",
                  "value": "tag.yml",
                  "casing": {}
                },
                {
                  "generatedName": "TopicsYml",
                  "value": "topics.yml",
                  "casing": {}
                },
                {
                  "generatedName": "UtterancesYml",
                  "value": "utterances.yml",
                  "casing": {}
                },
                {
                  "generatedName": "UttSplitYml",
                  "value": "utt_split.yml",
                  "casing": {}
                },
                {
                  "generatedName": "VersionYml",
                  "value": "version.yml",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetProjectUsageRequest",
      "response": {
        "description": "Usage Summary",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getProjectUsageResponseStart",
              "key": "start",
              "schema": {
                "generatedName": "getProjectUsageResponseStart",
                "value": {
                  "schema": {
                    "format": "date",
                    "example": "2024-10-16",
                    "type": "string"
                  },
                  "generatedName": "GetProjectUsageResponseStart",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectUsageResponseEnd",
              "key": "end",
              "schema": {
                "generatedName": "getProjectUsageResponseEnd",
                "value": {
                  "schema": {
                    "format": "date",
                    "example": "2024-10-23",
                    "type": "string"
                  },
                  "generatedName": "GetProjectUsageResponseEnd",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectUsageResponseResolution",
              "key": "resolution",
              "schema": {
                "generatedName": "getProjectUsageResponseResolution",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageResponseResolutionUnits",
                      "key": "units",
                      "schema": {
                        "generatedName": "getProjectUsageResponseResolutionUnits",
                        "value": {
                          "schema": {
                            "example": "day",
                            "type": "string"
                          },
                          "generatedName": "GetProjectUsageResponseResolutionUnits",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageResponseResolutionAmount",
                      "key": "amount",
                      "schema": {
                        "generatedName": "getProjectUsageResponseResolutionAmount",
                        "value": {
                          "schema": {
                            "example": 1,
                            "type": "int"
                          },
                          "generatedName": "GetProjectUsageResponseResolutionAmount",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "GetProjectUsageResponseResolution",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetProjectUsageResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Invalid Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UnauthorizedErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "User does not have sufficient permissions.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Retrieves the usage for a specific project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/usage",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "start",
              "value": {
                "value": {
                  "value": "2024-07-01T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            },
            {
              "name": "end",
              "value": {
                "value": {
                  "value": "2024-07-31T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "start": {
                  "value": {
                    "value": "2024-10-16",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "end": {
                  "value": {
                    "value": "2024-10-23",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resolution": {
                  "properties": {
                    "units": {
                      "value": {
                        "value": "day",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "amount": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Usage Fields",
      "audiences": [],
      "operationId": "listProjectUsageFields",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectUsageFieldsRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "start",
          "schema": {
            "generatedName": "ListProjectUsageFieldsRequestStart",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListProjectUsageFieldsRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "end",
          "schema": {
            "generatedName": "ListProjectUsageFieldsRequestEnd",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListProjectUsageFieldsRequestEnd",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListProjectUsageFieldsRequest",
      "response": {
        "description": "A list of fields for a specific project",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectUsageFieldsResponseTags",
              "key": "tags",
              "schema": {
                "generatedName": "listProjectUsageFieldsResponseTags",
                "value": {
                  "description": "List of tags associated with the project",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListProjectUsageFieldsResponseTagsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ListProjectUsageFieldsResponseTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "listProjectUsageFieldsResponseModels",
              "key": "models",
              "schema": {
                "generatedName": "listProjectUsageFieldsResponseModels",
                "value": {
                  "description": "List of models available for the project.",
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listProjectUsageFieldsResponseModelsItemName",
                        "key": "name",
                        "schema": {
                          "generatedName": "listProjectUsageFieldsResponseModelsItemName",
                          "value": {
                            "description": "Name of the model.",
                            "schema": {
                              "example": "2-medical-nova",
                              "type": "string"
                            },
                            "generatedName": "ListProjectUsageFieldsResponseModelsItemName",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectUsageFieldsResponseModelsItemLanguage",
                        "key": "language",
                        "schema": {
                          "generatedName": "listProjectUsageFieldsResponseModelsItemLanguage",
                          "value": {
                            "description": "The language supported by the model (IETF language tag).",
                            "schema": {
                              "example": "en-MY",
                              "type": "string"
                            },
                            "generatedName": "ListProjectUsageFieldsResponseModelsItemLanguage",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectUsageFieldsResponseModelsItemVersion",
                        "key": "version",
                        "schema": {
                          "generatedName": "listProjectUsageFieldsResponseModelsItemVersion",
                          "value": {
                            "description": "Version identifier of the model, typically with a date and a revision number.",
                            "schema": {
                              "example": "2024-05-31.13574",
                              "type": "string"
                            },
                            "generatedName": "ListProjectUsageFieldsResponseModelsItemVersion",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectUsageFieldsResponseModelsItemModelId",
                        "key": "model_id",
                        "schema": {
                          "generatedName": "listProjectUsageFieldsResponseModelsItemModelId",
                          "value": {
                            "description": "Unique identifier for the model.",
                            "schema": {
                              "example": "1234567890-12345-67890",
                              "type": "string"
                            },
                            "generatedName": "ListProjectUsageFieldsResponseModelsItemModelId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListProjectUsageFieldsResponseModelsItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListProjectUsageFieldsResponseModels",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "listProjectUsageFieldsResponseProcessingMethods",
              "key": "processing_methods",
              "schema": {
                "generatedName": "listProjectUsageFieldsResponseProcessingMethods",
                "value": {
                  "description": "Processing methods supported by the API",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListProjectUsageFieldsResponseProcessingMethodsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ListProjectUsageFieldsResponseProcessingMethods",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "listProjectUsageFieldsResponseFeatures",
              "key": "features",
              "schema": {
                "generatedName": "listProjectUsageFieldsResponseFeatures",
                "value": {
                  "description": "API features available to the project",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ListProjectUsageFieldsResponseFeaturesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ListProjectUsageFieldsResponseFeatures",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectUsageFieldsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Invalid Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "Invalid request: scope must be either 'member', 'admin' or 'owner'.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UnauthorizedErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "User does not have sufficient permissions.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Lists the features, models, tags, languages, and processing method used for requests in the specified project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/usage/fields",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "start",
              "value": {
                "value": {
                  "value": "2024-07-01T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            },
            {
              "name": "end",
              "value": {
                "value": {
                  "value": "2024-07-31T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "tags": {
                  "value": [
                    {
                      "value": {
                        "value": "tag=dev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "tag=production",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "models": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "2-medical-nova",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "language": {
                          "value": {
                            "value": "en-MY",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": "2024-05-31.13574",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "model_id": {
                          "value": {
                            "value": "1234567890-12345-67890",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "processing_methods": {
                  "value": [
                    {
                      "value": {
                        "value": "sync",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "streaming",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "features": {
                  "value": [
                    {
                      "value": {
                        "value": "alternatives",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "detect_entities",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "detect_language",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Project Usage Breakdown",
      "audiences": [],
      "operationId": "getProjectUsageBreakdown",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetProjectUsageBreakdownRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "start",
          "schema": {
            "generatedName": "GetProjectUsageBreakdownRequestStart",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetProjectUsageBreakdownRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "End date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "end",
          "schema": {
            "generatedName": "GetProjectUsageBreakdownRequestEnd",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetProjectUsageBreakdownRequestEnd",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Common filter parameters",
          "name": "project_filters",
          "schema": {
            "generatedName": "GetProjectUsageBreakdownRequestProjectFilters",
            "value": {
              "generatedName": "GetProjectUsageBreakdownRequestProjectFilters",
              "values": [
                {
                  "generatedName": "AlternativesYml",
                  "value": "alternatives.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CallbackMethodYml",
                  "value": "callback_method.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CallbackYml",
                  "value": "callback.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ChannelsYml",
                  "value": "channels.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomIntentModeYml",
                  "value": "custom_intent_mode.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomIntentYml",
                  "value": "custom_intent.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomTopicModeYml",
                  "value": "custom_topic_mode.yml",
                  "casing": {}
                },
                {
                  "generatedName": "CustomTopicYml",
                  "value": "custom_topic.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DetectEntitiesYml",
                  "value": "detect_entities.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DetectLanguageYml",
                  "value": "detect_language.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DiarizeYml",
                  "value": "diarize.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DiarizeVersionYml",
                  "value": "diarize_version.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DictationYml",
                  "value": "dictation.yml",
                  "casing": {}
                },
                {
                  "generatedName": "DetectTopicsYml",
                  "value": "detect_topics.yml",
                  "casing": {}
                },
                {
                  "generatedName": "EncodingYml",
                  "value": "encoding.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ExtraYml",
                  "value": "extra.yml",
                  "casing": {}
                },
                {
                  "generatedName": "FillerWordsYml",
                  "value": "filler_words.yml",
                  "casing": {}
                },
                {
                  "generatedName": "IntentsYml",
                  "value": "intents.yml",
                  "casing": {}
                },
                {
                  "generatedName": "KeywordsYml",
                  "value": "keywords.yml",
                  "casing": {}
                },
                {
                  "generatedName": "LanguageYml",
                  "value": "language.yml",
                  "casing": {}
                },
                {
                  "generatedName": "MeasurementsYml",
                  "value": "measurements.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ModelYml",
                  "value": "model.yml",
                  "casing": {}
                },
                {
                  "generatedName": "MultichannelYml",
                  "value": "multichannel.yml",
                  "casing": {}
                },
                {
                  "generatedName": "NumeralsYml",
                  "value": "numerals.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ParagraphsYml",
                  "value": "paragraphs.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ProfanityFilterYml",
                  "value": "profanity_filter.yml",
                  "casing": {}
                },
                {
                  "generatedName": "PunctuateYml",
                  "value": "punctuate.yml",
                  "casing": {}
                },
                {
                  "generatedName": "RedactYml",
                  "value": "redact.yml",
                  "casing": {}
                },
                {
                  "generatedName": "ReplaceYml",
                  "value": "replace.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SampleRateYml",
                  "value": "sample_rate.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SmartFormatYml",
                  "value": "smart_format.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SearchYml",
                  "value": "search.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SentimentYml",
                  "value": "sentiment.yml",
                  "casing": {}
                },
                {
                  "generatedName": "SummarizeYml",
                  "value": "summarize.yml",
                  "casing": {}
                },
                {
                  "generatedName": "TagYml",
                  "value": "tag.yml",
                  "casing": {}
                },
                {
                  "generatedName": "TopicsYml",
                  "value": "topics.yml",
                  "casing": {}
                },
                {
                  "generatedName": "UtterancesYml",
                  "value": "utterances.yml",
                  "casing": {}
                },
                {
                  "generatedName": "UttSplitYml",
                  "value": "utt_split.yml",
                  "casing": {}
                },
                {
                  "generatedName": "VersionYml",
                  "value": "version.yml",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filter options for usage breakdown. Multiple filters can be used with '&' prefix.\nExample: &model={model_id}&tags={tag}&accessor={accessor_id}\n",
          "name": "usage_breakdown_filters",
          "schema": {
            "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFilters",
            "value": {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersAccessor",
                  "key": "accessor",
                  "schema": {
                    "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersAccessor",
                    "value": {
                      "description": "Filter results by specific accessor ID",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFiltersAccessor",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersDeployment",
                  "key": "deployment",
                  "schema": {
                    "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersDeployment",
                    "value": {
                      "description": "Filter results by specific deployment type",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFiltersDeployment",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersEndpoint",
                  "key": "endpoint",
                  "schema": {
                    "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersEndpoint",
                    "value": {
                      "description": "Filter results by specific endpoint",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFiltersEndpoint",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersFeatureSet",
                  "key": "feature_set",
                  "schema": {
                    "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersFeatureSet",
                    "value": {
                      "description": "Filter results by specific feature set",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFiltersFeatureSet",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersModel",
                  "key": "model",
                  "schema": {
                    "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersModel",
                    "value": {
                      "description": "Filter results by specific model ID",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFiltersModel",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersMethod",
                  "key": "method",
                  "schema": {
                    "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersMethod",
                    "value": {
                      "description": "Filter results by specific processing method",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFiltersMethod",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersTags",
                  "key": "tags",
                  "schema": {
                    "generatedName": "getProjectUsageBreakdownRequestUsageBreakdownFiltersTags",
                    "value": {
                      "description": "Filter results by specific tags",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFiltersTags",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "GetProjectUsageBreakdownRequestUsageBreakdownFilters",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetProjectUsageBreakdownRequest",
      "response": {
        "description": "Usage breakdown response",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getProjectUsageBreakdownResponseStart",
              "key": "start",
              "schema": {
                "description": "Start date of the usage period",
                "schema": {
                  "format": "date",
                  "example": "2025-01-16",
                  "type": "string"
                },
                "generatedName": "GetProjectUsageBreakdownResponseStart",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectUsageBreakdownResponseEnd",
              "key": "end",
              "schema": {
                "description": "End date of the usage period",
                "schema": {
                  "format": "date",
                  "example": "2025-01-23",
                  "type": "string"
                },
                "generatedName": "GetProjectUsageBreakdownResponseEnd",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectUsageBreakdownResponseResolution",
              "key": "resolution",
              "schema": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getProjectUsageBreakdownResponseResolutionUnits",
                    "key": "units",
                    "schema": {
                      "description": "Time unit for the resolution",
                      "schema": {
                        "example": "day",
                        "type": "string"
                      },
                      "generatedName": "GetProjectUsageBreakdownResponseResolutionUnits",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getProjectUsageBreakdownResponseResolutionAmount",
                    "key": "amount",
                    "schema": {
                      "description": "Amount of units",
                      "schema": {
                        "example": 1,
                        "type": "int"
                      },
                      "generatedName": "GetProjectUsageBreakdownResponseResolutionAmount",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "GetProjectUsageBreakdownResponseResolution",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getProjectUsageBreakdownResponseResults",
              "key": "results",
              "schema": {
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemHours",
                      "key": "hours",
                      "schema": {
                        "description": "Audio hours processed",
                        "schema": {
                          "type": "float"
                        },
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemHours",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemTotalHours",
                      "key": "total_hours",
                      "schema": {
                        "description": "Total hours including all processing",
                        "schema": {
                          "type": "float"
                        },
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemTotalHours",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemAgentHours",
                      "key": "agent_hours",
                      "schema": {
                        "description": "Agent hours used",
                        "schema": {
                          "type": "float"
                        },
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemAgentHours",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemTokensIn",
                      "key": "tokens_in",
                      "schema": {
                        "description": "Number of input tokens",
                        "schema": {
                          "example": 0,
                          "type": "int"
                        },
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemTokensIn",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemTokensOut",
                      "key": "tokens_out",
                      "schema": {
                        "description": "Number of output tokens",
                        "schema": {
                          "example": 0,
                          "type": "int"
                        },
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemTokensOut",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemTtsCharacters",
                      "key": "tts_characters",
                      "schema": {
                        "description": "Number of text-to-speech characters processed",
                        "schema": {
                          "example": 9158866,
                          "type": "int"
                        },
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemTtsCharacters",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemRequests",
                      "key": "requests",
                      "schema": {
                        "description": "Number of requests",
                        "schema": {
                          "example": 373381,
                          "type": "int"
                        },
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemRequests",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "getProjectUsageBreakdownResponseResultsItemGrouping",
                      "key": "grouping",
                      "schema": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingStart",
                            "key": "start",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingStart",
                              "value": {
                                "description": "Start date for this group",
                                "schema": {
                                  "format": "date",
                                  "example": "2025-01-16",
                                  "type": "string"
                                },
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingStart",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingEnd",
                            "key": "end",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingEnd",
                              "value": {
                                "description": "End date for this group",
                                "schema": {
                                  "format": "date",
                                  "example": "2025-01-16",
                                  "type": "string"
                                },
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingEnd",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingAccessor",
                            "key": "accessor",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingAccessor",
                              "value": {
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingAccessor",
                                "description": "Optional accessor identifier",
                                "value": {
                                  "description": "Optional accessor identifier",
                                  "schema": {
                                    "example": "123456789012345678901234",
                                    "type": "string"
                                  },
                                  "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingAccessor",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingEndpoint",
                            "key": "endpoint",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingEndpoint",
                              "value": {
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingEndpoint",
                                "description": "Optional endpoint identifier",
                                "value": {
                                  "description": "Optional endpoint identifier",
                                  "schema": {
                                    "example": "listen",
                                    "type": "string"
                                  },
                                  "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingEndpoint",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingFeatureSet",
                            "key": "feature_set",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingFeatureSet",
                              "value": {
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingFeatureSet",
                                "description": "Optional feature set identifier",
                                "value": {
                                  "description": "Optional feature set identifier",
                                  "schema": {
                                    "example": "punctuate",
                                    "type": "string"
                                  },
                                  "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingFeatureSet",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingModels",
                            "key": "models",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingModels",
                              "value": {
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingModels",
                                "description": "Optional models identifier",
                                "value": {
                                  "description": "Optional models identifier",
                                  "schema": {
                                    "example": "Nova-2",
                                    "type": "string"
                                  },
                                  "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingModels",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingMethod",
                            "key": "method",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingMethod",
                              "value": {
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingMethod",
                                "description": "Optional method identifier",
                                "value": {
                                  "description": "Optional method identifier",
                                  "schema": {
                                    "example": "async",
                                    "type": "string"
                                  },
                                  "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingMethod",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingTags",
                            "key": "tags",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingTags",
                              "value": {
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingTags",
                                "description": "Optional tags",
                                "value": {
                                  "description": "Optional tags",
                                  "schema": {
                                    "example": "tag1",
                                    "type": "string"
                                  },
                                  "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingTags",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingDeployment",
                            "key": "deployment",
                            "schema": {
                              "generatedName": "getProjectUsageBreakdownResponseResultsItemGroupingDeployment",
                              "value": {
                                "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingDeployment",
                                "description": "Optional deployment identifier",
                                "value": {
                                  "description": "Optional deployment identifier",
                                  "schema": {
                                    "example": "self-hosted",
                                    "type": "string"
                                  },
                                  "generatedName": "GetProjectUsageBreakdownResponseResultsItemGroupingDeployment",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "GetProjectUsageBreakdownResponseResultsItemGrouping",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "GetProjectUsageBreakdownResponseResultsItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "GetProjectUsageBreakdownResponseResults",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetProjectUsageBreakdownResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UnauthorizedErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "User does not have sufficient permissions.",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Returns the breakdown of usage for a specific project. Supports the following filter options:\n- &accessor={accessor_id} - The public API key accessor used\n- &deployment={deployment} - The deployment type used\n- &endpoint={endpoint} - The endpoint used\n- &feature_set={feature_set} - The collection of features used\n- &model={model_id} - The model used\n- &method={method} - The processing method used\n- &tags={tag} - Any tags used\n",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/usage/breakdown",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "start",
              "value": {
                "value": {
                  "value": "2024-07-01T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            },
            {
              "name": "end",
              "value": {
                "value": {
                  "value": "2024-07-31T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "start": {
                  "value": {
                    "value": "2025-01-16",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "end": {
                  "value": {
                    "value": "2025-01-23",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "resolution": {
                  "properties": {
                    "units": {
                      "value": {
                        "value": "day",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "amount": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "hours": {
                          "value": {
                            "value": 1619.7242069444444,
                            "type": "float"
                          },
                          "type": "primitive"
                        },
                        "total_hours": {
                          "value": {
                            "value": 1621.7395791666668,
                            "type": "float"
                          },
                          "type": "primitive"
                        },
                        "agent_hours": {
                          "value": {
                            "value": 41.33564388888889,
                            "type": "float"
                          },
                          "type": "primitive"
                        },
                        "tokens_in": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "tokens_out": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "tts_characters": {
                          "value": {
                            "value": 9158866,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "requests": {
                          "value": {
                            "value": 373381,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "grouping": {
                          "properties": {
                            "start": {
                              "value": {
                                "value": "2025-01-16",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "end": {
                              "value": {
                                "value": "2025-01-16",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Purchases",
      "audiences": [],
      "operationId": "listProjectPurchases",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListProjectPurchasesRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Start date of the requested date range. Formats accepted are YYYY-MM-DD, YYYY-MM-DDTHH:MM:SS, or YYYY-MM-DDTHH:MM:SS+HH:MM",
          "name": "start",
          "schema": {
            "generatedName": "ListProjectPurchasesRequestStart",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListProjectPurchasesRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page. Default 10. Range [1,1000]",
          "name": "limit",
          "schema": {
            "generatedName": "ListProjectPurchasesRequestLimit",
            "value": {
              "schema": {
                "default": 10,
                "minimum": 1,
                "maximum": 1000,
                "type": "int"
              },
              "generatedName": "ListProjectPurchasesRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListProjectPurchasesRequest",
      "response": {
        "description": "Successful response with orders list",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listProjectPurchasesResponseOrders",
              "key": "orders",
              "schema": {
                "generatedName": "listProjectPurchasesResponseOrders",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listProjectPurchasesResponseOrdersItemOrderId",
                        "key": "order_id",
                        "schema": {
                          "generatedName": "listProjectPurchasesResponseOrdersItemOrderId",
                          "value": {
                            "schema": {
                              "format": "uuid",
                              "example": "025e19ba-b6d9-4a04-9f99-4fe715aca5f1",
                              "type": "string"
                            },
                            "generatedName": "ListProjectPurchasesResponseOrdersItemOrderId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectPurchasesResponseOrdersItemExpiration",
                        "key": "expiration",
                        "schema": {
                          "generatedName": "listProjectPurchasesResponseOrdersItemExpiration",
                          "value": {
                            "schema": {
                              "type": "datetime"
                            },
                            "generatedName": "ListProjectPurchasesResponseOrdersItemExpiration",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectPurchasesResponseOrdersItemCreated",
                        "key": "created",
                        "schema": {
                          "generatedName": "listProjectPurchasesResponseOrdersItemCreated",
                          "value": {
                            "schema": {
                              "type": "datetime"
                            },
                            "generatedName": "ListProjectPurchasesResponseOrdersItemCreated",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectPurchasesResponseOrdersItemAmount",
                        "key": "amount",
                        "schema": {
                          "generatedName": "listProjectPurchasesResponseOrdersItemAmount",
                          "value": {
                            "schema": {
                              "type": "float"
                            },
                            "generatedName": "ListProjectPurchasesResponseOrdersItemAmount",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectPurchasesResponseOrdersItemUnits",
                        "key": "units",
                        "schema": {
                          "generatedName": "listProjectPurchasesResponseOrdersItemUnits",
                          "value": {
                            "schema": {
                              "example": "usd",
                              "type": "string"
                            },
                            "generatedName": "ListProjectPurchasesResponseOrdersItemUnits",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listProjectPurchasesResponseOrdersItemOrderType",
                        "key": "order_type",
                        "schema": {
                          "generatedName": "listProjectPurchasesResponseOrdersItemOrderType",
                          "value": {
                            "schema": {
                              "example": "promotional",
                              "type": "string"
                            },
                            "generatedName": "ListProjectPurchasesResponseOrdersItemOrderType",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListProjectPurchasesResponseOrdersItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListProjectPurchasesResponseOrders",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListProjectPurchasesResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Returns the original purchased amount on an order transaction",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/purchases",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "start",
              "value": {
                "value": {
                  "value": "2024-07-01T00:00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "orders": {
                  "value": [
                    {
                      "properties": {
                        "order_id": {
                          "value": {
                            "value": "025e19ba-b6d9-4a04-9f99-4fe715aca5f1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "expiration": {
                          "value": {
                            "value": "2026-03-04T00:00:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created": {
                          "value": {
                            "value": "2023-02-21T21:13:40.014373Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": 150,
                            "type": "float"
                          },
                          "type": "primitive"
                        },
                        "units": {
                          "value": {
                            "value": "usd",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "order_type": {
                          "value": {
                            "value": "promotional",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Models",
      "audiences": [],
      "operationId": "listModels",
      "tags": [
        "Management API"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "returns non-latest versions of models",
          "name": "include_outdated",
          "schema": {
            "schema": {
              "type": "boolean"
            },
            "generatedName": "ListModelsRequestIncludeOutdated",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListModelsRequest",
      "response": {
        "description": "A list of all public models",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listModelsResponseStt",
              "key": "stt",
              "schema": {
                "generatedName": "listModelsResponseStt",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemName",
                        "key": "name",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemName",
                          "value": {
                            "schema": {
                              "example": "general",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseSttItemName",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemCanonicalName",
                        "key": "canonical_name",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemCanonicalName",
                          "value": {
                            "schema": {
                              "example": "enhanced-general",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseSttItemCanonicalName",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemArchitecture",
                        "key": "architecture",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemArchitecture",
                          "value": {
                            "schema": {
                              "example": "polaris",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseSttItemArchitecture",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemLanguages",
                        "key": "languages",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemLanguages",
                          "value": {
                            "value": {
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "ListModelsResponseSttItemLanguagesItem",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "generatedName": "ListModelsResponseSttItemLanguages",
                            "groupName": [],
                            "type": "array"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemVersion",
                        "key": "version",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemVersion",
                          "value": {
                            "schema": {
                              "example": "2022-05-18.1",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseSttItemVersion",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemUuid",
                        "key": "uuid",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemUuid",
                          "value": {
                            "schema": {
                              "format": "uuid",
                              "example": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseSttItemUuid",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemBatch",
                        "key": "batch",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemBatch",
                          "value": {
                            "schema": {
                              "example": true,
                              "type": "boolean"
                            },
                            "generatedName": "ListModelsResponseSttItemBatch",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemStreaming",
                        "key": "streaming",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemStreaming",
                          "value": {
                            "schema": {
                              "example": true,
                              "type": "boolean"
                            },
                            "generatedName": "ListModelsResponseSttItemStreaming",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseSttItemFormattedOutput",
                        "key": "formatted_output",
                        "schema": {
                          "generatedName": "listModelsResponseSttItemFormattedOutput",
                          "value": {
                            "schema": {
                              "example": false,
                              "type": "boolean"
                            },
                            "generatedName": "ListModelsResponseSttItemFormattedOutput",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListModelsResponseSttItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListModelsResponseStt",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "listModelsResponseTts",
              "key": "tts",
              "schema": {
                "generatedName": "listModelsResponseTts",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseTtsItemName",
                        "key": "name",
                        "schema": {
                          "generatedName": "listModelsResponseTtsItemName",
                          "value": {
                            "schema": {
                              "example": "angus",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseTtsItemName",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseTtsItemCanonicalName",
                        "key": "canonical_name",
                        "schema": {
                          "generatedName": "listModelsResponseTtsItemCanonicalName",
                          "value": {
                            "schema": {
                              "example": "aura-angus-en",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseTtsItemCanonicalName",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseTtsItemArchitecture",
                        "key": "architecture",
                        "schema": {
                          "generatedName": "listModelsResponseTtsItemArchitecture",
                          "value": {
                            "schema": {
                              "example": "aura",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseTtsItemArchitecture",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseTtsItemLanguages",
                        "key": "languages",
                        "schema": {
                          "generatedName": "listModelsResponseTtsItemLanguages",
                          "value": {
                            "value": {
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "ListModelsResponseTtsItemLanguagesItem",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "generatedName": "ListModelsResponseTtsItemLanguages",
                            "groupName": [],
                            "type": "array"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseTtsItemVersion",
                        "key": "version",
                        "schema": {
                          "generatedName": "listModelsResponseTtsItemVersion",
                          "value": {
                            "schema": {
                              "example": "2024-07-30.0",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseTtsItemVersion",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseTtsItemUuid",
                        "key": "uuid",
                        "schema": {
                          "generatedName": "listModelsResponseTtsItemUuid",
                          "value": {
                            "schema": {
                              "format": "uuid",
                              "example": "eed36e9e-37aa-40a3-91fa-a2911e73a5da",
                              "type": "string"
                            },
                            "generatedName": "ListModelsResponseTtsItemUuid",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listModelsResponseTtsItemMetadata",
                        "key": "metadata",
                        "schema": {
                          "generatedName": "listModelsResponseTtsItemMetadata",
                          "value": {
                            "allOf": [],
                            "properties": [
                              {
                                "conflict": {},
                                "generatedName": "listModelsResponseTtsItemMetadataAccent",
                                "key": "accent",
                                "schema": {
                                  "generatedName": "listModelsResponseTtsItemMetadataAccent",
                                  "value": {
                                    "schema": {
                                      "example": "Irish",
                                      "type": "string"
                                    },
                                    "generatedName": "ListModelsResponseTtsItemMetadataAccent",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "listModelsResponseTtsItemMetadataColor",
                                "key": "color",
                                "schema": {
                                  "generatedName": "listModelsResponseTtsItemMetadataColor",
                                  "value": {
                                    "schema": {
                                      "example": "#BA80F5",
                                      "type": "string"
                                    },
                                    "generatedName": "ListModelsResponseTtsItemMetadataColor",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "listModelsResponseTtsItemMetadataImage",
                                "key": "image",
                                "schema": {
                                  "generatedName": "listModelsResponseTtsItemMetadataImage",
                                  "value": {
                                    "schema": {
                                      "format": "uri",
                                      "example": "https://static.deepgram.com/examples/avatars/angus.jpg",
                                      "type": "string"
                                    },
                                    "generatedName": "ListModelsResponseTtsItemMetadataImage",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "listModelsResponseTtsItemMetadataSample",
                                "key": "sample",
                                "schema": {
                                  "generatedName": "listModelsResponseTtsItemMetadataSample",
                                  "value": {
                                    "schema": {
                                      "format": "uri",
                                      "example": "https://static.deepgram.com/examples/voices/angus.wav",
                                      "type": "string"
                                    },
                                    "generatedName": "ListModelsResponseTtsItemMetadataSample",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "listModelsResponseTtsItemMetadataTags",
                                "key": "tags",
                                "schema": {
                                  "generatedName": "listModelsResponseTtsItemMetadataTags",
                                  "value": {
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "ListModelsResponseTtsItemMetadataTagsItem",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "generatedName": "ListModelsResponseTtsItemMetadataTags",
                                    "groupName": [],
                                    "type": "array"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              }
                            ],
                            "allOfPropertyConflicts": [],
                            "generatedName": "ListModelsResponseTtsItemMetadata",
                            "groupName": [],
                            "additionalProperties": false,
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "object"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListModelsResponseTtsItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListModelsResponseTts",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListModelsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Returns metadata on all the latest public models",
      "authed": true,
      "method": "GET",
      "path": "/v1/models",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "include_outdated",
              "value": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "stt": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "general",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "canonical_name": {
                          "value": {
                            "value": "enhanced-general",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "architecture": {
                          "value": {
                            "value": "polaris",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "languages": {
                          "value": [
                            {
                              "value": {
                                "value": "en",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "en-us",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "version": {
                          "value": {
                            "value": "2022-05-18.1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "uuid": {
                          "value": {
                            "value": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "batch": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "streaming": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "formatted_output": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "tts": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "angus",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "canonical_name": {
                          "value": {
                            "value": "aura-angus-en",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "architecture": {
                          "value": {
                            "value": "aura",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "languages": {
                          "value": [
                            {
                              "value": {
                                "value": "en",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "en-us",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "version": {
                          "value": {
                            "value": "2024-07-30.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "uuid": {
                          "value": {
                            "value": "eed36e9e-37aa-40a3-91fa-a2911e73a5da",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadata": {
                          "properties": {
                            "accent": {
                              "value": {
                                "value": "Irish",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "color": {
                              "value": {
                                "value": "#BA80F5",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "image": {
                              "value": {
                                "value": "https://static.deepgram.com/examples/avatars/angus.jpg",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "sample": {
                              "value": {
                                "value": "https://static.deepgram.com/examples/voices/angus.wav",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Returns metadata for a specific model",
      "audiences": [],
      "operationId": "getModel",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The specific UUID of the model",
          "name": "model_id",
          "schema": {
            "schema": {
              "example": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291",
              "type": "string"
            },
            "generatedName": "GetModelRequestModelId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetModelRequest",
      "response": {
        "description": "A model object that can be either STT or TTS",
        "schema": {
          "value": {
            "generatedName": "GetModelResponse",
            "schemas": [
              {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchName",
                    "key": "name",
                    "schema": {
                      "generatedName": "getModelResponseBatchName",
                      "value": {
                        "schema": {
                          "example": "general",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseBatchName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchCanonicalName",
                    "key": "canonical_name",
                    "schema": {
                      "generatedName": "getModelResponseBatchCanonicalName",
                      "value": {
                        "schema": {
                          "example": "enhanced-general",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseBatchCanonicalName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchArchitecture",
                    "key": "architecture",
                    "schema": {
                      "generatedName": "getModelResponseBatchArchitecture",
                      "value": {
                        "schema": {
                          "example": "polaris",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseBatchArchitecture",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchLanguages",
                    "key": "languages",
                    "schema": {
                      "generatedName": "getModelResponseBatchLanguages",
                      "value": {
                        "value": {
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "GetModelResponseBatchLanguagesItem",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "generatedName": "GetModelResponseBatchLanguages",
                        "groupName": [],
                        "type": "array"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchVersion",
                    "key": "version",
                    "schema": {
                      "generatedName": "getModelResponseBatchVersion",
                      "value": {
                        "schema": {
                          "example": "2022-05-18.1",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseBatchVersion",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchUuid",
                    "key": "uuid",
                    "schema": {
                      "generatedName": "getModelResponseBatchUuid",
                      "value": {
                        "schema": {
                          "format": "uuid",
                          "example": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseBatchUuid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchBatch",
                    "key": "batch",
                    "schema": {
                      "generatedName": "getModelResponseBatchBatch",
                      "value": {
                        "schema": {
                          "example": true,
                          "type": "boolean"
                        },
                        "generatedName": "GetModelResponseBatchBatch",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchStreaming",
                    "key": "streaming",
                    "schema": {
                      "generatedName": "getModelResponseBatchStreaming",
                      "value": {
                        "schema": {
                          "example": true,
                          "type": "boolean"
                        },
                        "generatedName": "GetModelResponseBatchStreaming",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseBatchFormattedOutput",
                    "key": "formatted_output",
                    "schema": {
                      "generatedName": "getModelResponseBatchFormattedOutput",
                      "value": {
                        "schema": {
                          "example": false,
                          "type": "boolean"
                        },
                        "generatedName": "GetModelResponseBatchFormattedOutput",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "GetModelResponseBatch",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseMetadataName",
                    "key": "name",
                    "schema": {
                      "generatedName": "getModelResponseMetadataName",
                      "value": {
                        "schema": {
                          "example": "angus",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseMetadataName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseMetadataCanonicalName",
                    "key": "canonical_name",
                    "schema": {
                      "generatedName": "getModelResponseMetadataCanonicalName",
                      "value": {
                        "schema": {
                          "example": "aura-angus-en",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseMetadataCanonicalName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseMetadataArchitecture",
                    "key": "architecture",
                    "schema": {
                      "generatedName": "getModelResponseMetadataArchitecture",
                      "value": {
                        "schema": {
                          "example": "aura",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseMetadataArchitecture",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseMetadataLanguages",
                    "key": "languages",
                    "schema": {
                      "generatedName": "getModelResponseMetadataLanguages",
                      "value": {
                        "value": {
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "GetModelResponseMetadataLanguagesItem",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "generatedName": "GetModelResponseMetadataLanguages",
                        "groupName": [],
                        "type": "array"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseMetadataVersion",
                    "key": "version",
                    "schema": {
                      "generatedName": "getModelResponseMetadataVersion",
                      "value": {
                        "schema": {
                          "example": "2024-07-30.0",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseMetadataVersion",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseMetadataUuid",
                    "key": "uuid",
                    "schema": {
                      "generatedName": "getModelResponseMetadataUuid",
                      "value": {
                        "schema": {
                          "format": "uuid",
                          "example": "eed36e9e-37aa-40a3-91fa-a2911e73a5da",
                          "type": "string"
                        },
                        "generatedName": "GetModelResponseMetadataUuid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getModelResponseMetadataMetadata",
                    "key": "metadata",
                    "schema": {
                      "generatedName": "getModelResponseMetadataMetadata",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "getModelResponseMetadataMetadataAccent",
                            "key": "accent",
                            "schema": {
                              "generatedName": "getModelResponseMetadataMetadataAccent",
                              "value": {
                                "schema": {
                                  "example": "Irish",
                                  "type": "string"
                                },
                                "generatedName": "GetModelResponseMetadataMetadataAccent",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getModelResponseMetadataMetadataColor",
                            "key": "color",
                            "schema": {
                              "generatedName": "getModelResponseMetadataMetadataColor",
                              "value": {
                                "schema": {
                                  "example": "#BA80F5",
                                  "type": "string"
                                },
                                "generatedName": "GetModelResponseMetadataMetadataColor",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getModelResponseMetadataMetadataImage",
                            "key": "image",
                            "schema": {
                              "generatedName": "getModelResponseMetadataMetadataImage",
                              "value": {
                                "schema": {
                                  "format": "uri",
                                  "example": "https://static.deepgram.com/examples/avatars/angus.jpg",
                                  "type": "string"
                                },
                                "generatedName": "GetModelResponseMetadataMetadataImage",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getModelResponseMetadataMetadataSample",
                            "key": "sample",
                            "schema": {
                              "generatedName": "getModelResponseMetadataMetadataSample",
                              "value": {
                                "schema": {
                                  "format": "uri",
                                  "example": "https://static.deepgram.com/examples/voices/angus.wav",
                                  "type": "string"
                                },
                                "generatedName": "GetModelResponseMetadataMetadataSample",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "getModelResponseMetadataMetadataTags",
                            "key": "tags",
                            "schema": {
                              "generatedName": "getModelResponseMetadataMetadataTags",
                              "value": {
                                "value": {
                                  "schema": {
                                    "type": "string"
                                  },
                                  "generatedName": "GetModelResponseMetadataMetadataTagsItem",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "generatedName": "GetModelResponseMetadataMetadataTags",
                                "groupName": [],
                                "type": "array"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "GetModelResponseMetadataMetadata",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "GetModelResponseMetadata",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "badRequestErrorBodyCategory",
                  "value": {
                    "description": "The error category",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "badRequestErrorBodyMessage",
                  "value": {
                    "description": "The error message",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "badRequestErrorBodyDetails",
                  "value": {
                    "description": "Additional details about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "badRequestErrorBodyRequestId",
                  "value": {
                    "description": "The request ID",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "BadRequestErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project Bad Request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "category": {
                    "value": {
                      "value": "INVALID_JSON",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "message": {
                    "value": {
                      "value": "Invalid JSON submitted.",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "details": {
                    "value": {
                      "value": "Json deserialize error: EOF while parsing a value at line 1 column 0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "request_id": {
                    "value": {
                      "value": "123456-7890-1234-5678-901234",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Returns metadata for a specific model",
      "authed": true,
      "method": "GET",
      "path": "/v1/models/{model_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "model_id",
              "value": {
                "value": {
                  "value": "af6e9977-99f6-4d8f-b6f5-dfdf6fb6e291",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "general",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "canonical_name": {
                  "value": {
                    "value": "enhanced-general",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "architecture": {
                  "value": {
                    "value": "polaris",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "languages": {
                  "value": [
                    {
                      "value": {
                        "value": "en",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "en-us",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "version": {
                  "value": {
                    "value": "2022-05-18.1",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "uuid": {
                  "value": {
                    "value": "c7226e9e-ae1c-4057-ae2a-a71a6b0dc588",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "batch": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "streaming": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formatted_output": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Project Self-Hosted Distribution Credentials",
      "audiences": [],
      "operationId": "listSelfHostedDistCreds",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "ListSelfHostedDistCredsRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListSelfHostedDistCredsRequest",
      "response": {
        "description": "List of distribution credentials",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentials",
              "key": "distribution_credentials",
              "schema": {
                "generatedName": "listSelfHostedDistCredsResponseDistributionCredentials",
                "value": {
                  "description": "Array of distribution credentials with associated member information",
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemMember",
                        "key": "member",
                        "schema": {
                          "allOf": [],
                          "properties": [
                            {
                              "conflict": {},
                              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemMemberMemberId",
                              "key": "member_id",
                              "schema": {
                                "description": "Unique identifier for the member",
                                "schema": {
                                  "format": "uuid",
                                  "example": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                                  "type": "string"
                                },
                                "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemMemberMemberId",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "audiences": []
                            },
                            {
                              "conflict": {},
                              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemMemberEmail",
                              "key": "email",
                              "schema": {
                                "description": "Email address of the member",
                                "schema": {
                                  "format": "email",
                                  "example": "email@example.com",
                                  "type": "string"
                                },
                                "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemMemberEmail",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "audiences": []
                            }
                          ],
                          "allOfPropertyConflicts": [],
                          "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemMember",
                          "groupName": [],
                          "additionalProperties": false,
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "object"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentials",
                        "key": "distribution_credentials",
                        "schema": {
                          "allOf": [],
                          "properties": [
                            {
                              "conflict": {},
                              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsDistributionCredentialsId",
                              "key": "distribution_credentials_id",
                              "schema": {
                                "description": "Unique identifier for the distribution credentials",
                                "schema": {
                                  "format": "uuid",
                                  "example": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                                  "type": "string"
                                },
                                "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsDistributionCredentialsId",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "audiences": []
                            },
                            {
                              "conflict": {},
                              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsProvider",
                              "key": "provider",
                              "schema": {
                                "description": "The provider of the distribution service",
                                "schema": {
                                  "example": "quay",
                                  "type": "string"
                                },
                                "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsProvider",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "audiences": []
                            },
                            {
                              "conflict": {},
                              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsComment",
                              "key": "comment",
                              "schema": {
                                "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsComment",
                                "value": {
                                  "description": "Optional comment about the credentials",
                                  "schema": {
                                    "example": "My Self-Hosted Distribution Credentials",
                                    "type": "string"
                                  },
                                  "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsComment",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "optional"
                              },
                              "audiences": []
                            },
                            {
                              "conflict": {},
                              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsScopes",
                              "key": "scopes",
                              "schema": {
                                "description": "List of permission scopes for the credentials",
                                "value": {
                                  "schema": {
                                    "type": "string"
                                  },
                                  "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsScopesItem",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsScopes",
                                "groupName": [],
                                "type": "array"
                              },
                              "audiences": []
                            },
                            {
                              "conflict": {},
                              "generatedName": "listSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsCreated",
                              "key": "created",
                              "schema": {
                                "description": "Timestamp when the credentials were created",
                                "schema": {
                                  "type": "datetime"
                                },
                                "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentialsCreated",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "audiences": []
                            }
                          ],
                          "allOfPropertyConflicts": [],
                          "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItemDistributionCredentials",
                          "groupName": [],
                          "additionalProperties": false,
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "object"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentialsItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ListSelfHostedDistCredsResponseDistributionCredentials",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ListSelfHostedDistCredsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Lists sets of distribution credentials for the specified project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "distribution_credentials": {
                  "value": [
                    {
                      "properties": {
                        "member": {
                          "properties": {
                            "member_id": {
                              "value": {
                                "value": "3376abcd-8e5e-49d3-92d4-876d3a4f0363",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email": {
                              "value": {
                                "value": "email@example.com",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "distribution_credentials": {
                          "properties": {
                            "distribution_credentials_id": {
                              "value": {
                                "value": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "provider": {
                              "value": {
                                "value": "quay",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "comment": {
                              "value": {
                                "value": "My Self-Hosted Distribution Credentials",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "scopes": {
                              "value": [
                                {
                                  "value": {
                                    "value": "self-hosted:product:api",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                {
                                  "value": {
                                    "value": "self-hosted:product:engine",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "created": {
                              "value": {
                                "value": "2023-06-28T15:36:59.609841Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a Project Self-Hosted Distribution Credential",
      "audiences": [],
      "operationId": "createSelfHostedDistCreds",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "CreateSelfHostedDistCredsRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Optional comment about the credentials",
          "name": "comment",
          "schema": {
            "generatedName": "CreateSelfHostedDistCredsRequestComment",
            "value": {
              "schema": {
                "example": "My Self-Hosted Distribution Credentials",
                "type": "string"
              },
              "generatedName": "CreateSelfHostedDistCredsRequestComment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "List of permission scopes for the credentials",
          "name": "scopes",
          "schema": {
            "value": {
              "generatedName": "CreateSelfHostedDistCredsRequestScopesItem",
              "values": [
                {
                  "generatedName": "SelfHostedProducts",
                  "value": "self-hosted:products",
                  "casing": {}
                },
                {
                  "generatedName": "SelfHostedProductApi",
                  "value": "self-hosted:product:api",
                  "casing": {}
                },
                {
                  "generatedName": "SelfHostedProductEngine",
                  "value": "self-hosted:product:engine",
                  "casing": {}
                },
                {
                  "generatedName": "SelfHostedProductLicenseProxy",
                  "value": "self-hosted:product:license-proxy",
                  "casing": {}
                },
                {
                  "generatedName": "SelfHostedProductDgtools",
                  "value": "self-hosted:product:dgtools",
                  "casing": {}
                },
                {
                  "generatedName": "SelfHostedProductBilling",
                  "value": "self-hosted:product:billing",
                  "casing": {}
                },
                {
                  "generatedName": "SelfHostedProductHotpepper",
                  "value": "self-hosted:product:hotpepper",
                  "casing": {}
                },
                {
                  "generatedName": "SelfHostedProductMetricsServer",
                  "value": "self-hosted:product:metrics-server",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "generatedName": "CreateSelfHostedDistCredsRequestScopes",
            "groupName": [],
            "type": "array"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The provider of the distribution service",
          "name": "provider",
          "schema": {
            "value": {
              "value": "quay",
              "type": "string"
            },
            "generatedName": "CreateSelfHostedDistCredsRequestProvider",
            "groupName": [],
            "type": "literal"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "CreateSelfHostedDistCredsRequest",
      "request": {
        "schema": {
          "generatedName": "CreateSelfHostedDistCredsRequestBody",
          "schema": "create_distribution_creds",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "servers": [],
      "description": "Creates a set of distribution credentials for the specified project",
      "authed": true,
      "method": "POST",
      "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a Project Self-Hosted Distribution Credential",
      "audiences": [],
      "operationId": "getSelfHostedCredentials",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "GetSelfHostedCredentialsRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The UUID of the distribution credentials",
          "name": "distribution_credentials_id",
          "schema": {
            "schema": {
              "example": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
              "type": "string"
            },
            "generatedName": "GetSelfHostedCredentialsRequestDistributionCredentialsId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetSelfHostedCredentialsRequest",
      "response": {
        "description": "Single distribution credential",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "getSelfHostedCredentialsResponseMember",
              "key": "member",
              "schema": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getSelfHostedCredentialsResponseMemberMemberId",
                    "key": "member_id",
                    "schema": {
                      "description": "Unique identifier for the member",
                      "schema": {
                        "format": "uuid",
                        "example": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "type": "string"
                      },
                      "generatedName": "GetSelfHostedCredentialsResponseMemberMemberId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSelfHostedCredentialsResponseMemberEmail",
                    "key": "email",
                    "schema": {
                      "description": "Email address of the member",
                      "schema": {
                        "format": "email",
                        "example": "email@example.com",
                        "type": "string"
                      },
                      "generatedName": "GetSelfHostedCredentialsResponseMemberEmail",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "GetSelfHostedCredentialsResponseMember",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "getSelfHostedCredentialsResponseDistributionCredentials",
              "key": "distribution_credentials",
              "schema": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getSelfHostedCredentialsResponseDistributionCredentialsDistributionCredentialsId",
                    "key": "distribution_credentials_id",
                    "schema": {
                      "description": "Unique identifier for the distribution credentials",
                      "schema": {
                        "format": "uuid",
                        "example": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "type": "string"
                      },
                      "generatedName": "GetSelfHostedCredentialsResponseDistributionCredentialsDistributionCredentialsId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSelfHostedCredentialsResponseDistributionCredentialsProvider",
                    "key": "provider",
                    "schema": {
                      "description": "The provider of the distribution service",
                      "schema": {
                        "example": "quay",
                        "type": "string"
                      },
                      "generatedName": "GetSelfHostedCredentialsResponseDistributionCredentialsProvider",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSelfHostedCredentialsResponseDistributionCredentialsComment",
                    "key": "comment",
                    "schema": {
                      "generatedName": "getSelfHostedCredentialsResponseDistributionCredentialsComment",
                      "value": {
                        "description": "Optional comment about the credentials",
                        "schema": {
                          "example": "My Self-Hosted Distribution Credentials",
                          "type": "string"
                        },
                        "generatedName": "GetSelfHostedCredentialsResponseDistributionCredentialsComment",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSelfHostedCredentialsResponseDistributionCredentialsScopes",
                    "key": "scopes",
                    "schema": {
                      "description": "List of permission scopes for the credentials",
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "GetSelfHostedCredentialsResponseDistributionCredentialsScopesItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "GetSelfHostedCredentialsResponseDistributionCredentialsScopes",
                      "groupName": [],
                      "type": "array"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSelfHostedCredentialsResponseDistributionCredentialsCreated",
                    "key": "created",
                    "schema": {
                      "description": "Timestamp when the credentials were created",
                      "schema": {
                        "type": "datetime"
                      },
                      "generatedName": "GetSelfHostedCredentialsResponseDistributionCredentialsCreated",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "GetSelfHostedCredentialsResponseDistributionCredentials",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "GetSelfHostedCredentialsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Returns a set of distribution credentials for the specified project",
      "authed": true,
      "method": "GET",
      "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials/{distribution_credentials_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "distribution_credentials_id",
              "value": {
                "value": {
                  "value": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "member": {
                  "properties": {
                    "member_id": {
                      "value": {
                        "value": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email": {
                      "value": {
                        "value": "email@example.com",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "distribution_credentials": {
                  "properties": {
                    "distribution_credentials_id": {
                      "value": {
                        "value": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "provider": {
                      "value": {
                        "value": "quay",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "comment": {
                      "value": {
                        "value": "My Self-Hosted Distribution Credentials",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "scopes": {
                      "value": [
                        {
                          "value": {
                            "value": "self-hosted:product:api",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "self-hosted:product:engine",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "created": {
                      "value": {
                        "value": "2023-06-28T15:36:59.609841Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a Project Self-Hosted Distribution Credential",
      "audiences": [],
      "operationId": "deleteSelfHostedDistCreds",
      "tags": [
        "Management API"
      ],
      "pathParameters": [
        {
          "description": "The unique identifier of the project",
          "name": "project_id",
          "schema": {
            "schema": {
              "example": "123456-7890-1234-5678-901234",
              "type": "string"
            },
            "generatedName": "DeleteSelfHostedDistCredsRequestProjectId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The UUID of the distribution credentials",
          "name": "distribution_credentials_id",
          "schema": {
            "schema": {
              "example": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
              "type": "string"
            },
            "generatedName": "DeleteSelfHostedDistCredsRequestDistributionCredentialsId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteSelfHostedDistCredsRequest",
      "response": {
        "description": "Single distribution credential",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteSelfHostedDistCredsResponseMember",
              "key": "member",
              "schema": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "deleteSelfHostedDistCredsResponseMemberMemberId",
                    "key": "member_id",
                    "schema": {
                      "description": "Unique identifier for the member",
                      "schema": {
                        "format": "uuid",
                        "example": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "type": "string"
                      },
                      "generatedName": "DeleteSelfHostedDistCredsResponseMemberMemberId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "deleteSelfHostedDistCredsResponseMemberEmail",
                    "key": "email",
                    "schema": {
                      "description": "Email address of the member",
                      "schema": {
                        "format": "email",
                        "example": "email@example.com",
                        "type": "string"
                      },
                      "generatedName": "DeleteSelfHostedDistCredsResponseMemberEmail",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "DeleteSelfHostedDistCredsResponseMember",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "deleteSelfHostedDistCredsResponseDistributionCredentials",
              "key": "distribution_credentials",
              "schema": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "deleteSelfHostedDistCredsResponseDistributionCredentialsDistributionCredentialsId",
                    "key": "distribution_credentials_id",
                    "schema": {
                      "description": "Unique identifier for the distribution credentials",
                      "schema": {
                        "format": "uuid",
                        "example": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "type": "string"
                      },
                      "generatedName": "DeleteSelfHostedDistCredsResponseDistributionCredentialsDistributionCredentialsId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "deleteSelfHostedDistCredsResponseDistributionCredentialsProvider",
                    "key": "provider",
                    "schema": {
                      "description": "The provider of the distribution service",
                      "schema": {
                        "example": "quay",
                        "type": "string"
                      },
                      "generatedName": "DeleteSelfHostedDistCredsResponseDistributionCredentialsProvider",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "deleteSelfHostedDistCredsResponseDistributionCredentialsComment",
                    "key": "comment",
                    "schema": {
                      "generatedName": "deleteSelfHostedDistCredsResponseDistributionCredentialsComment",
                      "value": {
                        "description": "Optional comment about the credentials",
                        "schema": {
                          "example": "My Self-Hosted Distribution Credentials",
                          "type": "string"
                        },
                        "generatedName": "DeleteSelfHostedDistCredsResponseDistributionCredentialsComment",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "deleteSelfHostedDistCredsResponseDistributionCredentialsScopes",
                    "key": "scopes",
                    "schema": {
                      "description": "List of permission scopes for the credentials",
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "DeleteSelfHostedDistCredsResponseDistributionCredentialsScopesItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "DeleteSelfHostedDistCredsResponseDistributionCredentialsScopes",
                      "groupName": [],
                      "type": "array"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "deleteSelfHostedDistCredsResponseDistributionCredentialsCreated",
                    "key": "created",
                    "schema": {
                      "description": "Timestamp when the credentials were created",
                      "schema": {
                        "type": "datetime"
                      },
                      "generatedName": "DeleteSelfHostedDistCredsResponseDistributionCredentialsCreated",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "DeleteSelfHostedDistCredsResponseDistributionCredentials",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "DeleteSelfHostedDistCredsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "forbiddenErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "forbiddenErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "forbiddenErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "forbiddenErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "forbiddenErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ForbiddenErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "ForbiddenErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Authentication failed",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "UNAUTHORIZED",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Authentication failed.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you are using the correct credentials.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyCategory",
                "key": "category",
                "schema": {
                  "generatedName": "notFoundErrorBodyCategory",
                  "value": {
                    "description": "The category of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyCategory",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyDetails",
                "key": "details",
                "schema": {
                  "generatedName": "notFoundErrorBodyDetails",
                  "value": {
                    "description": "A description of the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyDetails",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyMessage",
                "key": "message",
                "schema": {
                  "generatedName": "notFoundErrorBodyMessage",
                  "value": {
                    "description": "A message about the error",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "notFoundErrorBodyRequestId",
                "key": "request_id",
                "schema": {
                  "generatedName": "notFoundErrorBodyRequestId",
                  "value": {
                    "description": "The unique identifier of the request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "NotFoundErrorBodyRequestId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Project not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": [
                  {
                    "key": {
                      "value": "category",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "NOT_FOUND",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "message",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "A project with the submitted ID cannot be found.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "details",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "Check that you have submitted the intended project ID and that the project has not been deleted.",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  {
                    "key": {
                      "value": "request_id",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "123456-7890-1234-5678-901234",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            }
          ]
        }
      },
      "servers": [],
      "description": "Deletes a set of distribution credentials for the specified project",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/projects/{project_id}/self-hosted/distribution/credentials/{distribution_credentials_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "project_id",
              "value": {
                "value": {
                  "value": "123456-7890-1234-5678-901234",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "distribution_credentials_id",
              "value": {
                "value": {
                  "value": "8b36cfd0-472f-4a21-833f-2d6343c3a2f3",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "member": {
                  "properties": {
                    "member_id": {
                      "value": {
                        "value": "c7b9b131-73f3-11d9-8665-0b00d2e44b83",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email": {
                      "value": {
                        "value": "email@example.com",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "distribution_credentials": {
                  "properties": {
                    "distribution_credentials_id": {
                      "value": {
                        "value": "82c32c10-53b2-4d23-993f-864b3d44502a",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "provider": {
                      "value": {
                        "value": "quay",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "comment": {
                      "value": {
                        "value": "My Self-Hosted Distribution Credentials",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "scopes": {
                      "value": [
                        {
                          "value": {
                            "value": "self-hosted:product:api",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "self-hosted:product:engine",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "created": {
                      "value": {
                        "value": "2023-06-28T15:36:59.609841Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channels": {
    "speak": {
      "audiences": [],
      "handshake": {
        "headers": [
          {
            "name": "Sec-Websocket-Protocol",
            "description": "Used to establish a WebSocket connection with authentication. Format should be 'token, <DEEPGRAM_API_KEY>'",
            "schema": {
              "schema": {
                "example": "token, YOUR_DEEPGRAM_API_KEY",
                "type": "string"
              },
              "generatedName": "",
              "title": "SpeakSecWebSocketProtocol",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          }
        ],
        "queryParameters": [
          {
            "name": "encoding",
            "description": "Encoding allows you to specify the expected encoding of your audio output",
            "schema": {
              "description": "Encoding allows you to specify the expected encoding of your audio output",
              "generatedName": "SpeakEncoding",
              "values": [
                {
                  "generatedName": "linear16",
                  "value": "linear16",
                  "casing": {}
                },
                {
                  "generatedName": "mulaw",
                  "value": "mulaw",
                  "casing": {}
                },
                {
                  "generatedName": "alaw",
                  "value": "alaw",
                  "casing": {}
                },
                {
                  "generatedName": "opus",
                  "value": "opus",
                  "casing": {}
                },
                {
                  "generatedName": "mp3",
                  "value": "mp3",
                  "casing": {}
                },
                {
                  "generatedName": "flac",
                  "value": "flac",
                  "casing": {}
                },
                {
                  "generatedName": "aac",
                  "value": "aac",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "mp3",
                "value": "mp3",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "model",
            "description": "AI model used to process submitted text",
            "schema": {
              "description": "AI model used to process submitted text",
              "generatedName": "SpeakModel",
              "values": [
                {
                  "generatedName": "AuraAsteriaEn",
                  "value": "aura-asteria-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraLunaEn",
                  "value": "aura-luna-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraStellaEn",
                  "value": "aura-stella-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraAthenaEn",
                  "value": "aura-athena-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraHeraEn",
                  "value": "aura-hera-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraOrionEn",
                  "value": "aura-orion-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraArcasEn",
                  "value": "aura-arcas-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraPerseusEn",
                  "value": "aura-perseus-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraAngusEn",
                  "value": "aura-angus-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraOrpheusEn",
                  "value": "aura-orpheus-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraHeliosEn",
                  "value": "aura-helios-en",
                  "casing": {}
                },
                {
                  "generatedName": "AuraZeusEn",
                  "value": "aura-zeus-en",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "AuraAsteriaEn",
                "value": "aura-asteria-en",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "sample_rate",
            "description": "Sample Rate specifies the sample rate for the output audio. Based on encoding 8000 or 24000 are possible defaults. For some encodings sample rate is not configurable.",
            "schema": {
              "description": "Sample Rate specifies the sample rate for the output audio. Based on encoding 8000 or 24000 are possible defaults. For some encodings sample rate is not configurable.",
              "generatedName": "SpeakSampleRate",
              "values": [
                {
                  "generatedName": "EightThousand",
                  "value": "8000",
                  "casing": {}
                },
                {
                  "generatedName": "16000",
                  "value": "16000",
                  "casing": {}
                },
                {
                  "generatedName": "24000",
                  "value": "24000",
                  "casing": {}
                },
                {
                  "generatedName": "44100",
                  "value": "44100",
                  "casing": {}
                },
                {
                  "generatedName": "48000",
                  "value": "48000",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "24000",
                "value": "24000",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          }
        ],
        "pathParameters": []
      },
      "groupName": [
        "speak"
      ],
      "publish": {
        "value": {
          "generatedName": "SpeakPublishEvent",
          "schemas": [
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "textToSpeechRequestType",
                  "key": "type",
                  "schema": {
                    "description": "Message type indicating a text-to-speech request",
                    "value": {
                      "value": "Speak",
                      "type": "string"
                    },
                    "generatedName": "TextToSpeechRequestType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "textToSpeechRequestText",
                  "key": "text",
                  "schema": {
                    "description": "The input text to be converted to speech",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TextToSpeechRequestText",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "TextToSpeechRequest",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "generatedName": "SpeakControlMessagesRequest",
              "values": [
                {
                  "generatedName": "Flush",
                  "value": "Flush",
                  "casing": {}
                },
                {
                  "generatedName": "Clear",
                  "value": "Clear",
                  "casing": {}
                },
                {
                  "generatedName": "Close",
                  "value": "Close",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            }
          ],
          "source": {
            "file": "../asyncapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "subscribe": {
        "value": {
          "generatedName": "SpeakSubscribeEvent",
          "schemas": [
            {
              "description": "Audio data in the format specified by the request parameters",
              "schema": {
                "format": "binary",
                "type": "string"
              },
              "generatedName": "TextToSpeechResponse",
              "groupName": [],
              "type": "primitive"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "controlMessagesResponseType",
                  "key": "type",
                  "schema": {
                    "description": "The type of control message response",
                    "generatedName": "ControlMessagesResponseType",
                    "values": [
                      {
                        "generatedName": "flush",
                        "value": "flush",
                        "casing": {}
                      },
                      {
                        "generatedName": "clear",
                        "value": "clear",
                        "casing": {}
                      },
                      {
                        "generatedName": "close",
                        "value": "close",
                        "casing": {}
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "enum"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "controlMessagesResponseSequenceId",
                  "key": "sequence_id",
                  "schema": {
                    "generatedName": "controlMessagesResponseSequenceId",
                    "value": {
                      "description": "The sequence ID of the response",
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "ControlMessagesResponseSequenceId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ControlMessagesResponse",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            }
          ],
          "source": {
            "file": "../asyncapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "servers": [
        {
          "name": "public",
          "url": "wss://api.deepgram.com"
        }
      ],
      "path": "/v1/speak",
      "examples": [
        {
          "queryParameters": [],
          "headers": [],
          "messages": [
            {
              "messageType": "publish",
              "payload": {
                "properties": {
                  "type": {
                    "value": {
                      "value": "Speak",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "text": {
                    "value": {
                      "value": "text",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            },
            {
              "messageType": "subscribe",
              "payload": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      ],
      "source": {
        "file": "../asyncapi.yml",
        "type": "openapi"
      }
    },
    "listen": {
      "audiences": [],
      "handshake": {
        "headers": [
          {
            "name": "Sec-Websocket-Protocol",
            "description": "Used to establish a WebSocket connection with authentication. Format should be 'token, <DEEPGRAM_API_KEY>'",
            "schema": {
              "schema": {
                "example": "token, YOUR_DEEPGRAM_API_KEY",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenSecWebSocketProtocol",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          }
        ],
        "queryParameters": [
          {
            "name": "callback",
            "description": "URL to which we'll make the callback request",
            "schema": {
              "schema": {
                "example": "https://example.com",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenCallback",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "callback_method",
            "description": "HTTP method by which the callback request will be made",
            "schema": {
              "description": "HTTP method by which the callback request will be made",
              "generatedName": "ListenCallbackMethod",
              "values": [
                {
                  "generatedName": "POST",
                  "value": "POST",
                  "casing": {}
                },
                {
                  "generatedName": "GET",
                  "value": "GET",
                  "casing": {}
                },
                {
                  "generatedName": "PUT",
                  "value": "PUT",
                  "casing": {}
                },
                {
                  "generatedName": "DELETE",
                  "value": "DELETE",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "POST",
                "value": "POST",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "channels",
            "description": "The number of channels in the submitted audio",
            "schema": {
              "schema": {
                "default": "1",
                "example": "1",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenChannels",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "dictation",
            "description": "Identify and extract key entities from content in submitted audio",
            "schema": {
              "description": "Identify and extract key entities from content in submitted audio",
              "generatedName": "ListenDictation",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "diarize",
            "description": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
            "schema": {
              "description": "Recognize speaker changes. Each word in the transcript will be assigned a speaker number starting at 0",
              "generatedName": "ListenDiarize",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "diarize_version",
            "description": "Version of the diarization feature to use. Only used when the diarization feature is enabled (`diarize=true` is passed to the API)",
            "schema": {
              "schema": {
                "default": "v2",
                "example": "v1",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenDiarizeVersion",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "encoding",
            "description": "Specify the expected encoding of your submitted audio",
            "schema": {
              "description": "Specify the expected encoding of your submitted audio",
              "generatedName": "ListenEncoding",
              "values": [
                {
                  "generatedName": "linear16",
                  "value": "linear16",
                  "casing": {}
                },
                {
                  "generatedName": "flac",
                  "value": "flac",
                  "casing": {}
                },
                {
                  "generatedName": "mulaw",
                  "value": "mulaw",
                  "casing": {}
                },
                {
                  "generatedName": "AmrNb",
                  "value": "amr-nb",
                  "casing": {}
                },
                {
                  "generatedName": "AmrWb",
                  "value": "amr-wb",
                  "casing": {}
                },
                {
                  "generatedName": "opus",
                  "value": "opus",
                  "casing": {}
                },
                {
                  "generatedName": "speex",
                  "value": "speex",
                  "casing": {}
                },
                {
                  "generatedName": "g729",
                  "value": "g729",
                  "casing": {}
                }
              ],
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "endpointing",
            "description": "Indicates how long Deepgram will wait to detect whether a speaker has finished speaking or pauses for a significant period of time. When set to a value, the streaming endpoint immediately finalizes the transcription for the processed time range and returns the transcript with a speech_final parameter set to true. Can also be set to false to disable endpointing",
            "schema": {
              "schema": {
                "default": "10",
                "example": "300",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenEndpointing",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "extra",
            "description": "Arbitrary key-value pairs that are attached to the API response for usage in downstream processing",
            "schema": {
              "schema": {
                "example": "key:value",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenExtra",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "filler_words",
            "description": "Filler Words can help transcribe interruptions in your audio, like \"uh\" and \"um\"",
            "schema": {
              "description": "Filler Words can help transcribe interruptions in your audio, like \"uh\" and \"um\"",
              "generatedName": "ListenFillerWords",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "interim_results",
            "description": "Specifies whether the streaming endpoint should provide ongoing transcription updates as more audio is received. When set to true, the endpoint sends continuous updates, meaning transcription results may evolve over time",
            "schema": {
              "description": "Specifies whether the streaming endpoint should provide ongoing transcription updates as more audio is received. When set to true, the endpoint sends continuous updates, meaning transcription results may evolve over time",
              "generatedName": "ListenInterimResults",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "keywords",
            "description": "Keywords can boost or suppress specialized terminology and brands",
            "schema": {
              "schema": {
                "example": "Twilio:2",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenKeywords",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "keyterm",
            "description": "Key term prompting can boost or suppress specialized terminology and brands. Only compatible with Nova-3",
            "schema": {
              "schema": {
                "example": "Snuffleupagus",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenKeyterm",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "language",
            "description": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
            "schema": {
              "description": "The [BCP-47 language tag](https://tools.ietf.org/html/bcp47) that hints at the primary spoken language. Depending on the Model you choose only certain languages are available",
              "generatedName": "ListenLanguage",
              "values": [
                {
                  "generatedName": "bg",
                  "value": "bg",
                  "casing": {}
                },
                {
                  "generatedName": "ca",
                  "value": "ca",
                  "casing": {}
                },
                {
                  "generatedName": "cs",
                  "value": "cs",
                  "casing": {}
                },
                {
                  "generatedName": "da",
                  "value": "da",
                  "casing": {}
                },
                {
                  "generatedName": "DaDk",
                  "value": "da-DK",
                  "casing": {}
                },
                {
                  "generatedName": "de",
                  "value": "de",
                  "casing": {}
                },
                {
                  "generatedName": "DeCh",
                  "value": "de-CH",
                  "casing": {}
                },
                {
                  "generatedName": "el",
                  "value": "el",
                  "casing": {}
                },
                {
                  "generatedName": "en",
                  "value": "en",
                  "casing": {}
                },
                {
                  "generatedName": "EnAu",
                  "value": "en-AU",
                  "casing": {}
                },
                {
                  "generatedName": "EnGb",
                  "value": "en-GB",
                  "casing": {}
                },
                {
                  "generatedName": "EnIn",
                  "value": "en-IN",
                  "casing": {}
                },
                {
                  "generatedName": "EnNz",
                  "value": "en-NZ",
                  "casing": {}
                },
                {
                  "generatedName": "EnUs",
                  "value": "en-US",
                  "casing": {}
                },
                {
                  "generatedName": "es",
                  "value": "es",
                  "casing": {}
                },
                {
                  "generatedName": "Es419",
                  "value": "es-419",
                  "casing": {}
                },
                {
                  "generatedName": "EsLatam",
                  "value": "es-LATAM",
                  "casing": {}
                },
                {
                  "generatedName": "et",
                  "value": "et",
                  "casing": {}
                },
                {
                  "generatedName": "fi",
                  "value": "fi",
                  "casing": {}
                },
                {
                  "generatedName": "fr",
                  "value": "fr",
                  "casing": {}
                },
                {
                  "generatedName": "FrCa",
                  "value": "fr-CA",
                  "casing": {}
                },
                {
                  "generatedName": "hi",
                  "value": "hi",
                  "casing": {}
                },
                {
                  "generatedName": "HiLatn",
                  "value": "hi-Latn",
                  "casing": {}
                },
                {
                  "generatedName": "hu",
                  "value": "hu",
                  "casing": {}
                },
                {
                  "generatedName": "id",
                  "value": "id",
                  "casing": {}
                },
                {
                  "generatedName": "it",
                  "value": "it",
                  "casing": {}
                },
                {
                  "generatedName": "ja",
                  "value": "ja",
                  "casing": {}
                },
                {
                  "generatedName": "ko",
                  "value": "ko",
                  "casing": {}
                },
                {
                  "generatedName": "KoKr",
                  "value": "ko-KR",
                  "casing": {}
                },
                {
                  "generatedName": "lt",
                  "value": "lt",
                  "casing": {}
                },
                {
                  "generatedName": "lv",
                  "value": "lv",
                  "casing": {}
                },
                {
                  "generatedName": "ms",
                  "value": "ms",
                  "casing": {}
                },
                {
                  "generatedName": "nl",
                  "value": "nl",
                  "casing": {}
                },
                {
                  "generatedName": "NlBe",
                  "value": "nl-BE",
                  "casing": {}
                },
                {
                  "generatedName": "no",
                  "value": "no",
                  "casing": {}
                },
                {
                  "generatedName": "pl",
                  "value": "pl",
                  "casing": {}
                },
                {
                  "generatedName": "pt",
                  "value": "pt",
                  "casing": {}
                },
                {
                  "generatedName": "PtBr",
                  "value": "pt-BR",
                  "casing": {}
                },
                {
                  "generatedName": "PtPt",
                  "value": "pt-PT",
                  "casing": {}
                },
                {
                  "generatedName": "ro",
                  "value": "ro",
                  "casing": {}
                },
                {
                  "generatedName": "ru",
                  "value": "ru",
                  "casing": {}
                },
                {
                  "generatedName": "sk",
                  "value": "sk",
                  "casing": {}
                },
                {
                  "generatedName": "sv",
                  "value": "sv",
                  "casing": {}
                },
                {
                  "generatedName": "SvSe",
                  "value": "sv-SE",
                  "casing": {}
                },
                {
                  "generatedName": "taq",
                  "value": "taq",
                  "casing": {}
                },
                {
                  "generatedName": "th",
                  "value": "th",
                  "casing": {}
                },
                {
                  "generatedName": "ThTh",
                  "value": "th-TH",
                  "casing": {}
                },
                {
                  "generatedName": "tr",
                  "value": "tr",
                  "casing": {}
                },
                {
                  "generatedName": "uk",
                  "value": "uk",
                  "casing": {}
                },
                {
                  "generatedName": "vi",
                  "value": "vi",
                  "casing": {}
                },
                {
                  "generatedName": "zh",
                  "value": "zh",
                  "casing": {}
                },
                {
                  "generatedName": "ZhCn",
                  "value": "zh-CN",
                  "casing": {}
                },
                {
                  "generatedName": "ZhHk",
                  "value": "zh-HK",
                  "casing": {}
                },
                {
                  "generatedName": "ZhHans",
                  "value": "zh-Hans",
                  "casing": {}
                },
                {
                  "generatedName": "ZhHant",
                  "value": "zh-Hant",
                  "casing": {}
                },
                {
                  "generatedName": "ZhTw",
                  "value": "zh-TW",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "en",
                "value": "en",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "model",
            "description": "AI model to use for the transcription",
            "schema": {
              "description": "AI model to use for the transcription",
              "generatedName": "ListenModel",
              "values": [
                {
                  "generatedName": "Nova3",
                  "value": "nova-3",
                  "casing": {}
                },
                {
                  "generatedName": "Nova3General",
                  "value": "nova-3-general",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2",
                  "value": "nova-2",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2General",
                  "value": "nova-2-general",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Meeting",
                  "value": "nova-2-meeting",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Finance",
                  "value": "nova-2-finance",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Conversationalai",
                  "value": "nova-2-conversationalai",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Voicemail",
                  "value": "nova-2-voicemail",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Video",
                  "value": "nova-2-video",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Medical",
                  "value": "nova-2-medical",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Drivethru",
                  "value": "nova-2-drivethru",
                  "casing": {}
                },
                {
                  "generatedName": "Nova2Automotive",
                  "value": "nova-2-automotive",
                  "casing": {}
                },
                {
                  "generatedName": "nova",
                  "value": "nova",
                  "casing": {}
                },
                {
                  "generatedName": "NovaGeneral",
                  "value": "nova-general",
                  "casing": {}
                },
                {
                  "generatedName": "NovaPhonecall",
                  "value": "nova-phonecall",
                  "casing": {}
                },
                {
                  "generatedName": "NovaMedical",
                  "value": "nova-medical",
                  "casing": {}
                },
                {
                  "generatedName": "enhanced",
                  "value": "enhanced",
                  "casing": {}
                },
                {
                  "generatedName": "EnhancedGeneral",
                  "value": "enhanced-general",
                  "casing": {}
                },
                {
                  "generatedName": "EnhancedMeeting",
                  "value": "enhanced-meeting",
                  "casing": {}
                },
                {
                  "generatedName": "EnhancedPhonecall",
                  "value": "enhanced-phonecall",
                  "casing": {}
                },
                {
                  "generatedName": "EnhancedFinance",
                  "value": "enhanced-finance",
                  "casing": {}
                },
                {
                  "generatedName": "base",
                  "value": "base",
                  "casing": {}
                },
                {
                  "generatedName": "meeting",
                  "value": "meeting",
                  "casing": {}
                },
                {
                  "generatedName": "phonecall",
                  "value": "phonecall",
                  "casing": {}
                },
                {
                  "generatedName": "finance",
                  "value": "finance",
                  "casing": {}
                },
                {
                  "generatedName": "conversationalai",
                  "value": "conversationalai",
                  "casing": {}
                },
                {
                  "generatedName": "voicemail",
                  "value": "voicemail",
                  "casing": {}
                },
                {
                  "generatedName": "video",
                  "value": "video",
                  "casing": {}
                },
                {
                  "generatedName": "custom",
                  "value": "custom",
                  "casing": {}
                }
              ],
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "multichannel",
            "description": "Transcribe each audio channel independently",
            "schema": {
              "description": "Transcribe each audio channel independently",
              "generatedName": "ListenMultichannel",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "numerals",
            "description": "Convert numbers from written format to numerical format",
            "schema": {
              "description": "Convert numbers from written format to numerical format",
              "generatedName": "ListenNumerals",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "profanity_filter",
            "description": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
            "schema": {
              "description": "Profanity Filter looks for recognized profanity and converts it to the nearest recognized non-profane word or removes it from the transcript completely",
              "generatedName": "ListenProfanityFilter",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "punctuate",
            "description": "Add punctuation and capitalization to the transcript",
            "schema": {
              "description": "Add punctuation and capitalization to the transcript",
              "generatedName": "ListenPunctuate",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "redact",
            "description": "Redaction removes sensitive information from your transcripts",
            "schema": {
              "description": "Redaction removes sensitive information from your transcripts",
              "generatedName": "ListenRedact",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "replace",
            "description": "Search for terms or phrases in submitted audio and replaces them",
            "schema": {
              "schema": {
                "example": "monika:Monica",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenReplace",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "sample_rate",
            "description": "Sample rate of submitted audio. Required (and only read) when a value is provided for encoding",
            "schema": {
              "schema": {
                "example": "8000",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenSampleRate",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "search",
            "description": "Search for terms or phrases in submitted audio",
            "schema": {
              "schema": {
                "example": "Deepgram",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenSearch",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "smart_format",
            "description": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
            "schema": {
              "description": "Apply formatting to transcript output. When set to true, additional formatting will be applied to transcripts to improve readability",
              "generatedName": "ListenSmartFormat",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "tag",
            "description": "Label your requests for the purpose of identification during usage reporting",
            "schema": {
              "schema": {
                "example": "my-team",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenTag",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "utterance_end",
            "description": "Indicates how long Deepgram will wait to send an UtteranceEnd message after a word has been transcribed. Use with interim_results",
            "schema": {
              "schema": {
                "example": "1000",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenUtteranceEnd",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "vad_events",
            "description": "Indicates that speech has started. You'll begin receiving Speech Started messages upon speech starting",
            "schema": {
              "description": "Indicates that speech has started. You'll begin receiving Speech Started messages upon speech starting",
              "generatedName": "ListenVadEvents",
              "values": [
                {
                  "generatedName": "true",
                  "value": "true",
                  "casing": {}
                },
                {
                  "generatedName": "false",
                  "value": "false",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "false",
                "value": "false",
                "casing": {}
              },
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          },
          {
            "name": "version",
            "description": "Version of an AI model to use",
            "schema": {
              "schema": {
                "default": "latest",
                "example": "MODEL_VERSION",
                "type": "string"
              },
              "generatedName": "",
              "title": "ListenVersion",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          }
        ],
        "pathParameters": []
      },
      "groupName": [
        "listen"
      ],
      "publish": {
        "value": {
          "generatedName": "ListenPublishEvent",
          "schemas": [
            {
              "description": "Raw audio data to be transcribed. Should be sent as a binary WebSocket message without base64 encoding",
              "schema": {
                "format": "binary",
                "type": "string"
              },
              "generatedName": "TranscriptionRequest",
              "groupName": [],
              "type": "primitive"
            },
            {
              "value": {
                "commonProperties": [],
                "discriminantProperty": "type",
                "generatedName": "ListenControlMessagesRequest",
                "schemas": {
                  "Finalize": {
                    "allOf": [],
                    "properties": [],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListenControlMessagesRequestFinalize",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "CloseStream": {
                    "allOf": [],
                    "properties": [],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListenControlMessagesRequestCloseStream",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "KeepAlive": {
                    "allOf": [],
                    "properties": [],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ListenControlMessagesRequestKeepAlive",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  }
                },
                "groupName": [],
                "source": {
                  "file": "../asyncapi.yml",
                  "type": "openapi"
                },
                "type": "discriminated"
              },
              "type": "oneOf"
            }
          ],
          "source": {
            "file": "../asyncapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "subscribe": {
        "value": {
          "generatedName": "ListenSubscribeEvent",
          "schemas": [
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseChannel",
                  "key": "channel",
                  "schema": {
                    "generatedName": "transcriptionResponseChannel",
                    "value": {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "transcriptionResponseChannelAlternatives",
                          "key": "alternatives",
                          "schema": {
                            "generatedName": "transcriptionResponseChannelAlternatives",
                            "value": {
                              "value": {
                                "allOf": [],
                                "properties": [
                                  {
                                    "conflict": {},
                                    "generatedName": "transcriptionResponseChannelAlternativesItemTranscript",
                                    "key": "transcript",
                                    "schema": {
                                      "generatedName": "transcriptionResponseChannelAlternativesItemTranscript",
                                      "value": {
                                        "description": "Complete transcribed text",
                                        "schema": {
                                          "type": "string"
                                        },
                                        "generatedName": "TranscriptionResponseChannelAlternativesItemTranscript",
                                        "groupName": [],
                                        "type": "primitive"
                                      },
                                      "groupName": [],
                                      "type": "optional"
                                    },
                                    "audiences": []
                                  },
                                  {
                                    "conflict": {},
                                    "generatedName": "transcriptionResponseChannelAlternativesItemConfidence",
                                    "key": "confidence",
                                    "schema": {
                                      "generatedName": "transcriptionResponseChannelAlternativesItemConfidence",
                                      "value": {
                                        "description": "Overall confidence score",
                                        "schema": {
                                          "type": "float"
                                        },
                                        "generatedName": "TranscriptionResponseChannelAlternativesItemConfidence",
                                        "groupName": [],
                                        "type": "primitive"
                                      },
                                      "groupName": [],
                                      "type": "optional"
                                    },
                                    "audiences": []
                                  },
                                  {
                                    "conflict": {},
                                    "generatedName": "transcriptionResponseChannelAlternativesItemWords",
                                    "key": "words",
                                    "schema": {
                                      "generatedName": "transcriptionResponseChannelAlternativesItemWords",
                                      "value": {
                                        "value": {
                                          "allOf": [],
                                          "properties": [
                                            {
                                              "conflict": {},
                                              "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemWord",
                                              "key": "word",
                                              "schema": {
                                                "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemWord",
                                                "value": {
                                                  "schema": {
                                                    "type": "string"
                                                  },
                                                  "generatedName": "TranscriptionResponseChannelAlternativesItemWordsItemWord",
                                                  "groupName": [],
                                                  "type": "primitive"
                                                },
                                                "groupName": [],
                                                "type": "optional"
                                              },
                                              "audiences": []
                                            },
                                            {
                                              "conflict": {},
                                              "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemStart",
                                              "key": "start",
                                              "schema": {
                                                "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemStart",
                                                "value": {
                                                  "schema": {
                                                    "type": "float"
                                                  },
                                                  "generatedName": "TranscriptionResponseChannelAlternativesItemWordsItemStart",
                                                  "groupName": [],
                                                  "type": "primitive"
                                                },
                                                "groupName": [],
                                                "type": "optional"
                                              },
                                              "audiences": []
                                            },
                                            {
                                              "conflict": {},
                                              "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemEnd",
                                              "key": "end",
                                              "schema": {
                                                "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemEnd",
                                                "value": {
                                                  "schema": {
                                                    "type": "float"
                                                  },
                                                  "generatedName": "TranscriptionResponseChannelAlternativesItemWordsItemEnd",
                                                  "groupName": [],
                                                  "type": "primitive"
                                                },
                                                "groupName": [],
                                                "type": "optional"
                                              },
                                              "audiences": []
                                            },
                                            {
                                              "conflict": {},
                                              "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemConfidence",
                                              "key": "confidence",
                                              "schema": {
                                                "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemConfidence",
                                                "value": {
                                                  "schema": {
                                                    "type": "float"
                                                  },
                                                  "generatedName": "TranscriptionResponseChannelAlternativesItemWordsItemConfidence",
                                                  "groupName": [],
                                                  "type": "primitive"
                                                },
                                                "groupName": [],
                                                "type": "optional"
                                              },
                                              "audiences": []
                                            },
                                            {
                                              "conflict": {},
                                              "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemPunctuatedWord",
                                              "key": "punctuated_word",
                                              "schema": {
                                                "generatedName": "transcriptionResponseChannelAlternativesItemWordsItemPunctuatedWord",
                                                "value": {
                                                  "schema": {
                                                    "type": "string"
                                                  },
                                                  "generatedName": "TranscriptionResponseChannelAlternativesItemWordsItemPunctuatedWord",
                                                  "groupName": [],
                                                  "type": "primitive"
                                                },
                                                "groupName": [],
                                                "type": "optional"
                                              },
                                              "audiences": []
                                            }
                                          ],
                                          "allOfPropertyConflicts": [],
                                          "generatedName": "TranscriptionResponseChannelAlternativesItemWordsItem",
                                          "groupName": [],
                                          "additionalProperties": false,
                                          "source": {
                                            "file": "../asyncapi.yml",
                                            "type": "openapi"
                                          },
                                          "type": "object"
                                        },
                                        "generatedName": "TranscriptionResponseChannelAlternativesItemWords",
                                        "groupName": [],
                                        "type": "array"
                                      },
                                      "groupName": [],
                                      "type": "optional"
                                    },
                                    "audiences": []
                                  }
                                ],
                                "allOfPropertyConflicts": [],
                                "generatedName": "TranscriptionResponseChannelAlternativesItem",
                                "groupName": [],
                                "additionalProperties": false,
                                "source": {
                                  "file": "../asyncapi.yml",
                                  "type": "openapi"
                                },
                                "type": "object"
                              },
                              "generatedName": "TranscriptionResponseChannelAlternatives",
                              "groupName": [],
                              "type": "array"
                            },
                            "groupName": [],
                            "type": "optional"
                          },
                          "audiences": []
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "TranscriptionResponseChannel",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../asyncapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseMetadata",
                  "key": "metadata",
                  "schema": {
                    "generatedName": "transcriptionResponseMetadata",
                    "value": {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "transcriptionResponseMetadataModelInfo",
                          "key": "model_info",
                          "schema": {
                            "generatedName": "transcriptionResponseMetadataModelInfo",
                            "value": {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "transcriptionResponseMetadataModelInfoName",
                                  "key": "name",
                                  "schema": {
                                    "generatedName": "transcriptionResponseMetadataModelInfoName",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "TranscriptionResponseMetadataModelInfoName",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "transcriptionResponseMetadataModelInfoVersion",
                                  "key": "version",
                                  "schema": {
                                    "generatedName": "transcriptionResponseMetadataModelInfoVersion",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "TranscriptionResponseMetadataModelInfoVersion",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "transcriptionResponseMetadataModelInfoArch",
                                  "key": "arch",
                                  "schema": {
                                    "generatedName": "transcriptionResponseMetadataModelInfoArch",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "TranscriptionResponseMetadataModelInfoArch",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "generatedName": "TranscriptionResponseMetadataModelInfo",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../asyncapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            },
                            "groupName": [],
                            "type": "optional"
                          },
                          "audiences": []
                        },
                        {
                          "conflict": {},
                          "generatedName": "transcriptionResponseMetadataRequestId",
                          "key": "request_id",
                          "schema": {
                            "generatedName": "transcriptionResponseMetadataRequestId",
                            "value": {
                              "schema": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "generatedName": "TranscriptionResponseMetadataRequestId",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "groupName": [],
                            "type": "optional"
                          },
                          "audiences": []
                        },
                        {
                          "conflict": {},
                          "generatedName": "transcriptionResponseMetadataModelUuid",
                          "key": "model_uuid",
                          "schema": {
                            "generatedName": "transcriptionResponseMetadataModelUuid",
                            "value": {
                              "schema": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "generatedName": "TranscriptionResponseMetadataModelUuid",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "groupName": [],
                            "type": "optional"
                          },
                          "audiences": []
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "generatedName": "TranscriptionResponseMetadata",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../asyncapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseType",
                  "key": "type",
                  "schema": {
                    "generatedName": "transcriptionResponseType",
                    "value": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "TranscriptionResponseType",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseChannelIndex",
                  "key": "channel_index",
                  "schema": {
                    "generatedName": "transcriptionResponseChannelIndex",
                    "value": {
                      "value": {
                        "schema": {
                          "type": "int"
                        },
                        "generatedName": "TranscriptionResponseChannelIndexItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "TranscriptionResponseChannelIndex",
                      "groupName": [],
                      "type": "array"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseDuration",
                  "key": "duration",
                  "schema": {
                    "generatedName": "transcriptionResponseDuration",
                    "value": {
                      "schema": {
                        "type": "float"
                      },
                      "generatedName": "TranscriptionResponseDuration",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseStart",
                  "key": "start",
                  "schema": {
                    "generatedName": "transcriptionResponseStart",
                    "value": {
                      "schema": {
                        "type": "float"
                      },
                      "generatedName": "TranscriptionResponseStart",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseIsFinal",
                  "key": "is_final",
                  "schema": {
                    "generatedName": "transcriptionResponseIsFinal",
                    "value": {
                      "schema": {
                        "type": "boolean"
                      },
                      "generatedName": "TranscriptionResponseIsFinal",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseFromFinalize",
                  "key": "from_finalize",
                  "schema": {
                    "generatedName": "transcriptionResponseFromFinalize",
                    "value": {
                      "schema": {
                        "type": "boolean"
                      },
                      "generatedName": "TranscriptionResponseFromFinalize",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "transcriptionResponseSpeechFinal",
                  "key": "speech_final",
                  "schema": {
                    "generatedName": "transcriptionResponseSpeechFinal",
                    "value": {
                      "schema": {
                        "type": "boolean"
                      },
                      "generatedName": "TranscriptionResponseSpeechFinal",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "TranscriptionResponse",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "value": {
                "generatedName": "ControlMessageResponse",
                "schemas": [
                  {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseZeroType",
                        "key": "type",
                        "schema": {
                          "generatedName": "controlMessageResponseZeroType",
                          "value": {
                            "value": {
                              "value": "Finalize",
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseZeroType",
                            "groupName": [],
                            "type": "literal"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseZeroChannel",
                        "key": "channel",
                        "schema": {
                          "generatedName": "controlMessageResponseZeroChannel",
                          "value": {
                            "description": "The channel number being finalized",
                            "schema": {
                              "minimum": 0,
                              "type": "int"
                            },
                            "generatedName": "ControlMessageResponseZeroChannel",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ControlMessageResponseZero",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseOneType",
                        "key": "type",
                        "schema": {
                          "generatedName": "controlMessageResponseOneType",
                          "value": {
                            "value": {
                              "value": "Metadata",
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseOneType",
                            "groupName": [],
                            "type": "literal"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseOneTransactionKey",
                        "key": "transaction_key",
                        "schema": {
                          "generatedName": "controlMessageResponseOneTransactionKey",
                          "value": {
                            "description": "Deprecated field",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseOneTransactionKey",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseOneRequestId",
                        "key": "request_id",
                        "schema": {
                          "generatedName": "controlMessageResponseOneRequestId",
                          "value": {
                            "description": "Unique identifier for the request",
                            "schema": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseOneRequestId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseOneSha256",
                        "key": "sha256",
                        "schema": {
                          "generatedName": "controlMessageResponseOneSha256",
                          "value": {
                            "description": "SHA-256 hash of the audio content",
                            "schema": {
                              "pattern": "^[a-fA-F0-9]{64}$",
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseOneSha256",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseOneCreated",
                        "key": "created",
                        "schema": {
                          "generatedName": "controlMessageResponseOneCreated",
                          "value": {
                            "description": "Timestamp when the response was created",
                            "schema": {
                              "type": "datetime"
                            },
                            "generatedName": "ControlMessageResponseOneCreated",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseOneDuration",
                        "key": "duration",
                        "schema": {
                          "generatedName": "controlMessageResponseOneDuration",
                          "value": {
                            "description": "Duration of the audio in seconds",
                            "schema": {
                              "type": "float"
                            },
                            "generatedName": "ControlMessageResponseOneDuration",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseOneChannels",
                        "key": "channels",
                        "schema": {
                          "generatedName": "controlMessageResponseOneChannels",
                          "value": {
                            "description": "Number of audio channels",
                            "schema": {
                              "minimum": 0,
                              "type": "int"
                            },
                            "generatedName": "ControlMessageResponseOneChannels",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ControlMessageResponseOne",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseTwoType",
                        "key": "type",
                        "schema": {
                          "generatedName": "controlMessageResponseTwoType",
                          "value": {
                            "value": {
                              "value": "CloseStream",
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseTwoType",
                            "groupName": [],
                            "type": "literal"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseTwoTransactionKey",
                        "key": "transaction_key",
                        "schema": {
                          "generatedName": "controlMessageResponseTwoTransactionKey",
                          "value": {
                            "description": "Deprecated field",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseTwoTransactionKey",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseTwoRequestId",
                        "key": "request_id",
                        "schema": {
                          "generatedName": "controlMessageResponseTwoRequestId",
                          "value": {
                            "description": "Unique identifier for the request",
                            "schema": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseTwoRequestId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseTwoSha256",
                        "key": "sha256",
                        "schema": {
                          "generatedName": "controlMessageResponseTwoSha256",
                          "value": {
                            "description": "SHA-256 hash of the audio content",
                            "schema": {
                              "pattern": "^[a-fA-F0-9]{64}$",
                              "type": "string"
                            },
                            "generatedName": "ControlMessageResponseTwoSha256",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseTwoCreated",
                        "key": "created",
                        "schema": {
                          "generatedName": "controlMessageResponseTwoCreated",
                          "value": {
                            "description": "Timestamp when the response was created",
                            "schema": {
                              "type": "datetime"
                            },
                            "generatedName": "ControlMessageResponseTwoCreated",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseTwoDuration",
                        "key": "duration",
                        "schema": {
                          "generatedName": "controlMessageResponseTwoDuration",
                          "value": {
                            "description": "Duration of the audio in seconds",
                            "schema": {
                              "type": "float"
                            },
                            "generatedName": "ControlMessageResponseTwoDuration",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "controlMessageResponseTwoChannels",
                        "key": "channels",
                        "schema": {
                          "generatedName": "controlMessageResponseTwoChannels",
                          "value": {
                            "description": "Number of audio channels",
                            "schema": {
                              "minimum": 0,
                              "type": "int"
                            },
                            "generatedName": "ControlMessageResponseTwoChannels",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ControlMessageResponseTwo",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../asyncapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            }
          ],
          "source": {
            "file": "../asyncapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "servers": [
        {
          "name": "public",
          "url": "wss://api.deepgram.com"
        }
      ],
      "path": "/v1/listen",
      "examples": [
        {
          "queryParameters": [],
          "headers": [],
          "messages": [
            {
              "messageType": "publish",
              "payload": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "messageType": "subscribe",
              "payload": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      ],
      "source": {
        "file": "../asyncapi.yml",
        "type": "openapi"
      }
    },
    "agent": {
      "audiences": [],
      "handshake": {
        "headers": [
          {
            "name": "Sec-Websocket-Protocol",
            "description": "Used to establish a WebSocket connection with authentication. Format should be 'token, <DEEPGRAM_API_KEY>'",
            "schema": {
              "schema": {
                "example": "token, YOUR_DEEPGRAM_API_KEY",
                "type": "string"
              },
              "generatedName": "",
              "title": "AgentSecWebSocketProtocol",
              "type": "primitive"
            },
            "source": {
              "file": "../asyncapi.yml",
              "type": "openapi"
            }
          }
        ],
        "queryParameters": [],
        "pathParameters": []
      },
      "groupName": [
        "agent"
      ],
      "publish": {
        "value": {
          "generatedName": "AgentPublishEvent",
          "schemas": [
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "settingsConfigurationType",
                  "key": "type",
                  "schema": {
                    "value": {
                      "value": "SettingsConfiguration",
                      "type": "string"
                    },
                    "generatedName": "SettingsConfigurationType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "settingsConfigurationAudio",
                  "key": "audio",
                  "schema": {
                    "generatedName": "settingsConfigurationAudio",
                    "value": {
                      "generatedName": "SettingsConfigurationAudio",
                      "description": "Optional audio configuration settings",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "settingsConfigurationAudioInput",
                            "key": "input",
                            "schema": {
                              "generatedName": "settingsConfigurationAudioInput",
                              "value": {
                                "generatedName": "SettingsConfigurationAudioInput",
                                "description": "Optional audio input configuration settings",
                                "value": {
                                  "allOf": [],
                                  "properties": [
                                    {
                                      "conflict": {},
                                      "generatedName": "settingsConfigurationAudioInputEncoding",
                                      "key": "encoding",
                                      "schema": {
                                        "generatedName": "settingsConfigurationAudioInputEncoding",
                                        "value": {
                                          "description": "Audio encoding format",
                                          "schema": {
                                            "default": "linear16",
                                            "type": "string"
                                          },
                                          "generatedName": "SettingsConfigurationAudioInputEncoding",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "settingsConfigurationAudioInputSampleRate",
                                      "key": "sample_rate",
                                      "schema": {
                                        "generatedName": "settingsConfigurationAudioInputSampleRate",
                                        "value": {
                                          "description": "Sample rate in Hz",
                                          "schema": {
                                            "default": 24000,
                                            "type": "int"
                                          },
                                          "generatedName": "SettingsConfigurationAudioInputSampleRate",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    }
                                  ],
                                  "allOfPropertyConflicts": [],
                                  "description": "Optional audio input configuration settings",
                                  "generatedName": "SettingsConfigurationAudioInput",
                                  "groupName": [],
                                  "additionalProperties": false,
                                  "source": {
                                    "file": "../asyncapi.yml",
                                    "type": "openapi"
                                  },
                                  "type": "object"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "settingsConfigurationAudioOutput",
                            "key": "output",
                            "schema": {
                              "generatedName": "settingsConfigurationAudioOutput",
                              "value": {
                                "generatedName": "SettingsConfigurationAudioOutput",
                                "description": "Audio output configuration settings",
                                "value": {
                                  "allOf": [],
                                  "properties": [
                                    {
                                      "conflict": {},
                                      "generatedName": "settingsConfigurationAudioOutputEncoding",
                                      "key": "encoding",
                                      "schema": {
                                        "generatedName": "settingsConfigurationAudioOutputEncoding",
                                        "value": {
                                          "schema": {
                                            "type": "string"
                                          },
                                          "generatedName": "SettingsConfigurationAudioOutputEncoding",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "settingsConfigurationAudioOutputSampleRate",
                                      "key": "sample_rate",
                                      "schema": {
                                        "generatedName": "settingsConfigurationAudioOutputSampleRate",
                                        "value": {
                                          "description": "Sample rate in Hz",
                                          "schema": {
                                            "default": 24000,
                                            "type": "int"
                                          },
                                          "generatedName": "SettingsConfigurationAudioOutputSampleRate",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "settingsConfigurationAudioOutputBitrate",
                                      "key": "bitrate",
                                      "schema": {
                                        "generatedName": "settingsConfigurationAudioOutputBitrate",
                                        "value": {
                                          "schema": {
                                            "type": "int"
                                          },
                                          "generatedName": "SettingsConfigurationAudioOutputBitrate",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "settingsConfigurationAudioOutputContainer",
                                      "key": "container",
                                      "schema": {
                                        "generatedName": "settingsConfigurationAudioOutputContainer",
                                        "value": {
                                          "schema": {
                                            "type": "string"
                                          },
                                          "generatedName": "SettingsConfigurationAudioOutputContainer",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    }
                                  ],
                                  "allOfPropertyConflicts": [],
                                  "description": "Audio output configuration settings",
                                  "generatedName": "SettingsConfigurationAudioOutput",
                                  "groupName": [],
                                  "additionalProperties": false,
                                  "source": {
                                    "file": "../asyncapi.yml",
                                    "type": "openapi"
                                  },
                                  "type": "object"
                                },
                                "groupName": [],
                                "type": "nullable"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "description": "Optional audio configuration settings",
                        "generatedName": "SettingsConfigurationAudio",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../asyncapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "nullable"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "settingsConfigurationAgent",
                  "key": "agent",
                  "schema": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "settingsConfigurationAgentListen",
                        "key": "listen",
                        "schema": {
                          "generatedName": "settingsConfigurationAgentListen",
                          "value": {
                            "allOf": [],
                            "properties": [
                              {
                                "conflict": {},
                                "generatedName": "settingsConfigurationAgentListenModel",
                                "key": "model",
                                "schema": {
                                  "generatedName": "settingsConfigurationAgentListenModel",
                                  "value": {
                                    "description": "Model to use for speech recognition",
                                    "schema": {
                                      "default": "nova-2",
                                      "type": "string"
                                    },
                                    "generatedName": "SettingsConfigurationAgentListenModel",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              }
                            ],
                            "allOfPropertyConflicts": [],
                            "generatedName": "SettingsConfigurationAgentListen",
                            "groupName": [],
                            "additionalProperties": false,
                            "source": {
                              "file": "../asyncapi.yml",
                              "type": "openapi"
                            },
                            "type": "object"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "settingsConfigurationAgentThink",
                        "key": "think",
                        "schema": {
                          "generatedName": "settingsConfigurationAgentThink",
                          "value": {
                            "allOf": [],
                            "properties": [
                              {
                                "conflict": {},
                                "generatedName": "settingsConfigurationAgentThinkProvider",
                                "key": "provider",
                                "schema": {
                                  "generatedName": "settingsConfigurationAgentThinkProvider",
                                  "value": {
                                    "allOf": [],
                                    "properties": [
                                      {
                                        "conflict": {},
                                        "generatedName": "settingsConfigurationAgentThinkProviderType",
                                        "key": "type",
                                        "schema": {
                                          "generatedName": "settingsConfigurationAgentThinkProviderType",
                                          "value": {
                                            "description": "LLM provider type",
                                            "schema": {
                                              "type": "string"
                                            },
                                            "generatedName": "SettingsConfigurationAgentThinkProviderType",
                                            "groupName": [],
                                            "type": "primitive"
                                          },
                                          "groupName": [],
                                          "type": "optional"
                                        },
                                        "audiences": []
                                      }
                                    ],
                                    "allOfPropertyConflicts": [],
                                    "generatedName": "SettingsConfigurationAgentThinkProvider",
                                    "groupName": [],
                                    "additionalProperties": false,
                                    "source": {
                                      "file": "../asyncapi.yml",
                                      "type": "openapi"
                                    },
                                    "type": "object"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "settingsConfigurationAgentThinkModel",
                                "key": "model",
                                "schema": {
                                  "generatedName": "settingsConfigurationAgentThinkModel",
                                  "value": {
                                    "description": "LLM model to use",
                                    "schema": {
                                      "type": "string"
                                    },
                                    "generatedName": "SettingsConfigurationAgentThinkModel",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "settingsConfigurationAgentThinkInstructions",
                                "key": "instructions",
                                "schema": {
                                  "generatedName": "settingsConfigurationAgentThinkInstructions",
                                  "value": {
                                    "generatedName": "SettingsConfigurationAgentThinkInstructions",
                                    "description": "LLM System prompt",
                                    "value": {
                                      "description": "LLM System prompt",
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "SettingsConfigurationAgentThinkInstructions",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "nullable"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "settingsConfigurationAgentThinkFunctions",
                                "key": "functions",
                                "schema": {
                                  "generatedName": "settingsConfigurationAgentThinkFunctions",
                                  "value": {
                                    "generatedName": "SettingsConfigurationAgentThinkFunctions",
                                    "value": {
                                      "value": {
                                        "allOf": [],
                                        "properties": [
                                          {
                                            "conflict": {},
                                            "generatedName": "settingsConfigurationAgentThinkFunctionsItemName",
                                            "key": "name",
                                            "schema": {
                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemName",
                                              "value": {
                                                "description": "Function name",
                                                "schema": {
                                                  "type": "string"
                                                },
                                                "generatedName": "SettingsConfigurationAgentThinkFunctionsItemName",
                                                "groupName": [],
                                                "type": "primitive"
                                              },
                                              "groupName": [],
                                              "type": "optional"
                                            },
                                            "audiences": []
                                          },
                                          {
                                            "conflict": {},
                                            "generatedName": "settingsConfigurationAgentThinkFunctionsItemDescription",
                                            "key": "description",
                                            "schema": {
                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemDescription",
                                              "value": {
                                                "description": "Description of function purpose and usage",
                                                "schema": {
                                                  "type": "string"
                                                },
                                                "generatedName": "SettingsConfigurationAgentThinkFunctionsItemDescription",
                                                "groupName": [],
                                                "type": "primitive"
                                              },
                                              "groupName": [],
                                              "type": "optional"
                                            },
                                            "audiences": []
                                          },
                                          {
                                            "conflict": {},
                                            "generatedName": "settingsConfigurationAgentThinkFunctionsItemUrl",
                                            "key": "url",
                                            "schema": {
                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemUrl",
                                              "value": {
                                                "description": "Function endpoint URL",
                                                "schema": {
                                                  "type": "string"
                                                },
                                                "generatedName": "SettingsConfigurationAgentThinkFunctionsItemUrl",
                                                "groupName": [],
                                                "type": "primitive"
                                              },
                                              "groupName": [],
                                              "type": "optional"
                                            },
                                            "audiences": []
                                          },
                                          {
                                            "conflict": {},
                                            "generatedName": "settingsConfigurationAgentThinkFunctionsItemHeaders",
                                            "key": "headers",
                                            "schema": {
                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemHeaders",
                                              "value": {
                                                "value": {
                                                  "allOf": [],
                                                  "properties": [
                                                    {
                                                      "conflict": {},
                                                      "generatedName": "settingsConfigurationAgentThinkFunctionsItemHeadersItemKey",
                                                      "key": "key",
                                                      "schema": {
                                                        "generatedName": "settingsConfigurationAgentThinkFunctionsItemHeadersItemKey",
                                                        "value": {
                                                          "schema": {
                                                            "type": "string"
                                                          },
                                                          "generatedName": "SettingsConfigurationAgentThinkFunctionsItemHeadersItemKey",
                                                          "groupName": [],
                                                          "type": "primitive"
                                                        },
                                                        "groupName": [],
                                                        "type": "optional"
                                                      },
                                                      "audiences": []
                                                    },
                                                    {
                                                      "conflict": {},
                                                      "generatedName": "settingsConfigurationAgentThinkFunctionsItemHeadersItemValue",
                                                      "key": "value",
                                                      "schema": {
                                                        "generatedName": "settingsConfigurationAgentThinkFunctionsItemHeadersItemValue",
                                                        "value": {
                                                          "schema": {
                                                            "type": "string"
                                                          },
                                                          "generatedName": "SettingsConfigurationAgentThinkFunctionsItemHeadersItemValue",
                                                          "groupName": [],
                                                          "type": "primitive"
                                                        },
                                                        "groupName": [],
                                                        "type": "optional"
                                                      },
                                                      "audiences": []
                                                    }
                                                  ],
                                                  "allOfPropertyConflicts": [],
                                                  "generatedName": "SettingsConfigurationAgentThinkFunctionsItemHeadersItem",
                                                  "groupName": [],
                                                  "additionalProperties": false,
                                                  "source": {
                                                    "file": "../asyncapi.yml",
                                                    "type": "openapi"
                                                  },
                                                  "type": "object"
                                                },
                                                "generatedName": "SettingsConfigurationAgentThinkFunctionsItemHeaders",
                                                "groupName": [],
                                                "type": "array"
                                              },
                                              "groupName": [],
                                              "type": "optional"
                                            },
                                            "audiences": []
                                          },
                                          {
                                            "conflict": {},
                                            "generatedName": "settingsConfigurationAgentThinkFunctionsItemMethod",
                                            "key": "method",
                                            "schema": {
                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemMethod",
                                              "value": {
                                                "description": "HTTP method for function call",
                                                "schema": {
                                                  "default": "post",
                                                  "type": "string"
                                                },
                                                "generatedName": "SettingsConfigurationAgentThinkFunctionsItemMethod",
                                                "groupName": [],
                                                "type": "primitive"
                                              },
                                              "groupName": [],
                                              "type": "optional"
                                            },
                                            "audiences": []
                                          },
                                          {
                                            "conflict": {},
                                            "generatedName": "settingsConfigurationAgentThinkFunctionsItemParameters",
                                            "key": "parameters",
                                            "schema": {
                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemParameters",
                                              "value": {
                                                "allOf": [],
                                                "properties": [
                                                  {
                                                    "conflict": {},
                                                    "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersType",
                                                    "key": "type",
                                                    "schema": {
                                                      "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersType",
                                                      "value": {
                                                        "schema": {
                                                          "type": "string"
                                                        },
                                                        "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersType",
                                                        "groupName": [],
                                                        "type": "primitive"
                                                      },
                                                      "groupName": [],
                                                      "type": "optional"
                                                    },
                                                    "audiences": []
                                                  },
                                                  {
                                                    "conflict": {},
                                                    "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersProperties",
                                                    "key": "properties",
                                                    "schema": {
                                                      "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersProperties",
                                                      "value": {
                                                        "key": {
                                                          "schema": {
                                                            "type": "string"
                                                          },
                                                          "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesKey",
                                                          "groupName": [],
                                                          "type": "primitive"
                                                        },
                                                        "value": {
                                                          "allOf": [],
                                                          "properties": [
                                                            {
                                                              "conflict": {},
                                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersPropertiesValueType",
                                                              "key": "type",
                                                              "schema": {
                                                                "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersPropertiesValueType",
                                                                "value": {
                                                                  "schema": {
                                                                    "type": "string"
                                                                  },
                                                                  "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesValueType",
                                                                  "groupName": [],
                                                                  "type": "primitive"
                                                                },
                                                                "groupName": [],
                                                                "type": "optional"
                                                              },
                                                              "audiences": []
                                                            },
                                                            {
                                                              "conflict": {},
                                                              "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersPropertiesValueDescription",
                                                              "key": "description",
                                                              "schema": {
                                                                "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersPropertiesValueDescription",
                                                                "value": {
                                                                  "schema": {
                                                                    "type": "string"
                                                                  },
                                                                  "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesValueDescription",
                                                                  "groupName": [],
                                                                  "type": "primitive"
                                                                },
                                                                "groupName": [],
                                                                "type": "optional"
                                                              },
                                                              "audiences": []
                                                            }
                                                          ],
                                                          "allOfPropertyConflicts": [],
                                                          "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersPropertiesValue",
                                                          "groupName": [],
                                                          "additionalProperties": false,
                                                          "source": {
                                                            "file": "../asyncapi.yml",
                                                            "type": "openapi"
                                                          },
                                                          "inline": true,
                                                          "type": "object"
                                                        },
                                                        "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersProperties",
                                                        "groupName": [],
                                                        "type": "map"
                                                      },
                                                      "groupName": [],
                                                      "type": "optional"
                                                    },
                                                    "audiences": []
                                                  },
                                                  {
                                                    "conflict": {},
                                                    "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersRequired",
                                                    "key": "required",
                                                    "schema": {
                                                      "generatedName": "settingsConfigurationAgentThinkFunctionsItemParametersRequired",
                                                      "value": {
                                                        "value": {
                                                          "schema": {
                                                            "type": "string"
                                                          },
                                                          "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersRequiredItem",
                                                          "groupName": [],
                                                          "type": "primitive"
                                                        },
                                                        "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParametersRequired",
                                                        "groupName": [],
                                                        "type": "array"
                                                      },
                                                      "groupName": [],
                                                      "type": "optional"
                                                    },
                                                    "audiences": []
                                                  }
                                                ],
                                                "allOfPropertyConflicts": [],
                                                "generatedName": "SettingsConfigurationAgentThinkFunctionsItemParameters",
                                                "groupName": [],
                                                "additionalProperties": false,
                                                "source": {
                                                  "file": "../asyncapi.yml",
                                                  "type": "openapi"
                                                },
                                                "type": "object"
                                              },
                                              "groupName": [],
                                              "type": "optional"
                                            },
                                            "audiences": []
                                          }
                                        ],
                                        "allOfPropertyConflicts": [],
                                        "generatedName": "SettingsConfigurationAgentThinkFunctionsItem",
                                        "groupName": [],
                                        "additionalProperties": false,
                                        "source": {
                                          "file": "../asyncapi.yml",
                                          "type": "openapi"
                                        },
                                        "type": "object"
                                      },
                                      "generatedName": "SettingsConfigurationAgentThinkFunctions",
                                      "groupName": [],
                                      "type": "array"
                                    },
                                    "groupName": [],
                                    "type": "nullable"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              }
                            ],
                            "allOfPropertyConflicts": [],
                            "generatedName": "SettingsConfigurationAgentThink",
                            "groupName": [],
                            "additionalProperties": false,
                            "source": {
                              "file": "../asyncapi.yml",
                              "type": "openapi"
                            },
                            "type": "object"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "settingsConfigurationAgentSpeak",
                        "key": "speak",
                        "schema": {
                          "generatedName": "settingsConfigurationAgentSpeak",
                          "value": {
                            "generatedName": "SettingsConfigurationAgentSpeak",
                            "value": {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "settingsConfigurationAgentSpeakModel",
                                  "key": "model",
                                  "schema": {
                                    "generatedName": "settingsConfigurationAgentSpeakModel",
                                    "value": {
                                      "description": "Text-to-speech model",
                                      "schema": {
                                        "default": "aura-asteria-en",
                                        "type": "string"
                                      },
                                      "generatedName": "SettingsConfigurationAgentSpeakModel",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "settingsConfigurationAgentSpeakProvider",
                                  "key": "provider",
                                  "schema": {
                                    "generatedName": "settingsConfigurationAgentSpeakProvider",
                                    "value": {
                                      "description": "Alternative TTS provider",
                                      "generatedName": "SettingsConfigurationAgentSpeakProvider",
                                      "values": [
                                        {
                                          "generatedName": "eleven_labs",
                                          "value": "eleven_labs",
                                          "casing": {}
                                        },
                                        {
                                          "generatedName": "cartesia",
                                          "value": "cartesia",
                                          "casing": {}
                                        }
                                      ],
                                      "groupName": [],
                                      "source": {
                                        "file": "../asyncapi.yml",
                                        "type": "openapi"
                                      },
                                      "type": "enum"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "settingsConfigurationAgentSpeakVoiceId",
                                  "key": "voice_id",
                                  "schema": {
                                    "generatedName": "settingsConfigurationAgentSpeakVoiceId",
                                    "value": {
                                      "description": "Unique voice identifier for the selected provider",
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "SettingsConfigurationAgentSpeakVoiceId",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "generatedName": "SettingsConfigurationAgentSpeak",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../asyncapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            },
                            "groupName": [],
                            "type": "nullable"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "SettingsConfigurationAgent",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "settingsConfigurationContext",
                  "key": "context",
                  "schema": {
                    "generatedName": "settingsConfigurationContext",
                    "value": {
                      "generatedName": "SettingsConfigurationContext",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "settingsConfigurationContextMessages",
                            "key": "messages",
                            "schema": {
                              "generatedName": "settingsConfigurationContextMessages",
                              "value": {
                                "description": "LLM message history for conversation restoration",
                                "value": {
                                  "key": {
                                    "schema": {
                                      "type": "string"
                                    },
                                    "generatedName": "SettingsConfigurationContextMessagesItemKey",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "value": {
                                    "generatedName": "SettingsConfigurationContextMessagesItemValue",
                                    "type": "unknown"
                                  },
                                  "generatedName": "SettingsConfigurationContextMessagesItem",
                                  "groupName": [],
                                  "type": "map"
                                },
                                "generatedName": "SettingsConfigurationContextMessages",
                                "groupName": [],
                                "type": "array"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "settingsConfigurationContextReplay",
                            "key": "replay",
                            "schema": {
                              "generatedName": "settingsConfigurationContextReplay",
                              "value": {
                                "description": "Whether to replay the last assistant message",
                                "schema": {
                                  "default": false,
                                  "type": "boolean"
                                },
                                "generatedName": "SettingsConfigurationContextReplay",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "SettingsConfigurationContext",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../asyncapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "nullable"
                    },
                    "groupName": [],
                    "type": "optional"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "SettingsConfiguration",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "updateInstructionsType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier",
                    "value": {
                      "value": "UpdateInstructions",
                      "type": "string"
                    },
                    "generatedName": "UpdateInstructionsType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "updateInstructionsInstructions",
                  "key": "instructions",
                  "schema": {
                    "description": "The new instructions to give to the Think model",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpdateInstructionsInstructions",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "UpdateInstructions",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "updateSpeakType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for updating the speak model",
                    "value": {
                      "value": "UpdateSpeak",
                      "type": "string"
                    },
                    "generatedName": "UpdateSpeakType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "updateSpeakModel",
                  "key": "model",
                  "schema": {
                    "description": "The new Text-to-Speech model to use",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "UpdateSpeakModel",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "UpdateSpeak",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "injectAgentMessageType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for injecting an agent message",
                    "value": {
                      "value": "InjectAgentMessage",
                      "type": "string"
                    },
                    "generatedName": "InjectAgentMessageType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "injectAgentMessageMessage",
                  "key": "message",
                  "schema": {
                    "description": "The statement that the agent should say",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "InjectAgentMessageMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "InjectAgentMessage",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "functionCallResponseType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for function call responses",
                    "value": {
                      "value": "FunctionCallResponse",
                      "type": "string"
                    },
                    "generatedName": "FunctionCallResponseType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "functionCallResponseFunctionCallId",
                  "key": "function_call_id",
                  "schema": {
                    "description": "The unique identifier matching the original function call request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FunctionCallResponseFunctionCallId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "functionCallResponseOutput",
                  "key": "output",
                  "schema": {
                    "description": "The result of the function call execution",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FunctionCallResponseOutput",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FunctionCallResponse",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "agentKeepAliveType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for agent keep alive signal",
                    "value": {
                      "value": "KeepAlive",
                      "type": "string"
                    },
                    "generatedName": "AgentKeepAliveType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "AgentKeepAlive",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            }
          ],
          "source": {
            "file": "../asyncapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "subscribe": {
        "value": {
          "generatedName": "AgentSubscribeEvent",
          "schemas": [
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "injectionRefusedType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for injection refused",
                    "value": {
                      "value": "InjectionRefused",
                      "type": "string"
                    },
                    "generatedName": "InjectionRefusedType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "InjectionRefused",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "welcomeMessageType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for welcome message",
                    "value": {
                      "value": "Welcome",
                      "type": "string"
                    },
                    "generatedName": "WelcomeMessageType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "welcomeMessageSessionId",
                  "key": "session_id",
                  "schema": {
                    "description": "Unique identifier for the websocket session",
                    "schema": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "generatedName": "WelcomeMessageSessionId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "WelcomeMessage",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "settingsAppliedType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for settings applied confirmation",
                    "value": {
                      "value": "SettingsApplied",
                      "type": "string"
                    },
                    "generatedName": "SettingsAppliedType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "SettingsApplied",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "conversationTextType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for conversation text",
                    "value": {
                      "value": "ConversationText",
                      "type": "string"
                    },
                    "generatedName": "ConversationTextType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "conversationTextRole",
                  "key": "role",
                  "schema": {
                    "description": "Identifies who spoke the statement",
                    "generatedName": "ConversationTextRole",
                    "values": [
                      {
                        "generatedName": "user",
                        "value": "user",
                        "casing": {}
                      },
                      {
                        "generatedName": "assistant",
                        "value": "assistant",
                        "casing": {}
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../asyncapi.yml",
                      "type": "openapi"
                    },
                    "type": "enum"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "conversationTextContent",
                  "key": "content",
                  "schema": {
                    "description": "The actual statement that was spoken",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ConversationTextContent",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ConversationText",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "userStartedSpeakingType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier indicating that the user has begun speaking",
                    "value": {
                      "value": "UserStartedSpeaking",
                      "type": "string"
                    },
                    "generatedName": "UserStartedSpeakingType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "UserStartedSpeaking",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "agentThinkingType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for agent thinking",
                    "value": {
                      "value": "AgentThinking",
                      "type": "string"
                    },
                    "generatedName": "AgentThinkingType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "agentThinkingContent",
                  "key": "content",
                  "schema": {
                    "description": "The text of the agent's thought process",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AgentThinkingContent",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "AgentThinking",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "functionCallRequestType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for function call requests",
                    "value": {
                      "value": "FunctionCallRequest",
                      "type": "string"
                    },
                    "generatedName": "FunctionCallRequestType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "functionCallRequestFunctionName",
                  "key": "function_name",
                  "schema": {
                    "description": "The name specified in the function definition",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FunctionCallRequestFunctionName",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "functionCallRequestFunctionCallId",
                  "key": "function_call_id",
                  "schema": {
                    "description": "Unique identifier to correlate the response with this request",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FunctionCallRequestFunctionCallId",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "functionCallRequestInput",
                  "key": "input",
                  "schema": {
                    "description": "Parameters defined for this function in the function definition",
                    "key": {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "FunctionCallRequestInputKey",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "value": {
                      "generatedName": "FunctionCallRequestInputValue",
                      "type": "unknown"
                    },
                    "generatedName": "FunctionCallRequestInput",
                    "groupName": [],
                    "type": "map"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FunctionCallRequest",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "functionCallingType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for function calling status",
                    "value": {
                      "value": "FunctionCalling",
                      "type": "string"
                    },
                    "generatedName": "FunctionCallingType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FunctionCalling",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "agentStartedSpeakingType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for agent started speaking",
                    "value": {
                      "value": "AgentStartedSpeaking",
                      "type": "string"
                    },
                    "generatedName": "AgentStartedSpeakingType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "agentStartedSpeakingTotalLatency",
                  "key": "total_latency",
                  "schema": {
                    "description": "Seconds from receiving the user's utterance to producing the agent's reply",
                    "schema": {
                      "type": "float"
                    },
                    "generatedName": "AgentStartedSpeakingTotalLatency",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "agentStartedSpeakingTtsLatency",
                  "key": "tts_latency",
                  "schema": {
                    "description": "The portion of total latency attributable to text-to-speech",
                    "schema": {
                      "type": "float"
                    },
                    "generatedName": "AgentStartedSpeakingTtsLatency",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "agentStartedSpeakingTttLatency",
                  "key": "ttt_latency",
                  "schema": {
                    "description": "The portion of total latency attributable to text-to-text (usually an LLM)",
                    "schema": {
                      "type": "float"
                    },
                    "generatedName": "AgentStartedSpeakingTttLatency",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "AgentStartedSpeaking",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "agentAudioDoneType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier indicating the agent has finished sending audio",
                    "value": {
                      "value": "AgentAudioDone",
                      "type": "string"
                    },
                    "generatedName": "AgentAudioDoneType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "AgentAudioDone",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "agentErrorResponseType",
                  "key": "type",
                  "schema": {
                    "description": "Message type identifier for error responses",
                    "value": {
                      "value": "Error",
                      "type": "string"
                    },
                    "generatedName": "AgentErrorResponseType",
                    "groupName": [],
                    "type": "literal"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "agentErrorResponseMessage",
                  "key": "message",
                  "schema": {
                    "description": "A description of what went wrong",
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AgentErrorResponseMessage",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "AgentErrorResponse",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../asyncapi.yml",
                "type": "openapi"
              },
              "type": "object"
            }
          ],
          "source": {
            "file": "../asyncapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "servers": [
        {
          "name": "public",
          "url": "wss://api.deepgram.com"
        }
      ],
      "path": "/agent",
      "examples": [
        {
          "queryParameters": [],
          "headers": [],
          "messages": [
            {
              "messageType": "publish",
              "payload": {
                "properties": {
                  "type": {
                    "value": {
                      "value": "SettingsConfiguration",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "agent": {
                    "properties": {},
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            {
              "messageType": "subscribe",
              "payload": {
                "properties": {
                  "type": {
                    "value": {
                      "value": "InjectionRefused",
                      "type": "string"
                    },
                    "type": "literal"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      ],
      "source": {
        "file": "../asyncapi.yml",
        "type": "openapi"
      }
    }
  },
  "groupedSchemas": {
    "rootSchemas": {
      "ListenRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listenRequestUrl",
            "key": "url",
            "schema": {
              "schema": {
                "format": "uri",
                "example": "https://dpgr.am/spacewalk.wav",
                "type": "string"
              },
              "generatedName": "ListenRequestUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Audio file to transcribe",
        "generatedName": "ListenRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListenRequestFile": {
        "description": "Binary audio file to transcribe",
        "schema": {
          "format": "binary",
          "example": "<audiofile>",
          "type": "string"
        },
        "generatedName": "ListenRequestFile",
        "groupName": [],
        "type": "primitive"
      },
      "metadata": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "metadataTransactionKey",
            "key": "transaction_key",
            "schema": {
              "generatedName": "metadataTransactionKey",
              "availability": "Deprecated",
              "value": {
                "availability": "Deprecated",
                "schema": {
                  "default": "deprecated",
                  "type": "string"
                },
                "generatedName": "MetadataTransactionKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "metadataRequestId",
            "key": "request_id",
            "schema": {
              "schema": {
                "format": "uuid",
                "example": "a847f427-4ad5-4d67-9b95-db801e58251c",
                "type": "string"
              },
              "generatedName": "MetadataRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataSha256",
            "key": "sha256",
            "schema": {
              "schema": {
                "example": "154e291ecfa8be6ab8343560bcc109008fa7853eb5372533e8efdefc9b504c33",
                "type": "string"
              },
              "generatedName": "MetadataSha256",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataCreated",
            "key": "created",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "MetadataCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataDuration",
            "key": "duration",
            "schema": {
              "schema": {
                "example": 25.933313,
                "type": "double"
              },
              "generatedName": "MetadataDuration",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataChannels",
            "key": "channels",
            "schema": {
              "schema": {
                "example": 1,
                "type": "double"
              },
              "generatedName": "MetadataChannels",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataModels",
            "key": "models",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MetadataModelsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "MetadataModels",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataModelInfo",
            "key": "model_info",
            "schema": {
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MetadataModelInfoKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "MetadataModelInfoValue",
                "type": "unknown"
              },
              "generatedName": "MetadataModelInfo",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataSummaryInfo",
            "key": "summary_info",
            "schema": {
              "generatedName": "metadataSummaryInfo",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "metadataSummaryInfoModelUuid",
                    "key": "model_uuid",
                    "schema": {
                      "generatedName": "metadataSummaryInfoModelUuid",
                      "value": {
                        "schema": {
                          "example": "67875a7f-c9c4-48a0-aa55-5bdb8a91c34a",
                          "type": "string"
                        },
                        "generatedName": "MetadataSummaryInfoModelUuid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataSummaryInfoInputTokens",
                    "key": "input_tokens",
                    "schema": {
                      "generatedName": "metadataSummaryInfoInputTokens",
                      "value": {
                        "schema": {
                          "example": 95,
                          "type": "double"
                        },
                        "generatedName": "MetadataSummaryInfoInputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataSummaryInfoOutputTokens",
                    "key": "output_tokens",
                    "schema": {
                      "generatedName": "metadataSummaryInfoOutputTokens",
                      "value": {
                        "schema": {
                          "example": 63,
                          "type": "double"
                        },
                        "generatedName": "MetadataSummaryInfoOutputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "MetadataSummaryInfo",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataSentimentInfo",
            "key": "sentiment_info",
            "schema": {
              "generatedName": "metadataSentimentInfo",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "metadataSentimentInfoModelUuid",
                    "key": "model_uuid",
                    "schema": {
                      "generatedName": "metadataSentimentInfoModelUuid",
                      "value": {
                        "schema": {
                          "example": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "type": "string"
                        },
                        "generatedName": "MetadataSentimentInfoModelUuid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataSentimentInfoInputTokens",
                    "key": "input_tokens",
                    "schema": {
                      "generatedName": "metadataSentimentInfoInputTokens",
                      "value": {
                        "schema": {
                          "example": 105,
                          "type": "double"
                        },
                        "generatedName": "MetadataSentimentInfoInputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataSentimentInfoOutputTokens",
                    "key": "output_tokens",
                    "schema": {
                      "generatedName": "metadataSentimentInfoOutputTokens",
                      "value": {
                        "schema": {
                          "example": 105,
                          "type": "double"
                        },
                        "generatedName": "MetadataSentimentInfoOutputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "MetadataSentimentInfo",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataTopicsInfo",
            "key": "topics_info",
            "schema": {
              "generatedName": "metadataTopicsInfo",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "metadataTopicsInfoModelUuid",
                    "key": "model_uuid",
                    "schema": {
                      "generatedName": "metadataTopicsInfoModelUuid",
                      "value": {
                        "schema": {
                          "example": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "type": "string"
                        },
                        "generatedName": "MetadataTopicsInfoModelUuid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataTopicsInfoInputTokens",
                    "key": "input_tokens",
                    "schema": {
                      "generatedName": "metadataTopicsInfoInputTokens",
                      "value": {
                        "schema": {
                          "example": 105,
                          "type": "double"
                        },
                        "generatedName": "MetadataTopicsInfoInputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataTopicsInfoOutputTokens",
                    "key": "output_tokens",
                    "schema": {
                      "generatedName": "metadataTopicsInfoOutputTokens",
                      "value": {
                        "schema": {
                          "example": 7,
                          "type": "double"
                        },
                        "generatedName": "MetadataTopicsInfoOutputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "MetadataTopicsInfo",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataIntentsInfo",
            "key": "intents_info",
            "schema": {
              "generatedName": "metadataIntentsInfo",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "metadataIntentsInfoModelUuid",
                    "key": "model_uuid",
                    "schema": {
                      "generatedName": "metadataIntentsInfoModelUuid",
                      "value": {
                        "schema": {
                          "example": "80ab3179-d113-4254-bd6b-4a2f96498695",
                          "type": "string"
                        },
                        "generatedName": "MetadataIntentsInfoModelUuid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataIntentsInfoInputTokens",
                    "key": "input_tokens",
                    "schema": {
                      "generatedName": "metadataIntentsInfoInputTokens",
                      "value": {
                        "schema": {
                          "example": 105,
                          "type": "double"
                        },
                        "generatedName": "MetadataIntentsInfoInputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "metadataIntentsInfoOutputTokens",
                    "key": "output_tokens",
                    "schema": {
                      "generatedName": "metadataIntentsInfoOutputTokens",
                      "value": {
                        "schema": {
                          "example": 4,
                          "type": "double"
                        },
                        "generatedName": "MetadataIntentsInfoOutputTokens",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "MetadataIntentsInfo",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metadataTags",
            "key": "tags",
            "schema": {
              "generatedName": "metadataTags",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MetadataTagsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MetadataTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Metadata",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "channels": {
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "channelsItemSearch",
              "key": "search",
              "schema": {
                "generatedName": "channelsItemSearch",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "channelsItemSearchItemQuery",
                        "key": "query",
                        "schema": {
                          "generatedName": "channelsItemSearchItemQuery",
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ChannelsItemSearchItemQuery",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "channelsItemSearchItemHits",
                        "key": "hits",
                        "schema": {
                          "generatedName": "channelsItemSearchItemHits",
                          "value": {
                            "value": {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemSearchItemHitsItemConfidence",
                                  "key": "confidence",
                                  "schema": {
                                    "generatedName": "channelsItemSearchItemHitsItemConfidence",
                                    "value": {
                                      "schema": {
                                        "type": "float"
                                      },
                                      "generatedName": "ChannelsItemSearchItemHitsItemConfidence",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemSearchItemHitsItemStart",
                                  "key": "start",
                                  "schema": {
                                    "generatedName": "channelsItemSearchItemHitsItemStart",
                                    "value": {
                                      "schema": {
                                        "type": "float"
                                      },
                                      "generatedName": "ChannelsItemSearchItemHitsItemStart",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemSearchItemHitsItemEnd",
                                  "key": "end",
                                  "schema": {
                                    "generatedName": "channelsItemSearchItemHitsItemEnd",
                                    "value": {
                                      "schema": {
                                        "type": "float"
                                      },
                                      "generatedName": "ChannelsItemSearchItemHitsItemEnd",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemSearchItemHitsItemSnippet",
                                  "key": "snippet",
                                  "schema": {
                                    "generatedName": "channelsItemSearchItemHitsItemSnippet",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "ChannelsItemSearchItemHitsItemSnippet",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "generatedName": "ChannelsItemSearchItemHitsItem",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            },
                            "generatedName": "ChannelsItemSearchItemHits",
                            "groupName": [],
                            "type": "array"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ChannelsItemSearchItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ChannelsItemSearch",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "channelsItemAlternatives",
              "key": "alternatives",
              "schema": {
                "generatedName": "channelsItemAlternatives",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "channelsItemAlternativesItemTranscript",
                        "key": "transcript",
                        "schema": {
                          "generatedName": "channelsItemAlternativesItemTranscript",
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "ChannelsItemAlternativesItemTranscript",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "channelsItemAlternativesItemConfidence",
                        "key": "confidence",
                        "schema": {
                          "generatedName": "channelsItemAlternativesItemConfidence",
                          "value": {
                            "schema": {
                              "type": "float"
                            },
                            "generatedName": "ChannelsItemAlternativesItemConfidence",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "channelsItemAlternativesItemWords",
                        "key": "words",
                        "schema": {
                          "generatedName": "channelsItemAlternativesItemWords",
                          "value": {
                            "value": {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemWordsItemWord",
                                  "key": "word",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemWordsItemWord",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemWordsItemWord",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemWordsItemStart",
                                  "key": "start",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemWordsItemStart",
                                    "value": {
                                      "schema": {
                                        "type": "float"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemWordsItemStart",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemWordsItemEnd",
                                  "key": "end",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemWordsItemEnd",
                                    "value": {
                                      "schema": {
                                        "type": "float"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemWordsItemEnd",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemWordsItemConfidence",
                                  "key": "confidence",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemWordsItemConfidence",
                                    "value": {
                                      "schema": {
                                        "type": "float"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemWordsItemConfidence",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "generatedName": "ChannelsItemAlternativesItemWordsItem",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            },
                            "generatedName": "ChannelsItemAlternativesItemWords",
                            "groupName": [],
                            "type": "array"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "channelsItemAlternativesItemParagraphs",
                        "key": "paragraphs",
                        "schema": {
                          "generatedName": "channelsItemAlternativesItemParagraphs",
                          "value": {
                            "allOf": [],
                            "properties": [
                              {
                                "conflict": {},
                                "generatedName": "channelsItemAlternativesItemParagraphsTranscript",
                                "key": "transcript",
                                "schema": {
                                  "generatedName": "channelsItemAlternativesItemParagraphsTranscript",
                                  "value": {
                                    "schema": {
                                      "type": "string"
                                    },
                                    "generatedName": "ChannelsItemAlternativesItemParagraphsTranscript",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              },
                              {
                                "conflict": {},
                                "generatedName": "channelsItemAlternativesItemParagraphsParagraphs",
                                "key": "paragraphs",
                                "schema": {
                                  "generatedName": "channelsItemAlternativesItemParagraphsParagraphs",
                                  "value": {
                                    "value": {
                                      "allOf": [],
                                      "properties": [
                                        {
                                          "conflict": {},
                                          "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentences",
                                          "key": "sentences",
                                          "schema": {
                                            "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentences",
                                            "value": {
                                              "value": {
                                                "allOf": [],
                                                "properties": [
                                                  {
                                                    "conflict": {},
                                                    "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentencesItemText",
                                                    "key": "text",
                                                    "schema": {
                                                      "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentencesItemText",
                                                      "value": {
                                                        "schema": {
                                                          "type": "string"
                                                        },
                                                        "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItemText",
                                                        "groupName": [],
                                                        "type": "primitive"
                                                      },
                                                      "groupName": [],
                                                      "type": "optional"
                                                    },
                                                    "audiences": []
                                                  },
                                                  {
                                                    "conflict": {},
                                                    "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentencesItemStart",
                                                    "key": "start",
                                                    "schema": {
                                                      "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentencesItemStart",
                                                      "value": {
                                                        "schema": {
                                                          "type": "float"
                                                        },
                                                        "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItemStart",
                                                        "groupName": [],
                                                        "type": "primitive"
                                                      },
                                                      "groupName": [],
                                                      "type": "optional"
                                                    },
                                                    "audiences": []
                                                  },
                                                  {
                                                    "conflict": {},
                                                    "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentencesItemEnd",
                                                    "key": "end",
                                                    "schema": {
                                                      "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSentencesItemEnd",
                                                      "value": {
                                                        "schema": {
                                                          "type": "float"
                                                        },
                                                        "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItemEnd",
                                                        "groupName": [],
                                                        "type": "primitive"
                                                      },
                                                      "groupName": [],
                                                      "type": "optional"
                                                    },
                                                    "audiences": []
                                                  }
                                                ],
                                                "allOfPropertyConflicts": [],
                                                "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItem",
                                                "groupName": [],
                                                "additionalProperties": false,
                                                "source": {
                                                  "file": "../openapi.yml",
                                                  "type": "openapi"
                                                },
                                                "type": "object"
                                              },
                                              "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemSentences",
                                              "groupName": [],
                                              "type": "array"
                                            },
                                            "groupName": [],
                                            "type": "optional"
                                          },
                                          "audiences": []
                                        },
                                        {
                                          "conflict": {},
                                          "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSpeaker",
                                          "key": "speaker",
                                          "schema": {
                                            "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemSpeaker",
                                            "value": {
                                              "schema": {
                                                "type": "int"
                                              },
                                              "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemSpeaker",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            "groupName": [],
                                            "type": "optional"
                                          },
                                          "audiences": []
                                        },
                                        {
                                          "conflict": {},
                                          "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemNumWords",
                                          "key": "num_words",
                                          "schema": {
                                            "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemNumWords",
                                            "value": {
                                              "schema": {
                                                "type": "int"
                                              },
                                              "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemNumWords",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            "groupName": [],
                                            "type": "optional"
                                          },
                                          "audiences": []
                                        },
                                        {
                                          "conflict": {},
                                          "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemStart",
                                          "key": "start",
                                          "schema": {
                                            "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemStart",
                                            "value": {
                                              "schema": {
                                                "type": "float"
                                              },
                                              "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemStart",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            "groupName": [],
                                            "type": "optional"
                                          },
                                          "audiences": []
                                        },
                                        {
                                          "conflict": {},
                                          "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemEnd",
                                          "key": "end",
                                          "schema": {
                                            "generatedName": "channelsItemAlternativesItemParagraphsParagraphsItemEnd",
                                            "value": {
                                              "schema": {
                                                "type": "float"
                                              },
                                              "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItemEnd",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            "groupName": [],
                                            "type": "optional"
                                          },
                                          "audiences": []
                                        }
                                      ],
                                      "allOfPropertyConflicts": [],
                                      "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphsItem",
                                      "groupName": [],
                                      "additionalProperties": false,
                                      "source": {
                                        "file": "../openapi.yml",
                                        "type": "openapi"
                                      },
                                      "type": "object"
                                    },
                                    "generatedName": "ChannelsItemAlternativesItemParagraphsParagraphs",
                                    "groupName": [],
                                    "type": "array"
                                  },
                                  "groupName": [],
                                  "type": "optional"
                                },
                                "audiences": []
                              }
                            ],
                            "allOfPropertyConflicts": [],
                            "generatedName": "ChannelsItemAlternativesItemParagraphs",
                            "groupName": [],
                            "additionalProperties": false,
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "object"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "channelsItemAlternativesItemSummaries",
                        "key": "summaries",
                        "schema": {
                          "generatedName": "channelsItemAlternativesItemSummaries",
                          "value": {
                            "value": {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemSummariesItemSummary",
                                  "key": "summary",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemSummariesItemSummary",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemSummariesItemSummary",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemSummariesItemStartWord",
                                  "key": "start_word",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemSummariesItemStartWord",
                                    "value": {
                                      "schema": {
                                        "type": "int"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemSummariesItemStartWord",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemSummariesItemEndWord",
                                  "key": "end_word",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemSummariesItemEndWord",
                                    "value": {
                                      "schema": {
                                        "type": "int"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemSummariesItemEndWord",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "generatedName": "ChannelsItemAlternativesItemSummariesItem",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            },
                            "generatedName": "ChannelsItemAlternativesItemSummaries",
                            "groupName": [],
                            "type": "array"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "channelsItemAlternativesItemTopics",
                        "key": "topics",
                        "schema": {
                          "generatedName": "channelsItemAlternativesItemTopics",
                          "value": {
                            "value": {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemTopicsItemText",
                                  "key": "text",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemTopicsItemText",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemTopicsItemText",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemTopicsItemStartWord",
                                  "key": "start_word",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemTopicsItemStartWord",
                                    "value": {
                                      "schema": {
                                        "type": "int"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemTopicsItemStartWord",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemTopicsItemEndWord",
                                  "key": "end_word",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemTopicsItemEndWord",
                                    "value": {
                                      "schema": {
                                        "type": "int"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemTopicsItemEndWord",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "channelsItemAlternativesItemTopicsItemTopics",
                                  "key": "topics",
                                  "schema": {
                                    "generatedName": "channelsItemAlternativesItemTopicsItemTopics",
                                    "value": {
                                      "value": {
                                        "schema": {
                                          "type": "string"
                                        },
                                        "generatedName": "ChannelsItemAlternativesItemTopicsItemTopicsItem",
                                        "groupName": [],
                                        "type": "primitive"
                                      },
                                      "generatedName": "ChannelsItemAlternativesItemTopicsItemTopics",
                                      "groupName": [],
                                      "type": "array"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "generatedName": "ChannelsItemAlternativesItemTopicsItem",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            },
                            "generatedName": "ChannelsItemAlternativesItemTopics",
                            "groupName": [],
                            "type": "array"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "ChannelsItemAlternativesItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "ChannelsItemAlternatives",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "channelsItemDetectedLanguage",
              "key": "detected_language",
              "schema": {
                "generatedName": "channelsItemDetectedLanguage",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ChannelsItemDetectedLanguage",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "ChannelsItem",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "generatedName": "Channels",
        "groupName": [],
        "type": "array"
      },
      "utterances": {
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "utterancesItemStart",
              "key": "start",
              "schema": {
                "generatedName": "utterancesItemStart",
                "value": {
                  "schema": {
                    "type": "float"
                  },
                  "generatedName": "UtterancesItemStart",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "utterancesItemEnd",
              "key": "end",
              "schema": {
                "generatedName": "utterancesItemEnd",
                "value": {
                  "schema": {
                    "type": "float"
                  },
                  "generatedName": "UtterancesItemEnd",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "utterancesItemConfidence",
              "key": "confidence",
              "schema": {
                "generatedName": "utterancesItemConfidence",
                "value": {
                  "schema": {
                    "type": "float"
                  },
                  "generatedName": "UtterancesItemConfidence",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "utterancesItemChannel",
              "key": "channel",
              "schema": {
                "generatedName": "utterancesItemChannel",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "UtterancesItemChannel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "utterancesItemTranscript",
              "key": "transcript",
              "schema": {
                "generatedName": "utterancesItemTranscript",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UtterancesItemTranscript",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "utterancesItemWords",
              "key": "words",
              "schema": {
                "generatedName": "utterancesItemWords",
                "value": {
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "utterancesItemWordsItemWord",
                        "key": "word",
                        "schema": {
                          "generatedName": "utterancesItemWordsItemWord",
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "UtterancesItemWordsItemWord",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "utterancesItemWordsItemStart",
                        "key": "start",
                        "schema": {
                          "generatedName": "utterancesItemWordsItemStart",
                          "value": {
                            "schema": {
                              "type": "float"
                            },
                            "generatedName": "UtterancesItemWordsItemStart",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "utterancesItemWordsItemEnd",
                        "key": "end",
                        "schema": {
                          "generatedName": "utterancesItemWordsItemEnd",
                          "value": {
                            "schema": {
                              "type": "float"
                            },
                            "generatedName": "UtterancesItemWordsItemEnd",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "utterancesItemWordsItemConfidence",
                        "key": "confidence",
                        "schema": {
                          "generatedName": "utterancesItemWordsItemConfidence",
                          "value": {
                            "schema": {
                              "type": "float"
                            },
                            "generatedName": "UtterancesItemWordsItemConfidence",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "utterancesItemWordsItemSpeaker",
                        "key": "speaker",
                        "schema": {
                          "generatedName": "utterancesItemWordsItemSpeaker",
                          "value": {
                            "schema": {
                              "type": "int"
                            },
                            "generatedName": "UtterancesItemWordsItemSpeaker",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "utterancesItemWordsItemSpeakerConfidence",
                        "key": "speaker_confidence",
                        "schema": {
                          "generatedName": "utterancesItemWordsItemSpeakerConfidence",
                          "value": {
                            "schema": {
                              "type": "int"
                            },
                            "generatedName": "UtterancesItemWordsItemSpeakerConfidence",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "utterancesItemWordsItemPunctuatedWord",
                        "key": "punctuated_word",
                        "schema": {
                          "generatedName": "utterancesItemWordsItemPunctuatedWord",
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "UtterancesItemWordsItemPunctuatedWord",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "UtterancesItemWordsItem",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "UtterancesItemWords",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "utterancesItemSpeaker",
              "key": "speaker",
              "schema": {
                "generatedName": "utterancesItemSpeaker",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "UtterancesItemSpeaker",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "utterancesItemId",
              "key": "id",
              "schema": {
                "generatedName": "utterancesItemId",
                "value": {
                  "schema": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "generatedName": "UtterancesItemId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "UtterancesItem",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "generatedName": "Utterances",
        "groupName": [],
        "type": "array"
      },
      "summary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "summaryResult",
            "key": "result",
            "schema": {
              "generatedName": "summaryResult",
              "value": {
                "schema": {
                  "example": "success",
                  "type": "string"
                },
                "generatedName": "SummaryResult",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "summaryShort",
            "key": "short",
            "schema": {
              "generatedName": "summaryShort",
              "value": {
                "schema": {
                  "example": "Speaker 0 discusses the significance of the first all-female spacewalk with an all-female team, stating that it is a tribute to the skilled and qualified women who were denied opportunities in the past.",
                  "type": "string"
                },
                "generatedName": "SummaryShort",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "topics": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "topicsResults",
            "key": "results",
            "schema": {
              "generatedName": "topicsResults",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "topicsResultsTopics",
                    "key": "topics",
                    "schema": {
                      "generatedName": "topicsResultsTopics",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "topicsResultsTopicsSegments",
                            "key": "segments",
                            "schema": {
                              "generatedName": "topicsResultsTopicsSegments",
                              "value": {
                                "value": {
                                  "allOf": [],
                                  "properties": [
                                    {
                                      "conflict": {},
                                      "generatedName": "topicsResultsTopicsSegmentsItemText",
                                      "key": "text",
                                      "schema": {
                                        "generatedName": "topicsResultsTopicsSegmentsItemText",
                                        "value": {
                                          "schema": {
                                            "example": "And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                                            "type": "string"
                                          },
                                          "generatedName": "TopicsResultsTopicsSegmentsItemText",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "topicsResultsTopicsSegmentsItemStartWord",
                                      "key": "start_word",
                                      "schema": {
                                        "generatedName": "topicsResultsTopicsSegmentsItemStartWord",
                                        "value": {
                                          "schema": {
                                            "example": 32,
                                            "type": "int"
                                          },
                                          "generatedName": "TopicsResultsTopicsSegmentsItemStartWord",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "topicsResultsTopicsSegmentsItemEndWord",
                                      "key": "end_word",
                                      "schema": {
                                        "generatedName": "topicsResultsTopicsSegmentsItemEndWord",
                                        "value": {
                                          "schema": {
                                            "example": 69,
                                            "type": "int"
                                          },
                                          "generatedName": "TopicsResultsTopicsSegmentsItemEndWord",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "topicsResultsTopicsSegmentsItemTopics",
                                      "key": "topics",
                                      "schema": {
                                        "generatedName": "topicsResultsTopicsSegmentsItemTopics",
                                        "value": {
                                          "value": {
                                            "allOf": [],
                                            "properties": [
                                              {
                                                "conflict": {},
                                                "generatedName": "topicsResultsTopicsSegmentsItemTopicsItemTopic",
                                                "key": "topic",
                                                "schema": {
                                                  "generatedName": "topicsResultsTopicsSegmentsItemTopicsItemTopic",
                                                  "value": {
                                                    "schema": {
                                                      "example": "Spacewalk",
                                                      "type": "string"
                                                    },
                                                    "generatedName": "TopicsResultsTopicsSegmentsItemTopicsItemTopic",
                                                    "groupName": [],
                                                    "type": "primitive"
                                                  },
                                                  "groupName": [],
                                                  "type": "optional"
                                                },
                                                "audiences": []
                                              },
                                              {
                                                "conflict": {},
                                                "generatedName": "topicsResultsTopicsSegmentsItemTopicsItemConfidenceScore",
                                                "key": "confidence_score",
                                                "schema": {
                                                  "generatedName": "topicsResultsTopicsSegmentsItemTopicsItemConfidenceScore",
                                                  "value": {
                                                    "schema": {
                                                      "type": "float"
                                                    },
                                                    "generatedName": "TopicsResultsTopicsSegmentsItemTopicsItemConfidenceScore",
                                                    "groupName": [],
                                                    "type": "primitive"
                                                  },
                                                  "groupName": [],
                                                  "type": "optional"
                                                },
                                                "audiences": []
                                              }
                                            ],
                                            "allOfPropertyConflicts": [],
                                            "generatedName": "TopicsResultsTopicsSegmentsItemTopicsItem",
                                            "groupName": [],
                                            "additionalProperties": false,
                                            "source": {
                                              "file": "../openapi.yml",
                                              "type": "openapi"
                                            },
                                            "type": "object"
                                          },
                                          "generatedName": "TopicsResultsTopicsSegmentsItemTopics",
                                          "groupName": [],
                                          "type": "array"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    }
                                  ],
                                  "allOfPropertyConflicts": [],
                                  "generatedName": "TopicsResultsTopicsSegmentsItem",
                                  "groupName": [],
                                  "additionalProperties": false,
                                  "source": {
                                    "file": "../openapi.yml",
                                    "type": "openapi"
                                  },
                                  "type": "object"
                                },
                                "generatedName": "TopicsResultsTopicsSegments",
                                "groupName": [],
                                "type": "array"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "TopicsResultsTopics",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "TopicsResults",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Output whenever `topics=true` is used",
        "generatedName": "Topics",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "intents": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "intentsResults",
            "key": "results",
            "schema": {
              "generatedName": "intentsResults",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "intentsResultsIntents",
                    "key": "intents",
                    "schema": {
                      "generatedName": "intentsResultsIntents",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "intentsResultsIntentsSegments",
                            "key": "segments",
                            "schema": {
                              "generatedName": "intentsResultsIntentsSegments",
                              "value": {
                                "value": {
                                  "allOf": [],
                                  "properties": [
                                    {
                                      "conflict": {},
                                      "generatedName": "intentsResultsIntentsSegmentsItemText",
                                      "key": "text",
                                      "schema": {
                                        "generatedName": "intentsResultsIntentsSegmentsItemText",
                                        "value": {
                                          "schema": {
                                            "example": "If you found this valuable, you can subscribe to the show on spotify or your favorite podcast app.",
                                            "type": "string"
                                          },
                                          "generatedName": "IntentsResultsIntentsSegmentsItemText",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "intentsResultsIntentsSegmentsItemStartWord",
                                      "key": "start_word",
                                      "schema": {
                                        "generatedName": "intentsResultsIntentsSegmentsItemStartWord",
                                        "value": {
                                          "schema": {
                                            "example": 354,
                                            "type": "int"
                                          },
                                          "generatedName": "IntentsResultsIntentsSegmentsItemStartWord",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "intentsResultsIntentsSegmentsItemEndWord",
                                      "key": "end_word",
                                      "schema": {
                                        "generatedName": "intentsResultsIntentsSegmentsItemEndWord",
                                        "value": {
                                          "schema": {
                                            "example": 414,
                                            "type": "int"
                                          },
                                          "generatedName": "IntentsResultsIntentsSegmentsItemEndWord",
                                          "groupName": [],
                                          "type": "primitive"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    },
                                    {
                                      "conflict": {},
                                      "generatedName": "intentsResultsIntentsSegmentsItemIntents",
                                      "key": "intents",
                                      "schema": {
                                        "generatedName": "intentsResultsIntentsSegmentsItemIntents",
                                        "value": {
                                          "value": {
                                            "allOf": [],
                                            "properties": [
                                              {
                                                "conflict": {},
                                                "generatedName": "intentsResultsIntentsSegmentsItemIntentsItemIntent",
                                                "key": "intent",
                                                "schema": {
                                                  "generatedName": "intentsResultsIntentsSegmentsItemIntentsItemIntent",
                                                  "value": {
                                                    "schema": {
                                                      "example": "Encourage podcasting",
                                                      "type": "string"
                                                    },
                                                    "generatedName": "IntentsResultsIntentsSegmentsItemIntentsItemIntent",
                                                    "groupName": [],
                                                    "type": "primitive"
                                                  },
                                                  "groupName": [],
                                                  "type": "optional"
                                                },
                                                "audiences": []
                                              },
                                              {
                                                "conflict": {},
                                                "generatedName": "intentsResultsIntentsSegmentsItemIntentsItemConfidenceScore",
                                                "key": "confidence_score",
                                                "schema": {
                                                  "generatedName": "intentsResultsIntentsSegmentsItemIntentsItemConfidenceScore",
                                                  "value": {
                                                    "schema": {
                                                      "type": "float"
                                                    },
                                                    "generatedName": "IntentsResultsIntentsSegmentsItemIntentsItemConfidenceScore",
                                                    "groupName": [],
                                                    "type": "primitive"
                                                  },
                                                  "groupName": [],
                                                  "type": "optional"
                                                },
                                                "audiences": []
                                              }
                                            ],
                                            "allOfPropertyConflicts": [],
                                            "generatedName": "IntentsResultsIntentsSegmentsItemIntentsItem",
                                            "groupName": [],
                                            "additionalProperties": false,
                                            "source": {
                                              "file": "../openapi.yml",
                                              "type": "openapi"
                                            },
                                            "type": "object"
                                          },
                                          "generatedName": "IntentsResultsIntentsSegmentsItemIntents",
                                          "groupName": [],
                                          "type": "array"
                                        },
                                        "groupName": [],
                                        "type": "optional"
                                      },
                                      "audiences": []
                                    }
                                  ],
                                  "allOfPropertyConflicts": [],
                                  "generatedName": "IntentsResultsIntentsSegmentsItem",
                                  "groupName": [],
                                  "additionalProperties": false,
                                  "source": {
                                    "file": "../openapi.yml",
                                    "type": "openapi"
                                  },
                                  "type": "object"
                                },
                                "generatedName": "IntentsResultsIntentsSegments",
                                "groupName": [],
                                "type": "array"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "IntentsResultsIntents",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "IntentsResults",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Output whenever `intents=true` is used",
        "generatedName": "Intents",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "sentiments": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sentimentsSegments",
            "key": "segments",
            "schema": {
              "generatedName": "sentimentsSegments",
              "value": {
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "sentimentsSegmentsItemText",
                      "key": "text",
                      "schema": {
                        "generatedName": "sentimentsSegmentsItemText",
                        "value": {
                          "schema": {
                            "example": "Yeah. As as much as, um, it's worth celebrating, uh, the first, uh, spacewalk, um, with an all-female team, I think many of us are looking forward to it just being normal. And, um, I think if it signifies anything, it is, uh, to honor the the women who came before us who, um, were skilled and qualified, um, and didn't get the the same opportunities that we have today.",
                            "type": "string"
                          },
                          "generatedName": "SentimentsSegmentsItemText",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "sentimentsSegmentsItemStartWord",
                      "key": "start_word",
                      "schema": {
                        "generatedName": "sentimentsSegmentsItemStartWord",
                        "value": {
                          "schema": {
                            "example": 0,
                            "type": "double"
                          },
                          "generatedName": "SentimentsSegmentsItemStartWord",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "sentimentsSegmentsItemEndWord",
                      "key": "end_word",
                      "schema": {
                        "generatedName": "sentimentsSegmentsItemEndWord",
                        "value": {
                          "schema": {
                            "example": 69,
                            "type": "double"
                          },
                          "generatedName": "SentimentsSegmentsItemEndWord",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "sentimentsSegmentsItemSentiment",
                      "key": "sentiment",
                      "schema": {
                        "generatedName": "sentimentsSegmentsItemSentiment",
                        "value": {
                          "schema": {
                            "example": "positive",
                            "type": "string"
                          },
                          "generatedName": "SentimentsSegmentsItemSentiment",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "sentimentsSegmentsItemSentimentScore",
                      "key": "sentiment_score",
                      "schema": {
                        "generatedName": "sentimentsSegmentsItemSentimentScore",
                        "value": {
                          "schema": {
                            "example": 0.5810546875,
                            "type": "double"
                          },
                          "generatedName": "SentimentsSegmentsItemSentimentScore",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "SentimentsSegmentsItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "SentimentsSegments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sentimentsAverage",
            "key": "average",
            "schema": {
              "generatedName": "sentimentsAverage",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "sentimentsAverageSentiment",
                    "key": "sentiment",
                    "schema": {
                      "generatedName": "sentimentsAverageSentiment",
                      "value": {
                        "schema": {
                          "example": "positive",
                          "type": "string"
                        },
                        "generatedName": "SentimentsAverageSentiment",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "sentimentsAverageSentimentScore",
                    "key": "sentiment_score",
                    "schema": {
                      "generatedName": "sentimentsAverageSentimentScore",
                      "value": {
                        "schema": {
                          "example": 0.5810185185185185,
                          "type": "double"
                        },
                        "generatedName": "SentimentsAverageSentimentScore",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "SentimentsAverage",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Output whenever `sentiment=true` is used",
        "generatedName": "Sentiments",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "results": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resultsChannels",
            "key": "channels",
            "schema": {
              "generatedName": "ResultsChannels",
              "schema": "channels",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "resultsUtterances",
            "key": "utterances",
            "schema": {
              "generatedName": "resultsUtterances",
              "value": {
                "generatedName": "ResultsUtterances",
                "schema": "utterances",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "resultsSummary",
            "key": "summary",
            "schema": {
              "generatedName": "resultsSummary",
              "value": {
                "generatedName": "ResultsSummary",
                "schema": "summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "resultsTopics",
            "key": "topics",
            "schema": {
              "generatedName": "resultsTopics",
              "value": {
                "generatedName": "ResultsTopics",
                "schema": "topics",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "resultsIntents",
            "key": "intents",
            "schema": {
              "generatedName": "resultsIntents",
              "value": {
                "generatedName": "ResultsIntents",
                "schema": "intents",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "resultsSentiments",
            "key": "sentiments",
            "schema": {
              "generatedName": "resultsSentiments",
              "value": {
                "generatedName": "ResultsSentiments",
                "schema": "sentiments",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Results",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responseMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "ResponseMetadata",
              "schema": "metadata",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "responseResults",
            "key": "results",
            "schema": {
              "generatedName": "ResponseResults",
              "schema": "results",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The standard transcription response",
        "generatedName": "Response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "text_request_url": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "textRequestUrlUrl",
            "key": "url",
            "schema": {
              "description": "A URL pointing to the text source",
              "schema": {
                "format": "uri",
                "type": "string"
              },
              "generatedName": "TextRequestUrlUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "textRequestUrlText",
            "key": "text",
            "schema": {
              "generatedName": "textRequestUrlText",
              "value": {
                "description": "The plain text to analyze",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TextRequestUrlText",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TextRequestUrl",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "text_request_text": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "textRequestTextUrl",
            "key": "url",
            "schema": {
              "generatedName": "textRequestTextUrl",
              "value": {
                "description": "A URL pointing to the text source",
                "schema": {
                  "format": "uri",
                  "type": "string"
                },
                "generatedName": "TextRequestTextUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "textRequestTextText",
            "key": "text",
            "schema": {
              "description": "The plain text to analyze",
              "schema": {
                "type": "string"
              },
              "generatedName": "TextRequestTextText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TextRequestText",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "text_request": {
        "value": {
          "generatedName": "TextRequest",
          "schemas": [
            {
              "generatedName": "TextRequestZero",
              "schema": "text_request_url",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "TextRequestOne",
              "schema": "text_request_text",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "text_metadata": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "textMetadataMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "textMetadataMetadata",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "textMetadataMetadataRequestId",
                    "key": "request_id",
                    "schema": {
                      "generatedName": "textMetadataMetadataRequestId",
                      "value": {
                        "schema": {
                          "format": "uuid",
                          "example": "d04af392-db11-4c1d-83e1-20e34f0b8999",
                          "type": "string"
                        },
                        "generatedName": "TextMetadataMetadataRequestId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "textMetadataMetadataCreated",
                    "key": "created",
                    "schema": {
                      "generatedName": "textMetadataMetadataCreated",
                      "value": {
                        "schema": {
                          "type": "datetime"
                        },
                        "generatedName": "TextMetadataMetadataCreated",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "textMetadataMetadataLanguage",
                    "key": "language",
                    "schema": {
                      "generatedName": "textMetadataMetadataLanguage",
                      "value": {
                        "schema": {
                          "example": "en",
                          "type": "string"
                        },
                        "generatedName": "TextMetadataMetadataLanguage",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "textMetadataMetadataSummaryInfo",
                    "key": "summary_info",
                    "schema": {
                      "generatedName": "textMetadataMetadataSummaryInfo",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataSummaryInfoModelUuid",
                            "key": "model_uuid",
                            "schema": {
                              "generatedName": "textMetadataMetadataSummaryInfoModelUuid",
                              "value": {
                                "schema": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "generatedName": "TextMetadataMetadataSummaryInfoModelUuid",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataSummaryInfoInputTokens",
                            "key": "input_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataSummaryInfoInputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataSummaryInfoInputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataSummaryInfoOutputTokens",
                            "key": "output_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataSummaryInfoOutputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataSummaryInfoOutputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "TextMetadataMetadataSummaryInfo",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "textMetadataMetadataSentimentInfo",
                    "key": "sentiment_info",
                    "schema": {
                      "generatedName": "textMetadataMetadataSentimentInfo",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataSentimentInfoModelUuid",
                            "key": "model_uuid",
                            "schema": {
                              "generatedName": "textMetadataMetadataSentimentInfoModelUuid",
                              "value": {
                                "schema": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "generatedName": "TextMetadataMetadataSentimentInfoModelUuid",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataSentimentInfoInputTokens",
                            "key": "input_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataSentimentInfoInputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataSentimentInfoInputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataSentimentInfoOutputTokens",
                            "key": "output_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataSentimentInfoOutputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataSentimentInfoOutputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "TextMetadataMetadataSentimentInfo",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "textMetadataMetadataTopicsInfo",
                    "key": "topics_info",
                    "schema": {
                      "generatedName": "textMetadataMetadataTopicsInfo",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataTopicsInfoModelUuid",
                            "key": "model_uuid",
                            "schema": {
                              "generatedName": "textMetadataMetadataTopicsInfoModelUuid",
                              "value": {
                                "schema": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "generatedName": "TextMetadataMetadataTopicsInfoModelUuid",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataTopicsInfoInputTokens",
                            "key": "input_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataTopicsInfoInputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataTopicsInfoInputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataTopicsInfoOutputTokens",
                            "key": "output_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataTopicsInfoOutputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataTopicsInfoOutputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "TextMetadataMetadataTopicsInfo",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "textMetadataMetadataIntentsInfo",
                    "key": "intents_info",
                    "schema": {
                      "generatedName": "textMetadataMetadataIntentsInfo",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataIntentsInfoModelUuid",
                            "key": "model_uuid",
                            "schema": {
                              "generatedName": "textMetadataMetadataIntentsInfoModelUuid",
                              "value": {
                                "schema": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "generatedName": "TextMetadataMetadataIntentsInfoModelUuid",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataIntentsInfoInputTokens",
                            "key": "input_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataIntentsInfoInputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataIntentsInfoInputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "textMetadataMetadataIntentsInfoOutputTokens",
                            "key": "output_tokens",
                            "schema": {
                              "generatedName": "textMetadataMetadataIntentsInfoOutputTokens",
                              "value": {
                                "schema": {
                                  "type": "int"
                                },
                                "generatedName": "TextMetadataMetadataIntentsInfoOutputTokens",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "TextMetadataMetadataIntentsInfo",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "TextMetadataMetadata",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TextMetadata",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "text_summary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "textSummaryResults",
            "key": "results",
            "schema": {
              "generatedName": "textSummaryResults",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "textSummaryResultsSummary",
                    "key": "summary",
                    "schema": {
                      "generatedName": "textSummaryResultsSummary",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "textSummaryResultsSummaryText",
                            "key": "text",
                            "schema": {
                              "generatedName": "textSummaryResultsSummaryText",
                              "value": {
                                "schema": {
                                  "example": "The summary of the text submitted.",
                                  "type": "string"
                                },
                                "generatedName": "TextSummaryResultsSummaryText",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "TextSummaryResultsSummary",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "TextSummaryResults",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Output whenever `summary=true` is used",
        "generatedName": "TextSummary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "text_results": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "textResultsSummary",
            "key": "summary",
            "schema": {
              "generatedName": "textResultsSummary",
              "value": {
                "generatedName": "TextResultsSummary",
                "schema": "text_summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "textResultsTopics",
            "key": "topics",
            "schema": {
              "generatedName": "textResultsTopics",
              "value": {
                "generatedName": "TextResultsTopics",
                "schema": "topics",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "textResultsIntents",
            "key": "intents",
            "schema": {
              "generatedName": "textResultsIntents",
              "value": {
                "generatedName": "TextResultsIntents",
                "schema": "intents",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "textResultsSentiments",
            "key": "sentiments",
            "schema": {
              "generatedName": "textResultsSentiments",
              "value": {
                "generatedName": "TextResultsSentiments",
                "schema": "sentiments",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TextResults",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "text_response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "textResponseMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "TextResponseMetadata",
              "schema": "text_metadata",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          },
          {
            "conflict": {},
            "generatedName": "textResponseResults",
            "key": "results",
            "schema": {
              "generatedName": "TextResponseResults",
              "schema": "text_results",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false,
            "writeonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The standard text response",
        "generatedName": "TextResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "speak_request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "speakRequestText",
            "key": "text",
            "schema": {
              "description": "The text content to be converted to speech",
              "schema": {
                "example": "Hello, welcome to Deepgram!",
                "type": "string"
              },
              "generatedName": "SpeakRequestText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request body for text-to-speech conversion",
        "generatedName": "SpeakRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "speak_response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "speakResponseResults",
            "key": "results",
            "schema": {
              "generatedName": "speakResponseResults",
              "value": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                },
                "generatedName": "SpeakResponseResults",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The standard text response",
        "generatedName": "SpeakResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_projects": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateProjectsName",
            "key": "name",
            "schema": {
              "generatedName": "updateProjectsName",
              "value": {
                "description": "The name of the project",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateProjectsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateProjects",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "stt_models": {
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "sttModelsItemName",
              "key": "name",
              "schema": {
                "generatedName": "sttModelsItemName",
                "value": {
                  "schema": {
                    "example": "conversationalai",
                    "type": "string"
                  },
                  "generatedName": "SttModelsItemName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemCanonicalName",
              "key": "canonical_name",
              "schema": {
                "generatedName": "sttModelsItemCanonicalName",
                "value": {
                  "schema": {
                    "example": "conversationalai",
                    "type": "string"
                  },
                  "generatedName": "SttModelsItemCanonicalName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemArchitecture",
              "key": "architecture",
              "schema": {
                "generatedName": "sttModelsItemArchitecture",
                "value": {
                  "schema": {
                    "example": "base",
                    "type": "string"
                  },
                  "generatedName": "SttModelsItemArchitecture",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemLanguages",
              "key": "languages",
              "schema": {
                "generatedName": "sttModelsItemLanguages",
                "value": {
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "SttModelsItemLanguagesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "SttModelsItemLanguages",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemVersion",
              "key": "version",
              "schema": {
                "generatedName": "sttModelsItemVersion",
                "value": {
                  "schema": {
                    "example": "2021-11-10.1",
                    "type": "string"
                  },
                  "generatedName": "SttModelsItemVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemUuid",
              "key": "uuid",
              "schema": {
                "generatedName": "sttModelsItemUuid",
                "value": {
                  "schema": {
                    "example": "6b28e919-8427-4f32-9847-492e2efd7daf",
                    "type": "string"
                  },
                  "generatedName": "SttModelsItemUuid",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemBatch",
              "key": "batch",
              "schema": {
                "generatedName": "sttModelsItemBatch",
                "value": {
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "SttModelsItemBatch",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemStreaming",
              "key": "streaming",
              "schema": {
                "generatedName": "sttModelsItemStreaming",
                "value": {
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "SttModelsItemStreaming",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sttModelsItemFormattedOutput",
              "key": "formatted_output",
              "schema": {
                "generatedName": "sttModelsItemFormattedOutput",
                "value": {
                  "schema": {
                    "example": true,
                    "type": "boolean"
                  },
                  "generatedName": "SttModelsItemFormattedOutput",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "SttModelsItem",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "generatedName": "SttModels",
        "groupName": [],
        "type": "array"
      },
      "tts_models": {
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "ttsModelsItemName",
              "key": "name",
              "schema": {
                "generatedName": "ttsModelsItemName",
                "value": {
                  "schema": {
                    "example": "zeus",
                    "type": "string"
                  },
                  "generatedName": "TtsModelsItemName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ttsModelsItemCanonicalName",
              "key": "canonical_name",
              "schema": {
                "generatedName": "ttsModelsItemCanonicalName",
                "value": {
                  "schema": {
                    "example": "aura-zeus-en",
                    "type": "string"
                  },
                  "generatedName": "TtsModelsItemCanonicalName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ttsModelsItemArchitecture",
              "key": "architecture",
              "schema": {
                "generatedName": "ttsModelsItemArchitecture",
                "value": {
                  "schema": {
                    "example": "aura",
                    "type": "string"
                  },
                  "generatedName": "TtsModelsItemArchitecture",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ttsModelsItemLanguages",
              "key": "languages",
              "schema": {
                "generatedName": "ttsModelsItemLanguages",
                "value": {
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TtsModelsItemLanguagesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "TtsModelsItemLanguages",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ttsModelsItemVersion",
              "key": "version",
              "schema": {
                "generatedName": "ttsModelsItemVersion",
                "value": {
                  "schema": {
                    "example": "2024-07-30.0",
                    "type": "string"
                  },
                  "generatedName": "TtsModelsItemVersion",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ttsModelsItemUuid",
              "key": "uuid",
              "schema": {
                "generatedName": "ttsModelsItemUuid",
                "value": {
                  "schema": {
                    "example": "9c28bce5-f144-4d32-9034-843aa7aed63e",
                    "type": "string"
                  },
                  "generatedName": "TtsModelsItemUuid",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "ttsModelsItemMetadata",
              "key": "metadata",
              "schema": {
                "generatedName": "ttsModelsItemMetadata",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "ttsModelsItemMetadataAccent",
                      "key": "accent",
                      "schema": {
                        "generatedName": "ttsModelsItemMetadataAccent",
                        "value": {
                          "schema": {
                            "example": "American",
                            "type": "string"
                          },
                          "generatedName": "TtsModelsItemMetadataAccent",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "ttsModelsItemMetadataColor",
                      "key": "color",
                      "schema": {
                        "generatedName": "ttsModelsItemMetadataColor",
                        "value": {
                          "schema": {
                            "example": "#949498",
                            "type": "string"
                          },
                          "generatedName": "TtsModelsItemMetadataColor",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "ttsModelsItemMetadataImage",
                      "key": "image",
                      "schema": {
                        "generatedName": "ttsModelsItemMetadataImage",
                        "value": {
                          "schema": {
                            "example": "https://static.deepgram.com/examples/avatars/zeus.jpg",
                            "type": "string"
                          },
                          "generatedName": "TtsModelsItemMetadataImage",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "ttsModelsItemMetadataSample",
                      "key": "sample",
                      "schema": {
                        "generatedName": "ttsModelsItemMetadataSample",
                        "value": {
                          "schema": {
                            "example": "https://static.deepgram.com/examples/voices/zeus.wav",
                            "type": "string"
                          },
                          "generatedName": "TtsModelsItemMetadataSample",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "ttsModelsItemMetadataTags",
                      "key": "tags",
                      "schema": {
                        "generatedName": "ttsModelsItemMetadataTags",
                        "value": {
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "TtsModelsItemMetadataTagsItem",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "generatedName": "TtsModelsItemMetadataTags",
                          "groupName": [],
                          "type": "array"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "TtsModelsItemMetadata",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "TtsModelsItem",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "generatedName": "TtsModels",
        "groupName": [],
        "type": "array"
      },
      "keys": {
        "value": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "keysItemMember",
              "key": "member",
              "schema": {
                "generatedName": "keysItemMember",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "keysItemMemberMemberId",
                      "key": "member_id",
                      "schema": {
                        "generatedName": "keysItemMemberMemberId",
                        "value": {
                          "schema": {
                            "example": "1000-2000-3000-4000",
                            "type": "string"
                          },
                          "generatedName": "KeysItemMemberMemberId",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "keysItemMemberEmail",
                      "key": "email",
                      "schema": {
                        "generatedName": "keysItemMemberEmail",
                        "value": {
                          "schema": {
                            "example": "john@test.com",
                            "type": "string"
                          },
                          "generatedName": "KeysItemMemberEmail",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "KeysItemMember",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "keysItemApiKey",
              "key": "api_key",
              "schema": {
                "generatedName": "keysItemApiKey",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "keysItemApiKeyApiKeyId",
                      "key": "api_key_id",
                      "schema": {
                        "generatedName": "keysItemApiKeyApiKeyId",
                        "value": {
                          "schema": {
                            "example": "1234567890abcdef1234567890abcdef",
                            "type": "string"
                          },
                          "generatedName": "KeysItemApiKeyApiKeyId",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "keysItemApiKeyComment",
                      "key": "comment",
                      "schema": {
                        "generatedName": "keysItemApiKeyComment",
                        "value": {
                          "schema": {
                            "example": "A comment",
                            "type": "string"
                          },
                          "generatedName": "KeysItemApiKeyComment",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "keysItemApiKeyScopes",
                      "key": "scopes",
                      "schema": {
                        "generatedName": "keysItemApiKeyScopes",
                        "value": {
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "KeysItemApiKeyScopesItem",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "generatedName": "KeysItemApiKeyScopes",
                          "groupName": [],
                          "type": "array"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "keysItemApiKeyCreated",
                      "key": "created",
                      "schema": {
                        "generatedName": "keysItemApiKeyCreated",
                        "value": {
                          "schema": {
                            "type": "datetime"
                          },
                          "generatedName": "KeysItemApiKeyCreated",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "optional"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "KeysItemApiKey",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "KeysItem",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "generatedName": "Keys",
        "groupName": [],
        "type": "array"
      },
      "key_created": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keyCreatedApiKeyId",
            "key": "api_key_id",
            "schema": {
              "generatedName": "keyCreatedApiKeyId",
              "value": {
                "description": "The unique identifier of the API key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "KeyCreatedApiKeyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keyCreatedKey",
            "key": "key",
            "schema": {
              "generatedName": "keyCreatedKey",
              "value": {
                "description": "The API key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "KeyCreatedKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keyCreatedComment",
            "key": "comment",
            "schema": {
              "generatedName": "keyCreatedComment",
              "value": {
                "description": "A comment for the API key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "KeyCreatedComment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keyCreatedScopes",
            "key": "scopes",
            "schema": {
              "generatedName": "keyCreatedScopes",
              "value": {
                "description": "the scopes for the API key",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "KeyCreatedScopesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "KeyCreatedScopes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keyCreatedTags",
            "key": "tags",
            "schema": {
              "generatedName": "keyCreatedTags",
              "value": {
                "description": "the tags for the API key",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "KeyCreatedTagsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "KeyCreatedTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "API key created",
        "generatedName": "KeyCreated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "key": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keyMember",
            "key": "member",
            "schema": {
              "generatedName": "keyMember",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "keyMemberMemberId",
                    "key": "member_id",
                    "schema": {
                      "generatedName": "keyMemberMemberId",
                      "value": {
                        "schema": {
                          "example": "1000-2000-3000-4000",
                          "type": "string"
                        },
                        "generatedName": "KeyMemberMemberId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "keyMemberEmail",
                    "key": "email",
                    "schema": {
                      "generatedName": "keyMemberEmail",
                      "value": {
                        "schema": {
                          "example": "john@test.com",
                          "type": "string"
                        },
                        "generatedName": "KeyMemberEmail",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "keyMemberFirstName",
                    "key": "first_name",
                    "schema": {
                      "generatedName": "keyMemberFirstName",
                      "value": {
                        "schema": {
                          "example": "John",
                          "type": "string"
                        },
                        "generatedName": "KeyMemberFirstName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "keyMemberLastName",
                    "key": "last_name",
                    "schema": {
                      "generatedName": "keyMemberLastName",
                      "value": {
                        "schema": {
                          "example": "Doe",
                          "type": "string"
                        },
                        "generatedName": "KeyMemberLastName",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "keyMemberApiKey",
                    "key": "api_key",
                    "schema": {
                      "generatedName": "keyMemberApiKey",
                      "value": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "keyMemberApiKeyApiKeyId",
                            "key": "api_key_id",
                            "schema": {
                              "generatedName": "keyMemberApiKeyApiKeyId",
                              "value": {
                                "schema": {
                                  "example": "1234567890abcdef1234567890abcdef",
                                  "type": "string"
                                },
                                "generatedName": "KeyMemberApiKeyApiKeyId",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "keyMemberApiKeyComment",
                            "key": "comment",
                            "schema": {
                              "generatedName": "keyMemberApiKeyComment",
                              "value": {
                                "schema": {
                                  "example": "A comment",
                                  "type": "string"
                                },
                                "generatedName": "KeyMemberApiKeyComment",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "keyMemberApiKeyScopes",
                            "key": "scopes",
                            "schema": {
                              "generatedName": "keyMemberApiKeyScopes",
                              "value": {
                                "value": {
                                  "schema": {
                                    "type": "string"
                                  },
                                  "generatedName": "KeyMemberApiKeyScopesItem",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "generatedName": "KeyMemberApiKeyScopes",
                                "groupName": [],
                                "type": "array"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "keyMemberApiKeyCreated",
                            "key": "created",
                            "schema": {
                              "generatedName": "keyMemberApiKeyCreated",
                              "value": {
                                "schema": {
                                  "type": "datetime"
                                },
                                "generatedName": "KeyMemberApiKeyCreated",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "KeyMemberApiKey",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "groupName": [],
                      "type": "optional"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "KeyMember",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Key",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "update_member_scope": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateMemberScopeScope",
            "key": "scope",
            "schema": {
              "description": "A scope to update",
              "schema": {
                "example": "admin",
                "type": "string"
              },
              "generatedName": "UpdateMemberScopeScope",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateMemberScope",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_project_invite": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createProjectInviteEmail",
            "key": "email",
            "schema": {
              "description": "The email address of the invitee",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateProjectInviteEmail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createProjectInviteScope",
            "key": "scope",
            "schema": {
              "description": "The scope of the invitee",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateProjectInviteScope",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request body for creating a project invite",
        "generatedName": "CreateProjectInvite",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestRequestId",
            "key": "request_id",
            "schema": {
              "generatedName": "requestRequestId",
              "value": {
                "description": "The unique identifier of the request",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestRequestId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestProjectUuid",
            "key": "project_uuid",
            "schema": {
              "generatedName": "requestProjectUuid",
              "value": {
                "description": "The unique identifier of the project",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestProjectUuid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestCreated",
            "key": "created",
            "schema": {
              "generatedName": "requestCreated",
              "value": {
                "description": "The date and time the request was created",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "RequestCreated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestPath",
            "key": "path",
            "schema": {
              "generatedName": "requestPath",
              "value": {
                "description": "The API path of the request",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestPath",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestApiKeyId",
            "key": "api_key_id",
            "schema": {
              "generatedName": "requestApiKeyId",
              "value": {
                "description": "The unique identifier of the API key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestApiKeyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestResponse",
            "key": "response",
            "schema": {
              "generatedName": "requestResponse",
              "value": {
                "description": "The response of the request",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RequestResponseKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RequestResponseValue",
                  "type": "unknown"
                },
                "generatedName": "RequestResponse",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestCode",
            "key": "code",
            "schema": {
              "generatedName": "requestCode",
              "value": {
                "description": "The response code of the request",
                "schema": {
                  "type": "int"
                },
                "generatedName": "RequestCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestDeployment",
            "key": "deployment",
            "schema": {
              "generatedName": "requestDeployment",
              "value": {
                "description": "The deployment type",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestDeployment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestCallback",
            "key": "callback",
            "schema": {
              "generatedName": "requestCallback",
              "value": {
                "description": "The callback URL for the request",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestCallback",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A single request",
        "generatedName": "Request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "create_distribution_creds": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createDistributionCredsComment",
            "key": "comment",
            "schema": {
              "generatedName": "createDistributionCredsComment",
              "value": {
                "description": "Optional comment about the credentials",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CreateDistributionCredsComment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request body for creating distribution credentials",
        "generatedName": "CreateDistributionCreds",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "ApiKeyAuth": {
      "headerName": "Authorization",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}