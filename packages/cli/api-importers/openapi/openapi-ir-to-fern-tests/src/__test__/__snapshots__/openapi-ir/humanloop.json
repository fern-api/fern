{
  "title": "Humanloop API",
  "description": "The Humanloop API allows you to interact with Humanloop from your product or service.\n\nYou can do this through HTTP requests from any language or via our official Python or TypeScript SDK.\n\nTo install the official [Python SDK](https://pypi.org/project/humanloop/), run the following command:\n\n```bash\npip install humanloop\n```\n\nTo install the official [TypeScript SDK](https://www.npmjs.com/package/humanloop), run the following command:\n\n```bash\nnpm i humanloop\n```\n\n---\n\nGuides and further details about key concepts can be found in [our docs](https://docs.humanloop.com/).",
  "servers": [
    {
      "url": "https://api.humanloop.com/v5",
      "description": "Production server"
    }
  ],
  "tags": {
    "tagsById": {
      "Authentication": {
        "id": "Authentication",
        "description": "The Humanloop API uses API keys for authentication. Visit your\n[API Keys](https://app.humanloop.com/account/api-keys) page to retrieve the\nAPI key you'll use in your requests.\n\nThis key allows full access and control over your projects, so keep this secret\nand take care to not expose it in any client-side code.\n\nTo use your API key, include it under the `X-API-KEY` header in your HTTP request.\n\n```bash\ncurl https://api.humanloop.com/v5/projects -H 'X-API-KEY: YOUR_API_KEY'\n```\n\nIf you're using the Python SDK, initialize the client with your API key before\nusing other SDK methods:\n\n```python\nfrom humanloop import Humanloop\nhumanloop = Humanloop(api_key=\"YOUR_API_KEY\")\n```\n\nIf you're using the TypeScript SDK, initialize the client with your API key before\nusing other SDK methods:\n\n```js\nimport { Humanloop } from \"humanloop\";\nconst humanloop = new Humanloop({apiKey: \"YOUR_API_KEY\"});\n```"
      },
      "Prompts": {
        "id": "Prompts",
        "description": "Prompts define how a large language model behaves.\n\n#### What is a Prompt?\n\nA Prompt on Humanloop encapsulates the instructions and other configuration for how a large language model should\nperform a specific task.\n\nPrompts have immutable versions that you can **Commit** and **Deploy**.\nTo use a Prompt, you can **Call** it to create a generation and you can **Log** generations manually.\n\n#### Referencing a Prompt version\n\nYou can perform actions on a specific Prompt version by specifying either the `version_id`\nor `environment` query parameter in the request. If you provide a `version_id`, Humanloop will\nuse the specified version of the Prompt. If you provide an `environment`, Humanloop will use the\nversion of the Prompt that is currently deployed to that Environment.\nIf you do not provide either a `version_id` or `environment`, Humanloop will use the Prompt version\nthat is deployed to the default Environment.\n\n"
      },
      "Datasets": {
        "id": "Datasets",
        "description": "Datasets are collections of input-output pairs that you can use within Humanloop for Evaluations.\n\n#### What is a Dataset?\n\nA Dataset is a collection of unique Datapoints. These Datapoints contain `inputs` and `target` fields. The `inputs`\nare used to populate a Prompt's template and the `target` can be referenced by Evaluators to evaluate the quality of\nthe generated output.\n\nNote that Humanloop automatically deduplicates Datapoints. If you try to add a Datapoint that already exists, it will\nbe ignored. If you intentionally want to add a duplicate Datapoint, you can add a unique identifier to the Datapoint's\ninputs such as `{_dedupe_id: <unique ID>}`.\n\n#### Creating Dataset versions\n\nDatasets have immutable versions. To add/remove Datapoint to/from an existing version, use the **Create** endpoint\nand specify `action` as `\"add\"` or `\"remove\"` respectively. You may also specify the `version_id` or `environment`\nquery parameters to identify the existing version to base the new version on. If neither is provided, the version\ndeployed to the default Environment will be used.\n\n"
      },
      "Evaluations": {
        "id": "Evaluations",
        "description": "Evaluations help you measure the performance of your Prompts, Tools and LLM Evaluators.\n\nAn Evaluation consists of a Dataset, Evaluatees (i.e. Versions to evaluate), and Evaluators.\nWhen an Evaluation is created, Humanloop will start generating Logs, iterating through Datapoints in the Dataset,\nfor each Evaluatee. The Evaluators will then be run on these Logs.\n\nAggregate stats can be viewed in the Humanloop app or retrieved with the **Get Evaluation Stats** endpoint.\n\nNote that when an Evaluation is created, Humanloop will attempt to reuse any existing Logs for each Datapoint-Evaluatee\npair. This means that you can create multiple Evaluations without generating new Logs unnecessarily.\n\n"
      },
      "Logs": {
        "id": "Logs",
        "description": "Logs contain the inputs and outputs of each time a Prompt, Tool or Evaluator is called.\n\nHumanloop automatically records the inputs and outputs when you Call a Prompt or Tool and saves a Log.\nEvaluator Logs are also created when an Evaluator is run on a Log.\n\nYou can manually create Logs through the API.\n\n...\n\n\n"
      },
      "Sessions": {
        "id": "Sessions",
        "description": "Sessions are groups of Logs that track sequences of LLM actions.\n\nSessions enable you to trace through related Logs across different Files. For\nexample, a Session can contain a Prompt Log recording an LLM generation, a Tool\nLog recording a retrieval step, and Evaluator Logs measuring the quality of the\ngenerated text.\n\nLogs within a Session may be nested within each other. When Evaluators are run\nfor monitoring, the Evaluator Logs are added to the Session that the evaluated\nLog is in, nested within the evaluated Log.\n\n"
      }
    },
    "orderedTagIds": [
      "Authentication",
      "Prompts",
      "Datasets",
      "Evaluations",
      "Logs",
      "Sessions"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "List ",
      "audiences": [],
      "operationId": "Prompts_list",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Page number for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "PromptsListRequestPage",
            "title": "Page number",
            "description": "Page number for pagination.",
            "value": {
              "description": "Page number for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "PromptsListRequestPage",
              "title": "Page number",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Prompts to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "PromptsListRequestSize",
            "title": "Page size",
            "description": "Page size for pagination. Number of Prompts to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Prompts to fetch.",
              "schema": {
                "default": 10,
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "PromptsListRequestSize",
              "title": "Page size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for Prompt name.",
          "name": "name",
          "schema": {
            "generatedName": "PromptsListRequestName",
            "title": "Prompt name filter",
            "description": "Case-insensitive filter for Prompt name.",
            "value": {
              "description": "Case-insensitive filter for Prompt name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsListRequestName",
              "title": "Prompt name filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for users in the Prompt. This filter matches against both email address and name of users.",
          "name": "user_filter",
          "schema": {
            "generatedName": "PromptsListRequestUserFilter",
            "title": "User filter",
            "description": "Case-insensitive filter for users in the Prompt. This filter matches against both email address and name of users.",
            "value": {
              "description": "Case-insensitive filter for users in the Prompt. This filter matches against both email address and name of users.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsListRequestUserFilter",
              "title": "User filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Field to sort Prompts by",
          "name": "sort_by",
          "schema": {
            "generatedName": "PromptsListRequestSortBy",
            "description": "Field to sort Prompts by",
            "value": {
              "generatedName": "PromptsListRequestSortBy",
              "schema": "ProjectSortBy",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Direction to sort by.",
          "name": "order",
          "schema": {
            "generatedName": "PromptsListRequestOrder",
            "description": "Direction to sort by.",
            "value": {
              "generatedName": "PromptsListRequestOrder",
              "schema": "SortOrder",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PromptsListRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PromptsListResponse",
          "schema": "ListPrompts",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of Prompts.",
      "authed": true,
      "method": "GET",
      "path": "/prompts",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "directory_id": {
                          "value": {
                            "value": "directory_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "model": {
                          "value": {
                            "value": "model",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "endpoint": {
                          "value": "complete",
                          "type": "enum"
                        },
                        "template": {
                          "value": {
                            "value": "template",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider": {
                          "value": "openai",
                          "type": "enum"
                        },
                        "max_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "temperature": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "top_p": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "stop": {
                          "value": {
                            "value": "stop",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "presence_penalty": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "frequency_penalty": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "other": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "seed": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "response_format": {
                          "properties": {
                            "type": {
                              "value": {
                                "value": "json_object",
                                "type": "string"
                              },
                              "type": "literal"
                            }
                          },
                          "type": "object"
                        },
                        "tools": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "description": {
                                  "value": {
                                    "value": "description",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "linked_tools": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "description": {
                                  "value": {
                                    "value": "description",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "version_id": {
                                  "value": {
                                    "value": "version_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "total_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Prompt",
      "audiences": [],
      "operationId": "Prompts_create",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PromptsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "PromptsCreateRequest",
          "schema": "PromptRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PromptsCreateResponse",
          "schema": "PromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create a Prompt.\n\nWhen you call this endpoint with the same Prompt name but different parameters,\na new version of the Prompt will be created.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.",
      "authed": true,
      "method": "POST",
      "path": "/prompts",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "model": {
                "value": {
                  "value": "model",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "model": {
                  "value": {
                    "value": "model",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": "complete",
                  "type": "enum"
                },
                "template": {
                  "value": {
                    "value": "template",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider": {
                  "value": "openai",
                  "type": "enum"
                },
                "max_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "temperature": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "top_p": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "stop": {
                  "value": {
                    "value": "stop",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "presence_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "frequency_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "other": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "seed": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "response_format": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "json_object",
                        "type": "string"
                      },
                      "type": "literal"
                    }
                  },
                  "type": "object"
                },
                "tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "linked_tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Prompt",
      "audiences": [],
      "operationId": "Prompts_get",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsGetRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific Version Id  of the Prompt to retrieve.",
          "name": "version_id",
          "schema": {
            "generatedName": "PromptsGetRequestVersionId",
            "title": "Version Id",
            "description": "A specific Version Id  of the Prompt to retrieve.",
            "value": {
              "description": "A specific Version Id  of the Prompt to retrieve.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsGetRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag to retrieve a deployed Version from.",
          "name": "environment",
          "schema": {
            "generatedName": "PromptsGetRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag to retrieve a deployed Version from.",
            "value": {
              "description": "An environment tag to retrieve a deployed Version from.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsGetRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PromptsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PromptsGetResponse",
          "schema": "PromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve the Prompt with the given ID.\n\nBy default the deployed version of the Prompt is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Prompt.",
      "authed": true,
      "method": "GET",
      "path": "/prompts/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "model": {
                  "value": {
                    "value": "model",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": "complete",
                  "type": "enum"
                },
                "template": {
                  "value": {
                    "value": "template",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider": {
                  "value": "openai",
                  "type": "enum"
                },
                "max_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "temperature": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "top_p": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "stop": {
                  "value": {
                    "value": "stop",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "presence_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "frequency_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "other": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "seed": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "response_format": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "json_object",
                        "type": "string"
                      },
                      "type": "literal"
                    }
                  },
                  "type": "object"
                },
                "tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "linked_tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Prompt",
      "audiences": [],
      "operationId": "Prompts_delete",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsDeleteRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PromptsDeleteRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete the Prompt with the given ID.",
      "authed": true,
      "method": "DELETE",
      "path": "/prompts/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Prompt",
      "audiences": [],
      "operationId": "Prompts_update",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsUpdateRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PromptsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "PromptsUpdateRequest",
          "schema": "UpdatePromptRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PromptsUpdateResponse",
          "schema": "PromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update the Prompt with the given ID.",
      "authed": true,
      "method": "PATCH",
      "path": "/prompts/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "model": {
                  "value": {
                    "value": "model",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": "complete",
                  "type": "enum"
                },
                "template": {
                  "value": {
                    "value": "template",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider": {
                  "value": "openai",
                  "type": "enum"
                },
                "max_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "temperature": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "top_p": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "stop": {
                  "value": {
                    "value": "stop",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "presence_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "frequency_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "other": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "seed": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "response_format": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "json_object",
                        "type": "string"
                      },
                      "type": "literal"
                    }
                  },
                  "type": "object"
                },
                "tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "linked_tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Versions",
      "audiences": [],
      "operationId": "Prompts_listVersions",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsListVersionsRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
          "name": "status",
          "schema": {
            "generatedName": "PromptsListVersionsRequestStatus",
            "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
            "value": {
              "generatedName": "PromptsListVersionsRequestStatus",
              "schema": "VersionStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
          "name": "environment",
          "schema": {
            "generatedName": "PromptsListVersionsRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
            "value": {
              "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsListVersionsRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "name": "evaluation_aggregates",
          "schema": {
            "generatedName": "PromptsListVersionsRequestEvaluationAggregates",
            "title": "Evaluation Aggregates",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PromptsListVersionsRequestEvaluationAggregates",
              "title": "Evaluation Aggregates",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PromptsListVersionsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PromptsListVersionsResponse",
          "schema": "ListPrompts",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of all the versions of a Prompt.",
      "authed": true,
      "method": "GET",
      "path": "/prompts/{id}/versions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "directory_id": {
                          "value": {
                            "value": "directory_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "model": {
                          "value": {
                            "value": "model",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "endpoint": {
                          "value": "complete",
                          "type": "enum"
                        },
                        "template": {
                          "value": {
                            "value": "template",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider": {
                          "value": "openai",
                          "type": "enum"
                        },
                        "max_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "temperature": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "top_p": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "stop": {
                          "value": {
                            "value": "stop",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "presence_penalty": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "frequency_penalty": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "other": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "seed": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "response_format": {
                          "properties": {
                            "type": {
                              "value": {
                                "value": "json_object",
                                "type": "string"
                              },
                              "type": "literal"
                            }
                          },
                          "type": "object"
                        },
                        "tools": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "description": {
                                  "value": {
                                    "value": "description",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "linked_tools": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "description": {
                                  "value": {
                                    "value": "description",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "version_id": {
                                  "value": {
                                    "value": "version_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "total_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deploy",
      "audiences": [],
      "operationId": "deploy_prompts__id__versions__version_id__deploy_post",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployPromptsIdVersionsVersionIdDeployPostRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Prompt.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployPromptsIdVersionsVersionIdDeployPostRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Unique identifier for the Environment to deploy the Version to.",
          "name": "environment_id",
          "schema": {
            "description": "Unique identifier for the Environment to deploy the Version to.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployPromptsIdVersionsVersionIdDeployPostRequestEnvironmentId",
            "title": "Environment ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DeployPromptsIdVersionsVersionIdDeployPostRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DeployPromptsIdVersionsVersionIdDeployPostResponse",
          "schema": "PromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deploy Prompt to Environment.\n\nSet the deployed Version for the specified Environment. This Prompt Version\nwill be used for calls made to the Prompt in this Environment.",
      "authed": true,
      "method": "POST",
      "path": "/prompts/{id}/versions/{version_id}/deploy",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "environment_id",
              "value": {
                "value": {
                  "value": "environment_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "model": {
                  "value": {
                    "value": "model",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": "complete",
                  "type": "enum"
                },
                "template": {
                  "value": {
                    "value": "template",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider": {
                  "value": "openai",
                  "type": "enum"
                },
                "max_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "temperature": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "top_p": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "stop": {
                  "value": {
                    "value": "stop",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "presence_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "frequency_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "other": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "seed": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "response_format": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "json_object",
                        "type": "string"
                      },
                      "type": "literal"
                    }
                  },
                  "type": "object"
                },
                "tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "linked_tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Commit",
      "audiences": [],
      "operationId": "Prompts_commit",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsCommitRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Prompt.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsCommitRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PromptsCommitRequest",
      "request": {
        "schema": {
          "generatedName": "PromptsCommitRequest",
          "schema": "CommitRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PromptsCommitResponse",
          "schema": "PromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Commit the Prompt Version with the given ID.",
      "authed": true,
      "method": "POST",
      "path": "/prompts/{id}/versions/{version_id}/commit",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "commit_message": {
                "value": {
                  "value": "commit_message",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "model": {
                  "value": {
                    "value": "model",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": "complete",
                  "type": "enum"
                },
                "template": {
                  "value": {
                    "value": "template",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider": {
                  "value": "openai",
                  "type": "enum"
                },
                "max_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "temperature": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "top_p": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "stop": {
                  "value": {
                    "value": "stop",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "presence_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "frequency_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "other": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "seed": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "response_format": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "json_object",
                        "type": "string"
                      },
                      "type": "literal"
                    }
                  },
                  "type": "object"
                },
                "tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "linked_tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Log",
      "audiences": [],
      "operationId": "Prompts_log",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsLogRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific version Id of the Prompt to log to.",
          "name": "version_id",
          "schema": {
            "generatedName": "PromptsLogRequestVersionId",
            "title": "Version Id",
            "description": "A specific version Id of the Prompt to log to.",
            "value": {
              "description": "A specific version Id of the Prompt to log to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsLogRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag of the deployed version to log to.",
          "name": "environment",
          "schema": {
            "generatedName": "PromptsLogRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag of the deployed version to log to.",
            "value": {
              "description": "An environment tag of the deployed version to log to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsLogRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PromptsLogRequest",
      "request": {
        "schema": {
          "generatedName": "PromptsLogRequestBody",
          "schema": "PromptLogRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PromptsLogResponse",
          "schema": "CreatePromptLogResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Log to a Prompt.\n\nYou can use query parameters version_id, or environment, to target\nan existing version of the Prompt. Otherwise the default deployed version will be chosen.\n\nInstead of targeting an existing version explicitly, you can instead pass in\nPrompt details in the request body. In this case, we will check if the details correspond\nto an existing version of the Prompt, if not we will create a new version. This is helpful\nin the case where you are storing or deriving your Prompt details in code.",
      "authed": true,
      "method": "POST",
      "path": "/prompts/{id}/log",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prompt_id": {
                  "value": {
                    "value": "prompt_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "session_id": {
                  "value": {
                    "value": "session_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Call",
      "audiences": [],
      "operationId": "Prompts_call",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "PromptsCallRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific version Id of the Prompt to log to.",
          "name": "version_id",
          "schema": {
            "generatedName": "PromptsCallRequestVersionId",
            "title": "Version Id",
            "description": "A specific version Id of the Prompt to log to.",
            "value": {
              "description": "A specific version Id of the Prompt to log to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsCallRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag of the deployed version to log to.",
          "name": "environment",
          "schema": {
            "generatedName": "PromptsCallRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag of the deployed version to log to.",
            "value": {
              "description": "An environment tag of the deployed version to log to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptsCallRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PromptsCallRequest",
      "request": {
        "schema": {
          "generatedName": "PromptsCallRequestBody",
          "schema": "PromptCallRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "PromptsCallResponse",
            "title": "Response Prompts Call",
            "schemas": [
              {
                "generatedName": "PromptsCallResponseZero",
                "schema": "PromptCallResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              {
                "generatedName": "PromptsCallResponseOne",
                "schema": "PromptCallStreamResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "undiscriminated"
          },
          "type": "oneOf"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Call a Prompt.\n\nCalling a Prompt subsequently calls the model provider before logging\nthe data to Humanloop.\n\nYou can use query parameters version_id, or environment, to target\nan existing version of the Prompt. Otherwise the default deployed version will be chosen.\n\nInstead of targeting an existing version explicitly, you can instead pass in\nPrompt details in the request body. In this case, we will check if the details correspond\nto an existing version of the Prompt, if not we will create a new version. This is helpful\nin the case where you are storing or deriving your Prompt details in code.",
      "authed": true,
      "method": "POST",
      "path": "/prompts/{id}/call",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "prompt": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_id": {
                      "value": {
                        "value": "version_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "directory_id": {
                      "value": {
                        "value": "directory_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tag": {
                              "value": "default",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "created_by": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email_address": {
                          "value": {
                            "value": "email_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "value": "uncommitted",
                      "type": "enum"
                    },
                    "last_used_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "model": {
                      "value": {
                        "value": "model",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "endpoint": {
                      "value": "complete",
                      "type": "enum"
                    },
                    "template": {
                      "value": {
                        "value": "template",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "provider": {
                      "value": "openai",
                      "type": "enum"
                    },
                    "max_tokens": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "temperature": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "top_p": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "stop": {
                      "value": {
                        "value": "stop",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "presence_penalty": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "frequency_penalty": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "other": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "seed": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "response_format": {
                      "properties": {
                        "type": {
                          "value": {
                            "value": "json_object",
                            "type": "string"
                          },
                          "type": "literal"
                        }
                      },
                      "type": "object"
                    },
                    "tools": {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "description": {
                              "value": {
                                "value": "description",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "linked_tools": {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "description": {
                              "value": {
                                "value": "description",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "commit_message": {
                      "value": {
                        "value": "commit_message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_logs_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "total_logs_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "inputs": {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "messages": {
                  "value": [
                    {
                      "properties": {
                        "content": {
                          "value": {
                            "value": "content",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tool_call_id": {
                          "value": {
                            "value": "tool_call_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "user",
                          "type": "enum"
                        },
                        "tool_calls": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": {
                                  "value": {
                                    "value": "function",
                                    "type": "string"
                                  },
                                  "type": "literal"
                                },
                                "function": {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "tool_choice": {
                  "value": {
                    "value": "none",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "session_id": {
                  "value": {
                    "value": "session_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parent_id": {
                  "value": {
                    "value": "parent_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "source": {
                  "value": {
                    "value": "source",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "save": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "source_datapoint_id": {
                  "value": {
                    "value": "source_datapoint_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "batches": {
                  "value": [
                    {
                      "value": {
                        "value": "batches",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "user": {
                  "value": {
                    "value": "user",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment": {
                  "value": {
                    "value": "environment",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "logs": {
                  "value": [
                    {
                      "properties": {
                        "output": {
                          "value": {
                            "value": "output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "raw_output": {
                          "value": {
                            "value": "raw_output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider_latency": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_message": {
                          "properties": {
                            "role": {
                              "value": "user",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "prompt_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "prompt_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "finish_reason": {
                          "value": {
                            "value": "finish_reason",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "index": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Evaluators",
      "audiences": [],
      "operationId": "update_evaluators_prompts__id__evaluators_post",
      "tags": [
        "Prompts"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateEvaluatorsPromptsIdEvaluatorsPostRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateEvaluatorsPromptsIdEvaluatorsPostRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateEvaluatorsPromptsIdEvaluatorsPostRequest",
          "schema": "EvaluatorActivationDeactivationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateEvaluatorsPromptsIdEvaluatorsPostResponse",
          "schema": "PromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Activate and deactivate Evaluators for the Prompt.\n\nAn activated Evaluator will automatically be run on all new Logs\nwithin the Prompt for monitoring purposes.",
      "authed": true,
      "method": "POST",
      "path": "/prompts/{id}/evaluators",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "model": {
                  "value": {
                    "value": "model",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": "complete",
                  "type": "enum"
                },
                "template": {
                  "value": {
                    "value": "template",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider": {
                  "value": "openai",
                  "type": "enum"
                },
                "max_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "temperature": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "top_p": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "stop": {
                  "value": {
                    "value": "stop",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "presence_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "frequency_penalty": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "other": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "seed": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "response_format": {
                  "properties": {
                    "type": {
                      "value": {
                        "value": "json_object",
                        "type": "string"
                      },
                      "type": "literal"
                    }
                  },
                  "type": "object"
                },
                "tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "linked_tools": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parameters": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List ",
      "audiences": [],
      "operationId": "Tools_list",
      "tags": [
        "Tools"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Page offset for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "ToolsListRequestPage",
            "title": "Page index",
            "description": "Page offset for pagination.",
            "value": {
              "description": "Page offset for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ToolsListRequestPage",
              "title": "Page index",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Tools to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "ToolsListRequestSize",
            "title": "Page size",
            "description": "Page size for pagination. Number of Tools to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Tools to fetch.",
              "schema": {
                "default": 10,
                "type": "int"
              },
              "generatedName": "ToolsListRequestSize",
              "title": "Page size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for Tool name.",
          "name": "name",
          "schema": {
            "generatedName": "ToolsListRequestName",
            "title": "Tool name filter",
            "description": "Case-insensitive filter for Tool name.",
            "value": {
              "description": "Case-insensitive filter for Tool name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolsListRequestName",
              "title": "Tool name filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for users in the Tool. This filter matches against both email address and name of users.",
          "name": "user_filter",
          "schema": {
            "generatedName": "ToolsListRequestUserFilter",
            "title": "User filter",
            "description": "Case-insensitive filter for users in the Tool. This filter matches against both email address and name of users.",
            "value": {
              "description": "Case-insensitive filter for users in the Tool. This filter matches against both email address and name of users.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolsListRequestUserFilter",
              "title": "User filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Field to sort Tools by",
          "name": "sort_by",
          "schema": {
            "generatedName": "ToolsListRequestSortBy",
            "description": "Field to sort Tools by",
            "value": {
              "generatedName": "ToolsListRequestSortBy",
              "schema": "ProjectSortBy",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Direction to sort by.",
          "name": "order",
          "schema": {
            "generatedName": "ToolsListRequestOrder",
            "description": "Direction to sort by.",
            "value": {
              "generatedName": "ToolsListRequestOrder",
              "schema": "SortOrder",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ToolsListRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ToolsListResponse",
          "schema": "ListTools",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of Tools.",
      "authed": true,
      "method": "GET",
      "path": "/tools",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "directory_id": {
                          "value": {
                            "value": "directory_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "function": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "description": {
                              "value": {
                                "value": "description",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "source_code": {
                          "value": {
                            "value": "source_code",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "setup_values": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "tool_type": {
                          "value": "pinecone_search",
                          "type": "enum"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "signature": {
                          "value": {
                            "value": "signature",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "total_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Tool",
      "audiences": [],
      "operationId": "Tools_create",
      "tags": [
        "Tools"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ToolsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "ToolsCreateRequest",
          "schema": "ToolRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ToolsCreateResponse",
          "schema": "src__external__app__models__v5__tools__ToolResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create a Tool.\n\nTools have immutable versions. When you call this endpoint\nwith the same Tool name but different parameters, a new version of\nthe Tool will be created.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.",
      "authed": true,
      "method": "POST",
      "path": "/tools",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "function": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "parameters": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "source_code": {
                  "value": {
                    "value": "source_code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "setup_values": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tool_type": {
                  "value": "pinecone_search",
                  "type": "enum"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "signature": {
                  "value": {
                    "value": "signature",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Tool",
      "audiences": [],
      "operationId": "Tools_get",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Tool.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ToolsGetRequestId",
            "title": "Tool ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific Version Id  of the Tool to retrieve.",
          "name": "version_id",
          "schema": {
            "generatedName": "ToolsGetRequestVersionId",
            "title": "Version Id",
            "description": "A specific Version Id  of the Tool to retrieve.",
            "value": {
              "description": "A specific Version Id  of the Tool to retrieve.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolsGetRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag to retrieve a deployed Version from.",
          "name": "environment",
          "schema": {
            "generatedName": "ToolsGetRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag to retrieve a deployed Version from.",
            "value": {
              "description": "An environment tag to retrieve a deployed Version from.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolsGetRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ToolsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ToolsGetResponse",
          "schema": "src__external__app__models__v5__tools__ToolResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve the Tool with the given ID.\n\nBy default the deployed version of the Tool is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Tool.",
      "authed": true,
      "method": "GET",
      "path": "/tools/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "function": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "parameters": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "source_code": {
                  "value": {
                    "value": "source_code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "setup_values": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tool_type": {
                  "value": "pinecone_search",
                  "type": "enum"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "signature": {
                  "value": {
                    "value": "signature",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Tool",
      "audiences": [],
      "operationId": "Tools_delete",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Tool.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ToolsDeleteRequestId",
            "title": "Tool ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ToolsDeleteRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete the Tool with the given ID.",
      "authed": true,
      "method": "DELETE",
      "path": "/tools/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Tool",
      "audiences": [],
      "operationId": "Tools_update",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Tool.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ToolsUpdateRequestId",
            "title": "Tool ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ToolsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "ToolsUpdateRequest",
          "schema": "UpdateToolRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ToolsUpdateResponse",
          "schema": "src__external__app__models__v5__tools__ToolResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update the Tool with the given ID.",
      "authed": true,
      "method": "PATCH",
      "path": "/tools/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "function": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "parameters": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "source_code": {
                  "value": {
                    "value": "source_code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "setup_values": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tool_type": {
                  "value": "pinecone_search",
                  "type": "enum"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "signature": {
                  "value": {
                    "value": "signature",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Versions",
      "audiences": [],
      "operationId": "Tools_listVersions",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for the Tool.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for the Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ToolsListVersionsRequestId",
            "title": "Tool ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
          "name": "status",
          "schema": {
            "generatedName": "ToolsListVersionsRequestStatus",
            "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
            "value": {
              "generatedName": "ToolsListVersionsRequestStatus",
              "schema": "VersionStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
          "name": "environment",
          "schema": {
            "generatedName": "ToolsListVersionsRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
            "value": {
              "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolsListVersionsRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "name": "evaluation_aggregates",
          "schema": {
            "generatedName": "ToolsListVersionsRequestEvaluationAggregates",
            "title": "Evaluation Aggregates",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ToolsListVersionsRequestEvaluationAggregates",
              "title": "Evaluation Aggregates",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ToolsListVersionsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ToolsListVersionsResponse",
          "schema": "ListTools",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of all the versions of a Tool.",
      "authed": true,
      "method": "GET",
      "path": "/tools/{id}/versions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "directory_id": {
                          "value": {
                            "value": "directory_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "function": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "description": {
                              "value": {
                                "value": "description",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "source_code": {
                          "value": {
                            "value": "source_code",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "setup_values": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "tool_type": {
                          "value": "pinecone_search",
                          "type": "enum"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "signature": {
                          "value": {
                            "value": "signature",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "total_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deploy",
      "audiences": [],
      "operationId": "deploy_tools__id__versions__version_id__deploy_post",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Tool.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployToolsIdVersionsVersionIdDeployPostRequestId",
            "title": "Tool ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Tool.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployToolsIdVersionsVersionIdDeployPostRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Unique identifier for the Environment to deploy the Version to.",
          "name": "environment_id",
          "schema": {
            "description": "Unique identifier for the Environment to deploy the Version to.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployToolsIdVersionsVersionIdDeployPostRequestEnvironmentId",
            "title": "Environment ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DeployToolsIdVersionsVersionIdDeployPostRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DeployToolsIdVersionsVersionIdDeployPostResponse",
          "schema": "src__external__app__models__v5__tools__ToolResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deploy Tool to Environment.\n\nSet the deployed Version for the specified Environment. This Tool Version\nwill be used for calls made to the Tool in this Environment.",
      "authed": true,
      "method": "POST",
      "path": "/tools/{id}/versions/{version_id}/deploy",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "environment_id",
              "value": {
                "value": {
                  "value": "environment_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "function": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "parameters": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "source_code": {
                  "value": {
                    "value": "source_code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "setup_values": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tool_type": {
                  "value": "pinecone_search",
                  "type": "enum"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "signature": {
                  "value": {
                    "value": "signature",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Commit",
      "audiences": [],
      "operationId": "Tools_commit",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Tool.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ToolsCommitRequestId",
            "title": "Tool ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Tool.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ToolsCommitRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ToolsCommitRequest",
      "request": {
        "schema": {
          "generatedName": "ToolsCommitRequest",
          "schema": "CommitRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ToolsCommitResponse",
          "schema": "src__external__app__models__v5__tools__ToolResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Commit the Tool Version with the given ID.",
      "authed": true,
      "method": "POST",
      "path": "/tools/{id}/versions/{version_id}/commit",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "commit_message": {
                "value": {
                  "value": "commit_message",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "function": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "parameters": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "source_code": {
                  "value": {
                    "value": "source_code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "setup_values": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tool_type": {
                  "value": "pinecone_search",
                  "type": "enum"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "signature": {
                  "value": {
                    "value": "signature",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Log",
      "audiences": [],
      "operationId": "Tools_log",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Tool.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Tool.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ToolsLogRequestId",
            "title": "Tool ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific version Id of the Tool to log to.",
          "name": "version_id",
          "schema": {
            "generatedName": "ToolsLogRequestVersionId",
            "title": "Version Id",
            "description": "A specific version Id of the Tool to log to.",
            "value": {
              "description": "A specific version Id of the Tool to log to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolsLogRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag of the deployed version to log to.",
          "name": "environment",
          "schema": {
            "generatedName": "ToolsLogRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag of the deployed version to log to.",
            "value": {
              "description": "An environment tag of the deployed version to log to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolsLogRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ToolsLogRequest",
      "request": {
        "schema": {
          "generatedName": "ToolsLogRequestBody",
          "schema": "ToolLogRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ToolsLogResponse",
          "schema": "CreateToolLogResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Log to a Tool.\n\nYou can use query parameters version_id, or environment, to target\nan existing version of the Tool. Otherwise the default deployed version will be chosen.\n\nInstead of targeting an existing version explicitly, you can instead pass in\nTool details in the request body. In this case, we will check if the details correspond\nto an existing version of the Tool, if not we will create a new version. This is helpful\nin the case where you are storing or deriving your Tool details in code.",
      "authed": true,
      "method": "POST",
      "path": "/tools/{id}/log",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tool_id": {
                  "value": {
                    "value": "tool_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "session_id": {
                  "value": {
                    "value": "session_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Evaluators",
      "audiences": [],
      "operationId": "update_evaluators_tools__id__evaluators_post",
      "tags": [
        "Tools"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateEvaluatorsToolsIdEvaluatorsPostRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateEvaluatorsToolsIdEvaluatorsPostRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateEvaluatorsToolsIdEvaluatorsPostRequest",
          "schema": "EvaluatorActivationDeactivationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "UpdateEvaluatorsToolsIdEvaluatorsPostResponse",
          "schema": "src__external__app__models__v5__tools__ToolResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Activate and deactivate Evaluators for the Tool.\n\nAn activated Evaluator will automatically be run on all new Logs\nwithin the Tool for monitoring purposes.",
      "authed": true,
      "method": "POST",
      "path": "/tools/{id}/evaluators",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "function": {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "parameters": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "source_code": {
                  "value": {
                    "value": "source_code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "setup_values": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "tool_type": {
                  "value": "pinecone_search",
                  "type": "enum"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "signature": {
                  "value": {
                    "value": "signature",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Templates",
      "audiences": [],
      "operationId": "list_templates_tools_templates_get",
      "tags": [
        "Tools"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Type of tool to return the template",
          "name": "tool_type",
          "schema": {
            "generatedName": "ListTemplatesToolsTemplatesGetRequestToolType",
            "description": "Type of tool to return the template",
            "value": {
              "generatedName": "ListTemplatesToolsTemplatesGetRequestToolType",
              "schema": "src__domain__files__tool__ToolType",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListTemplatesToolsTemplatesGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "ListTemplatesToolsTemplatesGetResponseItem",
            "schema": "ToolTemplateResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListTemplatesToolsTemplatesGetResponse",
          "title": "Response List Templates Tools Templates Get",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/tools/templates",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "parameters": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "signature": {
                      "value": {
                        "value": "signature",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "setup_schema": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List ",
      "audiences": [],
      "operationId": "Datasets_list",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Page offset for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "DatasetsListRequestPage",
            "title": "Page index",
            "description": "Page offset for pagination.",
            "value": {
              "description": "Page offset for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "DatasetsListRequestPage",
              "title": "Page index",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Datasets to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "DatasetsListRequestSize",
            "title": "Page size",
            "description": "Page size for pagination. Number of Datasets to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Datasets to fetch.",
              "schema": {
                "default": 10,
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "DatasetsListRequestSize",
              "title": "Page size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for Dataset name.",
          "name": "name",
          "schema": {
            "generatedName": "DatasetsListRequestName",
            "title": "Dataset name filter",
            "description": "Case-insensitive filter for Dataset name.",
            "value": {
              "description": "Case-insensitive filter for Dataset name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsListRequestName",
              "title": "Dataset name filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for users in the Dataset. This filter matches against both email address and name of users.",
          "name": "user_filter",
          "schema": {
            "generatedName": "DatasetsListRequestUserFilter",
            "title": "User filter",
            "description": "Case-insensitive filter for users in the Dataset. This filter matches against both email address and name of users.",
            "value": {
              "description": "Case-insensitive filter for users in the Dataset. This filter matches against both email address and name of users.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsListRequestUserFilter",
              "title": "User filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Field to sort Datasets by",
          "name": "sort_by",
          "schema": {
            "generatedName": "DatasetsListRequestSortBy",
            "description": "Field to sort Datasets by",
            "value": {
              "generatedName": "DatasetsListRequestSortBy",
              "schema": "ProjectSortBy",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Direction to sort by.",
          "name": "order",
          "schema": {
            "generatedName": "DatasetsListRequestOrder",
            "description": "Direction to sort by.",
            "value": {
              "generatedName": "DatasetsListRequestOrder",
              "schema": "SortOrder",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DatasetsListRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DatasetsListResponse",
          "schema": "PaginatedData_DatasetResponse_",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of Datasets.",
      "authed": true,
      "method": "GET",
      "path": "/datasets",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "datapoints_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "datapoints": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "page": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "size": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Dataset",
      "audiences": [],
      "operationId": "Datasets_create",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID of the specific Dataset version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
          "name": "version_id",
          "schema": {
            "generatedName": "DatasetsCreateRequestVersionId",
            "title": "Version ID",
            "description": "ID of the specific Dataset version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
            "value": {
              "description": "ID of the specific Dataset version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsCreateRequestVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag to identify a deployed Version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
          "name": "environment",
          "schema": {
            "generatedName": "DatasetsCreateRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag to identify a deployed Version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
            "value": {
              "description": "An environment tag to identify a deployed Version to base the created Version on. Only used when `action` is `\"add\"` or `\"remove\"`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsCreateRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DatasetsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "DatasetsCreateRequestBody",
          "schema": "src__external__app__models__v5__datasets__DatasetRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DatasetsCreateResponse",
          "schema": "DatasetResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create a Dataset.\n\nDataset have immutable versions. When you call this endpoint\nwith the same Dataset name but different parameters, a new version of\nthe Dataset will be created.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.\n\nBy default, the new Dataset version will be set to the list of Datapoints provided in\nthe request.\nYou can create a new version by adding or removing Datapoints from an existing version\nby specifying `action` as `add` or `remove` respectively. In this case, you may specify\nthe `version_id` or `environment` query parameters to identify the existing version to base\nthe new version on. If neither is provided, the default deployed version will be used.\n\nHumanloop also deduplicates Datapoints. If you try to add a Datapoint that already\nexists, it will be ignored.",
      "authed": true,
      "method": "POST",
      "path": "/datasets",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "datapoints": {
                "value": [
                  {
                    "properties": {},
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "datapoints_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "datapoints": {
                  "value": [
                    {
                      "properties": {
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "target": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Dataset",
      "audiences": [],
      "operationId": "Datasets_get",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Dataset.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DatasetsGetRequestId",
            "title": "Dataset ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific Version ID of the Dataset to retrieve.",
          "name": "version_id",
          "schema": {
            "generatedName": "DatasetsGetRequestVersionId",
            "title": "Version Id",
            "description": "A specific Version ID of the Dataset to retrieve.",
            "value": {
              "description": "A specific Version ID of the Dataset to retrieve.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsGetRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag to retrieve a deployed Version from.",
          "name": "environment",
          "schema": {
            "generatedName": "DatasetsGetRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag to retrieve a deployed Version from.",
            "value": {
              "description": "An environment tag to retrieve a deployed Version from.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsGetRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If set to `true`, include all Datapoints in the response. Defaults to `false`. Consider using the paginated List Datapoints endpoint instead.",
          "name": "include_datapoints",
          "schema": {
            "generatedName": "DatasetsGetRequestIncludeDatapoints",
            "title": "Include Datapoints",
            "description": "If set to `true`, include all Datapoints in the response. Defaults to `false`. Consider using the paginated List Datapoints endpoint instead.",
            "value": {
              "description": "If set to `true`, include all Datapoints in the response. Defaults to `false`. Consider using the paginated List Datapoints endpoint instead.",
              "schema": {
                "default": false,
                "type": "boolean"
              },
              "generatedName": "DatasetsGetRequestIncludeDatapoints",
              "title": "Include Datapoints",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DatasetsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DatasetsGetResponse",
          "schema": "DatasetResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve the Dataset with the given ID.\n\nUnless `include_datapoints` is set to `true`, the response will not include\nthe Datapoints.\nUse the List Datapoints endpoint (`GET /{id}/datapoints`) to efficiently\nretrieve Datapoints for a large Dataset.\n\nBy default the deployed version of the Dataset is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Dataset.",
      "authed": true,
      "method": "GET",
      "path": "/datasets/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "datapoints_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "datapoints": {
                  "value": [
                    {
                      "properties": {
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "target": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Dataset",
      "audiences": [],
      "operationId": "Datasets_delete",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Dataset.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DatasetsDeleteRequestId",
            "title": "Dataset ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DatasetsDeleteRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete the Dataset with the given ID.",
      "authed": true,
      "method": "DELETE",
      "path": "/datasets/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Dataset",
      "audiences": [],
      "operationId": "Datasets_update",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Dataset.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DatasetsUpdateRequestId",
            "title": "Dataset ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DatasetsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "DatasetsUpdateRequest",
          "schema": "UpdateDatasetRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DatasetsUpdateResponse",
          "schema": "DatasetResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update the Dataset with the given ID.",
      "authed": true,
      "method": "PATCH",
      "path": "/datasets/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "datapoints_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "datapoints": {
                  "value": [
                    {
                      "properties": {
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "target": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Datapoints",
      "audiences": [],
      "operationId": "Datasets_listDatapoints",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Dataset.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DatasetsListDatapointsRequestId",
            "title": "Dataset ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific Version ID of the Dataset to retrieve.",
          "name": "version_id",
          "schema": {
            "generatedName": "DatasetsListDatapointsRequestVersionId",
            "title": "Version Id",
            "description": "A specific Version ID of the Dataset to retrieve.",
            "value": {
              "description": "A specific Version ID of the Dataset to retrieve.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsListDatapointsRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag to retrieve a deployed Version from.",
          "name": "environment",
          "schema": {
            "generatedName": "DatasetsListDatapointsRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag to retrieve a deployed Version from.",
            "value": {
              "description": "An environment tag to retrieve a deployed Version from.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsListDatapointsRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page number for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "DatasetsListDatapointsRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number for pagination.",
            "value": {
              "description": "Page number for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "DatasetsListDatapointsRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Datapoints to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "DatasetsListDatapointsRequestSize",
            "nameOverride": "Size",
            "title": "Size",
            "description": "Page size for pagination. Number of Datapoints to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Datapoints to fetch.",
              "schema": {
                "default": 50,
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "DatasetsListDatapointsRequestSize",
              "nameOverride": "Size",
              "title": "Size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DatasetsListDatapointsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DatasetsListDatapointsResponse",
          "schema": "PaginatedData_DatapointResponse_",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List all Datapoints for the Dataset with the given ID.",
      "authed": true,
      "method": "GET",
      "path": "/datasets/{id}/datapoints",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "target": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "page": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "size": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Versions",
      "audiences": [],
      "operationId": "Datasets_listVersions",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Dataset.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DatasetsListVersionsRequestId",
            "title": "Dataset ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
          "name": "status",
          "schema": {
            "generatedName": "DatasetsListVersionsRequestStatus",
            "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
            "value": {
              "generatedName": "DatasetsListVersionsRequestStatus",
              "schema": "VersionStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
          "name": "environment",
          "schema": {
            "generatedName": "DatasetsListVersionsRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
            "value": {
              "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetsListVersionsRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "name": "evaluation_aggregates",
          "schema": {
            "generatedName": "DatasetsListVersionsRequestEvaluationAggregates",
            "title": "Evaluation Aggregates",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "DatasetsListVersionsRequestEvaluationAggregates",
              "title": "Evaluation Aggregates",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DatasetsListVersionsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DatasetsListVersionsResponse",
          "schema": "ListDatasets",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of the versions for a Dataset.",
      "authed": true,
      "method": "GET",
      "path": "/datasets/{id}/versions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "datapoints_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "datapoints": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Commit",
      "audiences": [],
      "operationId": "Datasets_commit",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Dataset.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DatasetsCommitRequestId",
            "title": "Dataset ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Dataset.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DatasetsCommitRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DatasetsCommitRequest",
      "request": {
        "schema": {
          "generatedName": "DatasetsCommitRequest",
          "schema": "CommitRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DatasetsCommitResponse",
          "schema": "DatasetResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Commit the Dataset Version with the given ID.",
      "authed": true,
      "method": "POST",
      "path": "/datasets/{id}/versions/{version_id}/commit",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "commit_message": {
                "value": {
                  "value": "commit_message",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "datapoints_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "datapoints": {
                  "value": [
                    {
                      "properties": {
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "target": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deploy",
      "audiences": [],
      "operationId": "deploy_datasets__id__versions__version_id__deploy_post",
      "tags": [
        "Datasets"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Dataset.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployDatasetsIdVersionsVersionIdDeployPostRequestId",
            "title": "Dataset ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Dataset.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Dataset.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployDatasetsIdVersionsVersionIdDeployPostRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Unique identifier for the Environment to deploy the Version to.",
          "name": "environment_id",
          "schema": {
            "description": "Unique identifier for the Environment to deploy the Version to.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployDatasetsIdVersionsVersionIdDeployPostRequestEnvironmentId",
            "title": "Environment ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DeployDatasetsIdVersionsVersionIdDeployPostRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DeployDatasetsIdVersionsVersionIdDeployPostResponse",
          "schema": "DatasetResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deploy Dataset to Environment.\n\nSet the deployed Version for the specified Environment.",
      "authed": true,
      "method": "POST",
      "path": "/datasets/{id}/versions/{version_id}/deploy",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "environment_id",
              "value": {
                "value": {
                  "value": "environment_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "datapoints_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "datapoints": {
                  "value": [
                    {
                      "properties": {
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "target": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Evaluations for File",
      "audiences": [],
      "operationId": "Evaluations_list",
      "tags": [
        "Evaluations"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filter by File ID. If provided, only Evaluation for the specified File will be returned.",
          "name": "file_id",
          "schema": {
            "description": "Filter by File ID. If provided, only Evaluation for the specified File will be returned.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluationsListRequestFileId",
            "title": "File ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page number for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "EvaluationsListRequestPage",
            "title": "Page number",
            "description": "Page number for pagination.",
            "value": {
              "description": "Page number for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "EvaluationsListRequestPage",
              "title": "Page number",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Evaluations to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "EvaluationsListRequestSize",
            "title": "Page size",
            "description": "Page size for pagination. Number of Evaluations to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Evaluations to fetch.",
              "schema": {
                "default": 10,
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "EvaluationsListRequestSize",
              "title": "Page size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "EvaluationsListRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluationsListResponse",
          "schema": "PaginatedData_EvaluationResponse_",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List Evaluations for the given File.\n\nRetrieve a list of Evaluations that evaluate versions of the specified File.",
      "authed": true,
      "method": "GET",
      "path": "/evaluations",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "file_id",
              "value": {
                "value": {
                  "value": "file_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dataset": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "datapoints_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "evaluatees": {
                          "value": [
                            {
                              "properties": {
                                "version": {
                                  "properties": {
                                    "id": {
                                      "value": {
                                        "value": "id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "version_id": {
                                      "value": {
                                        "value": "version_id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "created_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "updated_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "status": {
                                      "value": "uncommitted",
                                      "type": "enum"
                                    },
                                    "last_used_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "model": {
                                      "value": {
                                        "value": "model",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "version_logs_count": {
                                      "value": {
                                        "value": 1,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    },
                                    "total_logs_count": {
                                      "value": {
                                        "value": 1,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    },
                                    "inputs": {
                                      "value": [
                                        {
                                          "properties": {
                                            "name": {
                                              "value": {
                                                "value": "name",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "orchestrated": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "evaluators": {
                          "value": [
                            {
                              "properties": {
                                "version": {
                                  "properties": {
                                    "id": {
                                      "value": {
                                        "value": "id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "version_id": {
                                      "value": {
                                        "value": "version_id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "created_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "updated_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "status": {
                                      "value": "uncommitted",
                                      "type": "enum"
                                    },
                                    "last_used_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "spec": {
                                      "value": {
                                        "value": {
                                          "arguments_type": {
                                            "value": "target_free",
                                            "type": "enum"
                                          },
                                          "return_type": {
                                            "value": "boolean",
                                            "type": "enum"
                                          },
                                          "evaluator_type": {
                                            "value": {
                                              "value": "llm",
                                              "type": "string"
                                            },
                                            "type": "primitive"
                                          }
                                        },
                                        "type": "discriminated"
                                      },
                                      "type": "oneOf"
                                    },
                                    "version_logs_count": {
                                      "value": {
                                        "value": 1,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    },
                                    "total_logs_count": {
                                      "value": {
                                        "value": 1,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    },
                                    "inputs": {
                                      "value": [
                                        {
                                          "properties": {
                                            "name": {
                                              "value": {
                                                "value": "name",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "orchestrated": {
                                  "value": {
                                    "value": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "pending",
                          "type": "enum"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "page": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "size": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Evaluation",
      "audiences": [],
      "operationId": "Evaluations_create",
      "tags": [
        "Evaluations"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluationsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "EvaluationsCreateRequest",
          "schema": "CreateEvaluationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluationsCreateResponse",
          "schema": "EvaluationResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create an Evaluation.\n\nCreate a new Evaluation by specifying the Dataset, Evaluatees, and Evaluators.\nHumanloop will automatically start generating Logs and running Evaluators.\n\nTo keep updated on the progress of the Evaluation, you can poll the Evaluation\nand check its status.",
      "authed": true,
      "method": "POST",
      "path": "/evaluations",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "dataset": {
                "properties": {
                  "version_id": {
                    "value": {
                      "value": "version_id",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              },
              "evaluatees": {
                "value": [
                  {
                    "properties": {
                      "version_id": {
                        "value": {
                          "value": "version_id",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "evaluators": {
                "value": [
                  {
                    "properties": {
                      "version_id": {
                        "value": {
                          "value": "version_id",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "dataset": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_id": {
                      "value": {
                        "value": "version_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tag": {
                              "value": "default",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "created_by": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email_address": {
                          "value": {
                            "value": "email_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "value": "uncommitted",
                      "type": "enum"
                    },
                    "last_used_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "commit_message": {
                      "value": {
                        "value": "commit_message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "datapoints_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "datapoints": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "evaluatees": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "model": {
                              "value": {
                                "value": "model",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "batch_id": {
                          "value": {
                            "value": "batch_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "evaluators": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "spec": {
                              "value": {
                                "value": {
                                  "arguments_type": {
                                    "value": "target_free",
                                    "type": "enum"
                                  },
                                  "return_type": {
                                    "value": "boolean",
                                    "type": "enum"
                                  },
                                  "evaluator_type": {
                                    "value": {
                                      "value": "llm",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "discriminated"
                              },
                              "type": "oneOf"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "status": {
                  "value": "pending",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Evaluation",
      "audiences": [],
      "operationId": "Evaluations_get",
      "tags": [
        "Evaluations"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluation.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluation.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluationsGetRequestId",
            "title": "Evaluation ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluationsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluationsGetResponse",
          "schema": "EvaluationResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get an Evaluation.\n\nRetrieve the Evaluation with the given ID.",
      "authed": true,
      "method": "GET",
      "path": "/evaluations/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "dataset": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_id": {
                      "value": {
                        "value": "version_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tag": {
                              "value": "default",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "created_by": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email_address": {
                          "value": {
                            "value": "email_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "value": "uncommitted",
                      "type": "enum"
                    },
                    "last_used_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "commit_message": {
                      "value": {
                        "value": "commit_message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "datapoints_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "datapoints": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "evaluatees": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "model": {
                              "value": {
                                "value": "model",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "batch_id": {
                          "value": {
                            "value": "batch_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "evaluators": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "spec": {
                              "value": {
                                "value": {
                                  "arguments_type": {
                                    "value": "target_free",
                                    "type": "enum"
                                  },
                                  "return_type": {
                                    "value": "boolean",
                                    "type": "enum"
                                  },
                                  "evaluator_type": {
                                    "value": {
                                      "value": "llm",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "discriminated"
                              },
                              "type": "oneOf"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "status": {
                  "value": "pending",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Evaluation",
      "audiences": [],
      "operationId": "Evaluations_delete",
      "tags": [
        "Evaluations"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluation.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluation.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluationsDeleteRequestId",
            "title": "Evaluation ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluationsDeleteRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete an Evaluation.\n\nRemove an Evaluation from Humanloop. The Logs and Versions used in the Evaluation\nwill not be deleted.",
      "authed": true,
      "method": "DELETE",
      "path": "/evaluations/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Evaluation",
      "audiences": [],
      "operationId": "Evaluations_update",
      "tags": [
        "Evaluations"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluation.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluation.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluationsUpdateRequestId",
            "title": "Evaluation ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluationsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "EvaluationsUpdateRequest",
          "schema": "CreateEvaluationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluationsUpdateResponse",
          "schema": "EvaluationResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update an Evaluation.\n\nUpdate the setup of an Evaluation by specifying the Dataset, Evaluatees, and Evaluators.",
      "authed": true,
      "method": "PATCH",
      "path": "/evaluations/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "dataset": {
                "properties": {
                  "version_id": {
                    "value": {
                      "value": "version_id",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              },
              "evaluatees": {
                "value": [
                  {
                    "properties": {
                      "version_id": {
                        "value": {
                          "value": "version_id",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "evaluators": {
                "value": [
                  {
                    "properties": {
                      "version_id": {
                        "value": {
                          "value": "version_id",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "dataset": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_id": {
                      "value": {
                        "value": "version_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tag": {
                              "value": "default",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "created_by": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email_address": {
                          "value": {
                            "value": "email_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "value": "uncommitted",
                      "type": "enum"
                    },
                    "last_used_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "commit_message": {
                      "value": {
                        "value": "commit_message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "datapoints_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "datapoints": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "evaluatees": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "model": {
                              "value": {
                                "value": "model",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "batch_id": {
                          "value": {
                            "value": "batch_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "evaluators": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "spec": {
                              "value": {
                                "value": {
                                  "arguments_type": {
                                    "value": "target_free",
                                    "type": "enum"
                                  },
                                  "return_type": {
                                    "value": "boolean",
                                    "type": "enum"
                                  },
                                  "evaluator_type": {
                                    "value": {
                                      "value": "llm",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "discriminated"
                              },
                              "type": "oneOf"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "status": {
                  "value": "pending",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Status",
      "audiences": [],
      "operationId": "Evaluations_updateStatus",
      "tags": [
        "Evaluations"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluation.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluation.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluationsUpdateStatusRequestId",
            "title": "Evaluation ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluationsUpdateStatusRequest",
      "request": {
        "schema": {
          "generatedName": "EvaluationsUpdateStatusRequest",
          "schema": "Body_Evaluations_updateStatus",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluationsUpdateStatusResponse",
          "schema": "EvaluationResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update the status of an Evaluation.\n\nCan be used to cancel a running Evaluation, or mark an Evaluation that uses external or human evaluators\nas completed.",
      "authed": true,
      "method": "PATCH",
      "path": "/evaluations/{id}/status",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "status": {
                "value": "pending",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "dataset": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_id": {
                      "value": {
                        "value": "version_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tag": {
                              "value": "default",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "created_by": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email_address": {
                          "value": {
                            "value": "email_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "value": "uncommitted",
                      "type": "enum"
                    },
                    "last_used_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "commit_message": {
                      "value": {
                        "value": "commit_message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "datapoints_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "datapoints": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "evaluatees": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "model": {
                              "value": {
                                "value": "model",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "batch_id": {
                          "value": {
                            "value": "batch_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "evaluators": {
                  "value": [
                    {
                      "properties": {
                        "version": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "spec": {
                              "value": {
                                "value": {
                                  "arguments_type": {
                                    "value": "target_free",
                                    "type": "enum"
                                  },
                                  "return_type": {
                                    "value": "boolean",
                                    "type": "enum"
                                  },
                                  "evaluator_type": {
                                    "value": {
                                      "value": "llm",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "discriminated"
                              },
                              "type": "oneOf"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "orchestrated": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "status": {
                  "value": "pending",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Evaluation Stats",
      "audiences": [],
      "operationId": "Evaluations_getStats",
      "tags": [
        "Evaluations"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluation.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluation.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluationsGetStatsRequestId",
            "title": "Evaluation ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluationsGetStatsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluationsGetStatsResponse",
          "schema": "EvaluationStats",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get Evaluation Stats.\n\nRetrieve aggregate stats for the specified Evaluation.\nThis includes the number of generated Logs for every evaluatee and Evaluator metrics\n(such as the mean and percentiles for numeric Evaluators for every evaluatee).",
      "authed": true,
      "method": "GET",
      "path": "/evaluations/{id}/stats",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "overall_stats": {
                  "properties": {
                    "num_datapoints": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "total_logs": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "total_evaluator_logs": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "version_stats": {
                  "value": [
                    {
                      "properties": {
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "num_logs": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "evaluator_version_stats": {
                          "value": [
                            {
                              "properties": {
                                "evaluator_version_id": {
                                  "value": {
                                    "value": "evaluator_version_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "total_logs": {
                                  "value": {
                                    "value": 1,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                },
                                "num_judgments": {
                                  "value": {
                                    "value": 1,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                },
                                "num_nulls": {
                                  "value": {
                                    "value": 1,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                },
                                "num_errors": {
                                  "value": {
                                    "value": 1,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                },
                                "mean": {
                                  "value": {
                                    "value": 0,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "std": {
                                  "value": {
                                    "value": 1,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "percentiles": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "0",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": -2.5,
                                          "type": "double"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    {
                                      "key": {
                                        "value": "25",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": -0.6745,
                                          "type": "double"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    {
                                      "key": {
                                        "value": "50",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": 0,
                                          "type": "double"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    {
                                      "key": {
                                        "value": "75",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": 0.6745,
                                          "type": "double"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    {
                                      "key": {
                                        "value": "100",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": 2.5,
                                          "type": "double"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List ",
      "audiences": [],
      "operationId": "Evaluators_list",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Page offset for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "EvaluatorsListRequestPage",
            "title": "Page index",
            "description": "Page offset for pagination.",
            "value": {
              "description": "Page offset for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "EvaluatorsListRequestPage",
              "title": "Page index",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Evaluators to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "EvaluatorsListRequestSize",
            "title": "Page size",
            "description": "Page size for pagination. Number of Evaluators to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Evaluators to fetch.",
              "schema": {
                "default": 10,
                "type": "int"
              },
              "generatedName": "EvaluatorsListRequestSize",
              "title": "Page size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for Evaluator name.",
          "name": "name",
          "schema": {
            "generatedName": "EvaluatorsListRequestName",
            "title": "Evaluator name filter",
            "description": "Case-insensitive filter for Evaluator name.",
            "value": {
              "description": "Case-insensitive filter for Evaluator name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorsListRequestName",
              "title": "Evaluator name filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Case-insensitive filter for users in the Evaluator. This filter matches against both email address and name of users.",
          "name": "user_filter",
          "schema": {
            "generatedName": "EvaluatorsListRequestUserFilter",
            "title": "User filter",
            "description": "Case-insensitive filter for users in the Evaluator. This filter matches against both email address and name of users.",
            "value": {
              "description": "Case-insensitive filter for users in the Evaluator. This filter matches against both email address and name of users.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorsListRequestUserFilter",
              "title": "User filter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Field to sort Evaluators by",
          "name": "sort_by",
          "schema": {
            "generatedName": "EvaluatorsListRequestSortBy",
            "description": "Field to sort Evaluators by",
            "value": {
              "generatedName": "EvaluatorsListRequestSortBy",
              "schema": "ProjectSortBy",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Direction to sort by.",
          "name": "order",
          "schema": {
            "generatedName": "EvaluatorsListRequestOrder",
            "description": "Direction to sort by.",
            "value": {
              "generatedName": "EvaluatorsListRequestOrder",
              "schema": "SortOrder",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "EvaluatorsListRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluatorsListResponse",
          "schema": "ListEvaluators",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of Evaluators.",
      "authed": true,
      "method": "GET",
      "path": "/evaluators",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "directory_id": {
                          "value": {
                            "value": "directory_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "spec": {
                          "value": {
                            "value": {
                              "arguments_type": {
                                "value": "target_free",
                                "type": "enum"
                              },
                              "return_type": {
                                "value": "boolean",
                                "type": "enum"
                              },
                              "evaluator_type": {
                                "value": {
                                  "value": "llm",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "version_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "total_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create Evaluator",
      "audiences": [],
      "operationId": "Evaluators_create",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluatorsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "EvaluatorsCreateRequest",
          "schema": "src__external__app__models__v5__evaluators__EvaluatorRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluatorsCreateResponse",
          "schema": "EvaluatorResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create an Evaluator.\n\nEvaluators have immutable versions. When you call this endpoint\nwith the same Evaluator name but different spec, a new version of\nthe Evaluator will be created.\n\nIf you provide a commit message, then the new version will be committed;\notherwise it will be uncommitted. If you try to commit an already committed version,\nan exception will be raised.",
      "authed": true,
      "method": "POST",
      "path": "/evaluators",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "spec": {
                "value": {
                  "value": {
                    "arguments_type": {
                      "value": "target_free",
                      "type": "enum"
                    },
                    "return_type": {
                      "value": "boolean",
                      "type": "enum"
                    },
                    "evaluator_type": {
                      "value": {
                        "value": "llm",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "spec": {
                  "value": {
                    "value": {
                      "arguments_type": {
                        "value": "target_free",
                        "type": "enum"
                      },
                      "return_type": {
                        "value": "boolean",
                        "type": "enum"
                      },
                      "prompt": {
                        "properties": {
                          "model": {
                            "value": {
                              "value": "model",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "endpoint": {
                            "value": "complete",
                            "type": "enum"
                          },
                          "template": {
                            "value": {
                              "value": "template",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "provider": {
                            "value": "openai",
                            "type": "enum"
                          },
                          "max_tokens": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "temperature": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "top_p": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "stop": {
                            "value": {
                              "value": "stop",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "presence_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "frequency_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "other": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "seed": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "response_format": {
                            "properties": {
                              "type": {
                                "value": {
                                  "value": "json_object",
                                  "type": "string"
                                },
                                "type": "literal"
                              }
                            },
                            "type": "object"
                          },
                          "tools": {
                            "value": [
                              {
                                "properties": {
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "description",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "linked_tools": {
                            "value": [
                              {
                                "value": {
                                  "value": "linked_tools",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "evaluator_type": {
                        "value": {
                          "value": "llm",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Evaluator",
      "audiences": [],
      "operationId": "Evaluators_get",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluator.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluator.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluatorsGetRequestId",
            "title": "Evaluator ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "A specific Version Id  of the Evaluator to retrieve.",
          "name": "version_id",
          "schema": {
            "generatedName": "EvaluatorsGetRequestVersionId",
            "title": "Version Id",
            "description": "A specific Version Id  of the Evaluator to retrieve.",
            "value": {
              "description": "A specific Version Id  of the Evaluator to retrieve.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorsGetRequestVersionId",
              "title": "Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An environment tag to retrieve a deployed Version from.",
          "name": "environment",
          "schema": {
            "generatedName": "EvaluatorsGetRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "An environment tag to retrieve a deployed Version from.",
            "value": {
              "description": "An environment tag to retrieve a deployed Version from.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorsGetRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "EvaluatorsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluatorsGetResponse",
          "schema": "EvaluatorResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve the Evaluator with the given ID.\n\nBy default the deployed version of the Evaluator is returned. Use the query parameters\n`version_id` or `environment` to target a specific version of the Evaluator.",
      "authed": true,
      "method": "GET",
      "path": "/evaluators/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "spec": {
                  "value": {
                    "value": {
                      "arguments_type": {
                        "value": "target_free",
                        "type": "enum"
                      },
                      "return_type": {
                        "value": "boolean",
                        "type": "enum"
                      },
                      "prompt": {
                        "properties": {
                          "model": {
                            "value": {
                              "value": "model",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "endpoint": {
                            "value": "complete",
                            "type": "enum"
                          },
                          "template": {
                            "value": {
                              "value": "template",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "provider": {
                            "value": "openai",
                            "type": "enum"
                          },
                          "max_tokens": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "temperature": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "top_p": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "stop": {
                            "value": {
                              "value": "stop",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "presence_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "frequency_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "other": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "seed": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "response_format": {
                            "properties": {
                              "type": {
                                "value": {
                                  "value": "json_object",
                                  "type": "string"
                                },
                                "type": "literal"
                              }
                            },
                            "type": "object"
                          },
                          "tools": {
                            "value": [
                              {
                                "properties": {
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "description",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "linked_tools": {
                            "value": [
                              {
                                "value": {
                                  "value": "linked_tools",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "evaluator_type": {
                        "value": {
                          "value": "llm",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete Evaluator",
      "audiences": [],
      "operationId": "Evaluators_delete",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluator.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluator.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluatorsDeleteRequestId",
            "title": "Evaluator ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluatorsDeleteRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete the Evaluator with the given ID.",
      "authed": true,
      "method": "DELETE",
      "path": "/evaluators/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update Evaluator",
      "audiences": [],
      "operationId": "Evaluators_update",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluator.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluator.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluatorsUpdateRequestId",
            "title": "Evaluator ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluatorsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "EvaluatorsUpdateRequest",
          "schema": "UpdateEvaluatorRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluatorsUpdateResponse",
          "schema": "EvaluatorResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update the Evaluator with the given ID.",
      "authed": true,
      "method": "PATCH",
      "path": "/evaluators/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "spec": {
                  "value": {
                    "value": {
                      "arguments_type": {
                        "value": "target_free",
                        "type": "enum"
                      },
                      "return_type": {
                        "value": "boolean",
                        "type": "enum"
                      },
                      "prompt": {
                        "properties": {
                          "model": {
                            "value": {
                              "value": "model",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "endpoint": {
                            "value": "complete",
                            "type": "enum"
                          },
                          "template": {
                            "value": {
                              "value": "template",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "provider": {
                            "value": "openai",
                            "type": "enum"
                          },
                          "max_tokens": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "temperature": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "top_p": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "stop": {
                            "value": {
                              "value": "stop",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "presence_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "frequency_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "other": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "seed": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "response_format": {
                            "properties": {
                              "type": {
                                "value": {
                                  "value": "json_object",
                                  "type": "string"
                                },
                                "type": "literal"
                              }
                            },
                            "type": "object"
                          },
                          "tools": {
                            "value": [
                              {
                                "properties": {
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "description",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "linked_tools": {
                            "value": [
                              {
                                "value": {
                                  "value": "linked_tools",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "evaluator_type": {
                        "value": {
                          "value": "llm",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Versions",
      "audiences": [],
      "operationId": "Evaluators_listVersions",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for the Evaluator.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for the Evaluator.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluatorsListVersionsRequestId",
            "title": "Prompt ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
          "name": "status",
          "schema": {
            "generatedName": "EvaluatorsListVersionsRequestStatus",
            "description": "Filter versions by status: 'uncommitted', 'committed'. If no status is provided, all versions are returned.",
            "value": {
              "generatedName": "EvaluatorsListVersionsRequestStatus",
              "schema": "VersionStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
          "name": "environment",
          "schema": {
            "generatedName": "EvaluatorsListVersionsRequestEnvironment",
            "nameOverride": "Environment",
            "title": "Environment",
            "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
            "value": {
              "description": "Filter versions by environment tag. If no environment is provided, all versions are returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorsListVersionsRequestEnvironment",
              "nameOverride": "Environment",
              "title": "Environment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "name": "evaluation_aggregates",
          "schema": {
            "generatedName": "EvaluatorsListVersionsRequestEvaluationAggregates",
            "title": "Evaluation Aggregates",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EvaluatorsListVersionsRequestEvaluationAggregates",
              "title": "Evaluation Aggregates",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "EvaluatorsListVersionsRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluatorsListVersionsResponse",
          "schema": "ListEvaluators",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of all the versions of an Evaluator.",
      "authed": true,
      "method": "GET",
      "path": "/evaluators/{id}/versions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version_id": {
                          "value": {
                            "value": "version_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "directory_id": {
                          "value": {
                            "value": "directory_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environments": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "tag": {
                                  "value": "default",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "created_by": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "email_address": {
                              "value": {
                                "value": "email_address",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "value": "uncommitted",
                          "type": "enum"
                        },
                        "last_used_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "commit_message": {
                          "value": {
                            "value": "commit_message",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "spec": {
                          "value": {
                            "value": {
                              "arguments_type": {
                                "value": "target_free",
                                "type": "enum"
                              },
                              "return_type": {
                                "value": "boolean",
                                "type": "enum"
                              },
                              "evaluator_type": {
                                "value": {
                                  "value": "llm",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "version_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "total_logs_count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deploy",
      "audiences": [],
      "operationId": "deploy_evaluators__id__versions__version_id__deploy_post",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Evaluator.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Evaluator.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployEvaluatorsIdVersionsVersionIdDeployPostRequestId",
            "title": "Evaluator ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Evaluator.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Evaluator.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployEvaluatorsIdVersionsVersionIdDeployPostRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Unique identifier for the Environment to deploy the Version to.",
          "name": "environment_id",
          "schema": {
            "description": "Unique identifier for the Environment to deploy the Version to.",
            "schema": {
              "type": "string"
            },
            "generatedName": "DeployEvaluatorsIdVersionsVersionIdDeployPostRequestEnvironmentId",
            "title": "Environment ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DeployEvaluatorsIdVersionsVersionIdDeployPostRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DeployEvaluatorsIdVersionsVersionIdDeployPostResponse",
          "schema": "EvaluatorResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deploy Evaluator to Environment.\n\nSet the deployed Version for the specified Environment. This Evaluator Version\nwill be used for calls made to the Evaluator in this Environment.",
      "authed": true,
      "method": "POST",
      "path": "/evaluators/{id}/versions/{version_id}/deploy",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "environment_id",
              "value": {
                "value": {
                  "value": "environment_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "spec": {
                  "value": {
                    "value": {
                      "arguments_type": {
                        "value": "target_free",
                        "type": "enum"
                      },
                      "return_type": {
                        "value": "boolean",
                        "type": "enum"
                      },
                      "prompt": {
                        "properties": {
                          "model": {
                            "value": {
                              "value": "model",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "endpoint": {
                            "value": "complete",
                            "type": "enum"
                          },
                          "template": {
                            "value": {
                              "value": "template",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "provider": {
                            "value": "openai",
                            "type": "enum"
                          },
                          "max_tokens": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "temperature": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "top_p": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "stop": {
                            "value": {
                              "value": "stop",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "presence_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "frequency_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "other": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "seed": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "response_format": {
                            "properties": {
                              "type": {
                                "value": {
                                  "value": "json_object",
                                  "type": "string"
                                },
                                "type": "literal"
                              }
                            },
                            "type": "object"
                          },
                          "tools": {
                            "value": [
                              {
                                "properties": {
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "description",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "linked_tools": {
                            "value": [
                              {
                                "value": {
                                  "value": "linked_tools",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "evaluator_type": {
                        "value": {
                          "value": "llm",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Commit",
      "audiences": [],
      "operationId": "Evaluators_commit",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Prompt.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Prompt.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluatorsCommitRequestId",
            "title": "Evaluator ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for the specific version of the Evaluator.",
          "name": "version_id",
          "schema": {
            "description": "Unique identifier for the specific version of the Evaluator.",
            "schema": {
              "type": "string"
            },
            "generatedName": "EvaluatorsCommitRequestVersionId",
            "title": "Version ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluatorsCommitRequest",
      "request": {
        "schema": {
          "generatedName": "EvaluatorsCommitRequest",
          "schema": "CommitRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "EvaluatorsCommitResponse",
          "schema": "EvaluatorResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Commit the Evaluator Version with the given ID.",
      "authed": true,
      "method": "POST",
      "path": "/evaluators/{id}/versions/{version_id}/commit",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version_id",
              "value": {
                "value": {
                  "value": "version_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "commit_message": {
                "value": {
                  "value": "commit_message",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version_id": {
                  "value": {
                    "value": "version_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "directory_id": {
                  "value": {
                    "value": "directory_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environments": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": "default",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "created_by": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "email_address": {
                      "value": {
                        "value": "email_address",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "uncommitted",
                  "type": "enum"
                },
                "last_used_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "commit_message": {
                  "value": {
                    "value": "commit_message",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "spec": {
                  "value": {
                    "value": {
                      "arguments_type": {
                        "value": "target_free",
                        "type": "enum"
                      },
                      "return_type": {
                        "value": "boolean",
                        "type": "enum"
                      },
                      "prompt": {
                        "properties": {
                          "model": {
                            "value": {
                              "value": "model",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "endpoint": {
                            "value": "complete",
                            "type": "enum"
                          },
                          "template": {
                            "value": {
                              "value": "template",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "provider": {
                            "value": "openai",
                            "type": "enum"
                          },
                          "max_tokens": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "temperature": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "top_p": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "stop": {
                            "value": {
                              "value": "stop",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "presence_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "frequency_penalty": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          },
                          "other": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "seed": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "response_format": {
                            "properties": {
                              "type": {
                                "value": {
                                  "value": "json_object",
                                  "type": "string"
                                },
                                "type": "literal"
                              }
                            },
                            "type": "object"
                          },
                          "tools": {
                            "value": [
                              {
                                "properties": {
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "description": {
                                    "value": {
                                      "value": "description",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "linked_tools": {
                            "value": [
                              {
                                "value": {
                                  "value": "linked_tools",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "evaluator_type": {
                        "value": {
                          "value": "llm",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                },
                "version_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total_logs_count": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List Default Evaluators",
      "audiences": [],
      "operationId": "Evaluators_listDefault",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvaluatorsListDefaultRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "EvaluatorsListDefaultResponseItem",
            "schema": "EvaluatorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "EvaluatorsListDefaultResponse",
          "title": "Response Evaluators Listdefault",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of default evaluators for the organization.",
      "authed": true,
      "method": "GET",
      "path": "/evaluators/default",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_id": {
                      "value": {
                        "value": "version_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "directory_id": {
                      "value": {
                        "value": "directory_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tag": {
                              "value": "default",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "created_by": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email_address": {
                          "value": {
                            "value": "email_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "value": "uncommitted",
                      "type": "enum"
                    },
                    "last_used_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "commit_message": {
                      "value": {
                        "value": "commit_message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "spec": {
                      "value": {
                        "value": {
                          "arguments_type": {
                            "value": "target_free",
                            "type": "enum"
                          },
                          "return_type": {
                            "value": "boolean",
                            "type": "enum"
                          },
                          "prompt": {
                            "properties": {
                              "model": {
                                "value": {
                                  "value": "model",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "evaluator_type": {
                            "value": {
                              "value": "llm",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "version_logs_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "total_logs_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "inputs": {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Debug",
      "audiences": [],
      "operationId": "debug_evaluators_debug_post",
      "tags": [
        "Evaluators"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DebugEvaluatorsDebugPostRequest",
      "request": {
        "schema": {
          "generatedName": "DebugEvaluatorsDebugPostRequest",
          "schema": "RunSyncEvaluationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "DebugEvaluatorsDebugPostResponseItem",
            "schema": "EvaluationDebugResultResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "DebugEvaluatorsDebugPostResponse",
          "title": "Response Debug Evaluators Debug Post",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Run a synchronous evaluator execution on a collection of datapoints.",
      "authed": true,
      "method": "POST",
      "path": "/evaluators/debug",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "file_id": {
                "value": {
                  "value": "file_id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "evaluator": {
                "value": {
                  "value": {
                    "arguments_type": {
                      "value": "target_free",
                      "type": "enum"
                    },
                    "return_type": {
                      "value": "boolean",
                      "type": "enum"
                    },
                    "evaluator_type": {
                      "value": {
                        "value": "llm",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "log_id": {
                      "value": {
                        "value": "log_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "log": {
                      "properties": {
                        "project": {
                          "value": {
                            "value": "project",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "project_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "session_id": {
                          "value": {
                            "value": "session_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "session_reference_id": {
                          "value": {
                            "value": "session_reference_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_id": {
                          "value": {
                            "value": "parent_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_reference_id": {
                          "value": {
                            "value": "parent_reference_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "source": {
                          "value": {
                            "value": "source",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadata": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "save": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "source_datapoint_id": {
                          "value": {
                            "value": "source_datapoint_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reference_id": {
                          "value": {
                            "value": "reference_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trial_id": {
                          "value": {
                            "value": "trial_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "output": {
                          "value": {
                            "value": "output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "judgment": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "config_id": {
                          "value": {
                            "value": "config_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "config": {
                          "value": {
                            "value": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "model": {
                                "value": {
                                  "value": "model",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": {
                                "value": {
                                  "value": "model",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "environment": {
                          "value": {
                            "value": "environment",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "feedback": {
                          "value": [
                            {
                              "properties": {
                                "type": {
                                  "value": "rating",
                                  "type": "enum"
                                },
                                "value": {
                                  "value": {
                                    "value": 1.1,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "duration": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_message": {
                          "properties": {
                            "role": {
                              "value": "user",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "prompt_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "prompt_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "provider_request": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "provider_response": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider_latency": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "raw_output": {
                          "value": {
                            "value": "raw_output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "finish_reason": {
                          "value": {
                            "value": "finish_reason",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metric_values": {
                          "value": [
                            {
                              "properties": {
                                "metric_id": {
                                  "value": {
                                    "value": "metric_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "metric_name": {
                                  "value": {
                                    "value": "metric_name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "metric_value": {
                                  "value": {
                                    "value": 1.1,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tools": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "signature": {
                                  "value": {
                                    "value": "signature",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "result": {
                                  "value": {
                                    "value": "result",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tool_choice": {
                          "value": {
                            "value": "none",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "evaluation_results": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "evaluator_id": {
                                  "value": {
                                    "value": "evaluator_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "evaluator_version_id": {
                                  "value": {
                                    "value": "evaluator_version_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "log_id": {
                                  "value": {
                                    "value": "log_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "updated_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "observability_status": {
                          "value": "pending",
                          "type": "enum"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "batch_ids": {
                          "value": [
                            {
                              "value": {
                                "value": "batch_ids",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "datapoint_id": {
                      "value": {
                        "value": "datapoint_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "llm_evaluation_log": {
                      "properties": {
                        "project": {
                          "value": {
                            "value": "project",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "project_id": {
                          "value": {
                            "value": "project_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "session_id": {
                          "value": {
                            "value": "session_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "session_reference_id": {
                          "value": {
                            "value": "session_reference_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_id": {
                          "value": {
                            "value": "parent_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_reference_id": {
                          "value": {
                            "value": "parent_reference_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "source": {
                          "value": {
                            "value": "source",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadata": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "save": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "source_datapoint_id": {
                          "value": {
                            "value": "source_datapoint_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reference_id": {
                          "value": {
                            "value": "reference_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trial_id": {
                          "value": {
                            "value": "trial_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "output": {
                          "value": {
                            "value": "output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "judgment": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "config_id": {
                          "value": {
                            "value": "config_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "config": {
                          "value": {
                            "value": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "model": {
                                "value": {
                                  "value": "model",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": {
                                "value": {
                                  "value": "model",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "environment": {
                          "value": {
                            "value": "environment",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "feedback": {
                          "value": [
                            {
                              "properties": {
                                "type": {
                                  "value": "rating",
                                  "type": "enum"
                                },
                                "value": {
                                  "value": {
                                    "value": 1.1,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "duration": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_message": {
                          "properties": {
                            "role": {
                              "value": "user",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "prompt_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "prompt_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "provider_request": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "provider_response": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider_latency": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "raw_output": {
                          "value": {
                            "value": "raw_output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "finish_reason": {
                          "value": {
                            "value": "finish_reason",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metric_values": {
                          "value": [
                            {
                              "properties": {
                                "metric_id": {
                                  "value": {
                                    "value": "metric_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "metric_name": {
                                  "value": {
                                    "value": "metric_name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "metric_value": {
                                  "value": {
                                    "value": 1.1,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tools": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "signature": {
                                  "value": {
                                    "value": "signature",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "result": {
                                  "value": {
                                    "value": "result",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tool_choice": {
                          "value": {
                            "value": "none",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "evaluation_results": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "evaluator_id": {
                                  "value": {
                                    "value": "evaluator_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "evaluator_version_id": {
                                  "value": {
                                    "value": "evaluator_version_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "log_id": {
                                  "value": {
                                    "value": "log_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "updated_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                },
                                "created_at": {
                                  "value": {
                                    "value": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "observability_status": {
                          "value": "pending",
                          "type": "enum"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "batch_ids": {
                          "value": [
                            {
                              "value": {
                                "value": "batch_ids",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "value": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "error": {
                      "value": {
                        "value": "error",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List",
      "audiences": [],
      "operationId": "list_logs_for_file_logs_get",
      "tags": [
        "Logs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Unique identifier for the File to list Logs for.",
          "name": "file_id",
          "schema": {
            "description": "Unique identifier for the File to list Logs for.",
            "schema": {
              "type": "string"
            },
            "generatedName": "ListLogsForFileLogsGetRequestFileId",
            "title": "File ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page number for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestPage",
            "title": "Page number",
            "description": "Page number for pagination.",
            "value": {
              "description": "Page number for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "ListLogsForFileLogsGetRequestPage",
              "title": "Page number",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Logs to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestSize",
            "title": "Page size",
            "description": "Page size for pagination. Number of Logs to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Logs to fetch.",
              "schema": {
                "default": 10,
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "ListLogsForFileLogsGetRequestSize",
              "title": "Page size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only Logs belonging to the specified Version will be returned.",
          "name": "version_id",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestVersionId",
            "title": "Version ID",
            "description": "If provided, only Logs belonging to the specified Version will be returned.",
            "value": {
              "description": "If provided, only Logs belonging to the specified Version will be returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListLogsForFileLogsGetRequestVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only Logs belonging to Versions with the specified status will be returned.",
          "name": "version_status",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestVersionStatus",
            "description": "If provided, only Logs belonging to Versions with the specified status will be returned.",
            "value": {
              "generatedName": "ListLogsForFileLogsGetRequestVersionStatus",
              "schema": "VersionStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only Logs that contain the provided string in its inputs and output will be returned.",
          "name": "search",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestSearch",
            "nameOverride": "Search",
            "title": "Search",
            "description": "If provided, only Logs that contain the provided string in its inputs and output will be returned.",
            "value": {
              "description": "If provided, only Logs that contain the provided string in its inputs and output will be returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListLogsForFileLogsGetRequestSearch",
              "nameOverride": "Search",
              "title": "Search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only Logs that contain the provided string in its metadata will be returned.",
          "name": "metadata_search",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestMetadataSearch",
            "title": "Metadata search",
            "description": "If provided, only Logs that contain the provided string in its metadata will be returned.",
            "value": {
              "description": "If provided, only Logs that contain the provided string in its metadata will be returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListLogsForFileLogsGetRequestMetadataSearch",
              "title": "Metadata search",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only Logs created after the specified date will be returned.",
          "name": "start_date",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestStartDate",
            "title": "Start date",
            "description": "If provided, only Logs created after the specified date will be returned.",
            "value": {
              "description": "If provided, only Logs created after the specified date will be returned.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListLogsForFileLogsGetRequestStartDate",
              "title": "Start date",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If provided, only Logs created before the specified date will be returned.",
          "name": "end_date",
          "schema": {
            "generatedName": "ListLogsForFileLogsGetRequestEndDate",
            "title": "End date",
            "description": "If provided, only Logs created before the specified date will be returned.",
            "value": {
              "description": "If provided, only Logs created before the specified date will be returned.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListLogsForFileLogsGetRequestEndDate",
              "title": "End date",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListLogsForFileLogsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ListLogsForFileLogsGetResponse",
          "schema": "PaginatedData_PromptLogResponse_",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List Logs.",
      "authed": true,
      "method": "GET",
      "path": "/logs",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "file_id",
              "value": {
                "value": {
                  "value": "file_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "output_message": {
                          "properties": {
                            "role": {
                              "value": "user",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "prompt_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "prompt_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "finish_reason": {
                          "value": {
                            "value": "finish_reason",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "prompt": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "model": {
                              "value": {
                                "value": "model",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tool_choice": {
                          "value": {
                            "value": "none",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "output": {
                          "value": {
                            "value": "output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "raw_output": {
                          "value": {
                            "value": "raw_output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider_latency": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "provider_request": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "provider_response": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "session_id": {
                          "value": {
                            "value": "session_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_id": {
                          "value": {
                            "value": "parent_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "source": {
                          "value": {
                            "value": "source",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadata": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "save": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "source_datapoint_id": {
                          "value": {
                            "value": "source_datapoint_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "batches": {
                          "value": [
                            {
                              "value": {
                                "value": "batches",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment": {
                          "value": {
                            "value": "environment",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "page": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "size": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete",
      "audiences": [],
      "operationId": "Logs_delete",
      "tags": [
        "Logs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Unique identifiers for the Logs to delete.",
          "name": "id",
          "schema": {
            "description": "Unique identifiers for the Logs to delete.",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "LogsDeleteRequestIdItem",
              "groupName": [],
              "type": "primitive"
            },
            "generatedName": "LogsDeleteRequestId",
            "title": "Log IDs",
            "groupName": [],
            "type": "array"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "LogsDeleteRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete Logs with the given IDs.",
      "authed": true,
      "method": "DELETE",
      "path": "/logs",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Log",
      "audiences": [],
      "operationId": "Logs_get",
      "tags": [
        "Logs"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Log.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Log.",
            "schema": {
              "type": "string"
            },
            "generatedName": "LogsGetRequestId",
            "title": "Log ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "LogsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "LogsGetResponse",
          "schema": "PromptLogResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve the Log with the given ID.",
      "authed": true,
      "method": "GET",
      "path": "/logs/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "output_message": {
                  "properties": {
                    "content": {
                      "value": {
                        "value": "content",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tool_call_id": {
                      "value": {
                        "value": "tool_call_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "role": {
                      "value": "user",
                      "type": "enum"
                    },
                    "tool_calls": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": {
                              "value": {
                                "value": "function",
                                "type": "string"
                              },
                              "type": "literal"
                            },
                            "function": {
                              "properties": {
                                "name": {
                                  "value": {
                                    "value": "name",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "prompt_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "output_tokens": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "prompt_cost": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "output_cost": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "finish_reason": {
                  "value": {
                    "value": "finish_reason",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prompt": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_id": {
                      "value": {
                        "value": "version_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "directory_id": {
                      "value": {
                        "value": "directory_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "environments": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "tag": {
                              "value": "default",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "created_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "created_by": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "email_address": {
                          "value": {
                            "value": "email_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "value": "uncommitted",
                      "type": "enum"
                    },
                    "last_used_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "model": {
                      "value": {
                        "value": "model",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "endpoint": {
                      "value": "complete",
                      "type": "enum"
                    },
                    "template": {
                      "value": {
                        "value": "template",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "provider": {
                      "value": "openai",
                      "type": "enum"
                    },
                    "max_tokens": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "temperature": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "top_p": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "stop": {
                      "value": {
                        "value": "stop",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "presence_penalty": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "frequency_penalty": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "other": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "seed": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "response_format": {
                      "properties": {
                        "type": {
                          "value": {
                            "value": "json_object",
                            "type": "string"
                          },
                          "type": "literal"
                        }
                      },
                      "type": "object"
                    },
                    "tools": {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "description": {
                              "value": {
                                "value": "description",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "linked_tools": {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "description": {
                              "value": {
                                "value": "description",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "commit_message": {
                      "value": {
                        "value": "commit_message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version_logs_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "total_logs_count": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "inputs": {
                      "value": [
                        {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "messages": {
                  "value": [
                    {
                      "properties": {
                        "content": {
                          "value": {
                            "value": "content",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tool_call_id": {
                          "value": {
                            "value": "tool_call_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "user",
                          "type": "enum"
                        },
                        "tool_calls": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": {
                                  "value": {
                                    "value": "function",
                                    "type": "string"
                                  },
                                  "type": "literal"
                                },
                                "function": {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "tool_choice": {
                  "value": {
                    "value": "none",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "output": {
                  "value": {
                    "value": "output",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "raw_output": {
                  "value": {
                    "value": "raw_output",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "error": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "provider_latency": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "provider_request": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "provider_response": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "session_id": {
                  "value": {
                    "value": "session_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parent_id": {
                  "value": {
                    "value": "parent_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "source": {
                  "value": {
                    "value": "source",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metadata": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "save": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "source_datapoint_id": {
                  "value": {
                    "value": "source_datapoint_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "batches": {
                  "value": [
                    {
                      "value": {
                        "value": "batches",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "user": {
                  "value": {
                    "value": "user",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "environment": {
                  "value": {
                    "value": "environment",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get",
      "audiences": [],
      "operationId": "Sessions_get",
      "tags": [
        "Sessions"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Session.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Session.",
            "schema": {
              "type": "string"
            },
            "generatedName": "SessionsGetRequestId",
            "title": "Session ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SessionsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "SessionsGetResponse",
          "schema": "SessionResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve the Session with the given ID.",
      "authed": true,
      "method": "GET",
      "path": "/sessions/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "logs": {
                  "value": [
                    {
                      "properties": {
                        "output_message": {
                          "properties": {
                            "role": {
                              "value": "user",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        },
                        "prompt_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "output_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "prompt_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "output_cost": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "finish_reason": {
                          "value": {
                            "value": "finish_reason",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "prompt": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_id": {
                              "value": {
                                "value": "version_id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "status": {
                              "value": "uncommitted",
                              "type": "enum"
                            },
                            "last_used_at": {
                              "value": {
                                "value": "2024-01-15T09:30:00Z",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "model": {
                              "value": {
                                "value": "model",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "total_logs_count": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "inputs": {
                              "value": [
                                {
                                  "properties": {
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "messages": {
                          "value": [
                            {
                              "properties": {
                                "role": {
                                  "value": "user",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "tool_choice": {
                          "value": {
                            "value": "none",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "output": {
                          "value": {
                            "value": "output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "raw_output": {
                          "value": {
                            "value": "raw_output",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "error": {
                          "value": {
                            "value": "error",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider_latency": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "provider_request": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "provider_response": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "session_id": {
                          "value": {
                            "value": "session_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "parent_id": {
                          "value": {
                            "value": "parent_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inputs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "source": {
                          "value": {
                            "value": "source",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "metadata": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "save": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "source_datapoint_id": {
                          "value": {
                            "value": "source_datapoint_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "batches": {
                          "value": [
                            {
                              "value": {
                                "value": "batches",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "user": {
                          "value": {
                            "value": "user",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "environment": {
                          "value": {
                            "value": "environment",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete",
      "audiences": [],
      "operationId": "Sessions_delete",
      "tags": [
        "Sessions"
      ],
      "pathParameters": [
        {
          "description": "Unique identifier for Session.",
          "name": "id",
          "schema": {
            "description": "Unique identifier for Session.",
            "schema": {
              "type": "string"
            },
            "generatedName": "SessionsDeleteRequestId",
            "title": "Session ID",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SessionsDeleteRequest",
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete the Session with the given ID.",
      "authed": true,
      "method": "DELETE",
      "path": "/sessions/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List ",
      "audiences": [],
      "operationId": "Sessions_list",
      "tags": [
        "Sessions"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Unique identifier for File to return Sessions for. Sessions that contain any Logs associated to this File will be returned.",
          "name": "file_id",
          "schema": {
            "generatedName": "SessionsListRequestFileId",
            "title": "File ID",
            "description": "Unique identifier for File to return Sessions for. Sessions that contain any Logs associated to this File will be returned.",
            "value": {
              "description": "Unique identifier for File to return Sessions for. Sessions that contain any Logs associated to this File will be returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SessionsListRequestFileId",
              "title": "File ID",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Unique identifier for Version to return Sessions for. Sessions that contain any Logs associated to this Version will be returned.",
          "name": "version_id",
          "schema": {
            "generatedName": "SessionsListRequestVersionId",
            "title": "Version ID",
            "description": "Unique identifier for Version to return Sessions for. Sessions that contain any Logs associated to this Version will be returned.",
            "value": {
              "description": "Unique identifier for Version to return Sessions for. Sessions that contain any Logs associated to this Version will be returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SessionsListRequestVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page number for pagination.",
          "name": "page",
          "schema": {
            "generatedName": "SessionsListRequestPage",
            "nameOverride": "Page",
            "title": "Page",
            "description": "Page number for pagination.",
            "value": {
              "description": "Page number for pagination.",
              "schema": {
                "default": 1,
                "minimum": 1,
                "type": "int"
              },
              "generatedName": "SessionsListRequestPage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Page size for pagination. Number of Sessions to fetch.",
          "name": "size",
          "schema": {
            "generatedName": "SessionsListRequestSize",
            "nameOverride": "Size",
            "title": "Size",
            "description": "Page size for pagination. Number of Sessions to fetch.",
            "value": {
              "description": "Page size for pagination. Number of Sessions to fetch.",
              "schema": {
                "default": 10,
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "SessionsListRequestSize",
              "nameOverride": "Size",
              "title": "Size",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SessionsListRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "SessionsListResponse",
          "schema": "PaginatedData_SessionResponse_",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get a list of Sessions.",
      "authed": true,
      "method": "GET",
      "path": "/sessions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "records": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "logs": {
                          "value": [
                            {
                              "properties": {
                                "prompt": {
                                  "properties": {
                                    "id": {
                                      "value": {
                                        "value": "id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "name": {
                                      "value": {
                                        "value": "name",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "version_id": {
                                      "value": {
                                        "value": "version_id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "created_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "updated_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "status": {
                                      "value": "uncommitted",
                                      "type": "enum"
                                    },
                                    "last_used_at": {
                                      "value": {
                                        "value": "2024-01-15T09:30:00Z",
                                        "type": "datetime"
                                      },
                                      "type": "primitive"
                                    },
                                    "model": {
                                      "value": {
                                        "value": "model",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "version_logs_count": {
                                      "value": {
                                        "value": 1,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    },
                                    "total_logs_count": {
                                      "value": {
                                        "value": 1,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    },
                                    "inputs": {
                                      "value": [
                                        {
                                          "properties": {
                                            "name": {
                                              "value": {
                                                "value": "name",
                                                "type": "string"
                                              },
                                              "type": "primitive"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ],
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "page": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "size": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channels": {},
  "groupedSchemas": {
    "rootSchemas": {
      "AgentConfigResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "agentConfigResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of config. Starts with `config_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AgentConfigResponseId",
              "title": "Config ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseOther",
            "key": "other",
            "schema": {
              "generatedName": "agentConfigResponseOther",
              "nameOverride": "AgentConfigResponse",
              "title": "AgentConfigResponse",
              "value": {
                "description": "Other parameters that define the config.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AgentConfigResponseOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "AgentConfigResponseOtherValue",
                  "type": "unknown"
                },
                "generatedName": "AgentConfigResponseOther",
                "title": "Other parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "agentConfigResponseCreatedBy",
              "nameOverride": "AgentConfigResponse",
              "title": "AgentConfigResponse",
              "value": {
                "description": "The user who created the config.",
                "generatedName": "AgentConfigResponseCreatedBy",
                "schema": "src__external__app__models__v4__orgs__base_models__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseStatus",
            "key": "status",
            "schema": {
              "description": "Whether the config is committed or not.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AgentConfigResponseStatus",
              "nameOverride": "Status",
              "title": "Status",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseName",
            "key": "name",
            "schema": {
              "description": "Name of config.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AgentConfigResponseName",
              "title": "Config name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseDescription",
            "key": "description",
            "schema": {
              "generatedName": "agentConfigResponseDescription",
              "nameOverride": "AgentConfigResponse",
              "title": "AgentConfigResponse",
              "value": {
                "description": "Description of config.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AgentConfigResponseDescription",
                "title": "Config description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseAgentClass",
            "key": "agent_class",
            "schema": {
              "description": "Class of the agent.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AgentConfigResponseAgentClass",
              "title": "Agent class",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseTools",
            "key": "tools",
            "schema": {
              "generatedName": "agentConfigResponseTools",
              "nameOverride": "AgentConfigResponse",
              "title": "AgentConfigResponse",
              "value": {
                "description": "Tools associated with the agent.",
                "value": {
                  "generatedName": "AgentConfigResponseToolsItem",
                  "schema": "ToolConfigRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AgentConfigResponseTools",
                "nameOverride": "Tools",
                "title": "Tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "agentConfigResponseModelConfig",
            "key": "model_config",
            "schema": {
              "description": "Model config associated with the agent.",
              "generatedName": "AgentConfigResponseModelConfig",
              "schema": "ModelConfigRequest",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AgentConfigResponse",
        "nameOverride": "AgentConfigResponse",
        "title": "AgentConfigResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Body_Evaluations_updateStatus": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bodyEvaluationsUpdateStatusStatus",
            "key": "status",
            "schema": {
              "generatedName": "BodyEvaluationsUpdateStatusStatus",
              "schema": "EvaluationStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BodyEvaluationsUpdateStatus",
        "title": "Body_Evaluations_updateStatus",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BooleanEvaluatorVersionStats": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "booleanEvaluatorVersionStatsEvaluatorVersionId",
            "key": "evaluator_version_id",
            "schema": {
              "description": "Unique identifier for the Evaluator Version.",
              "schema": {
                "type": "string"
              },
              "generatedName": "BooleanEvaluatorVersionStatsEvaluatorVersionId",
              "title": "Evaluator Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanEvaluatorVersionStatsTotalLogs",
            "key": "total_logs",
            "schema": {
              "description": "The total number of Logs generated by this Evaluator Version on the Evaluated Version's Logs. This includes Nulls and Errors.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BooleanEvaluatorVersionStatsTotalLogs",
              "title": "Total Evaluator Logs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanEvaluatorVersionStatsNumJudgments",
            "key": "num_judgments",
            "schema": {
              "description": "The total number of Evaluator judgments for this Evaluator Version. This excludes Nulls and Errors.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BooleanEvaluatorVersionStatsNumJudgments",
              "title": "Number of Judgments",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanEvaluatorVersionStatsNumNulls",
            "key": "num_nulls",
            "schema": {
              "description": "The total number of null judgments (i.e. abstentions) for this Evaluator Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BooleanEvaluatorVersionStatsNumNulls",
              "title": "Number of Nulls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanEvaluatorVersionStatsNumErrors",
            "key": "num_errors",
            "schema": {
              "description": "The total number of errored Evaluators for this Evaluator Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BooleanEvaluatorVersionStatsNumErrors",
              "title": "Number of Errors",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanEvaluatorVersionStatsNumTrue",
            "key": "num_true",
            "schema": {
              "description": "The total number of `True` judgments for this Evaluator Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BooleanEvaluatorVersionStatsNumTrue",
              "title": "Number of True",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "booleanEvaluatorVersionStatsNumFalse",
            "key": "num_false",
            "schema": {
              "description": "The total number of `False` judgments for this Evaluator Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BooleanEvaluatorVersionStatsNumFalse",
              "title": "Number of False",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Base attributes for stats for an Evaluator Version-Evaluated Version pair\nin the Evaluation Report.",
        "generatedName": "BooleanEvaluatorVersionStats",
        "nameOverride": "BooleanEvaluatorVersionStats",
        "title": "BooleanEvaluatorVersionStats",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CategoricalFeedbackLabel": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "categoricalFeedbackLabelValue",
            "key": "value",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "CategoricalFeedbackLabelValue",
              "title": "Label value",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "categoricalFeedbackLabelSentiment",
            "key": "sentiment",
            "schema": {
              "description": "Whether the feedback sentiment is positive or negative.",
              "generatedName": "CategoricalFeedbackLabelSentiment",
              "schema": "LabelSentiment",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "categoricalFeedbackLabelStatus",
            "key": "status",
            "schema": {
              "description": "Whether the feedback label is active or inactive.",
              "generatedName": "CategoricalFeedbackLabelStatus",
              "schema": "FeedbackLabelStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CategoricalFeedbackLabel",
        "nameOverride": "CategoricalFeedbackLabel",
        "title": "CategoricalFeedbackLabel",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChatMessage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "chatMessageContent",
            "key": "content",
            "schema": {
              "generatedName": "chatMessageContent",
              "nameOverride": "ChatMessage",
              "title": "ChatMessage",
              "value": {
                "generatedName": "ChatMessageContent",
                "nameOverride": "Content",
                "title": "Content",
                "description": "The content of the message.",
                "value": {
                  "value": {
                    "description": "The content of the message.",
                    "generatedName": "ChatMessageContent",
                    "title": "Content",
                    "nameOverride": "Content",
                    "schemas": [
                      {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "ChatMessageContent",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "value": {
                          "value": {
                            "commonProperties": [],
                            "discriminantProperty": "type",
                            "generatedName": "ChatMessageContentItem",
                            "schemas": {
                              "text": {
                                "generatedName": "ComponentsSchemasTextChatContent",
                                "schema": "TextChatContent",
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "reference"
                              },
                              "image_url": {
                                "generatedName": "ComponentsSchemasImageChatContent",
                                "schema": "ImageChatContent",
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "reference"
                              }
                            },
                            "groupName": [],
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "generatedName": "ChatMessageContent",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageName",
            "key": "name",
            "schema": {
              "generatedName": "chatMessageName",
              "nameOverride": "ChatMessage",
              "title": "ChatMessage",
              "value": {
                "generatedName": "ChatMessageName",
                "nameOverride": "Name",
                "title": "Name",
                "description": "Optional name of the message author.",
                "value": {
                  "description": "Optional name of the message author.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ChatMessageName",
                  "nameOverride": "Name",
                  "title": "Name",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageToolCallId",
            "key": "tool_call_id",
            "schema": {
              "generatedName": "chatMessageToolCallId",
              "nameOverride": "ChatMessage",
              "title": "ChatMessage",
              "value": {
                "generatedName": "ChatMessageToolCallId",
                "title": "Tool call id",
                "description": "Tool call that this message is responding to.",
                "value": {
                  "description": "Tool call that this message is responding to.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ChatMessageToolCallId",
                  "title": "Tool call id",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageRole",
            "key": "role",
            "schema": {
              "description": "Role of the message author.",
              "generatedName": "ChatMessageRole",
              "schema": "ChatRole",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageToolCalls",
            "key": "tool_calls",
            "schema": {
              "generatedName": "chatMessageToolCalls",
              "nameOverride": "ChatMessage",
              "title": "ChatMessage",
              "value": {
                "generatedName": "ChatMessageToolCalls",
                "title": "Tool calls",
                "description": "A list of tool calls requested by the assistant.",
                "value": {
                  "description": "A list of tool calls requested by the assistant.",
                  "value": {
                    "generatedName": "ChatMessageToolCallsItem",
                    "schema": "ToolCall",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ChatMessageToolCalls",
                  "title": "Tool calls",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ChatMessage",
        "nameOverride": "ChatMessage",
        "title": "ChatMessage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChatMessageWithToolCall": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "chatMessageWithToolCallContent",
            "key": "content",
            "schema": {
              "generatedName": "chatMessageWithToolCallContent",
              "nameOverride": "ChatMessageWithToolCall",
              "title": "ChatMessageWithToolCall",
              "value": {
                "generatedName": "ChatMessageWithToolCallContent",
                "nameOverride": "Content",
                "title": "Content",
                "description": "The content of the message.",
                "value": {
                  "value": {
                    "description": "The content of the message.",
                    "generatedName": "ChatMessageWithToolCallContent",
                    "title": "Content",
                    "nameOverride": "Content",
                    "schemas": [
                      {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "ChatMessageWithToolCallContent",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "value": {
                          "value": {
                            "commonProperties": [],
                            "discriminantProperty": "type",
                            "generatedName": "ChatMessageWithToolCallContentItem",
                            "schemas": {
                              "text": {
                                "generatedName": "ComponentsSchemasTextChatContent",
                                "schema": "TextChatContent",
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "reference"
                              },
                              "image_url": {
                                "generatedName": "ComponentsSchemasImageChatContent",
                                "schema": "ImageChatContent",
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "reference"
                              }
                            },
                            "groupName": [],
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "generatedName": "ChatMessageWithToolCallContent",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageWithToolCallName",
            "key": "name",
            "schema": {
              "generatedName": "chatMessageWithToolCallName",
              "nameOverride": "ChatMessageWithToolCall",
              "title": "ChatMessageWithToolCall",
              "value": {
                "generatedName": "ChatMessageWithToolCallName",
                "nameOverride": "Name",
                "title": "Name",
                "description": "Optional name of the message author.",
                "value": {
                  "description": "Optional name of the message author.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ChatMessageWithToolCallName",
                  "nameOverride": "Name",
                  "title": "Name",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageWithToolCallToolCallId",
            "key": "tool_call_id",
            "schema": {
              "generatedName": "chatMessageWithToolCallToolCallId",
              "nameOverride": "ChatMessageWithToolCall",
              "title": "ChatMessageWithToolCall",
              "value": {
                "generatedName": "ChatMessageWithToolCallToolCallId",
                "title": "Tool call id",
                "description": "Tool call that this message is responding to.",
                "value": {
                  "description": "Tool call that this message is responding to.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ChatMessageWithToolCallToolCallId",
                  "title": "Tool call id",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageWithToolCallRole",
            "key": "role",
            "schema": {
              "description": "Role of the message author.",
              "generatedName": "ChatMessageWithToolCallRole",
              "schema": "ChatRole",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageWithToolCallToolCalls",
            "key": "tool_calls",
            "schema": {
              "generatedName": "chatMessageWithToolCallToolCalls",
              "nameOverride": "ChatMessageWithToolCall",
              "title": "ChatMessageWithToolCall",
              "value": {
                "generatedName": "ChatMessageWithToolCallToolCalls",
                "title": "Tool calls",
                "description": "A list of tool calls requested by the assistant.",
                "value": {
                  "description": "A list of tool calls requested by the assistant.",
                  "value": {
                    "generatedName": "ChatMessageWithToolCallToolCallsItem",
                    "schema": "ToolCall",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "ChatMessageWithToolCallToolCalls",
                  "title": "Tool calls",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageWithToolCallToolCall",
            "key": "tool_call",
            "schema": {
              "generatedName": "chatMessageWithToolCallToolCall",
              "nameOverride": "ChatMessageWithToolCall",
              "title": "ChatMessageWithToolCall",
              "availability": "Deprecated",
              "value": {
                "generatedName": "ChatMessageWithToolCallToolCall",
                "description": "NB: Deprecated in favour of tool_calls. A tool call requested by the assistant.",
                "value": {
                  "generatedName": "ChatMessageWithToolCallToolCall",
                  "schema": "FunctionTool",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ChatMessageWithToolCall",
        "nameOverride": "ChatMessageWithToolCall",
        "title": "ChatMessageWithToolCall",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChatRole": {
        "description": "An enumeration.",
        "generatedName": "ChatRole",
        "nameOverride": "ChatRole",
        "title": "ChatRole",
        "values": [
          {
            "generatedName": "user",
            "value": "user",
            "casing": {}
          },
          {
            "generatedName": "assistant",
            "value": "assistant",
            "casing": {}
          },
          {
            "generatedName": "system",
            "value": "system",
            "casing": {}
          },
          {
            "generatedName": "tool",
            "value": "tool",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CodeEvaluatorRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "codeEvaluatorRequestArgumentsType",
            "key": "arguments_type",
            "schema": {
              "description": "Whether this evaluator is target-free or target-required.",
              "generatedName": "CodeEvaluatorRequestArgumentsType",
              "schema": "EvaluatorArgumentsType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "codeEvaluatorRequestReturnType",
            "key": "return_type",
            "schema": {
              "description": "The type of the return value of the evaluator.",
              "generatedName": "CodeEvaluatorRequestReturnType",
              "schema": "EvaluatorReturnTypeEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "codeEvaluatorRequestCode",
            "key": "code",
            "schema": {
              "generatedName": "codeEvaluatorRequestCode",
              "nameOverride": "CodeEvaluatorRequest",
              "title": "CodeEvaluatorRequest",
              "value": {
                "description": "The code for the evaluator. This code will be executed in a sandboxed environment.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CodeEvaluatorRequestCode",
                "nameOverride": "Code",
                "title": "Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CodeEvaluatorRequest",
        "nameOverride": "CodeEvaluatorRequest",
        "title": "CodeEvaluatorRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CommitRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "commitRequestCommitMessage",
            "key": "commit_message",
            "schema": {
              "description": "Message describing the changes made.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CommitRequestCommitMessage",
              "title": "Commit message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CommitRequest",
        "nameOverride": "CommitRequest",
        "title": "CommitRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConfigResponse": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "ConfigResponse",
          "title": "ConfigResponse",
          "nameOverride": "ConfigResponse",
          "schemas": {
            "model": {
              "generatedName": "ComponentsSchemasModelConfigResponse",
              "schema": "ModelConfigResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "tool": {
              "generatedName": "ComponentsSchemasToolConfigResponse",
              "schema": "ToolConfigResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "evaluator": {
              "generatedName": "ComponentsSchemasEvaluatorConfigResponse",
              "schema": "EvaluatorConfigResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "agent": {
              "generatedName": "ComponentsSchemasAgentConfigResponse",
              "schema": "AgentConfigResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "generic": {
              "generatedName": "ComponentsSchemasGenericConfigResponse",
              "schema": "GenericConfigResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "CreateDatapointRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createDatapointRequestInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "createDatapointRequestInputs",
              "nameOverride": "CreateDatapointRequest",
              "title": "CreateDatapointRequest",
              "value": {
                "description": "The inputs to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CreateDatapointRequestInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CreateDatapointRequestInputsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CreateDatapointRequestInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDatapointRequestMessages",
            "key": "messages",
            "schema": {
              "generatedName": "createDatapointRequestMessages",
              "nameOverride": "CreateDatapointRequest",
              "title": "CreateDatapointRequest",
              "value": {
                "description": "List of chat messages to provide to the model.",
                "value": {
                  "generatedName": "CreateDatapointRequestMessagesItem",
                  "schema": "ChatMessage",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CreateDatapointRequestMessages",
                "title": "Chat messages",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createDatapointRequestTarget",
            "key": "target",
            "schema": {
              "generatedName": "createDatapointRequestTarget",
              "nameOverride": "CreateDatapointRequest",
              "title": "CreateDatapointRequest",
              "value": {
                "description": "Object with criteria necessary to evaluate generations with this Datapoint. This is passed in as an argument to Evaluators when used in an Evaluation.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CreateDatapointRequestTargetKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "value": {
                    "generatedName": "CreateDatapointRequestTargetValue",
                    "schemas": [
                      {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "CreateDatapointRequestTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "schema": {
                          "type": "int"
                        },
                        "generatedName": "CreateDatapointRequestTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "schema": {
                          "type": "double"
                        },
                        "generatedName": "CreateDatapointRequestTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "schema": {
                          "type": "boolean"
                        },
                        "generatedName": "CreateDatapointRequestTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "key": {
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "CreateDatapointRequestTargetValueFourKey",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "value": {
                          "generatedName": "CreateDatapointRequestTargetValueFourValue",
                          "type": "unknown"
                        },
                        "generatedName": "CreateDatapointRequestTargetValueFour",
                        "groupName": [],
                        "type": "map"
                      },
                      {
                        "value": {
                          "generatedName": "CreateDatapointRequestTargetValueItem",
                          "type": "unknown"
                        },
                        "generatedName": "CreateDatapointRequestTargetValue",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "inline": true,
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "CreateDatapointRequestTarget",
                "title": "Target",
                "nameOverride": "Target",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateDatapointRequest",
        "nameOverride": "CreateDatapointRequest",
        "title": "CreateDatapointRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateEvaluationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createEvaluationRequestDataset",
            "key": "dataset",
            "schema": {
              "description": "The Dataset Version to use in this Evaluation.",
              "generatedName": "CreateEvaluationRequestDataset",
              "schema": "src__external__app__models__v5__evaluations__DatasetRequest",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createEvaluationRequestEvaluatees",
            "key": "evaluatees",
            "schema": {
              "description": "Unique identifiers for the Prompt/Tool Versions to include in the Evaluation Report.",
              "value": {
                "generatedName": "CreateEvaluationRequestEvaluateesItem",
                "schema": "EvaluateeRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "CreateEvaluationRequestEvaluatees",
              "title": "Evaluated Version IDs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createEvaluationRequestEvaluators",
            "key": "evaluators",
            "schema": {
              "description": "The Evaluators used to evaluate.",
              "value": {
                "generatedName": "CreateEvaluationRequestEvaluatorsItem",
                "schema": "src__external__app__models__v5__evaluations__EvaluatorRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "CreateEvaluationRequestEvaluators",
              "nameOverride": "Evaluators",
              "title": "Evaluators",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request model for creating an Evaluation.\n\nEvaluation benchmark your Prompt/Tool Versions. With the Datapoints in a Dataset Version,\nLogs corresponding to the Datapoint and each Evaluated Version are evaluated by the specified Evaluator Versions.\nAggregated statistics are then calculated and presented in the Evaluation.",
        "generatedName": "CreateEvaluationRequest",
        "nameOverride": "CreateEvaluationRequest",
        "title": "CreateEvaluationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreatePromptLogResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createPromptLogResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of log.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreatePromptLogResponseId",
              "title": "Log ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createPromptLogResponsePromptId",
            "key": "prompt_id",
            "schema": {
              "description": "ID of the Prompt the log belongs to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreatePromptLogResponsePromptId",
              "title": "Prompt ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createPromptLogResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "ID of the specific version of the Prompt.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreatePromptLogResponseVersionId",
              "title": "Prompt Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createPromptLogResponseSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "createPromptLogResponseSessionId",
              "nameOverride": "CreatePromptLogResponse",
              "title": "CreatePromptLogResponse",
              "value": {
                "description": "String ID of session the log belongs to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CreatePromptLogResponseSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreatePromptLogResponse",
        "nameOverride": "CreatePromptLogResponse",
        "title": "CreatePromptLogResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateToolLogResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createToolLogResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of log.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateToolLogResponseId",
              "title": "Log ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createToolLogResponseToolId",
            "key": "tool_id",
            "schema": {
              "description": "ID of the Prompt the log belongs to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateToolLogResponseToolId",
              "title": "Tool ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createToolLogResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "ID of the specific version of the Tool.",
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateToolLogResponseVersionId",
              "title": "Tool Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createToolLogResponseSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "createToolLogResponseSessionId",
              "nameOverride": "CreateToolLogResponse",
              "title": "CreateToolLogResponse",
              "value": {
                "description": "String ID of session the log belongs to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CreateToolLogResponseSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateToolLogResponse",
        "nameOverride": "CreateToolLogResponse",
        "title": "CreateToolLogResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DashboardConfiguration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dashboardConfigurationTimeUnit",
            "key": "time_unit",
            "schema": {
              "generatedName": "DashboardConfigurationTimeUnit",
              "schema": "TimeUnit",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "dashboardConfigurationTimeRangeDays",
            "key": "time_range_days",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "DashboardConfigurationTimeRangeDays",
              "title": "Time Range Days",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "dashboardConfigurationModelConfigIds",
            "key": "model_config_ids",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "DashboardConfigurationModelConfigIdsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "DashboardConfigurationModelConfigIds",
              "title": "Model Config Ids",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DashboardConfiguration",
        "nameOverride": "DashboardConfiguration",
        "title": "DashboardConfiguration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DatapointResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "datapointResponseInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "datapointResponseInputs",
              "nameOverride": "DatapointResponse",
              "title": "DatapointResponse",
              "value": {
                "description": "The inputs to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DatapointResponseInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DatapointResponseInputsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "DatapointResponseInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datapointResponseMessages",
            "key": "messages",
            "schema": {
              "generatedName": "datapointResponseMessages",
              "nameOverride": "DatapointResponse",
              "title": "DatapointResponse",
              "value": {
                "description": "List of chat messages to provide to the model.",
                "value": {
                  "generatedName": "DatapointResponseMessagesItem",
                  "schema": "ChatMessage",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DatapointResponseMessages",
                "title": "Chat messages",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datapointResponseTarget",
            "key": "target",
            "schema": {
              "generatedName": "datapointResponseTarget",
              "nameOverride": "DatapointResponse",
              "title": "DatapointResponse",
              "value": {
                "description": "Object with criteria necessary to evaluate generations with this Datapoint. This is passed in as an argument to Evaluators when used in an Evaluation.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DatapointResponseTargetKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "value": {
                    "generatedName": "DatapointResponseTargetValue",
                    "schemas": [
                      {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "DatapointResponseTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "schema": {
                          "type": "int"
                        },
                        "generatedName": "DatapointResponseTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "schema": {
                          "type": "double"
                        },
                        "generatedName": "DatapointResponseTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "schema": {
                          "type": "boolean"
                        },
                        "generatedName": "DatapointResponseTargetValue",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "key": {
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "DatapointResponseTargetValueFourKey",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "value": {
                          "generatedName": "DatapointResponseTargetValueFourValue",
                          "type": "unknown"
                        },
                        "generatedName": "DatapointResponseTargetValueFour",
                        "groupName": [],
                        "type": "map"
                      },
                      {
                        "value": {
                          "generatedName": "DatapointResponseTargetValueItem",
                          "type": "unknown"
                        },
                        "generatedName": "DatapointResponseTargetValue",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "inline": true,
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "DatapointResponseTarget",
                "title": "Target",
                "nameOverride": "Target",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datapointResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Datapoint. Starts with `dp_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatapointResponseId",
              "title": "Datapoint ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DatapointResponse",
        "nameOverride": "DatapointResponse",
        "title": "DatapointResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DatasetResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "datasetResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Dataset. Starts with `ds_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetResponseId",
              "title": "Dataset ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseName",
            "key": "name",
            "schema": {
              "description": "Name of the Dataset, which is used as a unique identifier.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetResponseName",
              "title": "Dataset name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the specific Dataset Version. If no query params provided, the default deployed Dataset Version is returned. Starts with `dsv_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DatasetResponseVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseEnvironments",
            "key": "environments",
            "schema": {
              "generatedName": "datasetResponseEnvironments",
              "nameOverride": "DatasetResponse",
              "title": "DatasetResponse",
              "value": {
                "description": "The list of environments the Dataset Version is deployed to.",
                "value": {
                  "generatedName": "DatasetResponseEnvironmentsItem",
                  "schema": "EnvironmentResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DatasetResponseEnvironments",
                "nameOverride": "Environments",
                "title": "Environments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "DatasetResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "DatasetResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "datasetResponseCreatedBy",
              "nameOverride": "DatasetResponse",
              "title": "DatasetResponse",
              "value": {
                "description": "The user who created the Dataset.",
                "generatedName": "DatasetResponseCreatedBy",
                "schema": "src__external__app__models__v5__users__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseStatus",
            "key": "status",
            "schema": {
              "description": "The status of the Dataset Version.",
              "generatedName": "DatasetResponseStatus",
              "schema": "VersionStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseLastUsedAt",
            "key": "last_used_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "DatasetResponseLastUsedAt",
              "title": "Last Used At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "datasetResponseCommitMessage",
              "nameOverride": "DatasetResponse",
              "title": "DatasetResponse",
              "value": {
                "description": "Message describing the changes made. If provided, a committed version of the Dataset is created. Otherwise, an uncommitted version is created.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DatasetResponseCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseDatapointsCount",
            "key": "datapoints_count",
            "schema": {
              "description": "The number of Datapoints in this Dataset version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "DatasetResponseDatapointsCount",
              "title": "Datapoints count",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "datasetResponseDatapoints",
            "key": "datapoints",
            "schema": {
              "generatedName": "datasetResponseDatapoints",
              "nameOverride": "DatasetResponse",
              "title": "DatasetResponse",
              "value": {
                "description": "The list of Datapoints in this Dataset version. Only provided if explicitly requested.",
                "value": {
                  "generatedName": "DatasetResponseDatapointsItem",
                  "schema": "DatapointResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DatasetResponseDatapoints",
                "nameOverride": "Datapoints",
                "title": "Datapoints",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Base type that all File Responses should inherit from.\n\nAttributes defined here are common to all File Responses and should be overridden\nin the inheriting classes with documentation and appropriate Field definitions.",
        "generatedName": "DatasetResponse",
        "nameOverride": "DatasetResponse",
        "title": "DatasetResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "environmentResponseId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EnvironmentResponseId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EnvironmentResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentResponseName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EnvironmentResponseName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "environmentResponseTag",
            "key": "tag",
            "schema": {
              "generatedName": "EnvironmentResponseTag",
              "schema": "EnvironmentTag",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnvironmentResponse",
        "nameOverride": "EnvironmentResponse",
        "title": "EnvironmentResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentTag": {
        "description": "An enumeration.",
        "generatedName": "EnvironmentTag",
        "nameOverride": "EnvironmentTag",
        "title": "EnvironmentTag",
        "values": [
          {
            "generatedName": "default",
            "value": "default",
            "casing": {}
          },
          {
            "generatedName": "other",
            "value": "other",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EvaluatedVersionResponse": {
        "value": {
          "generatedName": "EvaluatedVersionResponse",
          "title": "EvaluatedVersionResponse",
          "nameOverride": "EvaluatedVersionResponse",
          "schemas": [
            {
              "generatedName": "EvaluatedVersionResponseZero",
              "schema": "PromptResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "EvaluatedVersionResponseOne",
              "schema": "src__external__app__models__v5__tools__ToolResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "EvaluateeRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluateeRequestVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the Prompt/Tool Version to include in the Evaluation Report. Starts with `pv_` for Prompts and `tv_` for Tools.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluateeRequestVersionId",
              "title": "Prompt/Tool Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluateeRequestBatchId",
            "key": "batch_id",
            "schema": {
              "generatedName": "evaluateeRequestBatchId",
              "nameOverride": "EvaluateeRequest",
              "title": "EvaluateeRequest",
              "value": {
                "description": "Unique identifier for the batch of Logs to include in the Evaluation Report.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluateeRequestBatchId",
                "title": "Batch ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluateeRequestOrchestrated",
            "key": "orchestrated",
            "schema": {
              "generatedName": "evaluateeRequestOrchestrated",
              "nameOverride": "EvaluateeRequest",
              "title": "EvaluateeRequest",
              "value": {
                "description": "Whether the Prompt/Tool is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Prompt/Tool should be submitted by the user via the API.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "EvaluateeRequestOrchestrated",
                "title": "Humanloop Orchestrated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluateeRequest",
        "nameOverride": "EvaluateeRequest",
        "title": "EvaluateeRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluateeResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluateeResponseVersion",
            "key": "version",
            "schema": {
              "generatedName": "EvaluateeResponseVersion",
              "schema": "EvaluatedVersionResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "evaluateeResponseBatchId",
            "key": "batch_id",
            "schema": {
              "generatedName": "evaluateeResponseBatchId",
              "nameOverride": "EvaluateeResponse",
              "title": "EvaluateeResponse",
              "value": {
                "description": "Unique identifier for the batch of Logs to include in the Evaluation Report. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluateeResponseBatchId",
                "title": "Batch ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluateeResponseOrchestrated",
            "key": "orchestrated",
            "schema": {
              "description": "Whether the Prompt/Tool is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Prompt/Tool should be submitted by the user via the API.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EvaluateeResponseOrchestrated",
              "title": "Humanloop Orchestrated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluateeResponse",
        "nameOverride": "EvaluateeResponse",
        "title": "EvaluateeResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluationDebugResultResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluationDebugResultResponseLogId",
            "key": "log_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluationDebugResultResponseLogId",
              "title": "Log Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationDebugResultResponseLog",
            "key": "log",
            "schema": {
              "generatedName": "EvaluationDebugResultResponseLog",
              "schema": "LogResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "evaluationDebugResultResponseDatapointId",
            "key": "datapoint_id",
            "schema": {
              "generatedName": "evaluationDebugResultResponseDatapointId",
              "nameOverride": "EvaluationDebugResultResponse",
              "title": "EvaluationDebugResultResponse",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluationDebugResultResponseDatapointId",
                "title": "Datapoint Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationDebugResultResponseLlmEvaluationLog",
            "key": "llm_evaluation_log",
            "schema": {
              "generatedName": "evaluationDebugResultResponseLlmEvaluationLog",
              "nameOverride": "EvaluationDebugResultResponse",
              "title": "EvaluationDebugResultResponse",
              "value": {
                "generatedName": "EvaluationDebugResultResponseLlmEvaluationLog",
                "schema": "LogResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "evaluationDebugResultResponseValue",
            "key": "value",
            "schema": {
              "generatedName": "evaluationDebugResultResponseValue",
              "nameOverride": "EvaluationDebugResultResponse",
              "title": "EvaluationDebugResultResponse",
              "value": {
                "value": {
                  "generatedName": "EvaluationDebugResultResponseValue",
                  "title": "Value",
                  "nameOverride": "Value",
                  "schemas": [
                    {
                      "schema": {
                        "type": "boolean"
                      },
                      "generatedName": "EvaluationDebugResultResponseValue",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "schema": {
                        "type": "double"
                      },
                      "generatedName": "EvaluationDebugResultResponseValue",
                      "groupName": [],
                      "type": "primitive"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationDebugResultResponseError",
            "key": "error",
            "schema": {
              "generatedName": "evaluationDebugResultResponseError",
              "nameOverride": "EvaluationDebugResultResponse",
              "title": "EvaluationDebugResultResponse",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluationDebugResultResponseError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "This is similar to an `EvaluationResult` but is ephemeral as it is only for synchronous\ndebug runs. It does not have an ID, or a reference to an evaluation run or even an evaluation\nfunction.",
        "generatedName": "EvaluationDebugResultResponse",
        "nameOverride": "EvaluationDebugResultResponse",
        "title": "EvaluationDebugResultResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluationEvaluatorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluationEvaluatorResponseVersion",
            "key": "version",
            "schema": {
              "generatedName": "EvaluationEvaluatorResponseVersion",
              "schema": "EvaluatorResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "evaluationEvaluatorResponseOrchestrated",
            "key": "orchestrated",
            "schema": {
              "description": "Whether the Evaluator is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Evaluator should be submitted by the user via the API.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "EvaluationEvaluatorResponseOrchestrated",
              "title": "Humanloop Orchestrated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluationEvaluatorResponse",
        "nameOverride": "EvaluationEvaluatorResponse",
        "title": "EvaluationEvaluatorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluationResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluationResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Evaluation. Starts with `evr`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluationResponseId",
              "title": "Evaluation ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResponseDataset",
            "key": "dataset",
            "schema": {
              "description": "The Dataset Version used in the Evaluation.",
              "generatedName": "EvaluationResponseDataset",
              "schema": "DatasetResponse",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResponseEvaluatees",
            "key": "evaluatees",
            "schema": {
              "description": "The Prompt/Tool Versions included in the Evaluation.",
              "value": {
                "generatedName": "EvaluationResponseEvaluateesItem",
                "schema": "EvaluateeResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EvaluationResponseEvaluatees",
              "title": "Evaluated Versions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResponseEvaluators",
            "key": "evaluators",
            "schema": {
              "description": "The Evaluator Versions used to evaluate.",
              "value": {
                "generatedName": "EvaluationResponseEvaluatorsItem",
                "schema": "EvaluationEvaluatorResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EvaluationResponseEvaluators",
              "nameOverride": "Evaluator",
              "title": "Evaluator",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResponseStatus",
            "key": "status",
            "schema": {
              "description": "The current status of the Evaluation.\n\n- `\"pending\"`: The Evaluation has been created but is not actively being worked on by Humanloop.\n- `\"running\"`: Humanloop is checking for any missing Logs and Evaluator Logs, and will generate them where appropriate.\n- `\"completed\"`: All Logs an Evaluator Logs have been generated.\n- `\"cancelled\"`: The Evaluation has been cancelled by the user. Humanloop will stop generating Logs and Evaluator Logs.\n",
              "generatedName": "EvaluationResponseStatus",
              "schema": "EvaluationStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EvaluationResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "evaluationResponseCreatedBy",
              "nameOverride": "EvaluationResponse",
              "title": "EvaluationResponse",
              "value": {
                "generatedName": "EvaluationResponseCreatedBy",
                "schema": "src__external__app__models__v5__users__UserResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "evaluationResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EvaluationResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluationResponse",
        "nameOverride": "EvaluationResponse",
        "title": "EvaluationResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluationResultResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluationResultResponseId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseEvaluatorId",
            "key": "evaluator_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluationResultResponseEvaluatorId",
              "title": "Evaluator Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseEvaluatorVersionId",
            "key": "evaluator_version_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluationResultResponseEvaluatorVersionId",
              "title": "Evaluator Version Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseEvaluationId",
            "key": "evaluation_id",
            "schema": {
              "generatedName": "evaluationResultResponseEvaluationId",
              "nameOverride": "EvaluationResultResponse",
              "title": "EvaluationResultResponse",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluationResultResponseEvaluationId",
                "title": "Evaluation Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseLogId",
            "key": "log_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluationResultResponseLogId",
              "title": "Log Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseLog",
            "key": "log",
            "schema": {
              "generatedName": "evaluationResultResponseLog",
              "nameOverride": "EvaluationResultResponse",
              "title": "EvaluationResultResponse",
              "value": {
                "generatedName": "EvaluationResultResponseLog",
                "schema": "LogResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseVersionId",
            "key": "version_id",
            "schema": {
              "generatedName": "evaluationResultResponseVersionId",
              "nameOverride": "EvaluationResultResponse",
              "title": "EvaluationResultResponse",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluationResultResponseVersionId",
                "title": "Version Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseVersion",
            "key": "version",
            "schema": {
              "generatedName": "evaluationResultResponseVersion",
              "nameOverride": "EvaluationResultResponse",
              "title": "EvaluationResultResponse",
              "value": {
                "nameOverride": "Version",
                "generatedName": "EvaluationResultResponseVersion",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseValue",
            "key": "value",
            "schema": {
              "generatedName": "evaluationResultResponseValue",
              "nameOverride": "EvaluationResultResponse",
              "title": "EvaluationResultResponse",
              "value": {
                "value": {
                  "generatedName": "EvaluationResultResponseValue",
                  "title": "Value",
                  "nameOverride": "Value",
                  "schemas": [
                    {
                      "schema": {
                        "type": "boolean"
                      },
                      "generatedName": "EvaluationResultResponseValue",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "schema": {
                        "type": "double"
                      },
                      "generatedName": "EvaluationResultResponseValue",
                      "groupName": [],
                      "type": "primitive"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseError",
            "key": "error",
            "schema": {
              "generatedName": "evaluationResultResponseError",
              "nameOverride": "EvaluationResultResponse",
              "title": "EvaluationResultResponse",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluationResultResponseError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EvaluationResultResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EvaluationResultResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationResultResponseLlmEvaluatorLog",
            "key": "llm_evaluator_log",
            "schema": {
              "generatedName": "evaluationResultResponseLlmEvaluatorLog",
              "nameOverride": "EvaluationResultResponse",
              "title": "EvaluationResultResponse",
              "value": {
                "generatedName": "EvaluationResultResponseLlmEvaluatorLog",
                "schema": "LogResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluationResultResponse",
        "nameOverride": "EvaluationResultResponse",
        "title": "EvaluationResultResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluationStats": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluationStatsOverallStats",
            "key": "overall_stats",
            "schema": {
              "description": "Stats for the Evaluation Report as a whole.",
              "generatedName": "EvaluationStatsOverallStats",
              "schema": "OverallStats",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluationStatsVersionStats",
            "key": "version_stats",
            "schema": {
              "description": "Stats for each Evaluated Version in the Evaluation Report.",
              "value": {
                "generatedName": "EvaluationStatsVersionStatsItem",
                "schema": "VersionStats",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EvaluationStatsVersionStats",
              "title": "Version Stats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluationStats",
        "nameOverride": "EvaluationStats",
        "title": "EvaluationStats",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluationStatus": {
        "description": "Status of an evaluation.",
        "generatedName": "EvaluationStatus",
        "nameOverride": "EvaluationStatus",
        "title": "EvaluationStatus",
        "values": [
          {
            "generatedName": "pending",
            "value": "pending",
            "casing": {}
          },
          {
            "generatedName": "running",
            "value": "running",
            "casing": {}
          },
          {
            "generatedName": "completed",
            "value": "completed",
            "casing": {}
          },
          {
            "generatedName": "cancelled",
            "value": "cancelled",
            "casing": {}
          },
          {
            "generatedName": "failed",
            "value": "failed",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EvaluatorActivationDeactivationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluatorActivationDeactivationRequestEvaluatorsToActivate",
            "key": "evaluators_to_activate",
            "schema": {
              "generatedName": "evaluatorActivationDeactivationRequestEvaluatorsToActivate",
              "nameOverride": "EvaluatorActivationDeactivationRequest",
              "title": "EvaluatorActivationDeactivationRequest",
              "value": {
                "description": "Monitoring Evaluators to activate. These will be automatically run on new Logs.",
                "value": {
                  "value": {
                    "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToActivateItem",
                    "schemas": [
                      {
                        "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToActivateItemZero",
                        "schema": "MonitoringEvaluatorVersionRequest",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      {
                        "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToActivateItemOne",
                        "schema": "MonitoringEvaluatorEnvironmentRequest",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToActivate",
                "title": "Evaluators to activate",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorActivationDeactivationRequestEvaluatorsToDeactivate",
            "key": "evaluators_to_deactivate",
            "schema": {
              "generatedName": "evaluatorActivationDeactivationRequestEvaluatorsToDeactivate",
              "nameOverride": "EvaluatorActivationDeactivationRequest",
              "title": "EvaluatorActivationDeactivationRequest",
              "value": {
                "description": "Evaluators to deactivate. These will not be run on new Logs.",
                "value": {
                  "value": {
                    "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToDeactivateItem",
                    "schemas": [
                      {
                        "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToDeactivateItemZero",
                        "schema": "MonitoringEvaluatorVersionRequest",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      {
                        "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToDeactivateItemOne",
                        "schema": "MonitoringEvaluatorEnvironmentRequest",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "EvaluatorActivationDeactivationRequestEvaluatorsToDeactivate",
                "title": "Evaluators to deactivate",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluatorActivationDeactivationRequest",
        "nameOverride": "EvaluatorActivationDeactivationRequest",
        "title": "EvaluatorActivationDeactivationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluatorArgumentsType": {
        "description": "Enum representing the possible argument types of an evaluator.",
        "generatedName": "EvaluatorArgumentsType",
        "nameOverride": "EvaluatorArgumentsType",
        "title": "EvaluatorArgumentsType",
        "values": [
          {
            "generatedName": "target_free",
            "value": "target_free",
            "casing": {}
          },
          {
            "generatedName": "target_required",
            "value": "target_required",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EvaluatorConfigResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of config. Starts with `config_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorConfigResponseId",
              "title": "Config ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseOther",
            "key": "other",
            "schema": {
              "generatedName": "evaluatorConfigResponseOther",
              "nameOverride": "EvaluatorConfigResponse",
              "title": "EvaluatorConfigResponse",
              "value": {
                "description": "Other parameters that define the config.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EvaluatorConfigResponseOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "EvaluatorConfigResponseOtherValue",
                  "type": "unknown"
                },
                "generatedName": "EvaluatorConfigResponseOther",
                "title": "Other parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "evaluatorConfigResponseCreatedBy",
              "nameOverride": "EvaluatorConfigResponse",
              "title": "EvaluatorConfigResponse",
              "value": {
                "description": "The user who created the config.",
                "generatedName": "EvaluatorConfigResponseCreatedBy",
                "schema": "src__external__app__models__v4__orgs__base_models__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseStatus",
            "key": "status",
            "schema": {
              "description": "Whether the config is committed or not.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorConfigResponseStatus",
              "nameOverride": "Status",
              "title": "Status",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseName",
            "key": "name",
            "schema": {
              "description": "Name of config.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorConfigResponseName",
              "title": "Config name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseDescription",
            "key": "description",
            "schema": {
              "generatedName": "evaluatorConfigResponseDescription",
              "nameOverride": "EvaluatorConfigResponse",
              "title": "EvaluatorConfigResponse",
              "value": {
                "description": "Description of config.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluatorConfigResponseDescription",
                "title": "Config description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseEvaluatorType",
            "key": "evaluator_type",
            "schema": {
              "description": "Type of evaluator.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorConfigResponseEvaluatorType",
              "title": "Evaluator type",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseModelConfig",
            "key": "model_config",
            "schema": {
              "generatedName": "evaluatorConfigResponseModelConfig",
              "nameOverride": "EvaluatorConfigResponse",
              "title": "EvaluatorConfigResponse",
              "value": {
                "description": "The model config defining the LLM evaluator.",
                "generatedName": "EvaluatorConfigResponseModelConfig",
                "schema": "ModelConfigResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseCode",
            "key": "code",
            "schema": {
              "generatedName": "evaluatorConfigResponseCode",
              "nameOverride": "EvaluatorConfigResponse",
              "title": "EvaluatorConfigResponse",
              "value": {
                "description": "The code for the evaluator. This code will be executed in a sandboxed environment.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluatorConfigResponseCode",
                "nameOverride": "Code",
                "title": "Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseArgumentsType",
            "key": "arguments_type",
            "schema": {
              "generatedName": "evaluatorConfigResponseArgumentsType",
              "nameOverride": "EvaluatorConfigResponse",
              "title": "EvaluatorConfigResponse",
              "value": {
                "description": "Whether this evaluator is target-free or target-required.",
                "generatedName": "EvaluatorConfigResponseArgumentsType",
                "schema": "EvaluatorArgumentsType",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorConfigResponseReturnType",
            "key": "return_type",
            "schema": {
              "generatedName": "evaluatorConfigResponseReturnType",
              "nameOverride": "EvaluatorConfigResponse",
              "title": "EvaluatorConfigResponse",
              "value": {
                "description": "The type of the return value of the evaluator.",
                "generatedName": "EvaluatorConfigResponseReturnType",
                "schema": "EvaluatorReturnTypeEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluatorConfigResponse",
        "nameOverride": "EvaluatorConfigResponse",
        "title": "EvaluatorConfigResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluatorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluatorResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Evaluator.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorResponseId",
              "title": "Evaluator ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseName",
            "key": "name",
            "schema": {
              "description": "Name of the Evaluator, which is used as a unique identifier.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorResponseName",
              "title": "Prompt name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the specific Evaluator Version. If no query params provided, the default deployed Evaluator Version is returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EvaluatorResponseVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "evaluatorResponseDirectoryId",
              "nameOverride": "EvaluatorResponse",
              "title": "EvaluatorResponse",
              "value": {
                "description": "Unique identifier for the Directory of the Evaluator.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluatorResponseDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseEnvironments",
            "key": "environments",
            "schema": {
              "generatedName": "evaluatorResponseEnvironments",
              "nameOverride": "EvaluatorResponse",
              "title": "EvaluatorResponse",
              "value": {
                "description": "The list of environments the Prompt Version is deployed to.",
                "value": {
                  "generatedName": "EvaluatorResponseEnvironmentsItem",
                  "schema": "EnvironmentResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "EvaluatorResponseEnvironments",
                "nameOverride": "Environments",
                "title": "Environments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EvaluatorResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EvaluatorResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "evaluatorResponseCreatedBy",
              "nameOverride": "EvaluatorResponse",
              "title": "EvaluatorResponse",
              "value": {
                "description": "The user who created the Prompt.",
                "generatedName": "EvaluatorResponseCreatedBy",
                "schema": "src__external__app__models__v5__users__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseStatus",
            "key": "status",
            "schema": {
              "generatedName": "EvaluatorResponseStatus",
              "schema": "VersionStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseLastUsedAt",
            "key": "last_used_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EvaluatorResponseLastUsedAt",
              "title": "Last Used At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "evaluatorResponseCommitMessage",
              "nameOverride": "EvaluatorResponse",
              "title": "EvaluatorResponse",
              "value": {
                "description": "Message describing the changes made.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluatorResponseCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseSpec",
            "key": "spec",
            "schema": {
              "value": {
                "commonProperties": [],
                "discriminantProperty": "evaluator_type",
                "generatedName": "EvaluatorResponseSpec",
                "title": "Spec",
                "nameOverride": "Spec",
                "schemas": {
                  "llm": {
                    "generatedName": "ComponentsSchemasLlmEvaluatorRequest",
                    "schema": "LLMEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "python": {
                    "generatedName": "ComponentsSchemasCodeEvaluatorRequest",
                    "schema": "CodeEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "human": {
                    "generatedName": "ComponentsSchemasHumanEvaluatorRequest",
                    "schema": "HumanEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                },
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "discriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseVersionLogsCount",
            "key": "version_logs_count",
            "schema": {
              "description": "The number of logs that have been generated for this Prompt Version",
              "schema": {
                "type": "int"
              },
              "generatedName": "EvaluatorResponseVersionLogsCount",
              "title": "Number of logs for this version",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseTotalLogsCount",
            "key": "total_logs_count",
            "schema": {
              "description": "The number of logs that have been generated across all Prompt Versions",
              "schema": {
                "type": "int"
              },
              "generatedName": "EvaluatorResponseTotalLogsCount",
              "title": "Total number of logs across all versions",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "evaluatorResponseInputs",
            "key": "inputs",
            "schema": {
              "description": "Inputs associated to the Prompt. Inputs correspond to any of the variables used within the Prompt template.",
              "value": {
                "generatedName": "EvaluatorResponseInputsItem",
                "schema": "InputResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EvaluatorResponseInputs",
              "title": "Prompt inputs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request model for creating a new Evaluator",
        "generatedName": "EvaluatorResponse",
        "nameOverride": "EvaluatorResponse",
        "title": "EvaluatorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluatorReturnTypeEnum": {
        "description": "Enum representing the possible return types of an evaluator.",
        "generatedName": "EvaluatorReturnTypeEnum",
        "nameOverride": "EvaluatorReturnTypeEnum",
        "title": "EvaluatorReturnTypeEnum",
        "values": [
          {
            "generatedName": "boolean",
            "value": "boolean",
            "casing": {}
          },
          {
            "generatedName": "number",
            "value": "number",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "FeedbackClass": {
        "description": "An enumeration.",
        "generatedName": "FeedbackClass",
        "nameOverride": "FeedbackClass",
        "title": "FeedbackClass",
        "values": [
          {
            "generatedName": "select",
            "value": "select",
            "casing": {}
          },
          {
            "generatedName": "multi_select",
            "value": "multi_select",
            "casing": {}
          },
          {
            "generatedName": "text",
            "value": "text",
            "casing": {}
          },
          {
            "generatedName": "number",
            "value": "number",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "FeedbackLabelStatus": {
        "description": "Controls whether the label is displayed in the UI.",
        "generatedName": "FeedbackLabelStatus",
        "nameOverride": "FeedbackLabelStatus",
        "title": "FeedbackLabelStatus",
        "values": [
          {
            "generatedName": "unset",
            "value": "unset",
            "casing": {}
          },
          {
            "generatedName": "active",
            "value": "active",
            "casing": {}
          },
          {
            "generatedName": "inactive",
            "value": "inactive",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "FeedbackResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "feedbackResponseType",
            "key": "type",
            "schema": {
              "value": {
                "description": "The type of feedback. The default feedback types available are 'rating', 'action', 'issue', 'correction', and 'comment'.",
                "generatedName": "FeedbackResponseType",
                "title": "Feedback type",
                "schemas": [
                  {
                    "generatedName": "FeedbackResponseTypeZero",
                    "schema": "src__external__app__models__v4__feedback__FeedbackType",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FeedbackResponseType",
                    "groupName": [],
                    "type": "primitive"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "feedbackResponseValue",
            "key": "value",
            "schema": {
              "value": {
                "description": "The feedback value to set. This would be the appropriate text for 'correction' or 'comment', or a label to apply for 'rating', 'action', or 'issue'.",
                "generatedName": "FeedbackResponseValue",
                "title": "Feedback value",
                "schemas": [
                  {
                    "schema": {
                      "type": "double"
                    },
                    "generatedName": "FeedbackResponseValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FeedbackResponseValue",
                    "groupName": [],
                    "type": "primitive"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "feedbackResponseDataId",
            "key": "data_id",
            "schema": {
              "generatedName": "feedbackResponseDataId",
              "nameOverride": "FeedbackResponse",
              "title": "FeedbackResponse",
              "value": {
                "description": "ID to associate the feedback to a previously logged datapoint.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "FeedbackResponseDataId",
                "title": "Datapoint ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "feedbackResponseUser",
            "key": "user",
            "schema": {
              "generatedName": "feedbackResponseUser",
              "nameOverride": "FeedbackResponse",
              "title": "FeedbackResponse",
              "value": {
                "description": "A unique identifier to who provided the feedback.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "FeedbackResponseUser",
                "nameOverride": "User",
                "title": "User",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "feedbackResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "feedbackResponseCreatedAt",
              "nameOverride": "FeedbackResponse",
              "title": "FeedbackResponse",
              "value": {
                "description": "User defined timestamp for when the feedback was created. ",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "FeedbackResponseCreatedAt",
                "title": "Created at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "feedbackResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of user feedback. Starts with `ann_`, short for annotation.",
              "schema": {
                "type": "string"
              },
              "generatedName": "FeedbackResponseId",
              "title": "Feedback ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FeedbackResponse",
        "nameOverride": "FeedbackResponse",
        "title": "FeedbackResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FeedbackTypeModel": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "feedbackTypeModelType",
            "key": "type",
            "schema": {
              "value": {
                "description": "The type of feedback. The default feedback types available are 'rating', 'action', 'issue', 'correction', and 'comment'.",
                "generatedName": "FeedbackTypeModelType",
                "title": "Feedback type",
                "schemas": [
                  {
                    "generatedName": "FeedbackTypeModelTypeZero",
                    "schema": "src__external__app__models__v5__feedback__FeedbackType",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FeedbackTypeModelType",
                    "groupName": [],
                    "type": "primitive"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "feedbackTypeModelValues",
            "key": "values",
            "schema": {
              "generatedName": "feedbackTypeModelValues",
              "nameOverride": "FeedbackTypeModel",
              "title": "FeedbackTypeModel",
              "value": {
                "description": "The allowed values for categorical feedback types. Not populated for `correction` and `comment`.",
                "value": {
                  "generatedName": "FeedbackTypeModelValuesItem",
                  "schema": "CategoricalFeedbackLabel",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "FeedbackTypeModelValues",
                "title": "Allowed values for categorical feedback types",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "FeedbackTypeModel",
        "nameOverride": "FeedbackTypeModel",
        "title": "FeedbackTypeModel",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FeedbackTypes": {
        "value": {
          "generatedName": "FeedbackTypesItem",
          "schema": "FeedbackTypeModel",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "generatedName": "FeedbackTypes",
        "nameOverride": "FeedbackTypes",
        "title": "FeedbackTypes",
        "groupName": [],
        "type": "array"
      },
      "FunctionTool": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "functionToolName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "FunctionToolName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "functionToolArguments",
            "key": "arguments",
            "schema": {
              "generatedName": "functionToolArguments",
              "nameOverride": "FunctionTool",
              "title": "FunctionTool",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "FunctionToolArguments",
                "nameOverride": "Arguments",
                "title": "Arguments",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A function tool to be called by the model where user owns runtime.",
        "generatedName": "FunctionTool",
        "nameOverride": "FunctionTool",
        "title": "FunctionTool",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FunctionToolChoice": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "functionToolChoiceName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "FunctionToolChoiceName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A function tool to be called by the model where user owns runtime.",
        "generatedName": "FunctionToolChoice",
        "nameOverride": "FunctionToolChoice",
        "title": "FunctionToolChoice",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenericConfigResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "genericConfigResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of config. Starts with `config_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GenericConfigResponseId",
              "title": "Config ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericConfigResponseOther",
            "key": "other",
            "schema": {
              "generatedName": "genericConfigResponseOther",
              "nameOverride": "GenericConfigResponse",
              "title": "GenericConfigResponse",
              "value": {
                "description": "Other parameters that define the config.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "GenericConfigResponseOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "GenericConfigResponseOtherValue",
                  "type": "unknown"
                },
                "generatedName": "GenericConfigResponseOther",
                "title": "Other parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericConfigResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "genericConfigResponseCreatedBy",
              "nameOverride": "GenericConfigResponse",
              "title": "GenericConfigResponse",
              "value": {
                "description": "The user who created the config.",
                "generatedName": "GenericConfigResponseCreatedBy",
                "schema": "src__external__app__models__v4__orgs__base_models__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericConfigResponseStatus",
            "key": "status",
            "schema": {
              "description": "Whether the config is committed or not.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GenericConfigResponseStatus",
              "nameOverride": "Status",
              "title": "Status",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericConfigResponseName",
            "key": "name",
            "schema": {
              "description": "Name of config.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GenericConfigResponseName",
              "title": "Config name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "genericConfigResponseDescription",
            "key": "description",
            "schema": {
              "generatedName": "genericConfigResponseDescription",
              "nameOverride": "GenericConfigResponse",
              "title": "GenericConfigResponse",
              "value": {
                "description": "Description of config.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GenericConfigResponseDescription",
                "title": "Config description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenericConfigResponse",
        "nameOverride": "GenericConfigResponse",
        "title": "GenericConfigResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "HTTPValidationError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "httpValidationErrorDetail",
            "key": "detail",
            "schema": {
              "generatedName": "httpValidationErrorDetail",
              "nameOverride": "HTTPValidationError",
              "title": "HTTPValidationError",
              "value": {
                "value": {
                  "generatedName": "HttpValidationErrorDetailItem",
                  "schema": "ValidationError",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "HttpValidationErrorDetail",
                "nameOverride": "Detail",
                "title": "Detail",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "HttpValidationError",
        "nameOverride": "HTTPValidationError",
        "title": "HTTPValidationError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "HumanEvaluatorRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "humanEvaluatorRequestArgumentsType",
            "key": "arguments_type",
            "schema": {
              "description": "Whether this evaluator is target-free or target-required.",
              "generatedName": "HumanEvaluatorRequestArgumentsType",
              "schema": "EvaluatorArgumentsType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "humanEvaluatorRequestReturnType",
            "key": "return_type",
            "schema": {
              "description": "The type of the return value of the evaluator.",
              "generatedName": "HumanEvaluatorRequestReturnType",
              "schema": "EvaluatorReturnTypeEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "HumanEvaluatorRequest",
        "nameOverride": "HumanEvaluatorRequest",
        "title": "HumanEvaluatorRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ImageChatContent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "imageChatContentImageUrl",
            "key": "image_url",
            "schema": {
              "description": "The message's image content.",
              "generatedName": "ImageChatContentImageUrl",
              "schema": "ImageUrl",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ImageChatContent",
        "nameOverride": "ImageChatContent",
        "title": "ImageChatContent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ImageUrl": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "imageUrlUrl",
            "key": "url",
            "schema": {
              "description": "Either a URL of the image or the base64 encoded image data.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ImageUrlUrl",
              "nameOverride": "URL",
              "title": "URL",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "imageUrlDetail",
            "key": "detail",
            "schema": {
              "generatedName": "imageUrlDetail",
              "nameOverride": "ImageUrl",
              "title": "ImageUrl",
              "value": {
                "description": "Specify the detail level of the image provided to the model. For more details see: https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding",
                "generatedName": "ImageUrlDetail",
                "title": "Image detail level",
                "values": [
                  {
                    "generatedName": "high",
                    "value": "high",
                    "casing": {}
                  },
                  {
                    "generatedName": "low",
                    "value": "low",
                    "casing": {}
                  },
                  {
                    "generatedName": "auto",
                    "value": "auto",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ImageUrl",
        "nameOverride": "ImageUrl",
        "title": "ImageUrl",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "InputResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "inputResponseName",
            "key": "name",
            "schema": {
              "description": "Type of input.",
              "schema": {
                "type": "string"
              },
              "generatedName": "InputResponseName",
              "title": "Input name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InputResponse",
        "nameOverride": "InputResponse",
        "title": "InputResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LLMEvaluatorRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "llmEvaluatorRequestArgumentsType",
            "key": "arguments_type",
            "schema": {
              "description": "Whether this evaluator is target-free or target-required.",
              "generatedName": "LlmEvaluatorRequestArgumentsType",
              "schema": "EvaluatorArgumentsType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "llmEvaluatorRequestReturnType",
            "key": "return_type",
            "schema": {
              "description": "The type of the return value of the evaluator.",
              "generatedName": "LlmEvaluatorRequestReturnType",
              "schema": "EvaluatorReturnTypeEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "llmEvaluatorRequestPrompt",
            "key": "prompt",
            "schema": {
              "generatedName": "llmEvaluatorRequestPrompt",
              "nameOverride": "LLMEvaluatorRequest",
              "title": "LLMEvaluatorRequest",
              "value": {
                "description": "The prompt parameters used to generate.",
                "generatedName": "LlmEvaluatorRequestPrompt",
                "schema": "PromptKernelRequest",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LlmEvaluatorRequest",
        "nameOverride": "LLMEvaluatorRequest",
        "title": "LLMEvaluatorRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LabelSentiment": {
        "description": "How a label should be treated in calculating Version performance.\n\nUsed by a File's PAPV (Positive Action Per View) metric.",
        "generatedName": "LabelSentiment",
        "nameOverride": "LabelSentiment",
        "title": "LabelSentiment",
        "values": [
          {
            "generatedName": "positive",
            "value": "positive",
            "casing": {}
          },
          {
            "generatedName": "negative",
            "value": "negative",
            "casing": {}
          },
          {
            "generatedName": "neutral",
            "value": "neutral",
            "casing": {}
          },
          {
            "generatedName": "unset",
            "value": "unset",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "LinkedToolRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedToolRequestId",
            "key": "id",
            "schema": {
              "description": "The ID of the linked tool. Starts with \"oc_\"",
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedToolRequestId",
              "title": "Tool ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolRequestSource",
            "key": "source",
            "schema": {
              "description": "The source of the linked tool. For a linked tool it should be `organization`",
              "value": {
                "value": "organization",
                "type": "string"
              },
              "generatedName": "LinkedToolRequestSource",
              "title": "Tool source",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolRequestName",
            "key": "name",
            "schema": {
              "generatedName": "linkedToolRequestName",
              "nameOverride": "LinkedToolRequest",
              "title": "LinkedToolRequest",
              "value": {
                "description": "The name of the linked tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LinkedToolRequestName",
                "title": "Tool name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "linkedToolRequestDescription",
              "nameOverride": "LinkedToolRequest",
              "title": "LinkedToolRequest",
              "value": {
                "description": "The description of the linked tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LinkedToolRequestDescription",
                "title": "Tool description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolRequestParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "linkedToolRequestParameters",
              "nameOverride": "LinkedToolRequest",
              "title": "LinkedToolRequest",
              "value": {
                "description": "The parameters of the linked tool.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LinkedToolRequestParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "LinkedToolRequestParametersValue",
                  "type": "unknown"
                },
                "generatedName": "LinkedToolRequestParameters",
                "title": "Tool parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedToolRequest",
        "nameOverride": "LinkedToolRequest",
        "title": "LinkedToolRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LinkedToolResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedToolResponseName",
            "key": "name",
            "schema": {
              "description": "Name for the tool referenced by the model.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedToolResponseName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolResponseDescription",
            "key": "description",
            "schema": {
              "description": "Description of the tool referenced by the model",
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedToolResponseDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolResponseParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "linkedToolResponseParameters",
              "nameOverride": "LinkedToolResponse",
              "title": "LinkedToolResponse",
              "value": {
                "description": "Parameters needed to run the Tool, defined in JSON Schema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LinkedToolResponseParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "LinkedToolResponseParametersValue",
                  "type": "unknown"
                },
                "generatedName": "LinkedToolResponseParameters",
                "title": "Tool parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Tool linked.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedToolResponseId",
              "title": "Tool ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedToolResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the Tool Version linked.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LinkedToolResponseVersionId",
              "title": "Tool Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedToolResponse",
        "nameOverride": "LinkedToolResponse",
        "title": "LinkedToolResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListDatasets": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listDatasetsRecords",
            "key": "records",
            "schema": {
              "description": "The list of Datasets.",
              "value": {
                "generatedName": "ListDatasetsRecordsItem",
                "schema": "DatasetResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ListDatasetsRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ListDatasets",
        "nameOverride": "ListDatasets",
        "title": "ListDatasets",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListEvaluators": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listEvaluatorsRecords",
            "key": "records",
            "schema": {
              "description": "The list of Evaluators.",
              "value": {
                "generatedName": "ListEvaluatorsRecordsItem",
                "schema": "EvaluatorResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ListEvaluatorsRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ListEvaluators",
        "nameOverride": "ListEvaluators",
        "title": "ListEvaluators",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListPrompts": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listPromptsRecords",
            "key": "records",
            "schema": {
              "description": "The list of Prompts.",
              "value": {
                "generatedName": "ListPromptsRecordsItem",
                "schema": "PromptResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ListPromptsRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ListPrompts",
        "nameOverride": "ListPrompts",
        "title": "ListPrompts",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ListTools": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "listToolsRecords",
            "key": "records",
            "schema": {
              "description": "The list of Tools.",
              "value": {
                "generatedName": "ListToolsRecordsItem",
                "schema": "src__external__app__models__v5__tools__ToolResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ListToolsRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ListTools",
        "nameOverride": "ListTools",
        "title": "ListTools",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LogResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "logResponseProject",
            "key": "project",
            "schema": {
              "generatedName": "logResponseProject",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "The name of the project associated with this log",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseProject",
                "title": "Project name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseProjectId",
            "key": "project_id",
            "schema": {
              "generatedName": "logResponseProjectId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "The unique ID of the project associated with this log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseProjectId",
                "title": "Project ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "logResponseSessionId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "ID of the session to associate the datapoint.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseSessionReferenceId",
            "key": "session_reference_id",
            "schema": {
              "generatedName": "logResponseSessionReferenceId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "A unique string identifying the session to associate the datapoint to. Allows you to log multiple datapoints to a session (using an ID kept by your internal systems) by passing the same `session_reference_id` in subsequent log requests. Specify at most one of this or `session_id`.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseSessionReferenceId",
                "title": "Session Reference ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "logResponseParentId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "ID associated to the parent datapoint in a session.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseParentId",
                "title": "Parent ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseParentReferenceId",
            "key": "parent_reference_id",
            "schema": {
              "generatedName": "logResponseParentReferenceId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "A unique string identifying the previously-logged parent datapoint in a session. Allows you to log nested datapoints with your internal system IDs by passing the same reference ID as `parent_id` in a prior log request. Specify at most one of this or `parent_id`. Note that this cannot refer to a datapoint being logged in the same request.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseParentReferenceId",
                "title": "Parent Reference ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "logResponseInputs",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "The inputs passed to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LogResponseInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "LogResponseInputsValue",
                  "type": "unknown"
                },
                "generatedName": "LogResponseInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseSource",
            "key": "source",
            "schema": {
              "generatedName": "logResponseSource",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Identifies where the model was called from.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseSource",
                "nameOverride": "Source",
                "title": "Source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "logResponseMetadata",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Any additional metadata to record.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LogResponseMetadataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "LogResponseMetadataValue",
                  "type": "unknown"
                },
                "generatedName": "LogResponseMetadata",
                "title": "Metadata",
                "nameOverride": "Metadata",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseSave",
            "key": "save",
            "schema": {
              "generatedName": "logResponseSave",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Whether the request/response payloads will be stored on Humanloop.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "LogResponseSave",
                "nameOverride": "Save",
                "title": "Save",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseSourceDatapointId",
            "key": "source_datapoint_id",
            "schema": {
              "generatedName": "logResponseSourceDatapointId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "ID of the source datapoint if this is a log derived from a datapoint in a dataset.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseSourceDatapointId",
                "title": "Source datapoint ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of logged datapoint. Starts with `data_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "LogResponseId",
              "title": "Datapoint ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseReferenceId",
            "key": "reference_id",
            "schema": {
              "generatedName": "logResponseReferenceId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Unique user-provided string identifying the datapoint.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseReferenceId",
                "title": "Reference ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseTrialId",
            "key": "trial_id",
            "schema": {
              "generatedName": "logResponseTrialId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Unique ID of an experiment trial to associate to the log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseTrialId",
                "title": "Trial ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseMessages",
            "key": "messages",
            "schema": {
              "generatedName": "logResponseMessages",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "The messages passed to the to provider chat endpoint.",
                "value": {
                  "generatedName": "LogResponseMessagesItem",
                  "schema": "ChatMessageWithToolCall",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LogResponseMessages",
                "nameOverride": "Messages",
                "title": "Messages",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseOutput",
            "key": "output",
            "schema": {
              "generatedName": "logResponseOutput",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if logging a parent datapoint with the intention to populate it later",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseOutput",
                "title": "Model output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseJudgment",
            "key": "judgment",
            "schema": {
              "generatedName": "logResponseJudgment",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "value": {
                  "generatedName": "LogResponseJudgment",
                  "title": "Judgment",
                  "nameOverride": "Judgment",
                  "schemas": [
                    {
                      "schema": {
                        "type": "boolean"
                      },
                      "generatedName": "LogResponseJudgment",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "schema": {
                        "type": "double"
                      },
                      "generatedName": "LogResponseJudgment",
                      "groupName": [],
                      "type": "primitive"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseConfigId",
            "key": "config_id",
            "schema": {
              "generatedName": "logResponseConfigId",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Unique ID of a config to associate to the log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseConfigId",
                "title": "Config ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseConfig",
            "key": "config",
            "schema": {
              "generatedName": "LogResponseConfig",
              "schema": "ConfigResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "logResponseEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "logResponseEnvironment",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "The environment name used to create the log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseEnvironment",
                "title": "Environment name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseFeedback",
            "key": "feedback",
            "schema": {
              "generatedName": "logResponseFeedback",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "value": {
                  "generatedName": "LogResponseFeedbackItem",
                  "schema": "FeedbackResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LogResponseFeedback",
                "nameOverride": "Feedback",
                "title": "Feedback",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "logResponseCreatedAt",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "User defined timestamp for when the log was created. ",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "LogResponseCreatedAt",
                "title": "Created at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseError",
            "key": "error",
            "schema": {
              "generatedName": "logResponseError",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Error message if the log is an error.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseDuration",
            "key": "duration",
            "schema": {
              "generatedName": "logResponseDuration",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Duration of the logged event in seconds.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LogResponseDuration",
                "nameOverride": "Duration",
                "title": "Duration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseOutputMessage",
            "key": "output_message",
            "schema": {
              "generatedName": "logResponseOutputMessage",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "The message returned by the provider.",
                "generatedName": "LogResponseOutputMessage",
                "schema": "ChatMessageWithToolCall",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponsePromptTokens",
            "key": "prompt_tokens",
            "schema": {
              "generatedName": "logResponsePromptTokens",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Number of tokens in the prompt used to generate the output.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "LogResponsePromptTokens",
                "title": "Prompt tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseOutputTokens",
            "key": "output_tokens",
            "schema": {
              "generatedName": "logResponseOutputTokens",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Number of tokens in the output generated by the model.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "LogResponseOutputTokens",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponsePromptCost",
            "key": "prompt_cost",
            "schema": {
              "generatedName": "logResponsePromptCost",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the prompt.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LogResponsePromptCost",
                "title": "Prompt cost",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseOutputCost",
            "key": "output_cost",
            "schema": {
              "generatedName": "logResponseOutputCost",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the output.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LogResponseOutputCost",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseProviderRequest",
            "key": "provider_request",
            "schema": {
              "generatedName": "logResponseProviderRequest",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Raw request sent to provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LogResponseProviderRequestKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "LogResponseProviderRequestValue",
                  "type": "unknown"
                },
                "generatedName": "LogResponseProviderRequest",
                "title": "Provider request",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseProviderResponse",
            "key": "provider_response",
            "schema": {
              "generatedName": "logResponseProviderResponse",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Raw response received the provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LogResponseProviderResponseKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "LogResponseProviderResponseValue",
                  "type": "unknown"
                },
                "generatedName": "LogResponseProviderResponse",
                "title": "Provider response",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseUser",
            "key": "user",
            "schema": {
              "generatedName": "logResponseUser",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "User email address provided when creating the datapoint.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseUser",
                "nameOverride": "User",
                "title": "User",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseProviderLatency",
            "key": "provider_latency",
            "schema": {
              "generatedName": "logResponseProviderLatency",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Latency of provider response.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LogResponseProviderLatency",
                "title": "Provider Latency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseTokens",
            "key": "tokens",
            "schema": {
              "generatedName": "logResponseTokens",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Total number of tokens in the prompt and output.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "LogResponseTokens",
                "nameOverride": "Tokens",
                "title": "Tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseRawOutput",
            "key": "raw_output",
            "schema": {
              "generatedName": "logResponseRawOutput",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Raw output from the provider.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseRawOutput",
                "title": "Raw output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseFinishReason",
            "key": "finish_reason",
            "schema": {
              "generatedName": "logResponseFinishReason",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "Reason the generation finished.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LogResponseFinishReason",
                "title": "Finish reason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseMetricValues",
            "key": "metric_values",
            "schema": {
              "generatedName": "logResponseMetricValues",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "value": {
                  "generatedName": "LogResponseMetricValuesItem",
                  "schema": "MetricValueResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LogResponseMetricValues",
                "title": "Metric Values",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseTools",
            "key": "tools",
            "schema": {
              "generatedName": "logResponseTools",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "value": {
                  "generatedName": "LogResponseToolsItem",
                  "schema": "ToolResultResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "LogResponseTools",
                "nameOverride": "Tools",
                "title": "Tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseToolChoice",
            "key": "tool_choice",
            "schema": {
              "generatedName": "logResponseToolChoice",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "value": {
                  "description": "Controls how the model uses tools. The following options are supported: 'none' forces the model to not call a tool; the default when no tools are provided as part of the model config. 'auto' the model can decide to call one of the provided tools; the default when tools are provided as part of the model config. Providing {'type': 'function', 'function': {name': <TOOL_NAME>}} forces the model to use the named function.",
                  "generatedName": "LogResponseToolChoice",
                  "title": "Tool choice",
                  "schemas": [
                    {
                      "value": {
                        "value": "none",
                        "type": "string"
                      },
                      "generatedName": "LogResponseToolChoiceNone",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "auto",
                        "type": "string"
                      },
                      "generatedName": "LogResponseToolChoiceAuto",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "required",
                        "type": "string"
                      },
                      "generatedName": "LogResponseToolChoiceRequired",
                      "type": "literal"
                    },
                    {
                      "generatedName": "LogResponseToolChoiceThree",
                      "schema": "ToolChoice",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseEvaluationResults",
            "key": "evaluation_results",
            "schema": {
              "value": {
                "generatedName": "LogResponseEvaluationResultsItem",
                "schema": "EvaluationResultResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "LogResponseEvaluationResults",
              "title": "Evaluation Results",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseObservabilityStatus",
            "key": "observability_status",
            "schema": {
              "generatedName": "LogResponseObservabilityStatus",
              "schema": "ObservabilityStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "logResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "LogResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "logResponseBatchIds",
            "key": "batch_ids",
            "schema": {
              "generatedName": "logResponseBatchIds",
              "nameOverride": "LogResponse",
              "title": "LogResponse",
              "value": {
                "description": "List of batch IDs the log belongs to.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "LogResponseBatchIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "LogResponseBatchIds",
                "title": "Batch IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request model for logging a datapoint.",
        "generatedName": "LogResponse",
        "nameOverride": "LogResponse",
        "title": "LogResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MetricValueResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "metricValueResponseMetricId",
            "key": "metric_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "MetricValueResponseMetricId",
              "title": "Metric Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metricValueResponseMetricName",
            "key": "metric_name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "MetricValueResponseMetricName",
              "title": "Metric Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "metricValueResponseMetricValue",
            "key": "metric_value",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "MetricValueResponseMetricValue",
              "title": "Metric Value",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MetricValueResponse",
        "nameOverride": "MetricValueResponse",
        "title": "MetricValueResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelConfigRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelConfigRequestName",
            "key": "name",
            "schema": {
              "generatedName": "modelConfigRequestName",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "A friendly display name for the model config. If not provided, a name will be generated.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigRequestName",
                "title": "Model config name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "modelConfigRequestDescription",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "A description of the model config.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigRequestDescription",
                "title": "Model config description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestProvider",
            "key": "provider",
            "schema": {
              "generatedName": "modelConfigRequestProvider",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "The company providing the underlying model service.",
                "generatedName": "ModelConfigRequestProvider",
                "schema": "ModelProviders",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestModel",
            "key": "model",
            "schema": {
              "description": "The model instance used. E.g. text-davinci-002.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ModelConfigRequestModel",
              "title": "Model instance used",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestMaxTokens",
            "key": "max_tokens",
            "schema": {
              "generatedName": "modelConfigRequestMaxTokens",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
                "schema": {
                  "default": -1,
                  "type": "int"
                },
                "generatedName": "ModelConfigRequestMaxTokens",
                "title": "Maximum tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestTemperature",
            "key": "temperature",
            "schema": {
              "generatedName": "modelConfigRequestTemperature",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "ModelConfigRequestTemperature",
                "title": "Sampling temperature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestTopP",
            "key": "top_p",
            "schema": {
              "generatedName": "modelConfigRequestTopP",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "ModelConfigRequestTopP",
                "title": "Top p probability mass",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestStop",
            "key": "stop",
            "schema": {
              "generatedName": "modelConfigRequestStop",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "value": {
                  "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
                  "generatedName": "ModelConfigRequestStop",
                  "title": "Stop sequence(s)",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ModelConfigRequestStop",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "ModelConfigRequestStopItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "ModelConfigRequestStop",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestPresencePenalty",
            "key": "presence_penalty",
            "schema": {
              "generatedName": "modelConfigRequestPresencePenalty",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "ModelConfigRequestPresencePenalty",
                "title": "Penalize tokens on whether present.",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestFrequencyPenalty",
            "key": "frequency_penalty",
            "schema": {
              "generatedName": "modelConfigRequestFrequencyPenalty",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "ModelConfigRequestFrequencyPenalty",
                "title": "Penalize tokens on whether frequent.",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestOther",
            "key": "other",
            "schema": {
              "generatedName": "modelConfigRequestOther",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "Other parameter values to be passed to the provider call.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ModelConfigRequestOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ModelConfigRequestOtherValue",
                  "type": "unknown"
                },
                "generatedName": "ModelConfigRequestOther",
                "title": "Other provider parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestSeed",
            "key": "seed",
            "schema": {
              "generatedName": "modelConfigRequestSeed",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "ModelConfigRequestSeed",
                "nameOverride": "Seed",
                "title": "Seed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestResponseFormat",
            "key": "response_format",
            "schema": {
              "generatedName": "modelConfigRequestResponseFormat",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "The format of the response. Only type json_object is currently supported for chat.",
                "generatedName": "ModelConfigRequestResponseFormat",
                "schema": "ResponseFormat",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "modelConfigRequestEndpoint",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "The provider model endpoint used.",
                "generatedName": "ModelConfigRequestEndpoint",
                "schema": "ModelEndpoints",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestPromptTemplate",
            "key": "prompt_template",
            "schema": {
              "generatedName": "modelConfigRequestPromptTemplate",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "Prompt template that will take your specified inputs to form your final request to the model. Input variables within the prompt template should be specified with syntax: {{INPUT_NAME}}.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigRequestPromptTemplate",
                "title": "Prompt template",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestChatTemplate",
            "key": "chat_template",
            "schema": {
              "generatedName": "modelConfigRequestChatTemplate",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "Messages prepended to the list of messages sent to the provider. These messages that will take your specified inputs to form your final request to the provider model. Input variables within the template should be specified with syntax: {{INPUT_NAME}}.",
                "value": {
                  "generatedName": "ModelConfigRequestChatTemplateItem",
                  "schema": "ChatMessageWithToolCall",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ModelConfigRequestChatTemplate",
                "title": "Chat template",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestTools",
            "key": "tools",
            "schema": {
              "generatedName": "modelConfigRequestTools",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "description": "Make tools available to OpenAIs chat model as functions.",
                "value": {
                  "value": {
                    "generatedName": "ModelConfigRequestToolsItem",
                    "schemas": [
                      {
                        "generatedName": "ModelConfigRequestToolsItemZero",
                        "schema": "LinkedToolRequest",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      {
                        "generatedName": "ModelConfigRequestToolsItemOne",
                        "schema": "ModelConfigToolRequest",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "ModelConfigRequestTools",
                "title": "Tools - equivalent to OpenAI functions.",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigRequestType",
            "key": "type",
            "schema": {
              "generatedName": "modelConfigRequestType",
              "nameOverride": "ModelConfigRequest",
              "title": "ModelConfigRequest",
              "value": {
                "value": {
                  "value": "model",
                  "type": "string"
                },
                "generatedName": "ModelConfigRequestType",
                "nameOverride": "Type",
                "title": "Type",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model config used for logging both chat and completion.",
        "generatedName": "ModelConfigRequest",
        "nameOverride": "ModelConfigRequest",
        "title": "ModelConfigRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelConfigResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelConfigResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of config. Starts with `config_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ModelConfigResponseId",
              "title": "Config ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseOther",
            "key": "other",
            "schema": {
              "generatedName": "modelConfigResponseOther",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "Other parameter values to be passed to the provider call.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ModelConfigResponseOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ModelConfigResponseOtherValue",
                  "type": "unknown"
                },
                "generatedName": "ModelConfigResponseOther",
                "title": "Other provider parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseName",
            "key": "name",
            "schema": {
              "generatedName": "modelConfigResponseName",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "A friendly display name for the model config. If not provided, a name will be generated.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigResponseName",
                "title": "Model config name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseDescription",
            "key": "description",
            "schema": {
              "generatedName": "modelConfigResponseDescription",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "A description of the model config.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigResponseDescription",
                "title": "Model config description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseProvider",
            "key": "provider",
            "schema": {
              "generatedName": "modelConfigResponseProvider",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "The company providing the underlying model service.",
                "generatedName": "ModelConfigResponseProvider",
                "schema": "ModelProviders",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseModel",
            "key": "model",
            "schema": {
              "description": "The model instance used. E.g. text-davinci-002.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ModelConfigResponseModel",
              "title": "Model instance used",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseMaxTokens",
            "key": "max_tokens",
            "schema": {
              "generatedName": "modelConfigResponseMaxTokens",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
                "schema": {
                  "default": -1,
                  "type": "int"
                },
                "generatedName": "ModelConfigResponseMaxTokens",
                "title": "Maximum tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseTemperature",
            "key": "temperature",
            "schema": {
              "generatedName": "modelConfigResponseTemperature",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "ModelConfigResponseTemperature",
                "title": "Sampling temperature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseTopP",
            "key": "top_p",
            "schema": {
              "generatedName": "modelConfigResponseTopP",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "ModelConfigResponseTopP",
                "title": "Top p probability mass",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseStop",
            "key": "stop",
            "schema": {
              "generatedName": "modelConfigResponseStop",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "value": {
                  "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
                  "generatedName": "ModelConfigResponseStop",
                  "title": "Stop sequence(s)",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ModelConfigResponseStop",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "ModelConfigResponseStopItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "ModelConfigResponseStop",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponsePresencePenalty",
            "key": "presence_penalty",
            "schema": {
              "generatedName": "modelConfigResponsePresencePenalty",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "ModelConfigResponsePresencePenalty",
                "title": "Penalize tokens on whether present.",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseFrequencyPenalty",
            "key": "frequency_penalty",
            "schema": {
              "generatedName": "modelConfigResponseFrequencyPenalty",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "ModelConfigResponseFrequencyPenalty",
                "title": "Penalize tokens on whether frequent.",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseSeed",
            "key": "seed",
            "schema": {
              "generatedName": "modelConfigResponseSeed",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "ModelConfigResponseSeed",
                "nameOverride": "Seed",
                "title": "Seed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseResponseFormat",
            "key": "response_format",
            "schema": {
              "generatedName": "modelConfigResponseResponseFormat",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "The format of the response. Only type json_object is currently supported for chat.",
                "generatedName": "ModelConfigResponseResponseFormat",
                "schema": "ResponseFormat",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponsePromptTemplate",
            "key": "prompt_template",
            "schema": {
              "generatedName": "modelConfigResponsePromptTemplate",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "Prompt template that will take your specified inputs to form your final request to the model. NB: Input variables within the prompt template should be specified with syntax: {{INPUT_NAME}}.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigResponsePromptTemplate",
                "title": "Prompt template",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseChatTemplate",
            "key": "chat_template",
            "schema": {
              "generatedName": "modelConfigResponseChatTemplate",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "Messages prepended to the list of messages sent to the provider. These messages that will take your specified inputs to form your final request to the provider model. NB: Input variables within the template should be specified with syntax: {{INPUT_NAME}}.",
                "value": {
                  "generatedName": "ModelConfigResponseChatTemplateItem",
                  "schema": "ChatMessageWithToolCall",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ModelConfigResponseChatTemplate",
                "title": "Chat template",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseToolConfigs",
            "key": "tool_configs",
            "schema": {
              "generatedName": "modelConfigResponseToolConfigs",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "availability": "Deprecated",
              "value": {
                "description": "NB: Deprecated with tools field. Definition of tools shown to the model.",
                "availability": "Deprecated",
                "value": {
                  "generatedName": "ModelConfigResponseToolConfigsItem",
                  "schema": "ToolConfigResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ModelConfigResponseToolConfigs",
                "title": "Tool configs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "availability": "Deprecated"
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseTools",
            "key": "tools",
            "schema": {
              "generatedName": "modelConfigResponseTools",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "Tools shown to the model.",
                "value": {
                  "generatedName": "ModelConfigResponseToolsItem",
                  "schema": "src__external__app__models__v4__configs__ToolResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ModelConfigResponseTools",
                "nameOverride": "Tools",
                "title": "Tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigResponseEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "modelConfigResponseEndpoint",
              "nameOverride": "ModelConfigResponse",
              "title": "ModelConfigResponse",
              "value": {
                "description": "The provider model endpoint used.",
                "generatedName": "ModelConfigResponseEndpoint",
                "schema": "ModelEndpoints",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Model config request.\n\nContains fields that are common to all (i.e. both chat and complete) endpoints.",
        "generatedName": "ModelConfigResponse",
        "nameOverride": "ModelConfigResponse",
        "title": "ModelConfigResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelConfigToolRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelConfigToolRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the tool shown to the model.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ModelConfigToolRequestName",
              "title": "Tool name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigToolRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "modelConfigToolRequestDescription",
              "nameOverride": "ModelConfigToolRequest",
              "title": "ModelConfigToolRequest",
              "value": {
                "description": "The description of the tool shown to the model.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigToolRequestDescription",
                "title": "Tool description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigToolRequestParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "modelConfigToolRequestParameters",
              "nameOverride": "ModelConfigToolRequest",
              "title": "ModelConfigToolRequest",
              "value": {
                "description": "Definition of parameters needed to run the tool. Provided in jsonschema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ModelConfigToolRequestParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ModelConfigToolRequestParametersValue",
                  "type": "unknown"
                },
                "generatedName": "ModelConfigToolRequestParameters",
                "title": "Schema of tool arguments.",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigToolRequestSource",
            "key": "source",
            "schema": {
              "generatedName": "modelConfigToolRequestSource",
              "nameOverride": "ModelConfigToolRequest",
              "title": "ModelConfigToolRequest",
              "value": {
                "description": "Source of the tool. If defined at an organization level will be 'organization' else 'inline'.",
                "generatedName": "ModelConfigToolRequestSource",
                "schema": "ToolSource",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigToolRequestSourceCode",
            "key": "source_code",
            "schema": {
              "generatedName": "modelConfigToolRequestSourceCode",
              "nameOverride": "ModelConfigToolRequest",
              "title": "ModelConfigToolRequest",
              "value": {
                "description": "Code source of the tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigToolRequestSourceCode",
                "title": "Code source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigToolRequestOther",
            "key": "other",
            "schema": {
              "generatedName": "modelConfigToolRequestOther",
              "nameOverride": "ModelConfigToolRequest",
              "title": "ModelConfigToolRequest",
              "value": {
                "description": "Other parameters that define the config.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ModelConfigToolRequestOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ModelConfigToolRequestOtherValue",
                  "type": "unknown"
                },
                "generatedName": "ModelConfigToolRequestOther",
                "title": "Other parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelConfigToolRequestPresetName",
            "key": "preset_name",
            "schema": {
              "generatedName": "modelConfigToolRequestPresetName",
              "nameOverride": "ModelConfigToolRequest",
              "title": "ModelConfigToolRequest",
              "value": {
                "description": "If is_preset = true, this is the name of the preset tool on Humanloop. This is used as the key to look up the Humanloop runtime of the tool",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelConfigToolRequestPresetName",
                "title": "preset_name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Definition of tool within a model config.\n\nThe subset of ToolConfig parameters received by the chat endpoint.\nDoes not have things like the signature or setup schema.",
        "generatedName": "ModelConfigToolRequest",
        "nameOverride": "ModelConfigToolRequest",
        "title": "ModelConfigToolRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelEndpoints": {
        "description": "Supported model provider endpoints.",
        "generatedName": "ModelEndpoints",
        "nameOverride": "ModelEndpoints",
        "title": "ModelEndpoints",
        "values": [
          {
            "generatedName": "complete",
            "value": "complete",
            "casing": {}
          },
          {
            "generatedName": "chat",
            "value": "chat",
            "casing": {}
          },
          {
            "generatedName": "edit",
            "value": "edit",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ModelProviders": {
        "description": "Supported model providers.",
        "generatedName": "ModelProviders",
        "nameOverride": "ModelProviders",
        "title": "ModelProviders",
        "values": [
          {
            "generatedName": "openai",
            "value": "openai",
            "casing": {}
          },
          {
            "generatedName": "openai_azure",
            "value": "openai_azure",
            "casing": {}
          },
          {
            "generatedName": "ai21",
            "value": "ai21",
            "casing": {}
          },
          {
            "generatedName": "mock",
            "value": "mock",
            "casing": {}
          },
          {
            "generatedName": "anthropic",
            "value": "anthropic",
            "casing": {}
          },
          {
            "generatedName": "langchain",
            "value": "langchain",
            "casing": {}
          },
          {
            "generatedName": "cohere",
            "value": "cohere",
            "casing": {}
          },
          {
            "generatedName": "replicate",
            "value": "replicate",
            "casing": {}
          },
          {
            "generatedName": "google",
            "value": "google",
            "casing": {}
          },
          {
            "generatedName": "groq",
            "value": "groq",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "MonitoringEvaluatorEnvironmentRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorEnvironmentRequestEvaluatorId",
            "key": "evaluator_id",
            "schema": {
              "description": "Unique identifier for the Evaluator to be used for monitoring.",
              "schema": {
                "type": "string"
              },
              "generatedName": "MonitoringEvaluatorEnvironmentRequestEvaluatorId",
              "title": "Evaluator ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorEnvironmentRequestEnvironmentId",
            "key": "environment_id",
            "schema": {
              "description": "Unique identifier for the Environment. The Evaluator Version deployed to this Environment will be used for monitoring.",
              "schema": {
                "type": "string"
              },
              "generatedName": "MonitoringEvaluatorEnvironmentRequestEnvironmentId",
              "title": "Environment ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MonitoringEvaluatorEnvironmentRequest",
        "nameOverride": "MonitoringEvaluatorEnvironmentRequest",
        "title": "MonitoringEvaluatorEnvironmentRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MonitoringEvaluatorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorResponseVersionReference",
            "key": "version_reference",
            "schema": {
              "description": "The Evaluator Version used for monitoring. This can be a specific Version by ID, or a Version deployed to an Environment.",
              "generatedName": "MonitoringEvaluatorResponseVersionReference",
              "schema": "VersionReferenceResponse",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorResponseVersion",
            "key": "version",
            "schema": {
              "generatedName": "monitoringEvaluatorResponseVersion",
              "nameOverride": "MonitoringEvaluatorResponse",
              "title": "MonitoringEvaluatorResponse",
              "value": {
                "description": "The deployed Version.",
                "generatedName": "MonitoringEvaluatorResponseVersion",
                "schema": "EvaluatorResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorResponseState",
            "key": "state",
            "schema": {
              "description": "The state of the Monitoring Evaluator. Either `active` or `inactive`",
              "generatedName": "MonitoringEvaluatorResponseState",
              "schema": "MonitoringEvaluatorState",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "MonitoringEvaluatorResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "MonitoringEvaluatorResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MonitoringEvaluatorResponse",
        "nameOverride": "MonitoringEvaluatorResponse",
        "title": "MonitoringEvaluatorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MonitoringEvaluatorState": {
        "description": "State of an evaluator connected to a file",
        "generatedName": "MonitoringEvaluatorState",
        "nameOverride": "MonitoringEvaluatorState",
        "title": "MonitoringEvaluatorState",
        "values": [
          {
            "generatedName": "active",
            "value": "active",
            "casing": {}
          },
          {
            "generatedName": "inactive",
            "value": "inactive",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "MonitoringEvaluatorVersionRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "monitoringEvaluatorVersionRequestEvaluatorVersionId",
            "key": "evaluator_version_id",
            "schema": {
              "description": "Unique identifier for the Evaluator Version to be used for monitoring.",
              "schema": {
                "type": "string"
              },
              "generatedName": "MonitoringEvaluatorVersionRequestEvaluatorVersionId",
              "title": "Evaluator Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MonitoringEvaluatorVersionRequest",
        "nameOverride": "MonitoringEvaluatorVersionRequest",
        "title": "MonitoringEvaluatorVersionRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "NumericEvaluatorVersionStats": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsEvaluatorVersionId",
            "key": "evaluator_version_id",
            "schema": {
              "description": "Unique identifier for the Evaluator Version.",
              "schema": {
                "type": "string"
              },
              "generatedName": "NumericEvaluatorVersionStatsEvaluatorVersionId",
              "title": "Evaluator Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsTotalLogs",
            "key": "total_logs",
            "schema": {
              "description": "The total number of Logs generated by this Evaluator Version on the Evaluated Version's Logs. This includes Nulls and Errors.",
              "schema": {
                "type": "int"
              },
              "generatedName": "NumericEvaluatorVersionStatsTotalLogs",
              "title": "Total Evaluator Logs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsNumJudgments",
            "key": "num_judgments",
            "schema": {
              "description": "The total number of Evaluator judgments for this Evaluator Version. This excludes Nulls and Errors.",
              "schema": {
                "type": "int"
              },
              "generatedName": "NumericEvaluatorVersionStatsNumJudgments",
              "title": "Number of Judgments",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsNumNulls",
            "key": "num_nulls",
            "schema": {
              "description": "The total number of null judgments (i.e. abstentions) for this Evaluator Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "NumericEvaluatorVersionStatsNumNulls",
              "title": "Number of Nulls",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsNumErrors",
            "key": "num_errors",
            "schema": {
              "description": "The total number of errored Evaluators for this Evaluator Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "NumericEvaluatorVersionStatsNumErrors",
              "title": "Number of Errors",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsMean",
            "key": "mean",
            "schema": {
              "generatedName": "numericEvaluatorVersionStatsMean",
              "nameOverride": "NumericEvaluatorVersionStats",
              "title": "NumericEvaluatorVersionStats",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "NumericEvaluatorVersionStatsMean",
                "nameOverride": "Mean",
                "title": "Mean",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsStd",
            "key": "std",
            "schema": {
              "generatedName": "numericEvaluatorVersionStatsStd",
              "nameOverride": "NumericEvaluatorVersionStats",
              "title": "NumericEvaluatorVersionStats",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "NumericEvaluatorVersionStatsStd",
                "nameOverride": "Std",
                "title": "Std",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "numericEvaluatorVersionStatsPercentiles",
            "key": "percentiles",
            "schema": {
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "NumericEvaluatorVersionStatsPercentilesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "NumericEvaluatorVersionStatsPercentilesValue",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "NumericEvaluatorVersionStatsPercentiles",
              "title": "Percentiles",
              "nameOverride": "Percentiles",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Base attributes for stats for an Evaluator Version-Evaluated Version pair\nin the Evaluation Report.",
        "generatedName": "NumericEvaluatorVersionStats",
        "nameOverride": "NumericEvaluatorVersionStats",
        "title": "NumericEvaluatorVersionStats",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ObservabilityStatus": {
        "description": "Status of a Log for observability.\n\nObservability is implemented by running monitoring Evaluators on Logs.",
        "generatedName": "ObservabilityStatus",
        "nameOverride": "ObservabilityStatus",
        "title": "ObservabilityStatus",
        "values": [
          {
            "generatedName": "pending",
            "value": "pending",
            "casing": {}
          },
          {
            "generatedName": "running",
            "value": "running",
            "casing": {}
          },
          {
            "generatedName": "completed",
            "value": "completed",
            "casing": {}
          },
          {
            "generatedName": "failed",
            "value": "failed",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "OverallStats": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "overallStatsNumDatapoints",
            "key": "num_datapoints",
            "schema": {
              "description": "The total number of Datapoints in the Evaluation Report's Dataset Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "OverallStatsNumDatapoints",
              "title": "Number of Datapoints",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "overallStatsTotalLogs",
            "key": "total_logs",
            "schema": {
              "description": "The total number of Logs in the Evaluation Report.",
              "schema": {
                "type": "int"
              },
              "generatedName": "OverallStatsTotalLogs",
              "title": "Total Logs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "overallStatsTotalEvaluatorLogs",
            "key": "total_evaluator_logs",
            "schema": {
              "description": "The total number of Evaluator Logs in the Evaluation Report.",
              "schema": {
                "type": "int"
              },
              "generatedName": "OverallStatsTotalEvaluatorLogs",
              "title": "Total Evaluator Logs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OverallStats",
        "nameOverride": "OverallStats",
        "title": "OverallStats",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedData_DatapointResponse_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedDataDatapointResponseRecords",
            "key": "records",
            "schema": {
              "value": {
                "generatedName": "PaginatedDataDatapointResponseRecordsItem",
                "schema": "DatapointResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedDataDatapointResponseRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataDatapointResponsePage",
            "key": "page",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataDatapointResponsePage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataDatapointResponseSize",
            "key": "size",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataDatapointResponseSize",
              "nameOverride": "Size",
              "title": "Size",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataDatapointResponseTotal",
            "key": "total",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataDatapointResponseTotal",
              "nameOverride": "Total",
              "title": "Total",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedDataDatapointResponse",
        "title": "PaginatedData[DatapointResponse]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedData_DatasetResponse_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedDataDatasetResponseRecords",
            "key": "records",
            "schema": {
              "value": {
                "generatedName": "PaginatedDataDatasetResponseRecordsItem",
                "schema": "DatasetResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedDataDatasetResponseRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataDatasetResponsePage",
            "key": "page",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataDatasetResponsePage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataDatasetResponseSize",
            "key": "size",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataDatasetResponseSize",
              "nameOverride": "Size",
              "title": "Size",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataDatasetResponseTotal",
            "key": "total",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataDatasetResponseTotal",
              "nameOverride": "Total",
              "title": "Total",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedDataDatasetResponse",
        "title": "PaginatedData[DatasetResponse]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedData_EvaluationResponse_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedDataEvaluationResponseRecords",
            "key": "records",
            "schema": {
              "value": {
                "generatedName": "PaginatedDataEvaluationResponseRecordsItem",
                "schema": "EvaluationResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedDataEvaluationResponseRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataEvaluationResponsePage",
            "key": "page",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataEvaluationResponsePage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataEvaluationResponseSize",
            "key": "size",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataEvaluationResponseSize",
              "nameOverride": "Size",
              "title": "Size",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataEvaluationResponseTotal",
            "key": "total",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataEvaluationResponseTotal",
              "nameOverride": "Total",
              "title": "Total",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedDataEvaluationResponse",
        "title": "PaginatedData[EvaluationResponse]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedData_PromptLogResponse_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedDataPromptLogResponseRecords",
            "key": "records",
            "schema": {
              "value": {
                "generatedName": "PaginatedDataPromptLogResponseRecordsItem",
                "schema": "PromptLogResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedDataPromptLogResponseRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataPromptLogResponsePage",
            "key": "page",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataPromptLogResponsePage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataPromptLogResponseSize",
            "key": "size",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataPromptLogResponseSize",
              "nameOverride": "Size",
              "title": "Size",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataPromptLogResponseTotal",
            "key": "total",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataPromptLogResponseTotal",
              "nameOverride": "Total",
              "title": "Total",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedDataPromptLogResponse",
        "title": "PaginatedData[PromptLogResponse]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedData_SessionResponse_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedDataSessionResponseRecords",
            "key": "records",
            "schema": {
              "value": {
                "generatedName": "PaginatedDataSessionResponseRecordsItem",
                "schema": "SessionResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PaginatedDataSessionResponseRecords",
              "nameOverride": "Records",
              "title": "Records",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataSessionResponsePage",
            "key": "page",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataSessionResponsePage",
              "nameOverride": "Page",
              "title": "Page",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataSessionResponseSize",
            "key": "size",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataSessionResponseSize",
              "nameOverride": "Size",
              "title": "Size",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedDataSessionResponseTotal",
            "key": "total",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PaginatedDataSessionResponseTotal",
              "nameOverride": "Total",
              "title": "Total",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedDataSessionResponse",
        "title": "PaginatedData[SessionResponse]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PlatformAccessEnum": {
        "description": "An enumeration.",
        "generatedName": "PlatformAccessEnum",
        "nameOverride": "PlatformAccessEnum",
        "title": "PlatformAccessEnum",
        "values": [
          {
            "generatedName": "superadmin",
            "value": "superadmin",
            "casing": {}
          },
          {
            "generatedName": "supportadmin",
            "value": "supportadmin",
            "casing": {}
          },
          {
            "generatedName": "user",
            "value": "user",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ProjectSortBy": {
        "description": "An enumeration.",
        "generatedName": "ProjectSortBy",
        "nameOverride": "ProjectSortBy",
        "title": "ProjectSortBy",
        "values": [
          {
            "generatedName": "created_at",
            "value": "created_at",
            "casing": {}
          },
          {
            "generatedName": "updated_at",
            "value": "updated_at",
            "casing": {}
          },
          {
            "generatedName": "name",
            "value": "name",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PromptCallLogResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseOutput",
            "key": "output",
            "schema": {
              "generatedName": "promptCallLogResponseOutput",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallLogResponseOutput",
                "title": "Model output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseRawOutput",
            "key": "raw_output",
            "schema": {
              "generatedName": "promptCallLogResponseRawOutput",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Raw output from the provider.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallLogResponseRawOutput",
                "title": "Raw output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "promptCallLogResponseCreatedAt",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "User defined timestamp for when the log was created. ",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PromptCallLogResponseCreatedAt",
                "title": "Created at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseError",
            "key": "error",
            "schema": {
              "generatedName": "promptCallLogResponseError",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Error message if the log is an error.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallLogResponseError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseProviderLatency",
            "key": "provider_latency",
            "schema": {
              "generatedName": "promptCallLogResponseProviderLatency",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Duration of the logged event in seconds.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptCallLogResponseProviderLatency",
                "title": "Log latency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseOutputMessage",
            "key": "output_message",
            "schema": {
              "generatedName": "promptCallLogResponseOutputMessage",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "The message returned by the provider.",
                "generatedName": "PromptCallLogResponseOutputMessage",
                "schema": "ChatMessage",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponsePromptTokens",
            "key": "prompt_tokens",
            "schema": {
              "generatedName": "promptCallLogResponsePromptTokens",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Number of tokens in the prompt used to generate the output.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptCallLogResponsePromptTokens",
                "title": "Prompt tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseOutputTokens",
            "key": "output_tokens",
            "schema": {
              "generatedName": "promptCallLogResponseOutputTokens",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Number of tokens in the output generated by the model.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptCallLogResponseOutputTokens",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponsePromptCost",
            "key": "prompt_cost",
            "schema": {
              "generatedName": "promptCallLogResponsePromptCost",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the prompt.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptCallLogResponsePromptCost",
                "title": "Prompt cost",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseOutputCost",
            "key": "output_cost",
            "schema": {
              "generatedName": "promptCallLogResponseOutputCost",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the output.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptCallLogResponseOutputCost",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseFinishReason",
            "key": "finish_reason",
            "schema": {
              "generatedName": "promptCallLogResponseFinishReason",
              "nameOverride": "PromptCallLogResponse",
              "title": "PromptCallLogResponse",
              "value": {
                "description": "Reason the generation finished.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallLogResponseFinishReason",
                "title": "Finish reason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallLogResponseIndex",
            "key": "index",
            "schema": {
              "description": "The index of the sample in the batch.",
              "schema": {
                "type": "int"
              },
              "generatedName": "PromptCallLogResponseIndex",
              "nameOverride": "Index",
              "title": "Index",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Sample specific response details for a Prompt call",
        "generatedName": "PromptCallLogResponse",
        "nameOverride": "PromptCallLogResponse",
        "title": "PromptCallLogResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptCallRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptCallRequestPrompt",
            "key": "prompt",
            "schema": {
              "generatedName": "promptCallRequestPrompt",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Details of your Prompt. A new Prompt version will be created if the provided details are new.",
                "generatedName": "PromptCallRequestPrompt",
                "schema": "PromptKernelRequest",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestMessages",
            "key": "messages",
            "schema": {
              "generatedName": "promptCallRequestMessages",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "The messages passed to the to provider chat endpoint.",
                "value": {
                  "generatedName": "PromptCallRequestMessagesItem",
                  "schema": "ChatMessage",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptCallRequestMessages",
                "nameOverride": "Messages",
                "title": "Messages",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestToolChoice",
            "key": "tool_choice",
            "schema": {
              "generatedName": "promptCallRequestToolChoice",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "value": {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "generatedName": "PromptCallRequestToolChoice",
                  "title": "Tool choice",
                  "schemas": [
                    {
                      "value": {
                        "value": "none",
                        "type": "string"
                      },
                      "generatedName": "PromptCallRequestToolChoiceNone",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "auto",
                        "type": "string"
                      },
                      "generatedName": "PromptCallRequestToolChoiceAuto",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "required",
                        "type": "string"
                      },
                      "generatedName": "PromptCallRequestToolChoiceRequired",
                      "type": "literal"
                    },
                    {
                      "generatedName": "PromptCallRequestToolChoiceThree",
                      "schema": "ToolChoice",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "promptCallRequestSessionId",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Unique identifier for the Session to associate the Log to. Allows you to record multiple Logs to a Session (using an ID kept by your internal systems) by passing the same `session_id` in subsequent log requests. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallRequestSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "promptCallRequestParentId",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Unique identifier for the parent Log in a Session. Should only be provided if `session_id` is provided. If provided, the Log will be nested under the parent Log within the Session.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallRequestParentId",
                "title": "Parent ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "promptCallRequestInputs",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "The inputs passed to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptCallRequestInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptCallRequestInputsValue",
                  "type": "unknown"
                },
                "generatedName": "PromptCallRequestInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestSource",
            "key": "source",
            "schema": {
              "generatedName": "promptCallRequestSource",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Identifies where the model was called from.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallRequestSource",
                "nameOverride": "Source",
                "title": "Source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "promptCallRequestMetadata",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Any additional metadata to record.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptCallRequestMetadataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptCallRequestMetadataValue",
                  "type": "unknown"
                },
                "generatedName": "PromptCallRequestMetadata",
                "title": "Metadata",
                "nameOverride": "Metadata",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestSave",
            "key": "save",
            "schema": {
              "generatedName": "promptCallRequestSave",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Whether the request/response payloads will be stored on Humanloop.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "PromptCallRequestSave",
                "nameOverride": "Save",
                "title": "Save",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestSourceDatapointId",
            "key": "source_datapoint_id",
            "schema": {
              "generatedName": "promptCallRequestSourceDatapointId",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallRequestSourceDatapointId",
                "title": "Source Datapoint ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestBatches",
            "key": "batches",
            "schema": {
              "generatedName": "promptCallRequestBatches",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Array of Batch Ids that this log is part of. Batches are used to group Logs together for offline Evaluations",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptCallRequestBatchesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PromptCallRequestBatches",
                "title": "Batch IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestUser",
            "key": "user",
            "schema": {
              "generatedName": "promptCallRequestUser",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "End-user ID related to the Log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallRequestUser",
                "title": "End-user identifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "promptCallRequestEnvironment",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "The name of the Environment the Log is associated to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallRequestEnvironment",
                "title": "Environment name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestProviderApiKeys",
            "key": "provider_api_keys",
            "schema": {
              "generatedName": "promptCallRequestProviderApiKeys",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "API keys required by each provider to make API calls. The API keys provided here are not stored by Humanloop. If not specified here, Humanloop will fall back to the key saved to your organization.",
                "generatedName": "PromptCallRequestProviderApiKeys",
                "schema": "ProviderApiKeys",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestNumSamples",
            "key": "num_samples",
            "schema": {
              "generatedName": "promptCallRequestNumSamples",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "The number of generations.",
                "schema": {
                  "default": 1,
                  "type": "int"
                },
                "generatedName": "PromptCallRequestNumSamples",
                "title": "Number of samples",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestStream",
            "key": "stream",
            "schema": {
              "generatedName": "promptCallRequestStream",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "If true, tokens will be sent as data-only server-sent events. If num_samples > 1, samples are streamed back independently.",
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "PromptCallRequestStream",
                "title": "Whether to stream partial results",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestReturnInputs",
            "key": "return_inputs",
            "schema": {
              "generatedName": "promptCallRequestReturnInputs",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Whether to return the inputs in the response. If false, the response will contain an empty dictionary under inputs. This is useful for reducing the size of the response. Defaults to true.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "PromptCallRequestReturnInputs",
                "title": "Return inputs",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestLogprobs",
            "key": "logprobs",
            "schema": {
              "generatedName": "promptCallRequestLogprobs",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "Include the log probabilities of the top n tokens in the provider_response",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptCallRequestLogprobs",
                "title": "Log probabilities of most likely n tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallRequestSuffix",
            "key": "suffix",
            "schema": {
              "generatedName": "promptCallRequestSuffix",
              "nameOverride": "PromptCallRequest",
              "title": "PromptCallRequest",
              "value": {
                "description": "The suffix that comes after a completion of inserted text. Useful for completions that act like inserts.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallRequestSuffix",
                "title": "Completion suffix",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Base request for any generations/logs.",
        "generatedName": "PromptCallRequest",
        "nameOverride": "PromptCallRequest",
        "title": "PromptCallRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptCallResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptCallResponsePrompt",
            "key": "prompt",
            "schema": {
              "description": "Prompt details used to generate the log.",
              "generatedName": "PromptCallResponsePrompt",
              "schema": "PromptResponse",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseMessages",
            "key": "messages",
            "schema": {
              "generatedName": "promptCallResponseMessages",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "The messages passed to the to provider chat endpoint.",
                "value": {
                  "generatedName": "PromptCallResponseMessagesItem",
                  "schema": "ChatMessage",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptCallResponseMessages",
                "nameOverride": "Messages",
                "title": "Messages",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseToolChoice",
            "key": "tool_choice",
            "schema": {
              "generatedName": "promptCallResponseToolChoice",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "value": {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "generatedName": "PromptCallResponseToolChoice",
                  "title": "Tool choice",
                  "schemas": [
                    {
                      "value": {
                        "value": "none",
                        "type": "string"
                      },
                      "generatedName": "PromptCallResponseToolChoiceNone",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "auto",
                        "type": "string"
                      },
                      "generatedName": "PromptCallResponseToolChoiceAuto",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "required",
                        "type": "string"
                      },
                      "generatedName": "PromptCallResponseToolChoiceRequired",
                      "type": "literal"
                    },
                    {
                      "generatedName": "PromptCallResponseToolChoiceThree",
                      "schema": "ToolChoice",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "promptCallResponseSessionId",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "Unique identifier for the Session to associate the Log to. Allows you to record multiple Logs to a Session (using an ID kept by your internal systems) by passing the same `session_id` in subsequent log requests. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallResponseSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "promptCallResponseParentId",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "Unique identifier for the parent Log in a Session. Should only be provided if `session_id` is provided. If provided, the Log will be nested under the parent Log within the Session.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallResponseParentId",
                "title": "Parent ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "promptCallResponseInputs",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "The inputs passed to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptCallResponseInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptCallResponseInputsValue",
                  "type": "unknown"
                },
                "generatedName": "PromptCallResponseInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseSource",
            "key": "source",
            "schema": {
              "generatedName": "promptCallResponseSource",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "Identifies where the model was called from.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallResponseSource",
                "nameOverride": "Source",
                "title": "Source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "promptCallResponseMetadata",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "Any additional metadata to record.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptCallResponseMetadataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptCallResponseMetadataValue",
                  "type": "unknown"
                },
                "generatedName": "PromptCallResponseMetadata",
                "title": "Metadata",
                "nameOverride": "Metadata",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseSave",
            "key": "save",
            "schema": {
              "generatedName": "promptCallResponseSave",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "Whether the request/response payloads will be stored on Humanloop.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "PromptCallResponseSave",
                "nameOverride": "Save",
                "title": "Save",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseSourceDatapointId",
            "key": "source_datapoint_id",
            "schema": {
              "generatedName": "promptCallResponseSourceDatapointId",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallResponseSourceDatapointId",
                "title": "Source Datapoint ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseBatches",
            "key": "batches",
            "schema": {
              "generatedName": "promptCallResponseBatches",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "Array of Batch Ids that this log is part of. Batches are used to group Logs together for offline Evaluations",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptCallResponseBatchesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PromptCallResponseBatches",
                "title": "Batch IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseUser",
            "key": "user",
            "schema": {
              "generatedName": "promptCallResponseUser",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "End-user ID related to the Log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallResponseUser",
                "title": "End-user identifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "promptCallResponseEnvironment",
              "nameOverride": "PromptCallResponse",
              "title": "PromptCallResponse",
              "value": {
                "description": "The name of the Environment the Log is associated to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallResponseEnvironment",
                "title": "Environment name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseId",
            "key": "id",
            "schema": {
              "description": "ID of the log.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptCallResponseId",
              "title": "Log ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallResponseLogs",
            "key": "logs",
            "schema": {
              "description": "The logs generated by the Prompt call.",
              "value": {
                "generatedName": "PromptCallResponseLogsItem",
                "schema": "PromptCallLogResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PromptCallResponseLogs",
              "nameOverride": "Logs",
              "title": "Logs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response model for a Prompt call with potentially multiple log samples.",
        "generatedName": "PromptCallResponse",
        "nameOverride": "PromptCallResponse",
        "title": "PromptCallResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptCallStreamResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseOutput",
            "key": "output",
            "schema": {
              "generatedName": "promptCallStreamResponseOutput",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallStreamResponseOutput",
                "title": "Model output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseRawOutput",
            "key": "raw_output",
            "schema": {
              "generatedName": "promptCallStreamResponseRawOutput",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Raw output from the provider.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallStreamResponseRawOutput",
                "title": "Raw output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "promptCallStreamResponseCreatedAt",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "User defined timestamp for when the log was created. ",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PromptCallStreamResponseCreatedAt",
                "title": "Created at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseError",
            "key": "error",
            "schema": {
              "generatedName": "promptCallStreamResponseError",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Error message if the log is an error.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallStreamResponseError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseProviderLatency",
            "key": "provider_latency",
            "schema": {
              "generatedName": "promptCallStreamResponseProviderLatency",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Duration of the logged event in seconds.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptCallStreamResponseProviderLatency",
                "title": "Log latency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseOutputMessage",
            "key": "output_message",
            "schema": {
              "generatedName": "promptCallStreamResponseOutputMessage",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "The message returned by the provider.",
                "generatedName": "PromptCallStreamResponseOutputMessage",
                "schema": "ChatMessage",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponsePromptTokens",
            "key": "prompt_tokens",
            "schema": {
              "generatedName": "promptCallStreamResponsePromptTokens",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Number of tokens in the prompt used to generate the output.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptCallStreamResponsePromptTokens",
                "title": "Prompt tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseOutputTokens",
            "key": "output_tokens",
            "schema": {
              "generatedName": "promptCallStreamResponseOutputTokens",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Number of tokens in the output generated by the model.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptCallStreamResponseOutputTokens",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponsePromptCost",
            "key": "prompt_cost",
            "schema": {
              "generatedName": "promptCallStreamResponsePromptCost",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the prompt.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptCallStreamResponsePromptCost",
                "title": "Prompt cost",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseOutputCost",
            "key": "output_cost",
            "schema": {
              "generatedName": "promptCallStreamResponseOutputCost",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the output.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptCallStreamResponseOutputCost",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseFinishReason",
            "key": "finish_reason",
            "schema": {
              "generatedName": "promptCallStreamResponseFinishReason",
              "nameOverride": "PromptCallStreamResponse",
              "title": "PromptCallStreamResponse",
              "value": {
                "description": "Reason the generation finished.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptCallStreamResponseFinishReason",
                "title": "Finish reason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseIndex",
            "key": "index",
            "schema": {
              "description": "The index of the sample in the batch.",
              "schema": {
                "type": "int"
              },
              "generatedName": "PromptCallStreamResponseIndex",
              "nameOverride": "Index",
              "title": "Index",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseId",
            "key": "id",
            "schema": {
              "description": "ID of the log.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptCallStreamResponseId",
              "title": "Log ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponsePromptId",
            "key": "prompt_id",
            "schema": {
              "description": "ID of the Prompt the log belongs to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptCallStreamResponsePromptId",
              "title": "Prompt ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptCallStreamResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "ID of the specific version of the Prompt.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptCallStreamResponseVersionId",
              "title": "Prompt Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response model for calling Prompt in streaming mode.",
        "generatedName": "PromptCallStreamResponse",
        "nameOverride": "PromptCallStreamResponse",
        "title": "PromptCallStreamResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptKernelRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptKernelRequestModel",
            "key": "model",
            "schema": {
              "description": "The model instance used, e.g. `gpt-4`. See [supported models](https://humanloop.com/docs/supported-models)",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptKernelRequestModel",
              "title": "Model instance used",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "promptKernelRequestEndpoint",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "The provider model endpoint used.",
                "generatedName": "PromptKernelRequestEndpoint",
                "schema": "ModelEndpoints",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestTemplate",
            "key": "template",
            "schema": {
              "generatedName": "promptKernelRequestTemplate",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "value": {
                  "description": "For chat endpoint, provide a Chat template. For completion endpoint, provide a Prompt template. Input variables within the template should be specified with double curly bracket syntax: {{INPUT_NAME}}.",
                  "generatedName": "PromptKernelRequestTemplate",
                  "title": "Template",
                  "nameOverride": "Template",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "PromptKernelRequestTemplate",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "generatedName": "PromptKernelRequestTemplateItem",
                        "schema": "ChatMessage",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "generatedName": "PromptKernelRequestTemplate",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestProvider",
            "key": "provider",
            "schema": {
              "generatedName": "promptKernelRequestProvider",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "The company providing the underlying model service.",
                "generatedName": "PromptKernelRequestProvider",
                "schema": "ModelProviders",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestMaxTokens",
            "key": "max_tokens",
            "schema": {
              "generatedName": "promptKernelRequestMaxTokens",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
                "schema": {
                  "default": -1,
                  "type": "int"
                },
                "generatedName": "PromptKernelRequestMaxTokens",
                "title": "Maximum tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestTemperature",
            "key": "temperature",
            "schema": {
              "generatedName": "promptKernelRequestTemperature",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "PromptKernelRequestTemperature",
                "title": "Sampling temperature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestTopP",
            "key": "top_p",
            "schema": {
              "generatedName": "promptKernelRequestTopP",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "PromptKernelRequestTopP",
                "title": "Top p probability mass",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestStop",
            "key": "stop",
            "schema": {
              "generatedName": "promptKernelRequestStop",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "value": {
                  "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
                  "generatedName": "PromptKernelRequestStop",
                  "title": "Stop sequence(s)",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "PromptKernelRequestStop",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "PromptKernelRequestStopItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "PromptKernelRequestStop",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestPresencePenalty",
            "key": "presence_penalty",
            "schema": {
              "generatedName": "promptKernelRequestPresencePenalty",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "PromptKernelRequestPresencePenalty",
                "title": "Presence penalty",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestFrequencyPenalty",
            "key": "frequency_penalty",
            "schema": {
              "generatedName": "promptKernelRequestFrequencyPenalty",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "PromptKernelRequestFrequencyPenalty",
                "title": "Frequency penalty",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestOther",
            "key": "other",
            "schema": {
              "generatedName": "promptKernelRequestOther",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "Other parameter values to be passed to the provider call.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptKernelRequestOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptKernelRequestOtherValue",
                  "type": "unknown"
                },
                "generatedName": "PromptKernelRequestOther",
                "title": "Other provider parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestSeed",
            "key": "seed",
            "schema": {
              "generatedName": "promptKernelRequestSeed",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptKernelRequestSeed",
                "nameOverride": "Seed",
                "title": "Seed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestResponseFormat",
            "key": "response_format",
            "schema": {
              "generatedName": "promptKernelRequestResponseFormat",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
                "generatedName": "PromptKernelRequestResponseFormat",
                "schema": "ResponseFormat",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestTools",
            "key": "tools",
            "schema": {
              "generatedName": "promptKernelRequestTools",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "The tool specification that the model can choose to call if Tool calling is supported.",
                "value": {
                  "generatedName": "PromptKernelRequestToolsItem",
                  "schema": "ToolFunction",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptKernelRequestTools",
                "nameOverride": "Tools",
                "title": "Tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptKernelRequestLinkedTools",
            "key": "linked_tools",
            "schema": {
              "generatedName": "promptKernelRequestLinkedTools",
              "nameOverride": "PromptKernelRequest",
              "title": "PromptKernelRequest",
              "value": {
                "description": "The IDs of the Tools in your organization that the model can choose to call if Tool calling is supported. The default deployed version of that tool is called.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptKernelRequestLinkedToolsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PromptKernelRequestLinkedTools",
                "title": "Linked tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptKernelRequest",
        "nameOverride": "PromptKernelRequest",
        "title": "PromptKernelRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptLogRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptLogRequestOutputMessage",
            "key": "output_message",
            "schema": {
              "generatedName": "promptLogRequestOutputMessage",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "The message returned by the provider.",
                "generatedName": "PromptLogRequestOutputMessage",
                "schema": "ChatMessage",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestPromptTokens",
            "key": "prompt_tokens",
            "schema": {
              "generatedName": "promptLogRequestPromptTokens",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Number of tokens in the prompt used to generate the output.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptLogRequestPromptTokens",
                "title": "Prompt tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestOutputTokens",
            "key": "output_tokens",
            "schema": {
              "generatedName": "promptLogRequestOutputTokens",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Number of tokens in the output generated by the model.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptLogRequestOutputTokens",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestPromptCost",
            "key": "prompt_cost",
            "schema": {
              "generatedName": "promptLogRequestPromptCost",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Cost in dollars associated to the tokens in the prompt.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptLogRequestPromptCost",
                "title": "Prompt cost",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestOutputCost",
            "key": "output_cost",
            "schema": {
              "generatedName": "promptLogRequestOutputCost",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Cost in dollars associated to the tokens in the output.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptLogRequestOutputCost",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestFinishReason",
            "key": "finish_reason",
            "schema": {
              "generatedName": "promptLogRequestFinishReason",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Reason the generation finished.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestFinishReason",
                "title": "Finish reason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestPrompt",
            "key": "prompt",
            "schema": {
              "generatedName": "promptLogRequestPrompt",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Details of your Prompt. A new Prompt version will be created if the provided details are new.",
                "generatedName": "PromptLogRequestPrompt",
                "schema": "PromptKernelRequest",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestMessages",
            "key": "messages",
            "schema": {
              "generatedName": "promptLogRequestMessages",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "The messages passed to the to provider chat endpoint.",
                "value": {
                  "generatedName": "PromptLogRequestMessagesItem",
                  "schema": "ChatMessage",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptLogRequestMessages",
                "nameOverride": "Messages",
                "title": "Messages",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestToolChoice",
            "key": "tool_choice",
            "schema": {
              "generatedName": "promptLogRequestToolChoice",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "value": {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "generatedName": "PromptLogRequestToolChoice",
                  "title": "Tool choice",
                  "schemas": [
                    {
                      "value": {
                        "value": "none",
                        "type": "string"
                      },
                      "generatedName": "PromptLogRequestToolChoiceNone",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "auto",
                        "type": "string"
                      },
                      "generatedName": "PromptLogRequestToolChoiceAuto",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "required",
                        "type": "string"
                      },
                      "generatedName": "PromptLogRequestToolChoiceRequired",
                      "type": "literal"
                    },
                    {
                      "generatedName": "PromptLogRequestToolChoiceThree",
                      "schema": "ToolChoice",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestOutput",
            "key": "output",
            "schema": {
              "generatedName": "promptLogRequestOutput",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestOutput",
                "title": "Model output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestRawOutput",
            "key": "raw_output",
            "schema": {
              "generatedName": "promptLogRequestRawOutput",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Raw output from the provider.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestRawOutput",
                "title": "Raw output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "promptLogRequestCreatedAt",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "User defined timestamp for when the log was created. ",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PromptLogRequestCreatedAt",
                "title": "Created at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestError",
            "key": "error",
            "schema": {
              "generatedName": "promptLogRequestError",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Error message if the log is an error.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestProviderLatency",
            "key": "provider_latency",
            "schema": {
              "generatedName": "promptLogRequestProviderLatency",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Duration of the logged event in seconds.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptLogRequestProviderLatency",
                "title": "Log latency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestProviderRequest",
            "key": "provider_request",
            "schema": {
              "generatedName": "promptLogRequestProviderRequest",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Raw request sent to provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogRequestProviderRequestKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogRequestProviderRequestValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogRequestProviderRequest",
                "title": "Provider request",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestProviderResponse",
            "key": "provider_response",
            "schema": {
              "generatedName": "promptLogRequestProviderResponse",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Raw response received the provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogRequestProviderResponseKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogRequestProviderResponseValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogRequestProviderResponse",
                "title": "Provider response",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "promptLogRequestSessionId",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Unique identifier for the Session to associate the Log to. Allows you to record multiple Logs to a Session (using an ID kept by your internal systems) by passing the same `session_id` in subsequent log requests. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "promptLogRequestParentId",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Unique identifier for the parent Log in a Session. Should only be provided if `session_id` is provided. If provided, the Log will be nested under the parent Log within the Session.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestParentId",
                "title": "Parent ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "promptLogRequestInputs",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "The inputs passed to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogRequestInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogRequestInputsValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogRequestInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestSource",
            "key": "source",
            "schema": {
              "generatedName": "promptLogRequestSource",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Identifies where the model was called from.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestSource",
                "nameOverride": "Source",
                "title": "Source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "promptLogRequestMetadata",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Any additional metadata to record.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogRequestMetadataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogRequestMetadataValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogRequestMetadata",
                "title": "Metadata",
                "nameOverride": "Metadata",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestSave",
            "key": "save",
            "schema": {
              "generatedName": "promptLogRequestSave",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Whether the request/response payloads will be stored on Humanloop.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "PromptLogRequestSave",
                "nameOverride": "Save",
                "title": "Save",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestSourceDatapointId",
            "key": "source_datapoint_id",
            "schema": {
              "generatedName": "promptLogRequestSourceDatapointId",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestSourceDatapointId",
                "title": "Source Datapoint ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestBatches",
            "key": "batches",
            "schema": {
              "generatedName": "promptLogRequestBatches",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "Array of Batch Ids that this log is part of. Batches are used to group Logs together for offline Evaluations",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogRequestBatchesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PromptLogRequestBatches",
                "title": "Batch IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestUser",
            "key": "user",
            "schema": {
              "generatedName": "promptLogRequestUser",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "End-user ID related to the Log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestUser",
                "title": "End-user identifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogRequestEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "promptLogRequestEnvironment",
              "nameOverride": "PromptLogRequest",
              "title": "PromptLogRequest",
              "value": {
                "description": "The name of the Environment the Log is associated to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogRequestEnvironment",
                "title": "Environment name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request for creating a Prompt log.",
        "generatedName": "PromptLogRequest",
        "nameOverride": "PromptLogRequest",
        "title": "PromptLogRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptLogResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptLogResponseOutputMessage",
            "key": "output_message",
            "schema": {
              "generatedName": "promptLogResponseOutputMessage",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "The message returned by the provider.",
                "generatedName": "PromptLogResponseOutputMessage",
                "schema": "ChatMessage",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponsePromptTokens",
            "key": "prompt_tokens",
            "schema": {
              "generatedName": "promptLogResponsePromptTokens",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Number of tokens in the prompt used to generate the output.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptLogResponsePromptTokens",
                "title": "Prompt tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseOutputTokens",
            "key": "output_tokens",
            "schema": {
              "generatedName": "promptLogResponseOutputTokens",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Number of tokens in the output generated by the model.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptLogResponseOutputTokens",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponsePromptCost",
            "key": "prompt_cost",
            "schema": {
              "generatedName": "promptLogResponsePromptCost",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the prompt.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptLogResponsePromptCost",
                "title": "Prompt cost",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseOutputCost",
            "key": "output_cost",
            "schema": {
              "generatedName": "promptLogResponseOutputCost",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Cost in dollars associated to the tokens in the output.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptLogResponseOutputCost",
                "title": "Output tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseFinishReason",
            "key": "finish_reason",
            "schema": {
              "generatedName": "promptLogResponseFinishReason",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Reason the generation finished.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseFinishReason",
                "title": "Finish reason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponsePrompt",
            "key": "prompt",
            "schema": {
              "description": "Prompt details used to generate the log.",
              "generatedName": "PromptLogResponsePrompt",
              "schema": "PromptResponse",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseMessages",
            "key": "messages",
            "schema": {
              "generatedName": "promptLogResponseMessages",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "The messages passed to the to provider chat endpoint.",
                "value": {
                  "generatedName": "PromptLogResponseMessagesItem",
                  "schema": "ChatMessage",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptLogResponseMessages",
                "nameOverride": "Messages",
                "title": "Messages",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseToolChoice",
            "key": "tool_choice",
            "schema": {
              "generatedName": "promptLogResponseToolChoice",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "value": {
                  "description": "Controls how the model uses tools. The following options are supported: \n- `'none'` means the model will not call any tool and instead generates a message; this is the default when no tools are provided as part of the Prompt. \n- `'auto'` means the model can decide to call one or more of the provided tools; this is the default when tools are provided as part of the Prompt. \n- `'required'` means the model can decide to call one or more of the provided tools. \n- `{'type': 'function', 'function': {name': <TOOL_NAME>}}` forces the model to use the named function.",
                  "generatedName": "PromptLogResponseToolChoice",
                  "title": "Tool choice",
                  "schemas": [
                    {
                      "value": {
                        "value": "none",
                        "type": "string"
                      },
                      "generatedName": "PromptLogResponseToolChoiceNone",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "auto",
                        "type": "string"
                      },
                      "generatedName": "PromptLogResponseToolChoiceAuto",
                      "type": "literal"
                    },
                    {
                      "value": {
                        "value": "required",
                        "type": "string"
                      },
                      "generatedName": "PromptLogResponseToolChoiceRequired",
                      "type": "literal"
                    },
                    {
                      "generatedName": "PromptLogResponseToolChoiceThree",
                      "schema": "ToolChoice",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseOutput",
            "key": "output",
            "schema": {
              "generatedName": "promptLogResponseOutput",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseOutput",
                "title": "Model output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseRawOutput",
            "key": "raw_output",
            "schema": {
              "generatedName": "promptLogResponseRawOutput",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Raw output from the provider.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseRawOutput",
                "title": "Raw output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "promptLogResponseCreatedAt",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "User defined timestamp for when the log was created. ",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PromptLogResponseCreatedAt",
                "title": "Created at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseError",
            "key": "error",
            "schema": {
              "generatedName": "promptLogResponseError",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Error message if the log is an error.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseProviderLatency",
            "key": "provider_latency",
            "schema": {
              "generatedName": "promptLogResponseProviderLatency",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Duration of the logged event in seconds.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "PromptLogResponseProviderLatency",
                "title": "Log latency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseProviderRequest",
            "key": "provider_request",
            "schema": {
              "generatedName": "promptLogResponseProviderRequest",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Raw request sent to provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogResponseProviderRequestKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogResponseProviderRequestValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogResponseProviderRequest",
                "title": "Provider request",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseProviderResponse",
            "key": "provider_response",
            "schema": {
              "generatedName": "promptLogResponseProviderResponse",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Raw response received the provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogResponseProviderResponseKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogResponseProviderResponseValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogResponseProviderResponse",
                "title": "Provider response",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "promptLogResponseSessionId",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Unique identifier for the Session to associate the Log to. Allows you to record multiple Logs to a Session (using an ID kept by your internal systems) by passing the same `session_id` in subsequent log requests. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "promptLogResponseParentId",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Unique identifier for the parent Log in a Session. Should only be provided if `session_id` is provided. If provided, the Log will be nested under the parent Log within the Session.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseParentId",
                "title": "Parent ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "promptLogResponseInputs",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "The inputs passed to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogResponseInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogResponseInputsValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogResponseInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseSource",
            "key": "source",
            "schema": {
              "generatedName": "promptLogResponseSource",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Identifies where the model was called from.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseSource",
                "nameOverride": "Source",
                "title": "Source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "promptLogResponseMetadata",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Any additional metadata to record.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogResponseMetadataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptLogResponseMetadataValue",
                  "type": "unknown"
                },
                "generatedName": "PromptLogResponseMetadata",
                "title": "Metadata",
                "nameOverride": "Metadata",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseSave",
            "key": "save",
            "schema": {
              "generatedName": "promptLogResponseSave",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Whether the request/response payloads will be stored on Humanloop.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "PromptLogResponseSave",
                "nameOverride": "Save",
                "title": "Save",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseSourceDatapointId",
            "key": "source_datapoint_id",
            "schema": {
              "generatedName": "promptLogResponseSourceDatapointId",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseSourceDatapointId",
                "title": "Source Datapoint ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseBatches",
            "key": "batches",
            "schema": {
              "generatedName": "promptLogResponseBatches",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "Array of Batch Ids that this log is part of. Batches are used to group Logs together for offline Evaluations",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptLogResponseBatchesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PromptLogResponseBatches",
                "title": "Batch IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseUser",
            "key": "user",
            "schema": {
              "generatedName": "promptLogResponseUser",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "End-user ID related to the Log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseUser",
                "title": "End-user identifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "promptLogResponseEnvironment",
              "nameOverride": "PromptLogResponse",
              "title": "PromptLogResponse",
              "value": {
                "description": "The name of the Environment the Log is associated to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptLogResponseEnvironment",
                "title": "Environment name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptLogResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Log.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptLogResponseId",
              "title": "Log ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request for creating a Prompt log.",
        "generatedName": "PromptLogResponse",
        "nameOverride": "PromptLogResponse",
        "title": "PromptLogResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptRequestName",
            "key": "name",
            "schema": {
              "generatedName": "promptRequestName",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "Name of the Prompt, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptRequestName",
                "title": "Prompt name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "promptRequestDirectoryId",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "Unique identifier for the Directory of the Prompt. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptRequestDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestModel",
            "key": "model",
            "schema": {
              "description": "The model instance used, e.g. `gpt-4`. See [supported models](https://humanloop.com/docs/supported-models)",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptRequestModel",
              "title": "Model instance used",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "promptRequestEndpoint",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "The provider model endpoint used.",
                "generatedName": "PromptRequestEndpoint",
                "schema": "ModelEndpoints",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestTemplate",
            "key": "template",
            "schema": {
              "generatedName": "promptRequestTemplate",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "value": {
                  "description": "For chat endpoint, provide a Chat template. For completion endpoint, provide a Prompt template. Input variables within the template should be specified with double curly bracket syntax: {{INPUT_NAME}}.",
                  "generatedName": "PromptRequestTemplate",
                  "title": "Template",
                  "nameOverride": "Template",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "PromptRequestTemplate",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "generatedName": "PromptRequestTemplateItem",
                        "schema": "ChatMessage",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "generatedName": "PromptRequestTemplate",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestProvider",
            "key": "provider",
            "schema": {
              "generatedName": "promptRequestProvider",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "The company providing the underlying model service.",
                "generatedName": "PromptRequestProvider",
                "schema": "ModelProviders",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestMaxTokens",
            "key": "max_tokens",
            "schema": {
              "generatedName": "promptRequestMaxTokens",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
                "schema": {
                  "default": -1,
                  "type": "int"
                },
                "generatedName": "PromptRequestMaxTokens",
                "title": "Maximum tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestTemperature",
            "key": "temperature",
            "schema": {
              "generatedName": "promptRequestTemperature",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "PromptRequestTemperature",
                "title": "Sampling temperature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestTopP",
            "key": "top_p",
            "schema": {
              "generatedName": "promptRequestTopP",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "PromptRequestTopP",
                "title": "Top p probability mass",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestStop",
            "key": "stop",
            "schema": {
              "generatedName": "promptRequestStop",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "value": {
                  "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
                  "generatedName": "PromptRequestStop",
                  "title": "Stop sequence(s)",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "PromptRequestStop",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "PromptRequestStopItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "PromptRequestStop",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestPresencePenalty",
            "key": "presence_penalty",
            "schema": {
              "generatedName": "promptRequestPresencePenalty",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "PromptRequestPresencePenalty",
                "title": "Presence penalty",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestFrequencyPenalty",
            "key": "frequency_penalty",
            "schema": {
              "generatedName": "promptRequestFrequencyPenalty",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "PromptRequestFrequencyPenalty",
                "title": "Frequency penalty",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestOther",
            "key": "other",
            "schema": {
              "generatedName": "promptRequestOther",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "Other parameter values to be passed to the provider call.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptRequestOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptRequestOtherValue",
                  "type": "unknown"
                },
                "generatedName": "PromptRequestOther",
                "title": "Other provider parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestSeed",
            "key": "seed",
            "schema": {
              "generatedName": "promptRequestSeed",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptRequestSeed",
                "nameOverride": "Seed",
                "title": "Seed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestResponseFormat",
            "key": "response_format",
            "schema": {
              "generatedName": "promptRequestResponseFormat",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
                "generatedName": "PromptRequestResponseFormat",
                "schema": "ResponseFormat",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestTools",
            "key": "tools",
            "schema": {
              "generatedName": "promptRequestTools",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "The tool specification that the model can choose to call if Tool calling is supported.",
                "value": {
                  "generatedName": "PromptRequestToolsItem",
                  "schema": "ToolFunction",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptRequestTools",
                "nameOverride": "Tools",
                "title": "Tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestLinkedTools",
            "key": "linked_tools",
            "schema": {
              "generatedName": "promptRequestLinkedTools",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "The IDs of the Tools in your organization that the model can choose to call if Tool calling is supported. The default deployed version of that tool is called.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptRequestLinkedToolsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PromptRequestLinkedTools",
                "title": "Linked tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptRequestCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "promptRequestCommitMessage",
              "nameOverride": "PromptRequest",
              "title": "PromptRequest",
              "value": {
                "description": "Message describing the changes made.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptRequestCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request model for creating a new Prompt",
        "generatedName": "PromptRequest",
        "nameOverride": "PromptRequest",
        "title": "PromptRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Prompt.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptResponseId",
              "title": "Prompt ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseName",
            "key": "name",
            "schema": {
              "description": "Name of the Prompt, which is used as a unique identifier.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptResponseName",
              "title": "Prompt name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the specific Prompt Version. If no query params provided, the default deployed Prompt Version is returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptResponseVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "promptResponseDirectoryId",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "Unique identifier for the Directory of the Prompt. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptResponseDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseEnvironments",
            "key": "environments",
            "schema": {
              "generatedName": "promptResponseEnvironments",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The list of environments the Prompt Version is deployed to.",
                "value": {
                  "generatedName": "PromptResponseEnvironmentsItem",
                  "schema": "EnvironmentResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptResponseEnvironments",
                "nameOverride": "Environments",
                "title": "Environments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PromptResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PromptResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "promptResponseCreatedBy",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The user who created the Prompt.",
                "generatedName": "PromptResponseCreatedBy",
                "schema": "src__external__app__models__v5__users__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseStatus",
            "key": "status",
            "schema": {
              "description": "The status of the Prompt Version.",
              "generatedName": "PromptResponseStatus",
              "schema": "VersionStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseLastUsedAt",
            "key": "last_used_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "PromptResponseLastUsedAt",
              "title": "Last Used At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseModel",
            "key": "model",
            "schema": {
              "description": "The model instance used, e.g. `gpt-4`. See [supported models](https://humanloop.com/docs/supported-models)",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptResponseModel",
              "title": "Model instance used",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "promptResponseEndpoint",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The provider model endpoint used.",
                "generatedName": "PromptResponseEndpoint",
                "schema": "ModelEndpoints",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseTemplate",
            "key": "template",
            "schema": {
              "generatedName": "promptResponseTemplate",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "value": {
                  "description": "For chat endpoint, provide a Chat template. For completion endpoint, provide a Prompt template. Input variables within the template should be specified with double curly bracket syntax: {{INPUT_NAME}}.",
                  "generatedName": "PromptResponseTemplate",
                  "title": "Template",
                  "nameOverride": "Template",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "PromptResponseTemplate",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "generatedName": "PromptResponseTemplateItem",
                        "schema": "ChatMessage",
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "reference"
                      },
                      "generatedName": "PromptResponseTemplate",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseProvider",
            "key": "provider",
            "schema": {
              "generatedName": "promptResponseProvider",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The company providing the underlying model service.",
                "generatedName": "PromptResponseProvider",
                "schema": "ModelProviders",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseMaxTokens",
            "key": "max_tokens",
            "schema": {
              "generatedName": "promptResponseMaxTokens",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The maximum number of tokens to generate. Provide max_tokens=-1 to dynamically calculate the maximum number of tokens to generate given the length of the prompt",
                "schema": {
                  "default": -1,
                  "type": "int"
                },
                "generatedName": "PromptResponseMaxTokens",
                "title": "Maximum tokens",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseTemperature",
            "key": "temperature",
            "schema": {
              "generatedName": "promptResponseTemperature",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "What sampling temperature to use when making a generation. Higher values means the model will be more creative.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "PromptResponseTemperature",
                "title": "Sampling temperature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseTopP",
            "key": "top_p",
            "schema": {
              "generatedName": "promptResponseTopP",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.",
                "schema": {
                  "default": 1,
                  "type": "double"
                },
                "generatedName": "PromptResponseTopP",
                "title": "Top p probability mass",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseStop",
            "key": "stop",
            "schema": {
              "generatedName": "promptResponseStop",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "value": {
                  "description": "The string (or list of strings) after which the model will stop generating. The returned text will not contain the stop sequence.",
                  "generatedName": "PromptResponseStop",
                  "title": "Stop sequence(s)",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "PromptResponseStop",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "PromptResponseStopItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "generatedName": "PromptResponseStop",
                      "groupName": [],
                      "type": "array"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponsePresencePenalty",
            "key": "presence_penalty",
            "schema": {
              "generatedName": "promptResponsePresencePenalty",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "PromptResponsePresencePenalty",
                "title": "Presence penalty",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseFrequencyPenalty",
            "key": "frequency_penalty",
            "schema": {
              "generatedName": "promptResponseFrequencyPenalty",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on how frequently they appear in the generation so far.",
                "schema": {
                  "default": 0,
                  "type": "double"
                },
                "generatedName": "PromptResponseFrequencyPenalty",
                "title": "Frequency penalty",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseOther",
            "key": "other",
            "schema": {
              "generatedName": "promptResponseOther",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "Other parameter values to be passed to the provider call.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptResponseOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "PromptResponseOtherValue",
                  "type": "unknown"
                },
                "generatedName": "PromptResponseOther",
                "title": "Other provider parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseSeed",
            "key": "seed",
            "schema": {
              "generatedName": "promptResponseSeed",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "If specified, model will make a best effort to sample deterministically, but it is not guaranteed.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "PromptResponseSeed",
                "nameOverride": "Seed",
                "title": "Seed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseResponseFormat",
            "key": "response_format",
            "schema": {
              "generatedName": "promptResponseResponseFormat",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The format of the response. Only `{\"type\": \"json_object\"}` is currently supported for chat.",
                "generatedName": "PromptResponseResponseFormat",
                "schema": "ResponseFormat",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseTools",
            "key": "tools",
            "schema": {
              "generatedName": "promptResponseTools",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The tool specification that the model can choose to call if Tool calling is supported.",
                "value": {
                  "generatedName": "PromptResponseToolsItem",
                  "schema": "ToolFunction",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptResponseTools",
                "nameOverride": "Tools",
                "title": "Tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseLinkedTools",
            "key": "linked_tools",
            "schema": {
              "generatedName": "promptResponseLinkedTools",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "The IDs of the Tools in your organization that the model can choose to call if Tool calling is supported. The default deployed version of that tool is called.",
                "value": {
                  "generatedName": "PromptResponseLinkedToolsItem",
                  "schema": "LinkedToolResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PromptResponseLinkedTools",
                "title": "Linked Tools",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "promptResponseCommitMessage",
              "nameOverride": "PromptResponse",
              "title": "PromptResponse",
              "value": {
                "description": "Message describing the changes made.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PromptResponseCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseVersionLogsCount",
            "key": "version_logs_count",
            "schema": {
              "description": "The number of logs that have been generated for this Prompt Version",
              "schema": {
                "type": "int"
              },
              "generatedName": "PromptResponseVersionLogsCount",
              "title": "Number of logs for this version",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseTotalLogsCount",
            "key": "total_logs_count",
            "schema": {
              "description": "The number of logs that have been generated across all Prompt Versions",
              "schema": {
                "type": "int"
              },
              "generatedName": "PromptResponseTotalLogsCount",
              "title": "Total number of logs across all versions",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptResponseInputs",
            "key": "inputs",
            "schema": {
              "description": "Inputs associated to the Prompt. Inputs correspond to any of the variables used within the Prompt template.",
              "value": {
                "generatedName": "PromptResponseInputsItem",
                "schema": "InputResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PromptResponseInputs",
              "title": "Prompt inputs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request model for creating a new Prompt",
        "generatedName": "PromptResponse",
        "nameOverride": "PromptResponse",
        "title": "PromptResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProviderApiKeys": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "providerApiKeysOpenai",
            "key": "openai",
            "schema": {
              "generatedName": "providerApiKeysOpenai",
              "nameOverride": "ProviderApiKeys",
              "title": "ProviderApiKeys",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProviderApiKeysOpenai",
                "nameOverride": "Openai",
                "title": "Openai",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "providerApiKeysAi21",
            "key": "ai21",
            "schema": {
              "generatedName": "providerApiKeysAi21",
              "nameOverride": "ProviderApiKeys",
              "title": "ProviderApiKeys",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProviderApiKeysAi21",
                "title": "Ai21",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "providerApiKeysMock",
            "key": "mock",
            "schema": {
              "generatedName": "providerApiKeysMock",
              "nameOverride": "ProviderApiKeys",
              "title": "ProviderApiKeys",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProviderApiKeysMock",
                "nameOverride": "Mock",
                "title": "Mock",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "providerApiKeysAnthropic",
            "key": "anthropic",
            "schema": {
              "generatedName": "providerApiKeysAnthropic",
              "nameOverride": "ProviderApiKeys",
              "title": "ProviderApiKeys",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProviderApiKeysAnthropic",
                "nameOverride": "Anthropic",
                "title": "Anthropic",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "providerApiKeysCohere",
            "key": "cohere",
            "schema": {
              "generatedName": "providerApiKeysCohere",
              "nameOverride": "ProviderApiKeys",
              "title": "ProviderApiKeys",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProviderApiKeysCohere",
                "nameOverride": "Cohere",
                "title": "Cohere",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "providerApiKeysOpenaiAzure",
            "key": "openai_azure",
            "schema": {
              "generatedName": "providerApiKeysOpenaiAzure",
              "nameOverride": "ProviderApiKeys",
              "title": "ProviderApiKeys",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProviderApiKeysOpenaiAzure",
                "title": "Openai Azure",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "providerApiKeysOpenaiAzureEndpoint",
            "key": "openai_azure_endpoint",
            "schema": {
              "generatedName": "providerApiKeysOpenaiAzureEndpoint",
              "nameOverride": "ProviderApiKeys",
              "title": "ProviderApiKeys",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ProviderApiKeysOpenaiAzureEndpoint",
                "title": "Openai Azure Endpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ProviderApiKeys",
        "nameOverride": "ProviderApiKeys",
        "title": "ProviderApiKeys",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResponseFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responseFormatType",
            "key": "type",
            "schema": {
              "value": {
                "value": "json_object",
                "type": "string"
              },
              "generatedName": "ResponseFormatType",
              "nameOverride": "Type",
              "title": "Type",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response format of the model.",
        "generatedName": "ResponseFormat",
        "nameOverride": "ResponseFormat",
        "title": "ResponseFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RunSyncEvaluationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "runSyncEvaluationRequestFileId",
            "key": "file_id",
            "schema": {
              "description": "The ID of the Dataset that the datapoints belong to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RunSyncEvaluationRequestFileId",
              "title": "Dataset ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "runSyncEvaluationRequestEvaluator",
            "key": "evaluator",
            "schema": {
              "value": {
                "commonProperties": [],
                "discriminantProperty": "evaluator_type",
                "generatedName": "RunSyncEvaluationRequestEvaluator",
                "title": "Evaluator",
                "nameOverride": "Evaluator",
                "schemas": {
                  "llm": {
                    "generatedName": "ComponentsSchemasLlmEvaluatorRequest",
                    "schema": "LLMEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "python": {
                    "generatedName": "ComponentsSchemasCodeEvaluatorRequest",
                    "schema": "CodeEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "human": {
                    "generatedName": "ComponentsSchemasHumanEvaluatorRequest",
                    "schema": "HumanEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                },
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "discriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "runSyncEvaluationRequestEvaluatorVersionId",
            "key": "evaluator_version_id",
            "schema": {
              "generatedName": "runSyncEvaluationRequestEvaluatorVersionId",
              "nameOverride": "RunSyncEvaluationRequest",
              "title": "RunSyncEvaluationRequest",
              "value": {
                "description": "The ID of the Evaluator Version being debugged if it already exists and is being edited.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RunSyncEvaluationRequestEvaluatorVersionId",
                "title": "Evaluator Version ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "runSyncEvaluationRequestLogIds",
            "key": "log_ids",
            "schema": {
              "generatedName": "runSyncEvaluationRequestLogIds",
              "nameOverride": "RunSyncEvaluationRequest",
              "title": "RunSyncEvaluationRequest",
              "value": {
                "description": "The IDs of the logs on which to run the draft evaluator.Provide one of `log_ids` or `datapoint_ids`.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RunSyncEvaluationRequestLogIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RunSyncEvaluationRequestLogIds",
                "title": "Log IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "runSyncEvaluationRequestDatapointIds",
            "key": "datapoint_ids",
            "schema": {
              "generatedName": "runSyncEvaluationRequestDatapointIds",
              "nameOverride": "RunSyncEvaluationRequest",
              "title": "RunSyncEvaluationRequest",
              "value": {
                "description": "The IDs of the evaluation datapoints on which to run the draft evaluator. ",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RunSyncEvaluationRequestDatapointIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RunSyncEvaluationRequestDatapointIds",
                "title": "Evaluation datapoint IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "runSyncEvaluationRequestPromptVersionId",
            "key": "prompt_version_id",
            "schema": {
              "generatedName": "runSyncEvaluationRequestPromptVersionId",
              "nameOverride": "RunSyncEvaluationRequest",
              "title": "RunSyncEvaluationRequest",
              "value": {
                "description": "The ID of the Prompt Version to use generate datapoints for the evaluation datapoints. Only required if `datapoint` is provided; has no effect otherwise.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RunSyncEvaluationRequestPromptVersionId",
                "title": "Prompt Version ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request model for a synchronous evaluator execution on a collection\nof datapoints in a file.\n\nThe evaluator is defined in the request, rather than refering to a\npreviously saved evaluator, as this is used for debugging in the evaluation\nfunction creation debug console.",
        "generatedName": "RunSyncEvaluationRequest",
        "nameOverride": "RunSyncEvaluationRequest",
        "title": "RunSyncEvaluationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SessionResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sessionResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for the Session.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SessionResponseId",
              "title": "Session ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sessionResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SessionResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sessionResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SessionResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sessionResponseLogs",
            "key": "logs",
            "schema": {
              "description": "List of Logs associated with this Session.",
              "value": {
                "generatedName": "SessionResponseLogsItem",
                "schema": "PromptLogResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SessionResponseLogs",
              "nameOverride": "Logs",
              "title": "Logs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SessionResponse",
        "nameOverride": "SessionResponse",
        "title": "SessionResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SortOrder": {
        "description": "An enumeration.",
        "generatedName": "SortOrder",
        "nameOverride": "SortOrder",
        "title": "SortOrder",
        "values": [
          {
            "generatedName": "asc",
            "value": "asc",
            "casing": {}
          },
          {
            "generatedName": "desc",
            "value": "desc",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "TextChatContent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "textChatContentText",
            "key": "text",
            "schema": {
              "description": "The message's text content.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TextChatContentText",
              "nameOverride": "Text",
              "title": "Text",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TextChatContent",
        "nameOverride": "TextChatContent",
        "title": "TextChatContent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TimeUnit": {
        "description": "An enumeration.",
        "generatedName": "TimeUnit",
        "nameOverride": "TimeUnit",
        "title": "TimeUnit",
        "values": [
          {
            "generatedName": "day",
            "value": "day",
            "casing": {}
          },
          {
            "generatedName": "week",
            "value": "week",
            "casing": {}
          },
          {
            "generatedName": "month",
            "value": "month",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ToolCall": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolCallId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolCallId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolCallType",
            "key": "type",
            "schema": {
              "generatedName": "ToolCallType",
              "schema": "src__domain__chat_types__enums__ToolType",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "toolCallFunction",
            "key": "function",
            "schema": {
              "generatedName": "ToolCallFunction",
              "schema": "FunctionTool",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A tool call to be made.",
        "generatedName": "ToolCall",
        "nameOverride": "ToolCall",
        "title": "ToolCall",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolChoice": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolChoiceType",
            "key": "type",
            "schema": {
              "generatedName": "ToolChoiceType",
              "schema": "src__domain__chat_types__enums__ToolType",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "toolChoiceFunction",
            "key": "function",
            "schema": {
              "generatedName": "ToolChoiceFunction",
              "schema": "FunctionToolChoice",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Tool choice to force the model to use a tool.",
        "generatedName": "ToolChoice",
        "nameOverride": "ToolChoice",
        "title": "ToolChoice",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolConfigRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolConfigRequestName",
            "key": "name",
            "schema": {
              "description": "The name of the tool shown to the model.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolConfigRequestName",
              "title": "Tool name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "toolConfigRequestDescription",
              "nameOverride": "ToolConfigRequest",
              "title": "ToolConfigRequest",
              "value": {
                "description": "The description of the tool shown to the model.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolConfigRequestDescription",
                "title": "Tool description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigRequestParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "toolConfigRequestParameters",
              "nameOverride": "ToolConfigRequest",
              "title": "ToolConfigRequest",
              "value": {
                "description": "Definition of parameters needed to run the tool. Provided in jsonschema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolConfigRequestParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolConfigRequestParametersValue",
                  "type": "unknown"
                },
                "generatedName": "ToolConfigRequestParameters",
                "title": "Schema of tool arguments.",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigRequestSource",
            "key": "source",
            "schema": {
              "generatedName": "toolConfigRequestSource",
              "nameOverride": "ToolConfigRequest",
              "title": "ToolConfigRequest",
              "value": {
                "description": "Source of the tool. If defined at an organization level will be 'organization' else 'inline'.",
                "generatedName": "ToolConfigRequestSource",
                "schema": "ToolSource",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigRequestSourceCode",
            "key": "source_code",
            "schema": {
              "generatedName": "toolConfigRequestSourceCode",
              "nameOverride": "ToolConfigRequest",
              "title": "ToolConfigRequest",
              "value": {
                "description": "Code source of the tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolConfigRequestSourceCode",
                "title": "Code source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigRequestOther",
            "key": "other",
            "schema": {
              "generatedName": "toolConfigRequestOther",
              "nameOverride": "ToolConfigRequest",
              "title": "ToolConfigRequest",
              "value": {
                "description": "Other parameters that define the config.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolConfigRequestOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolConfigRequestOtherValue",
                  "type": "unknown"
                },
                "generatedName": "ToolConfigRequestOther",
                "title": "Other parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigRequestPresetName",
            "key": "preset_name",
            "schema": {
              "generatedName": "toolConfigRequestPresetName",
              "nameOverride": "ToolConfigRequest",
              "title": "ToolConfigRequest",
              "value": {
                "description": "If is_preset = true, this is the name of the preset tool on Humanloop. This is used as the key to look up the Humanloop runtime of the tool",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolConfigRequestPresetName",
                "title": "preset_name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigRequestType",
            "key": "type",
            "schema": {
              "value": {
                "value": "tool",
                "type": "string"
              },
              "generatedName": "ToolConfigRequestType",
              "nameOverride": "Type",
              "title": "Type",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Definition of tool within a model config.\n\nThe subset of ToolConfig parameters received by the chat endpoint.\nDoes not have things like the signature or setup schema.",
        "generatedName": "ToolConfigRequest",
        "nameOverride": "ToolConfigRequest",
        "title": "ToolConfigRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolConfigResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolConfigResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of config. Starts with `config_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolConfigResponseId",
              "title": "Config ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseOther",
            "key": "other",
            "schema": {
              "generatedName": "toolConfigResponseOther",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "Other parameters that define the config.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolConfigResponseOtherKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolConfigResponseOtherValue",
                  "type": "unknown"
                },
                "generatedName": "ToolConfigResponseOther",
                "title": "Other parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "toolConfigResponseCreatedBy",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "The user who created the config.",
                "generatedName": "ToolConfigResponseCreatedBy",
                "schema": "src__external__app__models__v4__orgs__base_models__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseStatus",
            "key": "status",
            "schema": {
              "description": "Whether the config is committed or not.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolConfigResponseStatus",
              "nameOverride": "Status",
              "title": "Status",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseName",
            "key": "name",
            "schema": {
              "description": "Name for the tool referenced by the model.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolConfigResponseName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseDescription",
            "key": "description",
            "schema": {
              "generatedName": "toolConfigResponseDescription",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "Description of the tool referenced by the model",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolConfigResponseDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseSource",
            "key": "source",
            "schema": {
              "generatedName": "toolConfigResponseSource",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "Source of the tool. If defined at an organization level will be 'organization' else 'inline'.",
                "generatedName": "ToolConfigResponseSource",
                "schema": "ToolSource",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseSourceCode",
            "key": "source_code",
            "schema": {
              "generatedName": "toolConfigResponseSourceCode",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "Code source of the tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolConfigResponseSourceCode",
                "title": "Source Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseSetupSchema",
            "key": "setup_schema",
            "schema": {
              "generatedName": "toolConfigResponseSetupSchema",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "Definition of parameters needed to run the tool. Provided in jsonschema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolConfigResponseSetupSchemaKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolConfigResponseSetupSchemaValue",
                  "type": "unknown"
                },
                "generatedName": "ToolConfigResponseSetupSchema",
                "title": "Setup arguments schema.",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "toolConfigResponseParameters",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "Definition of parameters needed to run the tool. Provided in jsonschema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolConfigResponseParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolConfigResponseParametersValue",
                  "type": "unknown"
                },
                "generatedName": "ToolConfigResponseParameters",
                "title": "Run arguments schema.",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseSignature",
            "key": "signature",
            "schema": {
              "generatedName": "toolConfigResponseSignature",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "The function signature of the tool when being called.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolConfigResponseSignature",
                "nameOverride": "Signature",
                "title": "Signature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponseIsPreset",
            "key": "is_preset",
            "schema": {
              "generatedName": "toolConfigResponseIsPreset",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "Whether the tool is one where Humanloop defines runtime or not.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ToolConfigResponseIsPreset",
                "title": "Is preset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolConfigResponsePresetName",
            "key": "preset_name",
            "schema": {
              "generatedName": "toolConfigResponsePresetName",
              "nameOverride": "ToolConfigResponse",
              "title": "ToolConfigResponse",
              "value": {
                "description": "If is_preset = true, this is the name of the preset tool on Humanloop. This is used as the key to lookup the Humanloop runtime of the tool",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolConfigResponsePresetName",
                "title": "preset_name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ToolConfigResponse",
        "nameOverride": "ToolConfigResponse",
        "title": "ToolConfigResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolFunction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolFunctionName",
            "key": "name",
            "schema": {
              "description": "Name for the tool referenced by the model.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolFunctionName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolFunctionDescription",
            "key": "description",
            "schema": {
              "description": "Description of the tool referenced by the model",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolFunctionDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolFunctionParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "toolFunctionParameters",
              "nameOverride": "ToolFunction",
              "title": "ToolFunction",
              "value": {
                "description": "Parameters needed to run the Tool, defined in JSON Schema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolFunctionParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolFunctionParametersValue",
                  "type": "unknown"
                },
                "generatedName": "ToolFunctionParameters",
                "title": "Tool parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ToolFunction",
        "nameOverride": "ToolFunction",
        "title": "ToolFunction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolKernelRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolKernelRequestFunction",
            "key": "function",
            "schema": {
              "generatedName": "toolKernelRequestFunction",
              "nameOverride": "ToolKernelRequest",
              "title": "ToolKernelRequest",
              "value": {
                "description": "Callable function specification of the Tool shown to the model for tool calling.",
                "generatedName": "ToolKernelRequestFunction",
                "schema": "ToolFunction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolKernelRequestSourceCode",
            "key": "source_code",
            "schema": {
              "generatedName": "toolKernelRequestSourceCode",
              "nameOverride": "ToolKernelRequest",
              "title": "ToolKernelRequest",
              "value": {
                "description": "Code source of the Tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolKernelRequestSourceCode",
                "title": "Source Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolKernelRequestSetupValues",
            "key": "setup_values",
            "schema": {
              "generatedName": "toolKernelRequestSetupValues",
              "nameOverride": "ToolKernelRequest",
              "title": "ToolKernelRequest",
              "value": {
                "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolKernelRequestSetupValuesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolKernelRequestSetupValuesValue",
                  "type": "unknown"
                },
                "generatedName": "ToolKernelRequestSetupValues",
                "title": "Setup values",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ToolKernelRequest",
        "nameOverride": "ToolKernelRequest",
        "title": "ToolKernelRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolLogRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolLogRequestOutput",
            "key": "output",
            "schema": {
              "generatedName": "toolLogRequestOutput",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestOutput",
                "title": "Model output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestRawOutput",
            "key": "raw_output",
            "schema": {
              "generatedName": "toolLogRequestRawOutput",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Raw output from the provider.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestRawOutput",
                "title": "Raw output",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "toolLogRequestCreatedAt",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "User defined timestamp for when the log was created. ",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "ToolLogRequestCreatedAt",
                "title": "Created at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestError",
            "key": "error",
            "schema": {
              "generatedName": "toolLogRequestError",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Error message if the log is an error.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestError",
                "nameOverride": "Error",
                "title": "Error",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestProviderLatency",
            "key": "provider_latency",
            "schema": {
              "generatedName": "toolLogRequestProviderLatency",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Duration of the logged event in seconds.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "ToolLogRequestProviderLatency",
                "title": "Log latency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestProviderRequest",
            "key": "provider_request",
            "schema": {
              "generatedName": "toolLogRequestProviderRequest",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Raw request sent to provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolLogRequestProviderRequestKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolLogRequestProviderRequestValue",
                  "type": "unknown"
                },
                "generatedName": "ToolLogRequestProviderRequest",
                "title": "Provider request",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestProviderResponse",
            "key": "provider_response",
            "schema": {
              "generatedName": "toolLogRequestProviderResponse",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Raw response received the provider.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolLogRequestProviderResponseKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolLogRequestProviderResponseValue",
                  "type": "unknown"
                },
                "generatedName": "ToolLogRequestProviderResponse",
                "title": "Provider response",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestSessionId",
            "key": "session_id",
            "schema": {
              "generatedName": "toolLogRequestSessionId",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Unique identifier for the Session to associate the Log to. Allows you to record multiple Logs to a Session (using an ID kept by your internal systems) by passing the same `session_id` in subsequent log requests. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestSessionId",
                "title": "Session ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestParentId",
            "key": "parent_id",
            "schema": {
              "generatedName": "toolLogRequestParentId",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Unique identifier for the parent Log in a Session. Should only be provided if `session_id` is provided. If provided, the Log will be nested under the parent Log within the Session.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestParentId",
                "title": "Parent ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestInputs",
            "key": "inputs",
            "schema": {
              "generatedName": "toolLogRequestInputs",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "The inputs passed to the prompt template.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolLogRequestInputsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolLogRequestInputsValue",
                  "type": "unknown"
                },
                "generatedName": "ToolLogRequestInputs",
                "title": "Inputs",
                "nameOverride": "Inputs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestSource",
            "key": "source",
            "schema": {
              "generatedName": "toolLogRequestSource",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Identifies where the model was called from.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestSource",
                "nameOverride": "Source",
                "title": "Source",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "toolLogRequestMetadata",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Any additional metadata to record.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolLogRequestMetadataKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolLogRequestMetadataValue",
                  "type": "unknown"
                },
                "generatedName": "ToolLogRequestMetadata",
                "title": "Metadata",
                "nameOverride": "Metadata",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestSave",
            "key": "save",
            "schema": {
              "generatedName": "toolLogRequestSave",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Whether the request/response payloads will be stored on Humanloop.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "ToolLogRequestSave",
                "nameOverride": "Save",
                "title": "Save",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestSourceDatapointId",
            "key": "source_datapoint_id",
            "schema": {
              "generatedName": "toolLogRequestSourceDatapointId",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestSourceDatapointId",
                "title": "Source Datapoint ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestBatches",
            "key": "batches",
            "schema": {
              "generatedName": "toolLogRequestBatches",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Array of Batch Ids that this log is part of. Batches are used to group Logs together for offline Evaluations",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolLogRequestBatchesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ToolLogRequestBatches",
                "title": "Batch IDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestUser",
            "key": "user",
            "schema": {
              "generatedName": "toolLogRequestUser",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "End-user ID related to the Log.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestUser",
                "title": "End-user identifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "toolLogRequestEnvironment",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "The name of the Environment the Log is associated to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolLogRequestEnvironment",
                "title": "Environment name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolLogRequestTool",
            "key": "tool",
            "schema": {
              "generatedName": "toolLogRequestTool",
              "nameOverride": "ToolLogRequest",
              "title": "ToolLogRequest",
              "value": {
                "description": "Details of your Tool. A new Tool version will be created if the provided details are new.",
                "generatedName": "ToolLogRequestTool",
                "schema": "ToolKernelRequest",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request for creating a Tool log.",
        "generatedName": "ToolLogRequest",
        "nameOverride": "ToolLogRequest",
        "title": "ToolLogRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolRequestFunction",
            "key": "function",
            "schema": {
              "generatedName": "toolRequestFunction",
              "nameOverride": "ToolRequest",
              "title": "ToolRequest",
              "value": {
                "description": "Callable function specification of the Tool shown to the model for tool calling.",
                "generatedName": "ToolRequestFunction",
                "schema": "ToolFunction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolRequestSourceCode",
            "key": "source_code",
            "schema": {
              "generatedName": "toolRequestSourceCode",
              "nameOverride": "ToolRequest",
              "title": "ToolRequest",
              "value": {
                "description": "Code source of the Tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolRequestSourceCode",
                "title": "Source Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolRequestSetupValues",
            "key": "setup_values",
            "schema": {
              "generatedName": "toolRequestSetupValues",
              "nameOverride": "ToolRequest",
              "title": "ToolRequest",
              "value": {
                "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolRequestSetupValuesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolRequestSetupValuesValue",
                  "type": "unknown"
                },
                "generatedName": "ToolRequestSetupValues",
                "title": "Setup values",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolRequestName",
            "key": "name",
            "schema": {
              "generatedName": "toolRequestName",
              "nameOverride": "ToolRequest",
              "title": "ToolRequest",
              "value": {
                "description": "Name of the Tool, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolRequestName",
                "title": "Tool Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolRequestDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "toolRequestDirectoryId",
              "nameOverride": "ToolRequest",
              "title": "ToolRequest",
              "value": {
                "description": "Unique identifier for the Directory of the Prompt. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolRequestDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolRequestToolType",
            "key": "tool_type",
            "schema": {
              "generatedName": "toolRequestToolType",
              "nameOverride": "ToolRequest",
              "title": "ToolRequest",
              "value": {
                "description": "Type of Tool.",
                "generatedName": "ToolRequestToolType",
                "schema": "src__domain__files__tool__ToolType",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolRequestCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "toolRequestCommitMessage",
              "nameOverride": "ToolRequest",
              "title": "ToolRequest",
              "value": {
                "description": "Message describing the changes made.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolRequestCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request to create a new Tool.",
        "generatedName": "ToolRequest",
        "nameOverride": "ToolRequest",
        "title": "ToolRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolResultResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolResultResponseId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolResultResponseId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolResultResponseName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolResultResponseName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolResultResponseSignature",
            "key": "signature",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolResultResponseSignature",
              "nameOverride": "Signature",
              "title": "Signature",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolResultResponseResult",
            "key": "result",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolResultResponseResult",
              "nameOverride": "Result",
              "title": "Result",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A result from a tool used to populate the prompt template",
        "generatedName": "ToolResultResponse",
        "nameOverride": "ToolResultResponse",
        "title": "ToolResultResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ToolSource": {
        "description": "Source of tool. Used to differentiate between tools and tool versions when they are combined in a list.\n\nV4 uses organization and inline. Those are deprecated and will be removed in favour of tool and tool_version.",
        "generatedName": "ToolSource",
        "nameOverride": "ToolSource",
        "title": "ToolSource",
        "values": [
          {
            "generatedName": "organization",
            "value": "organization",
            "casing": {}
          },
          {
            "generatedName": "inline",
            "value": "inline",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ToolTemplateResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "toolTemplateResponseName",
            "key": "name",
            "schema": {
              "description": "Name for the tool referenced by the model.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolTemplateResponseName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolTemplateResponseDescription",
            "key": "description",
            "schema": {
              "description": "Description of the tool referenced by the model",
              "schema": {
                "type": "string"
              },
              "generatedName": "ToolTemplateResponseDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolTemplateResponseParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "toolTemplateResponseParameters",
              "nameOverride": "ToolTemplateResponse",
              "title": "ToolTemplateResponse",
              "value": {
                "description": "Parameters needed to run the Tool, defined in JSON Schema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolTemplateResponseParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolTemplateResponseParametersValue",
                  "type": "unknown"
                },
                "generatedName": "ToolTemplateResponseParameters",
                "title": "Tool parameters",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolTemplateResponseSignature",
            "key": "signature",
            "schema": {
              "generatedName": "toolTemplateResponseSignature",
              "nameOverride": "ToolTemplateResponse",
              "title": "ToolTemplateResponse",
              "value": {
                "description": "Signature of the Tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ToolTemplateResponseSignature",
                "nameOverride": "Signature",
                "title": "Signature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "toolTemplateResponseSetupSchema",
            "key": "setup_schema",
            "schema": {
              "generatedName": "toolTemplateResponseSetupSchema",
              "nameOverride": "ToolTemplateResponse",
              "title": "ToolTemplateResponse",
              "value": {
                "description": "Schema required to setup the Tool runtime, e.g. API keys.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ToolTemplateResponseSetupSchemaKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "ToolTemplateResponseSetupSchemaValue",
                  "type": "unknown"
                },
                "generatedName": "ToolTemplateResponseSetupSchema",
                "title": "Setup schema",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Template for a Humanloop runnable tool.",
        "generatedName": "ToolTemplateResponse",
        "nameOverride": "ToolTemplateResponse",
        "title": "ToolTemplateResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateDatasetRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateDatasetRequestName",
            "key": "name",
            "schema": {
              "generatedName": "updateDatasetRequestName",
              "nameOverride": "UpdateDatasetRequest",
              "title": "UpdateDatasetRequest",
              "value": {
                "description": "Name of the Dataset, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateDatasetRequestName",
                "title": "Dataset name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateDatasetRequest",
        "nameOverride": "UpdateDatasetRequest",
        "title": "UpdateDatasetRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateDatesetAction": {
        "description": "An enumeration.",
        "generatedName": "UpdateDatesetAction",
        "nameOverride": "UpdateDatesetAction",
        "title": "UpdateDatesetAction",
        "values": [
          {
            "generatedName": "set",
            "value": "set",
            "casing": {}
          },
          {
            "generatedName": "add",
            "value": "add",
            "casing": {}
          },
          {
            "generatedName": "remove",
            "value": "remove",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "UpdateEvaluatorRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateEvaluatorRequestName",
            "key": "name",
            "schema": {
              "generatedName": "updateEvaluatorRequestName",
              "nameOverride": "UpdateEvaluatorRequest",
              "title": "UpdateEvaluatorRequest",
              "value": {
                "description": "Name of the Evaluator, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateEvaluatorRequestName",
                "title": "Evaluator Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateEvaluatorRequestDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "updateEvaluatorRequestDirectoryId",
              "nameOverride": "UpdateEvaluatorRequest",
              "title": "UpdateEvaluatorRequest",
              "value": {
                "description": "Unique identifier for the Directory of the Evaluator.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateEvaluatorRequestDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateEvaluatorRequest",
        "nameOverride": "UpdateEvaluatorRequest",
        "title": "UpdateEvaluatorRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdatePromptRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updatePromptRequestName",
            "key": "name",
            "schema": {
              "generatedName": "updatePromptRequestName",
              "nameOverride": "UpdatePromptRequest",
              "title": "UpdatePromptRequest",
              "value": {
                "description": "Name of the Prompt, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdatePromptRequestName",
                "title": "Prompt name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updatePromptRequestDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "updatePromptRequestDirectoryId",
              "nameOverride": "UpdatePromptRequest",
              "title": "UpdatePromptRequest",
              "value": {
                "description": "Unique identifier for the Directory of the Prompt. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdatePromptRequestDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdatePromptRequest",
        "nameOverride": "UpdatePromptRequest",
        "title": "UpdatePromptRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateToolRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateToolRequestName",
            "key": "name",
            "schema": {
              "generatedName": "updateToolRequestName",
              "nameOverride": "UpdateToolRequest",
              "title": "UpdateToolRequest",
              "value": {
                "description": "Name of the Tool, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateToolRequestName",
                "title": "Tool Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateToolRequestDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "updateToolRequestDirectoryId",
              "nameOverride": "UpdateToolRequest",
              "title": "UpdateToolRequest",
              "value": {
                "description": "Unique identifier for the Directory of the Prompt. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UpdateToolRequestDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateToolRequest",
        "nameOverride": "UpdateToolRequest",
        "title": "UpdateToolRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ValidationError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "validationErrorLoc",
            "key": "loc",
            "schema": {
              "value": {
                "value": {
                  "generatedName": "ValidationErrorLocItem",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ValidationErrorLocItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "ValidationErrorLocItem",
                      "groupName": [],
                      "type": "primitive"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "generatedName": "ValidationErrorLoc",
              "nameOverride": "Location",
              "title": "Location",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "validationErrorMsg",
            "key": "msg",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ValidationErrorMsg",
              "nameOverride": "Message",
              "title": "Message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "validationErrorType",
            "key": "type",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ValidationErrorType",
              "title": "Error Type",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ValidationError",
        "nameOverride": "ValidationError",
        "title": "ValidationError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VersionDeploymentResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "versionDeploymentResponseFile",
            "key": "file",
            "schema": {
              "value": {
                "description": "The File that the deployed Version belongs to.",
                "generatedName": "VersionDeploymentResponseFile",
                "title": "File",
                "nameOverride": "File",
                "schemas": [
                  {
                    "generatedName": "VersionDeploymentResponseFileZero",
                    "schema": "PromptResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "generatedName": "VersionDeploymentResponseFileOne",
                    "schema": "src__external__app__models__v5__tools__ToolResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "generatedName": "VersionDeploymentResponseFileTwo",
                    "schema": "DatasetResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "generatedName": "VersionDeploymentResponseFileThree",
                    "schema": "EvaluatorResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "versionDeploymentResponseEnvironment",
            "key": "environment",
            "schema": {
              "description": "The Environment that the Version is deployed to.",
              "generatedName": "VersionDeploymentResponseEnvironment",
              "schema": "EnvironmentResponse",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A variable reference to the Version deployed to an Environment",
        "generatedName": "VersionDeploymentResponse",
        "nameOverride": "VersionDeploymentResponse",
        "title": "VersionDeploymentResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VersionIdResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "versionIdResponseVersion",
            "key": "version",
            "schema": {
              "value": {
                "description": "The specific Version being referenced.",
                "generatedName": "VersionIdResponseVersion",
                "title": "Version",
                "nameOverride": "Version",
                "schemas": [
                  {
                    "generatedName": "VersionIdResponseVersionZero",
                    "schema": "PromptResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "generatedName": "VersionIdResponseVersionOne",
                    "schema": "src__external__app__models__v5__tools__ToolResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "generatedName": "VersionIdResponseVersionTwo",
                    "schema": "DatasetResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  {
                    "generatedName": "VersionIdResponseVersionThree",
                    "schema": "EvaluatorResponse",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "undiscriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A reference to a specific Version by its ID",
        "generatedName": "VersionIdResponse",
        "nameOverride": "VersionIdResponse",
        "title": "VersionIdResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VersionReferenceResponse": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "VersionReferenceResponse",
          "title": "VersionReferenceResponse",
          "nameOverride": "VersionReferenceResponse",
          "schemas": {
            "environment": {
              "generatedName": "ComponentsSchemasVersionDeploymentResponse",
              "schema": "VersionDeploymentResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "version": {
              "generatedName": "ComponentsSchemasVersionIdResponse",
              "schema": "VersionIdResponse",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "VersionStats": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "versionStatsVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the Evaluated Version.",
              "schema": {
                "type": "string"
              },
              "generatedName": "VersionStatsVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "versionStatsNumLogs",
            "key": "num_logs",
            "schema": {
              "description": "The total number of existing Logs for this Evaluated Version within the Evaluation Report. These are Logs that have been generated by this Evaluated Version on a Datapoint belonging to the Evaluation Report's Dataset Version.",
              "schema": {
                "type": "int"
              },
              "generatedName": "VersionStatsNumLogs",
              "title": "Number of Logs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "versionStatsEvaluatorVersionStats",
            "key": "evaluator_version_stats",
            "schema": {
              "description": "Stats for each Evaluator Version used to evaluate this Evaluated Version.",
              "value": {
                "value": {
                  "generatedName": "VersionStatsEvaluatorVersionStatsItem",
                  "schemas": [
                    {
                      "generatedName": "VersionStatsEvaluatorVersionStatsItemZero",
                      "schema": "NumericEvaluatorVersionStats",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    {
                      "generatedName": "VersionStatsEvaluatorVersionStatsItemOne",
                      "schema": "BooleanEvaluatorVersionStats",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "generatedName": "VersionStatsEvaluatorVersionStats",
              "title": "Evaluator Version Stats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Stats for an Evaluated Version in the Evaluation Report.",
        "generatedName": "VersionStats",
        "nameOverride": "VersionStats",
        "title": "VersionStats",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VersionStatus": {
        "description": "An enumeration.",
        "generatedName": "VersionStatus",
        "nameOverride": "VersionStatus",
        "title": "VersionStatus",
        "values": [
          {
            "generatedName": "uncommitted",
            "value": "uncommitted",
            "casing": {}
          },
          {
            "generatedName": "committed",
            "value": "committed",
            "casing": {}
          },
          {
            "generatedName": "deleted",
            "value": "deleted",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "src__domain__chat_types__enums__ToolType": {
        "description": "The type of tool to call.",
        "value": {
          "value": "function",
          "type": "string"
        },
        "generatedName": "SrcDomainChatTypesEnumsToolType",
        "nameOverride": "ToolType",
        "title": "ToolType",
        "groupName": [],
        "type": "literal"
      },
      "src__domain__files__tool__ToolType": {
        "description": "Type of tool.",
        "generatedName": "SrcDomainFilesToolToolType",
        "nameOverride": "ToolType",
        "title": "ToolType",
        "values": [
          {
            "generatedName": "pinecone_search",
            "value": "pinecone_search",
            "casing": {}
          },
          {
            "generatedName": "google",
            "value": "google",
            "casing": {}
          },
          {
            "generatedName": "mock",
            "value": "mock",
            "casing": {}
          },
          {
            "generatedName": "snippet",
            "value": "snippet",
            "casing": {}
          },
          {
            "generatedName": "json_schema",
            "value": "json_schema",
            "casing": {}
          },
          {
            "generatedName": "get_api_call",
            "value": "get_api_call",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "src__external__app__models__v4__configs__ToolResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4ConfigsToolResponseId",
            "key": "id",
            "schema": {
              "description": "The ID of the tool. Starts with either `config_` or `oc_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV4ConfigsToolResponseId",
              "title": "Tool ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4ConfigsToolResponseName",
            "key": "name",
            "schema": {
              "description": "Name for the tool referenced by the model.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV4ConfigsToolResponseName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4ConfigsToolResponseDescription",
            "key": "description",
            "schema": {
              "generatedName": "srcExternalAppModelsV4ConfigsToolResponseDescription",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Description of the tool referenced by the model",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV4ConfigsToolResponseDescription",
                "nameOverride": "Description",
                "title": "Description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4ConfigsToolResponseParameters",
            "key": "parameters",
            "schema": {
              "generatedName": "srcExternalAppModelsV4ConfigsToolResponseParameters",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Definition of parameters needed to run the tool. Provided in jsonschema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SrcExternalAppModelsV4ConfigsToolResponseParametersKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "SrcExternalAppModelsV4ConfigsToolResponseParametersValue",
                  "type": "unknown"
                },
                "generatedName": "SrcExternalAppModelsV4ConfigsToolResponseParameters",
                "title": "Run arguments schema.",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4ConfigsToolResponseSource",
            "key": "source",
            "schema": {
              "generatedName": "srcExternalAppModelsV4ConfigsToolResponseSource",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "The origin of the tool",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV4ConfigsToolResponseSource",
                "nameOverride": "Origin",
                "title": "Origin",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SrcExternalAppModelsV4ConfigsToolResponse",
        "nameOverride": "ToolResponse",
        "title": "ToolResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "src__external__app__models__v4__feedback__FeedbackType": {
        "description": "An enumeration.",
        "generatedName": "SrcExternalAppModelsV4FeedbackFeedbackType",
        "nameOverride": "FeedbackType",
        "title": "FeedbackType",
        "values": [
          {
            "generatedName": "rating",
            "value": "rating",
            "casing": {}
          },
          {
            "generatedName": "action",
            "value": "action",
            "casing": {}
          },
          {
            "generatedName": "issue",
            "value": "issue",
            "casing": {}
          },
          {
            "generatedName": "correction",
            "value": "correction",
            "casing": {}
          },
          {
            "generatedName": "comment",
            "value": "comment",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "src__external__app__models__v4__orgs__base_models__UserResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4OrgsBaseModelsUserResponseId",
            "key": "id",
            "schema": {
              "description": "String ID of user. Starts with `usr_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV4OrgsBaseModelsUserResponseId",
              "title": "User ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4OrgsBaseModelsUserResponseEmailAddress",
            "key": "email_address",
            "schema": {
              "description": "The user's email address.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV4OrgsBaseModelsUserResponseEmailAddress",
              "title": "Email address",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4OrgsBaseModelsUserResponseFullName",
            "key": "full_name",
            "schema": {
              "generatedName": "srcExternalAppModelsV4OrgsBaseModelsUserResponseFullName",
              "nameOverride": "UserResponse",
              "title": "UserResponse",
              "value": {
                "description": "The user's full name.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV4OrgsBaseModelsUserResponseFullName",
                "title": "Full name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV4OrgsBaseModelsUserResponseVerified",
            "key": "verified",
            "schema": {
              "description": "Whether the user has verified their email address.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SrcExternalAppModelsV4OrgsBaseModelsUserResponseVerified",
              "nameOverride": "Verified",
              "title": "Verified",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SrcExternalAppModelsV4OrgsBaseModelsUserResponse",
        "nameOverride": "UserResponse",
        "title": "UserResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "src__external__app__models__v5__datasets__DatasetRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5DatasetsDatasetRequestName",
            "key": "name",
            "schema": {
              "generatedName": "srcExternalAppModelsV5DatasetsDatasetRequestName",
              "nameOverride": "DatasetRequest",
              "title": "DatasetRequest",
              "value": {
                "description": "Name of the Dataset, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5DatasetsDatasetRequestName",
                "title": "Dataset name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5DatasetsDatasetRequestCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "srcExternalAppModelsV5DatasetsDatasetRequestCommitMessage",
              "nameOverride": "DatasetRequest",
              "title": "DatasetRequest",
              "value": {
                "description": "Message describing the changes made. If provided, a committed version of the Dataset is created. Otherwise, an uncommitted version is created.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5DatasetsDatasetRequestCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5DatasetsDatasetRequestDatapoints",
            "key": "datapoints",
            "schema": {
              "description": "The Datapoints to create this Dataset version with. Modify the `action` field to determine how these Datapoints are used.",
              "value": {
                "generatedName": "SrcExternalAppModelsV5DatasetsDatasetRequestDatapointsItem",
                "schema": "CreateDatapointRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SrcExternalAppModelsV5DatasetsDatasetRequestDatapoints",
              "nameOverride": "Datapoints",
              "title": "Datapoints",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5DatasetsDatasetRequestAction",
            "key": "action",
            "schema": {
              "generatedName": "srcExternalAppModelsV5DatasetsDatasetRequestAction",
              "nameOverride": "DatasetRequest",
              "title": "DatasetRequest",
              "value": {
                "description": "The action to take with the provided Datapoints.\n\n - If `\"set\"`, the created version will only contain the Datapoints provided in this request. \n - If `\"add\"`, the created version will contain the Datapoints provided in this request in addition to the Datapoints in the target version. \n - If `\"remove\"`, the created version will contain the Datapoints in the target version except for the Datapoints provided in this request. \n\nIf `\"add\"` or `\"remove\"`, one of the `version_id` or `environment` query parameters may be provided.",
                "generatedName": "SrcExternalAppModelsV5DatasetsDatasetRequestAction",
                "schema": "UpdateDatesetAction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SrcExternalAppModelsV5DatasetsDatasetRequest",
        "nameOverride": "DatasetRequest",
        "title": "DatasetRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "src__external__app__models__v5__evaluations__DatasetRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5EvaluationsDatasetRequestVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the Dataset Version to use in this evaluation. Starts with `dsv_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV5EvaluationsDatasetRequestVersionId",
              "title": "Dataset Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SrcExternalAppModelsV5EvaluationsDatasetRequest",
        "nameOverride": "DatasetRequest",
        "title": "DatasetRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "src__external__app__models__v5__evaluations__EvaluatorRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5EvaluationsEvaluatorRequestVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the Evaluator Version to use in this evaluation. Starts with `evv_`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV5EvaluationsEvaluatorRequestVersionId",
              "title": "Evaluator Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5EvaluationsEvaluatorRequestOrchestrated",
            "key": "orchestrated",
            "schema": {
              "generatedName": "srcExternalAppModelsV5EvaluationsEvaluatorRequestOrchestrated",
              "nameOverride": "EvaluatorRequest",
              "title": "EvaluatorRequest",
              "value": {
                "description": "Whether the Evaluator is orchestrated by Humanloop. Default is `True`. If `False`, a log for the Evaluator should be submitted by the user via the API.",
                "schema": {
                  "default": true,
                  "type": "boolean"
                },
                "generatedName": "SrcExternalAppModelsV5EvaluationsEvaluatorRequestOrchestrated",
                "title": "Humanloop Orchestrated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SrcExternalAppModelsV5EvaluationsEvaluatorRequest",
        "nameOverride": "EvaluatorRequest",
        "title": "EvaluatorRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "src__external__app__models__v5__evaluators__EvaluatorRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5EvaluatorsEvaluatorRequestName",
            "key": "name",
            "schema": {
              "generatedName": "srcExternalAppModelsV5EvaluatorsEvaluatorRequestName",
              "nameOverride": "EvaluatorRequest",
              "title": "EvaluatorRequest",
              "value": {
                "description": "Name of the Evaluator, which is used as a unique identifier.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5EvaluatorsEvaluatorRequestName",
                "title": "Evaluator Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5EvaluatorsEvaluatorRequestDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "srcExternalAppModelsV5EvaluatorsEvaluatorRequestDirectoryId",
              "nameOverride": "EvaluatorRequest",
              "title": "EvaluatorRequest",
              "value": {
                "description": "Unique identifier for the Directory of the Evaluator.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5EvaluatorsEvaluatorRequestDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5EvaluatorsEvaluatorRequestCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "srcExternalAppModelsV5EvaluatorsEvaluatorRequestCommitMessage",
              "nameOverride": "EvaluatorRequest",
              "title": "EvaluatorRequest",
              "value": {
                "description": "Message describing the changes made.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5EvaluatorsEvaluatorRequestCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5EvaluatorsEvaluatorRequestSpec",
            "key": "spec",
            "schema": {
              "value": {
                "commonProperties": [],
                "discriminantProperty": "evaluator_type",
                "generatedName": "SrcExternalAppModelsV5EvaluatorsEvaluatorRequestSpec",
                "title": "Spec",
                "nameOverride": "Spec",
                "schemas": {
                  "llm": {
                    "generatedName": "ComponentsSchemasLlmEvaluatorRequest",
                    "schema": "LLMEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "python": {
                    "generatedName": "ComponentsSchemasCodeEvaluatorRequest",
                    "schema": "CodeEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "human": {
                    "generatedName": "ComponentsSchemasHumanEvaluatorRequest",
                    "schema": "HumanEvaluatorRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  }
                },
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "discriminated"
              },
              "type": "oneOf"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request model for creating a new Evaluator",
        "generatedName": "SrcExternalAppModelsV5EvaluatorsEvaluatorRequest",
        "nameOverride": "EvaluatorRequest",
        "title": "EvaluatorRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "src__external__app__models__v5__feedback__FeedbackType": {
        "description": "An enumeration.",
        "generatedName": "SrcExternalAppModelsV5FeedbackFeedbackType",
        "nameOverride": "FeedbackType",
        "title": "FeedbackType",
        "values": [
          {
            "generatedName": "rating",
            "value": "rating",
            "casing": {}
          },
          {
            "generatedName": "action",
            "value": "action",
            "casing": {}
          },
          {
            "generatedName": "issue",
            "value": "issue",
            "casing": {}
          },
          {
            "generatedName": "correction",
            "value": "correction",
            "casing": {}
          },
          {
            "generatedName": "comment",
            "value": "comment",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "src__external__app__models__v5__tools__ToolResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for Tool.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseId",
              "title": "Tool ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseName",
            "key": "name",
            "schema": {
              "description": "Name of the Tool, which is used as a unique identifier.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseName",
              "title": "Tool name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseVersionId",
            "key": "version_id",
            "schema": {
              "description": "Unique identifier for the specific Tool Version. If no query params provided, the default deployed Tool Version is returned.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseVersionId",
              "title": "Version ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseDirectoryId",
            "key": "directory_id",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseDirectoryId",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Unique identifier for the Directory of the Prompt. ",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseDirectoryId",
                "title": "Directory ID",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseEnvironments",
            "key": "environments",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseEnvironments",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "The list of environments the Prompt Version is deployed to.",
                "value": {
                  "generatedName": "SrcExternalAppModelsV5ToolsToolResponseEnvironmentsItem",
                  "schema": "EnvironmentResponse",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseEnvironments",
                "nameOverride": "Environments",
                "title": "Environments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseCreatedBy",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "The user who created the Prompt.",
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseCreatedBy",
                "schema": "src__external__app__models__v5__users__UserResponse",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseStatus",
            "key": "status",
            "schema": {
              "description": "The status of the Prompt Version.",
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseStatus",
              "schema": "VersionStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseLastUsedAt",
            "key": "last_used_at",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseLastUsedAt",
              "title": "Last Used At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseFunction",
            "key": "function",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseFunction",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Callable function specification of the Tool shown to the model for tool calling.",
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseFunction",
                "schema": "ToolFunction",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseSourceCode",
            "key": "source_code",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseSourceCode",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Code source of the Tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseSourceCode",
                "title": "Source Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseSetupValues",
            "key": "setup_values",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseSetupValues",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SrcExternalAppModelsV5ToolsToolResponseSetupValuesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "SrcExternalAppModelsV5ToolsToolResponseSetupValuesValue",
                  "type": "unknown"
                },
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseSetupValues",
                "title": "Setup values",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseToolType",
            "key": "tool_type",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseToolType",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Type of Tool.",
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseToolType",
                "schema": "src__domain__files__tool__ToolType",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseCommitMessage",
            "key": "commit_message",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseCommitMessage",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Message describing the changes made.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseCommitMessage",
                "title": "Commit message",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseSignature",
            "key": "signature",
            "schema": {
              "generatedName": "srcExternalAppModelsV5ToolsToolResponseSignature",
              "nameOverride": "ToolResponse",
              "title": "ToolResponse",
              "value": {
                "description": "Signature of the Tool.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseSignature",
                "nameOverride": "Signature",
                "title": "Signature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseVersionLogsCount",
            "key": "version_logs_count",
            "schema": {
              "description": "The number of logs that have been generated for this Prompt Version",
              "schema": {
                "type": "int"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseVersionLogsCount",
              "title": "Number of logs for this version",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseTotalLogsCount",
            "key": "total_logs_count",
            "schema": {
              "description": "The number of logs that have been generated across all Prompt Versions",
              "schema": {
                "type": "int"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseTotalLogsCount",
              "title": "Total number of logs across all versions",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5ToolsToolResponseInputs",
            "key": "inputs",
            "schema": {
              "description": "Inputs associated to the Prompt. Inputs correspond to any of the variables used within the Prompt template.",
              "value": {
                "generatedName": "SrcExternalAppModelsV5ToolsToolResponseInputsItem",
                "schema": "InputResponse",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SrcExternalAppModelsV5ToolsToolResponseInputs",
              "title": "Prompt inputs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request to create a new Tool.",
        "generatedName": "SrcExternalAppModelsV5ToolsToolResponse",
        "nameOverride": "ToolResponse",
        "title": "ToolResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "src__external__app__models__v5__users__UserResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5UsersUserResponseId",
            "key": "id",
            "schema": {
              "description": "Unique identifier for User. Starts with `usr`.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV5UsersUserResponseId",
              "title": "User ID",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5UsersUserResponseEmailAddress",
            "key": "email_address",
            "schema": {
              "description": "The User's email address.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SrcExternalAppModelsV5UsersUserResponseEmailAddress",
              "title": "Email address",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "srcExternalAppModelsV5UsersUserResponseFullName",
            "key": "full_name",
            "schema": {
              "generatedName": "srcExternalAppModelsV5UsersUserResponseFullName",
              "nameOverride": "UserResponse",
              "title": "UserResponse",
              "value": {
                "description": "The User's full name.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SrcExternalAppModelsV5UsersUserResponseFullName",
                "title": "Full name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SrcExternalAppModelsV5UsersUserResponse",
        "nameOverride": "UserResponse",
        "title": "UserResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "APIKeyHeader": {
      "headerName": "X-API-KEY",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}