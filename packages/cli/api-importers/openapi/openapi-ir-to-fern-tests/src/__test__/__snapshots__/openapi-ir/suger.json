{
  "title": "Suger API",
  "description": "CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.",
  "servers": [
    {
      "url": "//https://api.suger.cloud"
    }
  ],
  "tags": {
    "tagsById": {}
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "list buyers by organization",
      "audiences": [],
      "operationId": "ListBuyersByOrganization",
      "tags": [
        "Buyer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListBuyersByOrganizationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListBuyersByOrganizationRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListBuyersByOrganizationResponseItem",
            "schema": "shared.IdentityBuyer",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListBuyersByOrganizationResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "list all buyers by the given organization",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/buyer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "disbursedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "invoicedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get buyer",
      "audiences": [],
      "operationId": "GetBuyer",
      "tags": [
        "Buyer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBuyerRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Buyer ID",
          "name": "buyerId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBuyerRequestBuyerId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBuyerRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetBuyerResponse",
          "schema": "shared.IdentityBuyer",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "get buyer by the given organization and buyer id",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/buyer/{buyerId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "buyerId",
              "value": {
                "value": {
                  "value": "buyerId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "awsBuyer": {
                      "properties": {
                        "awsAccountID": {
                          "value": {
                            "value": "awsAccountID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "awsCustomerID": {
                          "value": {
                            "value": "awsCustomerID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dataFeedAccountID": {
                          "value": {
                            "value": "dataFeedAccountID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureBuyer": {
                      "properties": {
                        "emailId": {
                          "value": {
                            "value": "emailId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "objectId": {
                          "value": {
                            "value": "objectId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "puid": {
                          "value": {
                            "value": "puid",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenantId": {
                          "value": {
                            "value": "tenantId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "collectableAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "disbursedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "gcpBuyer": {
                      "properties": {
                        "approvals": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "createTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inputProperties": {
                          "value": [
                            {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider": {
                          "value": {
                            "value": "provider",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": "ACCOUNT_STATE_UNSPECIFIED",
                          "type": "enum"
                        },
                        "updateTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "invoicedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "update buyer name and description",
      "audiences": [],
      "operationId": "UpdateBuyerNameDescription",
      "tags": [
        "Buyer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateBuyerNameDescriptionRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Buyer ID",
          "name": "buyerId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateBuyerNameDescriptionRequestBuyerId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateBuyerNameDescriptionRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateBuyerNameDescriptionRequest",
          "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpdateBuyerNameDescriptionResponse",
          "schema": "shared.IdentityBuyer",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "update buyer name and description by the given organization and buyer id",
      "authed": true,
      "method": "PATCH",
      "path": "/org/{orgId}/buyer/{buyerId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "buyerId",
              "value": {
                "value": {
                  "value": "buyerId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "awsBuyer": {
                      "properties": {
                        "awsAccountID": {
                          "value": {
                            "value": "awsAccountID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "awsCustomerID": {
                          "value": {
                            "value": "awsCustomerID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dataFeedAccountID": {
                          "value": {
                            "value": "dataFeedAccountID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureBuyer": {
                      "properties": {
                        "emailId": {
                          "value": {
                            "value": "emailId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "objectId": {
                          "value": {
                            "value": "objectId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "puid": {
                          "value": {
                            "value": "puid",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tenantId": {
                          "value": {
                            "value": "tenantId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "collectableAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "disbursedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "gcpBuyer": {
                      "properties": {
                        "approvals": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "createTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inputProperties": {
                          "value": [
                            {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "provider": {
                          "value": {
                            "value": "provider",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": "ACCOUNT_STATE_UNSPECIFIED",
                          "type": "enum"
                        },
                        "updateTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "invoicedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list entitlements by buyer",
      "audiences": [],
      "operationId": "ListEntitlementsByBuyer",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsByBuyerRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Buyer ID",
          "name": "buyerId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsByBuyerRequestBuyerId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListEntitlementsByBuyerRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListEntitlementsByBuyerResponseItem",
            "schema": "shared.WorkloadEntitlement",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListEntitlementsByBuyerResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all entitlements of the given buyer",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/buyer/{buyerId}/entitlement",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "buyerId",
              "value": {
                "value": {
                  "value": "buyerId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "buyerID": {
                      "value": {
                        "value": "buyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "entitlementTermID": {
                      "value": {
                        "value": "entitlementTermID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalBuyerID": {
                      "value": {
                        "value": "externalBuyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalProductID": {
                      "value": {
                        "value": "externalProductID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "autoRenew": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "awsEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "azureSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commitAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "disbursedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "invoicedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerID": {
                      "value": {
                        "value": "offerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "ACTIVE",
                      "type": "enum"
                    },
                    "type": {
                      "value": {
                        "value": "type",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "create or update draft offer",
      "audiences": [],
      "operationId": "CreateOrUpdateDraftOffer",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateOrUpdateDraftOfferRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateOrUpdateDraftOfferRequest",
      "request": {
        "schema": {
          "generatedName": "CreateOrUpdateDraftOfferRequest",
          "schema": "shared.WorkloadOffer",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "CreateOrUpdateDraftOfferResponse",
          "schema": "shared.WorkloadOffer",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Create a new draft offer or update the existing draft offer. When updating draft offer, the offer.ID is required.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/draftOffer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "endTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "expireTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "azureOriginalPlan": {
                      "properties": {
                        "$schema": {
                          "value": {
                            "value": "$schema",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "plan": {
                          "value": {
                            "value": "plan",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "product": {
                          "value": {
                            "value": "product",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resourceName": {
                          "value": {
                            "value": "resourceName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "validations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "azurePrivateOffer": {
                      "properties": {
                        "$schema": {
                          "value": {
                            "value": "$schema",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "acceptBy": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "acceptanceLinks": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "beneficiaries": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "eTag": {
                          "value": {
                            "value": "eTag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "notificationContacts": {
                          "value": [
                            {
                              "value": {
                                "value": "notificationContacts",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "preparedBy": {
                          "value": {
                            "value": "preparedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pricing": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "privateOfferType": {
                          "value": "customerPromotion",
                          "type": "enum"
                        },
                        "resourceName": {
                          "value": {
                            "value": "resourceName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "start": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": "draft",
                          "type": "enum"
                        },
                        "subState": {
                          "value": "pendingAcceptance",
                          "type": "enum"
                        },
                        "termsAndConditionsDocSasUrl": {
                          "value": {
                            "value": "termsAndConditionsDocSasUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "validations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "variableStartDate": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureProductVariant": {
                      "properties": {
                        "azureGovernmentCertifications": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "cloudAvailabilities": {
                          "value": [
                            {
                              "value": {
                                "value": "cloudAvailabilities",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "conversionPaths": {
                          "value": {
                            "value": "conversionPaths",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "extendedProperties": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "externalID": {
                          "value": {
                            "value": "externalID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "featureAvailabilities": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "friendlyName": {
                          "value": {
                            "value": "friendlyName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "leadGenID": {
                          "value": {
                            "value": "leadGenID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceVariantID": {
                          "value": {
                            "value": "referenceVariantID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resourceType": {
                          "value": "AzureSkuVariant",
                          "type": "enum"
                        },
                        "state": {
                          "value": "InActive",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "buyerAwsAccountIds": {
                      "value": [
                        {
                          "value": {
                            "value": "buyerAwsAccountIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "buyerAzureTenants": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "discount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "eulaType": {
                      "value": "",
                      "type": "enum"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpMetrics": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "gcpPlans": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "paymentInstallments": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "privateOfferUrl": {
                      "value": {
                        "value": "privateOfferUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "visibility": {
                      "value": "PRIVATE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metaInfo": {
                  "properties": {
                    "baseAgreementId": {
                      "value": {
                        "value": "baseAgreementId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contacts": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "isAgreementBasedOffer": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isRenewalOffer": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "notifications": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "offerType": {
                  "value": "DEFAULT",
                  "type": "enum"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": "ACCEPTED",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list entitlements",
      "audiences": [],
      "operationId": "ListEntitlements",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListEntitlementsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListEntitlementsResponseItem",
            "schema": "shared.WorkloadEntitlement",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListEntitlementsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all entitlements under the organization",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/entitlement",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "buyerID": {
                      "value": {
                        "value": "buyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "entitlementTermID": {
                      "value": {
                        "value": "entitlementTermID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalBuyerID": {
                      "value": {
                        "value": "externalBuyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalProductID": {
                      "value": {
                        "value": "externalProductID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "autoRenew": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "awsEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "azureSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commitAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "disbursedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "invoicedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerID": {
                      "value": {
                        "value": "offerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "ACTIVE",
                      "type": "enum"
                    },
                    "type": {
                      "value": {
                        "value": "type",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get entitlement",
      "audiences": [],
      "operationId": "GetEntitlement",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEntitlementRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEntitlementRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetEntitlementRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetEntitlementResponse",
          "schema": "shared.WorkloadEntitlement",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Get the entitlement by ID",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/entitlement/{entitlementId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "buyerID": {
                  "value": {
                    "value": "buyerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "endTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "entitlementTermID": {
                  "value": {
                    "value": "entitlementTermID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalBuyerID": {
                  "value": {
                    "value": "externalBuyerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalProductID": {
                  "value": {
                    "value": "externalProductID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "autoRenew": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "awsEntitlements": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "azureSubscriptions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "collectableAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "commitAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "disbursedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "discount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "eulaType": {
                      "value": "",
                      "type": "enum"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpEntitlements": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "gcpPlans": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "invoicedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "paymentInstallments": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "offerID": {
                  "value": {
                    "value": "offerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "startTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "ACTIVE",
                  "type": "enum"
                },
                "type": {
                  "value": {
                    "value": "type",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "add entitlement credit",
      "audiences": [],
      "operationId": "AddEntitlementCredit",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AddEntitlementCreditRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AddEntitlementCreditRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AddEntitlementCreditRequest",
      "request": {
        "schema": {
          "generatedName": "AddEntitlementCreditRequest",
          "schema": "shared.AddEntitlementCreditParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "AddEntitlementCreditResponse",
          "schema": "shared.AddEntitlementCreditResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Add the credit amount to the given Entitlement. The credit amount is accumulated & saved in the current Entitlement Term of the gvien Entitlement.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/entitlement/{entitlementId}/addCredit",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "creditAmountIncrement": {
                "value": {
                  "value": 1.1,
                  "type": "double"
                },
                "type": "primitive"
              },
              "entitlementID": {
                "value": {
                  "value": "entitlementID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "creditAmountIncrement": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "entitlementID": {
                  "value": {
                    "value": "entitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "entitlementTermID": {
                  "value": {
                    "value": "entitlementTermID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "newCreditAmount": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "update entitlement name",
      "audiences": [],
      "operationId": "UpdateEntitlementName",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateEntitlementNameRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateEntitlementNameRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateEntitlementNameRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateEntitlementNameRequest",
          "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpdateEntitlementNameResponse",
          "schema": "shared.WorkloadEntitlement",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Update the name of the given Entitlement",
      "authed": true,
      "method": "PATCH",
      "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementName",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "buyerID": {
                  "value": {
                    "value": "buyerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "endTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "entitlementTermID": {
                  "value": {
                    "value": "entitlementTermID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalBuyerID": {
                  "value": {
                    "value": "externalBuyerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "externalProductID": {
                  "value": {
                    "value": "externalProductID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "autoRenew": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "awsEntitlements": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "azureSubscriptions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "collectableAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "commitAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "disbursedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "discount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "eulaType": {
                      "value": "",
                      "type": "enum"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpEntitlements": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "gcpPlans": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "invoicedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "paymentInstallments": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "offerID": {
                  "value": {
                    "value": "offerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "startTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "ACTIVE",
                  "type": "enum"
                },
                "type": {
                  "value": {
                    "value": "type",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list entitlement terms",
      "audiences": [],
      "operationId": "ListEntitlementTerms",
      "tags": [
        "Entitlement Term"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementTermsRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementTermsRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListEntitlementTermsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListEntitlementTermsResponseItem",
            "schema": "shared.WorkloadEntitlementTerm",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListEntitlementTermsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all Entitlement Terms of the given Entitlement",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "buyerID": {
                      "value": {
                        "value": "buyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "commitAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "creditAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "entitlementID": {
                      "value": {
                        "value": "entitlementID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "entitlementInfo": {
                      "properties": {
                        "autoRenew": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "awsEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "azureSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commitAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "disbursedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "invoicedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "externalEntitlementID": {
                      "value": {
                        "value": "externalEntitlementID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "type": {
                          "value": "",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "offerID": {
                      "value": {
                        "value": "offerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "usedCommitAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "usedCreditAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get entitlement term",
      "audiences": [],
      "operationId": "GetEntitlementTerm",
      "tags": [
        "Entitlement Term"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEntitlementTermRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEntitlementTermRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement Term ID",
          "name": "entitlementTermId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEntitlementTermRequestEntitlementTermId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetEntitlementTermRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetEntitlementTermResponse",
          "schema": "shared.WorkloadEntitlementTerm",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Get the entitlement term by ID",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm/{entitlementTermId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementTermId",
              "value": {
                "value": {
                  "value": "entitlementTermId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "buyerID": {
                  "value": {
                    "value": "buyerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "commitAmount": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "creditAmount": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "endTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "entitlementID": {
                  "value": {
                    "value": "entitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "entitlementInfo": {
                  "properties": {
                    "autoRenew": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "awsEntitlements": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "azureSubscriptions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "collectableAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "commitAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "disbursedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "discount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "eulaType": {
                      "value": "",
                      "type": "enum"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpEntitlements": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "gcpPlans": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "invoicedAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "paymentInstallments": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "externalEntitlementID": {
                  "value": {
                    "value": "externalEntitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "type": {
                      "value": "",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "offerID": {
                  "value": {
                    "value": "offerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "startTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "usedCommitAmount": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "usedCreditAmount": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list usageRecordGroups by entitlement",
      "audiences": [],
      "operationId": "ListUsageRecordGroupsByEntitlement",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordGroupsByEntitlementRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordGroupsByEntitlementRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByEntitlementRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordGroupsByEntitlementRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByEntitlementRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordGroupsByEntitlementRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByEntitlementRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordGroupsByEntitlementRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByEntitlementRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordGroupsByEntitlementRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUsageRecordGroupsByEntitlementRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListUsageRecordGroupsByEntitlementResponse",
          "schema": "shared.ListUsageRecordGroupsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "list UsageRecordGroups for the given organization and entitlement",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "usageRecordGroups": {
                  "value": [
                    {
                      "properties": {
                        "creationTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastUpdateTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "records": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": 1.1,
                                  "type": "double"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "serialID": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "usageRecordReportID": {
                          "value": {
                            "value": "usageRecordReportID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "report usageRecordGroup",
      "audiences": [],
      "operationId": "ReportUsageRecordGroup",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ReportUsageRecordGroupRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ReportUsageRecordGroupRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ReportUsageRecordGroupRequest",
      "request": {
        "schema": {
          "generatedName": "ReportUsageRecordGroupRequest",
          "schema": "shared.CreateUsageRecordGroupParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ReportUsageRecordGroupResponse",
          "schema": "shared.MeteringUsageRecordGroup",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "all the quantity of usage records are zero",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "409": {
          "generatedName": "ConflictError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ConflictErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Conflict request error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "internal error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "It is recommended to provide the ID in the request body CreateUsageRecordGroupParams, so the report can be deduplicated. All duplicate report will return error code 409.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "entitlementID": {
                "value": {
                  "value": "entitlementID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "records": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "entitlementID": {
                  "value": {
                    "value": "entitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "metaInfo": {
                  "properties": {
                    "originRecords": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "records": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": 1.1,
                          "type": "double"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "serialID": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": {
                    "value": "status",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "usageRecordReportID": {
                  "value": {
                    "value": "usageRecordReportID",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list usageRecordReports by entitlement",
      "audiences": [],
      "operationId": "ListUsageRecordReportsByEntitlement",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordReportsByEntitlementRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Entitlement ID",
          "name": "entitlementId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordReportsByEntitlementRequestEntitlementId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "The Entitlement Term ID, if not given, return the UsageRecordReports under the Entitlement",
          "name": "entitlementTermId",
          "schema": {
            "generatedName": "ListUsageRecordReportsByEntitlementRequestEntitlementTermId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordReportsByEntitlementRequestEntitlementTermId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListUsageRecordReportsByEntitlementRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordReportsByEntitlementRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListUsageRecordReportsByEntitlementRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordReportsByEntitlementRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListUsageRecordReportsByEntitlementRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordReportsByEntitlementRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListUsageRecordReportsByEntitlementRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordReportsByEntitlementRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUsageRecordReportsByEntitlementRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListUsageRecordReportsByEntitlementResponse",
          "schema": "shared.ListUsageRecordReportsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List usageRecordReports for the given organization and entitlement. Filter by entitlementTermId if it is given.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordReport",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "entitlementId",
              "value": {
                "value": {
                  "value": "entitlementId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "usageRecordReports": {
                  "value": [
                    {
                      "properties": {
                        "creationTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "entitlementTermID": {
                          "value": {
                            "value": "entitlementTermID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "productID": {
                          "value": {
                            "value": "productID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list integrations by organization",
      "audiences": [],
      "operationId": "ListIntegrationsByOrganization",
      "tags": [
        "Integration"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListIntegrationsByOrganizationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListIntegrationsByOrganizationRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListIntegrationsByOrganizationResponseItem",
            "schema": "shared.IdentityIntegration",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListIntegrationsByOrganizationResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all integrations for the given organization.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/integration",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "createdBy": {
                      "value": {
                        "value": "createdBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastUpdatedBy": {
                      "value": {
                        "value": "lastUpdatedBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "status": {
                      "value": "CREATED",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "create integration",
      "audiences": [],
      "operationId": "CreateIntegration",
      "tags": [
        "Integration"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateIntegrationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateIntegrationRequest",
      "request": {
        "schema": {
          "generatedName": "CreateIntegrationRequest",
          "schema": "shared.CreateIntegrationParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "CreateIntegrationResponse",
          "schema": "shared.IdentityIntegration",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Bad request error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "internal error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "For each organization, partner & service, there should be at most one integration.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/integration",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "info": {
                "properties": {},
                "type": "object"
              },
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "partner": {
                "value": "AWS",
                "type": "enum"
              },
              "service": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "type": "literal"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "awsAceIntegration": {
                      "properties": {
                        "partnerId": {
                          "value": {
                            "value": "partnerId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "s3BucketName": {
                          "value": {
                            "value": "s3BucketName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "s3BucketRegion": {
                          "value": {
                            "value": "s3BucketRegion",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "awsIntegration": {
                      "properties": {
                        "externalID": {
                          "value": {
                            "value": "externalID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "iamRoleArn": {
                          "value": {
                            "value": "iamRoleArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "marketplaceStartDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "mcasFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "mcasIamRoleArn": {
                          "value": {
                            "value": "mcasIamRoleArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mcasS3Bucket": {
                          "value": {
                            "value": "mcasS3Bucket",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mcasSnsTopic": {
                          "value": {
                            "value": "mcasSnsTopic",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mdfsFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "mdfsKmsKeyArn": {
                          "value": {
                            "value": "mdfsKmsKeyArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mdfsS3BucketArn": {
                          "value": {
                            "value": "mdfsS3BucketArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "policyArns": {
                          "value": [
                            {
                              "value": {
                                "value": "policyArns",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "revenueRecordFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureIntegration": {
                      "properties": {
                        "cmaFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "gcpIntegration": {
                      "properties": {
                        "gcpProjectId": {
                          "value": {
                            "value": "gcpProjectId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpProjectNumber": {
                          "value": {
                            "value": "gcpProjectNumber",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "identityProviderId": {
                          "value": {
                            "value": "identityProviderId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "partnerId": {
                          "value": {
                            "value": "partnerId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pubsubTopic": {
                          "value": {
                            "value": "pubsubTopic",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reportBucket": {
                          "value": {
                            "value": "reportBucket",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reportFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "reportStartDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "serviceAccountEmail": {
                          "value": {
                            "value": "serviceAccountEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "serviceNames": {
                          "value": [
                            {
                              "value": {
                                "value": "serviceNames",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "workloadIdentityPoolId": {
                          "value": {
                            "value": "workloadIdentityPoolId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "hubspotCrmIntegration": {
                      "properties": {
                        "portalId": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "salesforceCrmIntegration": {
                      "properties": {
                        "filters": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "instanceUrl": {
                          "value": {
                            "value": "instanceUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isSandbox": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "subdomain": {
                          "value": {
                            "value": "subdomain",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "slackIntegration": {
                      "properties": {
                        "accessToken": {
                          "value": {
                            "value": "accessToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "appId": {
                          "value": {
                            "value": "appId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "botUserId": {
                          "value": {
                            "value": "botUserId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "expiresIn": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "redirectUrl": {
                          "value": {
                            "value": "redirectUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refreshToken": {
                          "value": {
                            "value": "refreshToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scope": {
                          "value": {
                            "value": "scope",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tokenType": {
                          "value": {
                            "value": "tokenType",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": "CREATED",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get integration",
      "audiences": [],
      "operationId": "GetIntegration",
      "tags": [
        "Integration"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetIntegrationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "GetIntegrationRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Partner Service",
          "name": "service",
          "schema": {
            "generatedName": "GetIntegrationRequestService",
            "values": [
              {
                "generatedName": "MARKETPLACE",
                "value": "MARKETPLACE",
                "casing": {}
              },
              {
                "generatedName": "CRM",
                "value": "CRM",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetIntegrationRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetIntegrationResponse",
          "schema": "shared.IdentityIntegration",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Integration not found",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Get the integration for the given organization, partner & service.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/integration/{partner}/{service}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            },
            {
              "name": "service",
              "value": {
                "value": "MARKETPLACE",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "awsAceIntegration": {
                      "properties": {
                        "partnerId": {
                          "value": {
                            "value": "partnerId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "s3BucketName": {
                          "value": {
                            "value": "s3BucketName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "s3BucketRegion": {
                          "value": {
                            "value": "s3BucketRegion",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "awsIntegration": {
                      "properties": {
                        "externalID": {
                          "value": {
                            "value": "externalID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "iamRoleArn": {
                          "value": {
                            "value": "iamRoleArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "marketplaceStartDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "mcasFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "mcasIamRoleArn": {
                          "value": {
                            "value": "mcasIamRoleArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mcasS3Bucket": {
                          "value": {
                            "value": "mcasS3Bucket",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mcasSnsTopic": {
                          "value": {
                            "value": "mcasSnsTopic",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mdfsFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "mdfsKmsKeyArn": {
                          "value": {
                            "value": "mdfsKmsKeyArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mdfsS3BucketArn": {
                          "value": {
                            "value": "mdfsS3BucketArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "policyArns": {
                          "value": [
                            {
                              "value": {
                                "value": "policyArns",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "revenueRecordFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureIntegration": {
                      "properties": {
                        "cmaFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "gcpIntegration": {
                      "properties": {
                        "gcpProjectId": {
                          "value": {
                            "value": "gcpProjectId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpProjectNumber": {
                          "value": {
                            "value": "gcpProjectNumber",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "identityProviderId": {
                          "value": {
                            "value": "identityProviderId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "partnerId": {
                          "value": {
                            "value": "partnerId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pubsubTopic": {
                          "value": {
                            "value": "pubsubTopic",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reportBucket": {
                          "value": {
                            "value": "reportBucket",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reportFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "reportStartDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "serviceAccountEmail": {
                          "value": {
                            "value": "serviceAccountEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "serviceNames": {
                          "value": [
                            {
                              "value": {
                                "value": "serviceNames",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "workloadIdentityPoolId": {
                          "value": {
                            "value": "workloadIdentityPoolId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "hubspotCrmIntegration": {
                      "properties": {
                        "portalId": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "salesforceCrmIntegration": {
                      "properties": {
                        "filters": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "instanceUrl": {
                          "value": {
                            "value": "instanceUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isSandbox": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "subdomain": {
                          "value": {
                            "value": "subdomain",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "slackIntegration": {
                      "properties": {
                        "accessToken": {
                          "value": {
                            "value": "accessToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "appId": {
                          "value": {
                            "value": "appId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "botUserId": {
                          "value": {
                            "value": "botUserId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "expiresIn": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "redirectUrl": {
                          "value": {
                            "value": "redirectUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refreshToken": {
                          "value": {
                            "value": "refreshToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scope": {
                          "value": {
                            "value": "scope",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tokenType": {
                          "value": {
                            "value": "tokenType",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": "CREATED",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "delete integration",
      "audiences": [],
      "operationId": "DeleteIntegration",
      "tags": [
        "Integration"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteIntegrationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "DeleteIntegrationRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Partner Service",
          "name": "service",
          "schema": {
            "generatedName": "DeleteIntegrationRequestService",
            "values": [
              {
                "generatedName": "MARKETPLACE",
                "value": "MARKETPLACE",
                "casing": {}
              },
              {
                "generatedName": "CRM",
                "value": "CRM",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteIntegrationRequest",
      "response": {
        "description": "Empty string if deletion is successful",
        "schema": {
          "schema": {
            "type": "string"
          },
          "generatedName": "DeleteIntegrationResponse",
          "groupName": [],
          "type": "primitive"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "delete the integration for the given orgId, partner and service.",
      "authed": true,
      "method": "DELETE",
      "path": "/org/{orgId}/integration/{partner}/{service}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            },
            {
              "name": "service",
              "value": {
                "value": "MARKETPLACE",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": {
                "value": "string",
                "type": "string"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "update integration",
      "audiences": [],
      "operationId": "UpdateIntegration",
      "tags": [
        "Integration"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateIntegrationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "UpdateIntegrationRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Partner Service",
          "name": "service",
          "schema": {
            "generatedName": "UpdateIntegrationRequestService",
            "values": [
              {
                "generatedName": "MARKETPLACE",
                "value": "MARKETPLACE",
                "casing": {}
              },
              {
                "generatedName": "CRM",
                "value": "CRM",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateIntegrationRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateIntegrationRequest",
          "schema": "shared.UpdateIntegrationParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpdateIntegrationResponse",
          "schema": "shared.IdentityIntegration",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Bad request error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "internal error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update the given integration.",
      "authed": true,
      "method": "PATCH",
      "path": "/org/{orgId}/integration/{partner}/{service}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            },
            {
              "name": "service",
              "value": {
                "value": "MARKETPLACE",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "info": {
                "properties": {},
                "type": "object"
              },
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "partner": {
                "value": "AWS",
                "type": "enum"
              },
              "service": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "type": "literal"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "awsAceIntegration": {
                      "properties": {
                        "partnerId": {
                          "value": {
                            "value": "partnerId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "s3BucketName": {
                          "value": {
                            "value": "s3BucketName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "s3BucketRegion": {
                          "value": {
                            "value": "s3BucketRegion",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "awsIntegration": {
                      "properties": {
                        "externalID": {
                          "value": {
                            "value": "externalID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "iamRoleArn": {
                          "value": {
                            "value": "iamRoleArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "marketplaceStartDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "mcasFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "mcasIamRoleArn": {
                          "value": {
                            "value": "mcasIamRoleArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mcasS3Bucket": {
                          "value": {
                            "value": "mcasS3Bucket",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mcasSnsTopic": {
                          "value": {
                            "value": "mcasSnsTopic",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mdfsFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "mdfsKmsKeyArn": {
                          "value": {
                            "value": "mdfsKmsKeyArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mdfsS3BucketArn": {
                          "value": {
                            "value": "mdfsS3BucketArn",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "policyArns": {
                          "value": [
                            {
                              "value": {
                                "value": "policyArns",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "revenueRecordFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureIntegration": {
                      "properties": {
                        "cmaFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "gcpIntegration": {
                      "properties": {
                        "gcpProjectId": {
                          "value": {
                            "value": "gcpProjectId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpProjectNumber": {
                          "value": {
                            "value": "gcpProjectNumber",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "identityProviderId": {
                          "value": {
                            "value": "identityProviderId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "partnerId": {
                          "value": {
                            "value": "partnerId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pubsubTopic": {
                          "value": {
                            "value": "pubsubTopic",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reportBucket": {
                          "value": {
                            "value": "reportBucket",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "reportFullSyncDone": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "reportStartDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "serviceAccountEmail": {
                          "value": {
                            "value": "serviceAccountEmail",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "serviceNames": {
                          "value": [
                            {
                              "value": {
                                "value": "serviceNames",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "workloadIdentityPoolId": {
                          "value": {
                            "value": "workloadIdentityPoolId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "hubspotCrmIntegration": {
                      "properties": {
                        "portalId": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "salesforceCrmIntegration": {
                      "properties": {
                        "filters": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "instanceUrl": {
                          "value": {
                            "value": "instanceUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isSandbox": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "secretKey": {
                          "value": {
                            "value": "secretKey",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "subdomain": {
                          "value": {
                            "value": "subdomain",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "slackIntegration": {
                      "properties": {
                        "accessToken": {
                          "value": {
                            "value": "accessToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "appId": {
                          "value": {
                            "value": "appId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "botUserId": {
                          "value": {
                            "value": "botUserId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "expiresIn": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "redirectUrl": {
                          "value": {
                            "value": "redirectUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refreshToken": {
                          "value": {
                            "value": "refreshToken",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "scope": {
                          "value": {
                            "value": "scope",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tokenType": {
                          "value": {
                            "value": "tokenType",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": "CREATED",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "verify integration",
      "audiences": [],
      "operationId": "VerifyIntegration",
      "tags": [
        "Integration"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VerifyIntegrationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "VerifyIntegrationRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Partner Service",
          "name": "service",
          "schema": {
            "generatedName": "VerifyIntegrationRequestService",
            "values": [
              {
                "generatedName": "MARKETPLACE",
                "value": "MARKETPLACE",
                "casing": {}
              },
              {
                "generatedName": "CRM",
                "value": "CRM",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "VerifyIntegrationRequest",
      "response": {
        "description": "whether it is verified or not",
        "schema": {
          "schema": {
            "type": "boolean"
          },
          "generatedName": "VerifyIntegrationResponse",
          "groupName": [],
          "type": "primitive"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Verify the given integration, check whether it works correctly.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/integration/{partner}/{service}/verify",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            },
            {
              "name": "service",
              "value": {
                "value": "MARKETPLACE",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": {
                "value": true,
                "type": "boolean"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list offers by organization",
      "audiences": [],
      "operationId": "ListOffersByOrganization",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListOffersByOrganizationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListOffersByOrganizationRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListOffersByOrganizationResponseItem",
            "schema": "shared.WorkloadOffer",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListOffersByOrganizationResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all offers under the given organization.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/offer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "createdBy": {
                      "value": {
                        "value": "createdBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "expireTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "buyerAwsAccountIds": {
                          "value": [
                            {
                              "value": {
                                "value": "buyerAwsAccountIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "buyerAzureTenants": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpMetrics": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "privateOfferUrl": {
                          "value": {
                            "value": "privateOfferUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "visibility": {
                          "value": "PRIVATE",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastUpdatedBy": {
                      "value": {
                        "value": "lastUpdatedBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "metaInfo": {
                      "properties": {
                        "baseAgreementId": {
                          "value": {
                            "value": "baseAgreementId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contacts": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isAgreementBasedOffer": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isRenewalOffer": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "notifications": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerType": {
                      "value": "DEFAULT",
                      "type": "enum"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "status": {
                      "value": "ACCEPTED",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "create offer",
      "audiences": [],
      "operationId": "CreateOffer",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateOfferRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateOfferRequest",
      "request": {
        "schema": {
          "generatedName": "CreateOfferRequest",
          "schema": "shared.WorkloadOffer",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "CreateOfferResponse",
          "schema": "shared.WorkloadOffer",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Create a private offer under the given organization.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/offer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "endTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "expireTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "azureOriginalPlan": {
                      "properties": {
                        "$schema": {
                          "value": {
                            "value": "$schema",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "plan": {
                          "value": {
                            "value": "plan",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "product": {
                          "value": {
                            "value": "product",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resourceName": {
                          "value": {
                            "value": "resourceName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "validations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "azurePrivateOffer": {
                      "properties": {
                        "$schema": {
                          "value": {
                            "value": "$schema",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "acceptBy": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "acceptanceLinks": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "beneficiaries": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "eTag": {
                          "value": {
                            "value": "eTag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "notificationContacts": {
                          "value": [
                            {
                              "value": {
                                "value": "notificationContacts",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "preparedBy": {
                          "value": {
                            "value": "preparedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pricing": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "privateOfferType": {
                          "value": "customerPromotion",
                          "type": "enum"
                        },
                        "resourceName": {
                          "value": {
                            "value": "resourceName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "start": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": "draft",
                          "type": "enum"
                        },
                        "subState": {
                          "value": "pendingAcceptance",
                          "type": "enum"
                        },
                        "termsAndConditionsDocSasUrl": {
                          "value": {
                            "value": "termsAndConditionsDocSasUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "validations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "variableStartDate": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureProductVariant": {
                      "properties": {
                        "azureGovernmentCertifications": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "cloudAvailabilities": {
                          "value": [
                            {
                              "value": {
                                "value": "cloudAvailabilities",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "conversionPaths": {
                          "value": {
                            "value": "conversionPaths",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "extendedProperties": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "externalID": {
                          "value": {
                            "value": "externalID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "featureAvailabilities": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "friendlyName": {
                          "value": {
                            "value": "friendlyName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "leadGenID": {
                          "value": {
                            "value": "leadGenID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceVariantID": {
                          "value": {
                            "value": "referenceVariantID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resourceType": {
                          "value": "AzureSkuVariant",
                          "type": "enum"
                        },
                        "state": {
                          "value": "InActive",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "buyerAwsAccountIds": {
                      "value": [
                        {
                          "value": {
                            "value": "buyerAwsAccountIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "buyerAzureTenants": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "discount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "eulaType": {
                      "value": "",
                      "type": "enum"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpMetrics": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "gcpPlans": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "paymentInstallments": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "privateOfferUrl": {
                      "value": {
                        "value": "privateOfferUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "visibility": {
                      "value": "PRIVATE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metaInfo": {
                  "properties": {
                    "baseAgreementId": {
                      "value": {
                        "value": "baseAgreementId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contacts": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "isAgreementBasedOffer": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isRenewalOffer": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "notifications": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "offerType": {
                  "value": "DEFAULT",
                  "type": "enum"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": "ACCEPTED",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get offer",
      "audiences": [],
      "operationId": "GetOffer",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetOfferRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Offer ID",
          "name": "offerId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetOfferRequestOfferId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetOfferRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetOfferResponse",
          "schema": "shared.WorkloadOffer",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Get the offer by the given offer ID.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/offer/{offerId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "offerId",
              "value": {
                "value": {
                  "value": "offerId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "endTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "expireTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "azureOriginalPlan": {
                      "properties": {
                        "$schema": {
                          "value": {
                            "value": "$schema",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "plan": {
                          "value": {
                            "value": "plan",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "product": {
                          "value": {
                            "value": "product",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resourceName": {
                          "value": {
                            "value": "resourceName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "validations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "azurePrivateOffer": {
                      "properties": {
                        "$schema": {
                          "value": {
                            "value": "$schema",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "acceptBy": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "acceptanceLinks": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "beneficiaries": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "eTag": {
                          "value": {
                            "value": "eTag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastModified": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "notificationContacts": {
                          "value": [
                            {
                              "value": {
                                "value": "notificationContacts",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "preparedBy": {
                          "value": {
                            "value": "preparedBy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pricing": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "privateOfferType": {
                          "value": "customerPromotion",
                          "type": "enum"
                        },
                        "resourceName": {
                          "value": {
                            "value": "resourceName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "start": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": "draft",
                          "type": "enum"
                        },
                        "subState": {
                          "value": "pendingAcceptance",
                          "type": "enum"
                        },
                        "termsAndConditionsDocSasUrl": {
                          "value": {
                            "value": "termsAndConditionsDocSasUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "validations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "variableStartDate": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "azureProductVariant": {
                      "properties": {
                        "azureGovernmentCertifications": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "cloudAvailabilities": {
                          "value": [
                            {
                              "value": {
                                "value": "cloudAvailabilities",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "conversionPaths": {
                          "value": {
                            "value": "conversionPaths",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "extendedProperties": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "externalID": {
                          "value": {
                            "value": "externalID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "featureAvailabilities": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "friendlyName": {
                          "value": {
                            "value": "friendlyName",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "leadGenID": {
                          "value": {
                            "value": "leadGenID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referenceVariantID": {
                          "value": {
                            "value": "referenceVariantID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "resourceType": {
                          "value": "AzureSkuVariant",
                          "type": "enum"
                        },
                        "state": {
                          "value": "InActive",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "buyerAwsAccountIds": {
                      "value": [
                        {
                          "value": {
                            "value": "buyerAwsAccountIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "buyerAzureTenants": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "discount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "eulaType": {
                      "value": "",
                      "type": "enum"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpMetrics": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "gcpPlans": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "paymentInstallments": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "privateOfferUrl": {
                      "value": {
                        "value": "privateOfferUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "visibility": {
                      "value": "PRIVATE",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metaInfo": {
                  "properties": {
                    "baseAgreementId": {
                      "value": {
                        "value": "baseAgreementId",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "contacts": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "isAgreementBasedOffer": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "isRenewalOffer": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    },
                    "notifications": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "offerType": {
                  "value": "DEFAULT",
                  "type": "enum"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": "ACCEPTED",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "delete offer",
      "audiences": [],
      "operationId": "DeleteOffer",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteOfferRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Offer ID",
          "name": "offerId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteOfferRequestOfferId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteOfferRequest",
      "response": {
        "description": "Empty string if deletion is successful",
        "schema": {
          "schema": {
            "type": "string"
          },
          "generatedName": "DeleteOfferResponse",
          "groupName": [],
          "type": "primitive"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Only the offer with status = \"DRAFT\" or \"CREATE_FAILED\" is allowed to be deleted.",
      "authed": true,
      "method": "DELETE",
      "path": "/org/{orgId}/offer/{offerId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "offerId",
              "value": {
                "value": {
                  "value": "offerId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": {
                "value": "string",
                "type": "string"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "cancel offer",
      "audiences": [],
      "operationId": "CancelOffer",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CancelOfferRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Offer ID",
          "name": "offerId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CancelOfferRequestOfferId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CancelOfferRequest",
      "response": {
        "description": "Empty string if cancellation is successful",
        "schema": {
          "schema": {
            "type": "string"
          },
          "generatedName": "CancelOfferResponse",
          "groupName": [],
          "type": "primitive"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Only the offer with status = \"PENDING_ACCEPTANCE\" or \"PENDING_CANCEL\" is allowed to cancel.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/offer/{offerId}/cancel",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "offerId",
              "value": {
                "value": {
                  "value": "offerId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": {
                "value": "string",
                "type": "string"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list entitlements by offer",
      "audiences": [],
      "operationId": "ListEntitlementsByOffer",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsByOfferRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Offer ID",
          "name": "offerId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsByOfferRequestOfferId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListEntitlementsByOfferRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListEntitlementsByOfferResponseItem",
            "schema": "shared.WorkloadEntitlement",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListEntitlementsByOfferResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all entitlements under the given offer",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/offer/{offerId}/entitlement",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "offerId",
              "value": {
                "value": {
                  "value": "offerId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "buyerID": {
                      "value": {
                        "value": "buyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "entitlementTermID": {
                      "value": {
                        "value": "entitlementTermID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalBuyerID": {
                      "value": {
                        "value": "externalBuyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalProductID": {
                      "value": {
                        "value": "externalProductID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "autoRenew": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "awsEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "azureSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commitAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "disbursedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "invoicedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerID": {
                      "value": {
                        "value": "offerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "ACTIVE",
                      "type": "enum"
                    },
                    "type": {
                      "value": {
                        "value": "type",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list operations",
      "audiences": [],
      "operationId": "ListOperations",
      "tags": [
        "Operation"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListOperationsRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "filter by offerId",
          "name": "offerId",
          "schema": {
            "generatedName": "ListOperationsRequestOfferId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListOperationsRequestOfferId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "filter by entitlementId",
          "name": "entitlementId",
          "schema": {
            "generatedName": "ListOperationsRequestEntitlementId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListOperationsRequestEntitlementId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "filter by crmOpportunityId",
          "name": "crmOpportunityId",
          "schema": {
            "generatedName": "ListOperationsRequestCrmOpportunityId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListOperationsRequestCrmOpportunityId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "filter by partnerOpportunityId",
          "name": "partnerOpportunityId",
          "schema": {
            "generatedName": "ListOperationsRequestPartnerOpportunityId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListOperationsRequestPartnerOpportunityId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListOperationsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListOperationsResponseItem",
            "schema": "shared.Operation",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListOperationsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all long running operations under the given organization, offer, entitlement, crmOpportunity or partnerOpportunity. Only provide one filter on a request.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/operation",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "message": {
                      "value": {
                        "value": "message",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": {
                        "value": "status",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": {
                      "value": {
                        "value": "TemporalWorkflow",
                        "type": "string"
                      },
                      "type": "literal"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list entitlements by partner",
      "audiences": [],
      "operationId": "ListEntitlementsByPartner",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsByPartnerRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "ListEntitlementsByPartnerRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListEntitlementsByPartnerRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListEntitlementsByPartnerResponseItem",
            "schema": "shared.WorkloadEntitlement",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListEntitlementsByPartnerResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all entitlements under the given partner",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/partner/{partner}/entitlement",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "buyerID": {
                      "value": {
                        "value": "buyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "entitlementTermID": {
                      "value": {
                        "value": "entitlementTermID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalBuyerID": {
                      "value": {
                        "value": "externalBuyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalProductID": {
                      "value": {
                        "value": "externalProductID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "autoRenew": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "awsEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "azureSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commitAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "disbursedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "invoicedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerID": {
                      "value": {
                        "value": "offerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "ACTIVE",
                      "type": "enum"
                    },
                    "type": {
                      "value": {
                        "value": "type",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list offers by partner",
      "audiences": [],
      "operationId": "ListOffersByPartner",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListOffersByPartnerRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "ListOffersByPartnerRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [
        {
          "description": "Bearer Access Token",
          "name": "Authorization",
          "schema": {
            "schema": {
              "example": "Bearer <token>",
              "type": "string"
            },
            "generatedName": "ListOffersByPartnerRequestAuthorization",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "ListOffersByPartnerRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListOffersByPartnerResponseItem",
            "schema": "shared.WorkloadOffer",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListOffersByPartnerResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all offers under the given organization & cloud partner.",
      "authed": false,
      "method": "GET",
      "path": "/org/{orgId}/partner/{partner}/offer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": "Authorization",
              "value": {
                "value": {
                  "value": "Bearer <token>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "createdBy": {
                      "value": {
                        "value": "createdBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "expireTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "buyerAwsAccountIds": {
                          "value": [
                            {
                              "value": {
                                "value": "buyerAwsAccountIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "buyerAzureTenants": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpMetrics": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "privateOfferUrl": {
                          "value": {
                            "value": "privateOfferUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "visibility": {
                          "value": "PRIVATE",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastUpdatedBy": {
                      "value": {
                        "value": "lastUpdatedBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "metaInfo": {
                      "properties": {
                        "baseAgreementId": {
                          "value": {
                            "value": "baseAgreementId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contacts": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isAgreementBasedOffer": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isRenewalOffer": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "notifications": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerType": {
                      "value": "DEFAULT",
                      "type": "enum"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "status": {
                      "value": "ACCEPTED",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list products by partner",
      "audiences": [],
      "operationId": "ListProductsByPartner",
      "tags": [
        "Product"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListProductsByPartnerRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "ListProductsByPartnerRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProductsByPartnerRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListProductsByPartnerResponseItem",
            "schema": "shared.WorkloadProduct",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListProductsByPartnerResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "list all products under the given organization and cloud partner",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/partner/{partner}/product",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "createdBy": {
                      "value": {
                        "value": "createdBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "fulfillmentUrl": {
                      "value": {
                        "value": "fulfillmentUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "awsSnsSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastUpdatedBy": {
                      "value": {
                        "value": "lastUpdatedBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productType": {
                      "value": "UNKNOWN",
                      "type": "enum"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "status": {
                      "value": {
                        "value": "status",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list revenue records",
      "audiences": [],
      "operationId": "ListRevenueRecords",
      "tags": [
        "Report"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListRevenueRecordsRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Filter revenue record details by the given product ID",
          "name": "productId",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestProductId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordsRequestProductId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Filter revenue record details by the given entitlement ID",
          "name": "entitlementId",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestEntitlementId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordsRequestEntitlementId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Filter revenue record details by the given buyer ID",
          "name": "buyerId",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestBuyerId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordsRequestBuyerId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordsRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordsRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListRevenueRecordsRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListRevenueRecordsRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListRevenueRecordsRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListRevenueRecordsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListRevenueRecordsResponse",
          "schema": "shared.ListRevenueRecordsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Bad request error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "internal error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "list the revenue records for the given organization, product, entitlement, or buyer.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/partner/{partner}/revenueRecord",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "revenueRecords": {
                  "value": [
                    {
                      "properties": {
                        "amount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "buyerID": {
                          "value": {
                            "value": "buyerID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "disburseAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "disburseDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "invoiceAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "invoiceDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "partner": {
                          "value": {
                            "value": "partner",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "paymentDueDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "productID": {
                          "value": {
                            "value": "productID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refundDisburseAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "refundDisburseDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "refundInvoiceAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "refundInvoiceDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "taxAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list revenue record details",
      "audiences": [],
      "operationId": "ListRevenueRecordDetails",
      "tags": [
        "Report"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListRevenueRecordDetailsRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Cloud Partner",
          "name": "partner",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestPartner",
            "values": [
              {
                "generatedName": "AWS",
                "value": "AWS",
                "casing": {}
              },
              {
                "generatedName": "AZURE",
                "value": "AZURE",
                "casing": {}
              },
              {
                "generatedName": "GCP",
                "value": "GCP",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Filter revenue record details by the given product ID",
          "name": "productId",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestProductId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordDetailsRequestProductId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Filter revenue record details by the given entitlement ID",
          "name": "entitlementId",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestEntitlementId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordDetailsRequestEntitlementId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Filter revenue record details by the given buyer ID",
          "name": "buyerId",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestBuyerId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordDetailsRequestBuyerId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordDetailsRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListRevenueRecordDetailsRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListRevenueRecordDetailsRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListRevenueRecordDetailsRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListRevenueRecordDetailsRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListRevenueRecordDetailsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListRevenueRecordDetailsResponse",
          "schema": "shared.ListRevenueRecordDetailsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Bad request error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "internal error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "list the raw revenue record details for the given organization, product, entitlement, or buyer.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/partner/{partner}/revenueRecordDetail",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "partner",
              "value": {
                "value": "AWS",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "revenueRecordDetails": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list products by organization",
      "audiences": [],
      "operationId": "ListProductsByOrganization",
      "tags": [
        "Product"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListProductsByOrganizationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProductsByOrganizationRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListProductsByOrganizationResponseItem",
            "schema": "shared.WorkloadProduct",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListProductsByOrganizationResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "list all products under the given organization",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/product",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "createdBy": {
                      "value": {
                        "value": "createdBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "fulfillmentUrl": {
                      "value": {
                        "value": "fulfillmentUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "attributes": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "awsSnsSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastUpdatedBy": {
                      "value": {
                        "value": "lastUpdatedBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productType": {
                      "value": "UNKNOWN",
                      "type": "enum"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "status": {
                      "value": {
                        "value": "status",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get product",
      "audiences": [],
      "operationId": "GetProduct",
      "tags": [
        "Product"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetProductRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetProductRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetProductRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetProductResponse",
          "schema": "shared.WorkloadProduct",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "get product by product id",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/product/{productId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fulfillmentUrl": {
                  "value": {
                    "value": "fulfillmentUrl",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "value",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "awsSaasProduct": {
                      "properties": {
                        "Dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "Versions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "dataFeedProductId": {
                          "value": {
                            "value": "dataFeedProductId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "productId": {
                          "value": {
                            "value": "productId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "awsSnsSubscriptions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "azureProduct": {
                      "properties": {
                        "availabilities": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "branches": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "externalIDs": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isModularPublishing": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "listings": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "packageConfigurations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "properties": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "resourceType": {
                          "value": {
                            "value": "resourceType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "submissions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "variants": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpProduct": {
                      "properties": {
                        "createTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "marketplace": {
                          "value": {
                            "value": "marketplaces/google-cloud",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "service": {
                          "value": {
                            "value": "service",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productType": {
                  "value": "UNKNOWN",
                  "type": "enum"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": {
                    "value": "status",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "delete product",
      "audiences": [],
      "operationId": "DeleteProduct",
      "tags": [
        "Product"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteProductRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteProductRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteProductRequest",
      "response": {
        "description": "Empty string if deletion is successful",
        "schema": {
          "schema": {
            "type": "string"
          },
          "generatedName": "DeleteProductResponse",
          "groupName": [],
          "type": "primitive"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "only the product with status = \"CREATE_FAILED\" is allowed to be deleted.",
      "authed": true,
      "method": "DELETE",
      "path": "/org/{orgId}/product/{productId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": {
                "value": "string",
                "type": "string"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "update product",
      "audiences": [],
      "operationId": "UpdateProduct",
      "tags": [
        "Product"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateProductRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateProductRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateProductRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateProductRequest",
          "schema": "shared.UpdateProductParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpdateProductResponse",
          "schema": "shared.WorkloadProduct",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "currently only the Fulfillment URL is allowed to update via this API.",
      "authed": true,
      "method": "PATCH",
      "path": "/org/{orgId}/product/{productId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "fulfillmentUrl": {
                "value": {
                  "value": "fulfillmentUrl",
                  "type": "string"
                },
                "type": "primitive"
              },
              "id": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "createdBy": {
                  "value": {
                    "value": "createdBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "externalID": {
                  "value": {
                    "value": "externalID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fulfillmentUrl": {
                  "value": {
                    "value": "fulfillmentUrl",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "attributes": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "value",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "awsSaasProduct": {
                      "properties": {
                        "Dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "Versions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "dataFeedProductId": {
                          "value": {
                            "value": "dataFeedProductId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "productId": {
                          "value": {
                            "value": "productId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "awsSnsSubscriptions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "azureProduct": {
                      "properties": {
                        "availabilities": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "branches": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "externalIDs": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isModularPublishing": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "listings": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "packageConfigurations": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "properties": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "resourceType": {
                          "value": {
                            "value": "resourceType",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "submissions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "variants": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "commits": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "currency": {
                      "value": {
                        "value": "currency",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "dimensions": {
                      "value": [
                        {
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "eulaUrl": {
                      "value": {
                        "value": "eulaUrl",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "gcpProduct": {
                      "properties": {
                        "createTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "marketplace": {
                          "value": {
                            "value": "marketplaces/google-cloud",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "service": {
                          "value": {
                            "value": "service",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "refundCancelationPolicy": {
                      "value": {
                        "value": "refundCancelationPolicy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sellerNotes": {
                      "value": {
                        "value": "sellerNotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "lastUpdatedBy": {
                  "value": {
                    "value": "lastUpdatedBy",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": "AWS",
                  "type": "enum"
                },
                "productType": {
                  "value": "UNKNOWN",
                  "type": "enum"
                },
                "service": {
                  "value": {
                    "value": "MARKETPLACE",
                    "type": "string"
                  },
                  "type": "literal"
                },
                "status": {
                  "value": {
                    "value": "status",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list metering dimensions of product",
      "audiences": [],
      "operationId": "ListProductMeteringDimensions",
      "tags": [
        "Product"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListProductMeteringDimensionsRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListProductMeteringDimensionsRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListProductMeteringDimensionsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListProductMeteringDimensionsResponseItem",
            "schema": "shared.AwsSaasProductDimension",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListProductMeteringDimensionsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "list all metering dimensions of the given product",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/product/{productId}/dimension",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "Description": {
                      "value": {
                        "value": "Description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "Key": {
                      "value": {
                        "value": "Key",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "Name": {
                      "value": {
                        "value": "Name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "Types": {
                      "value": [
                        {
                          "value": {
                            "value": "Types",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "Unit": {
                      "value": {
                        "value": "Unit",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list entitlements by product",
      "audiences": [],
      "operationId": "ListEntitlementsByProduct",
      "tags": [
        "Entitlement"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsByProductRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListEntitlementsByProductRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListEntitlementsByProductRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListEntitlementsByProductResponseItem",
            "schema": "shared.WorkloadEntitlement",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListEntitlementsByProductResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all entitlements under the given product",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/product/{productId}/entitlement",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "buyerID": {
                      "value": {
                        "value": "buyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "entitlementTermID": {
                      "value": {
                        "value": "entitlementTermID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalBuyerID": {
                      "value": {
                        "value": "externalBuyerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "externalProductID": {
                      "value": {
                        "value": "externalProductID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "autoRenew": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "awsEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "azureSubscriptions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commitAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "disbursedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpEntitlements": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "invoicedAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerID": {
                      "value": {
                        "value": "offerID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "ACTIVE",
                      "type": "enum"
                    },
                    "type": {
                      "value": {
                        "value": "type",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list offers by product",
      "audiences": [],
      "operationId": "ListOffersByProduct",
      "tags": [
        "Offer"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListOffersByProductRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListOffersByProductRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ListOffersByProductRequest",
      "response": {
        "description": "OK",
        "schema": {
          "value": {
            "generatedName": "ListOffersByProductResponseItem",
            "schema": "shared.WorkloadOffer",
            "source": {
              "file": "../swagger.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "ListOffersByProductResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List all offers under the given organization & product.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/product/{productId}/offer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "createdBy": {
                      "value": {
                        "value": "createdBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "creationTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "expireTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "externalID": {
                      "value": {
                        "value": "externalID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "info": {
                      "properties": {
                        "buyerAwsAccountIds": {
                          "value": [
                            {
                              "value": {
                                "value": "buyerAwsAccountIds",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "buyerAzureTenants": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "commits": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "dimensions": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "discount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "eulaType": {
                          "value": "",
                          "type": "enum"
                        },
                        "eulaUrl": {
                          "value": {
                            "value": "eulaUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "gcpMetrics": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "gcpPlans": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "paymentInstallments": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "privateOfferUrl": {
                          "value": {
                            "value": "privateOfferUrl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refundCancelationPolicy": {
                          "value": {
                            "value": "refundCancelationPolicy",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sellerNotes": {
                          "value": {
                            "value": "sellerNotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "visibility": {
                          "value": "PRIVATE",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "lastUpdateTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "lastUpdatedBy": {
                      "value": {
                        "value": "lastUpdatedBy",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "metaInfo": {
                      "properties": {
                        "baseAgreementId": {
                          "value": {
                            "value": "baseAgreementId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "contacts": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "isAgreementBasedOffer": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "isRenewalOffer": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "notifications": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "offerType": {
                      "value": "DEFAULT",
                      "type": "enum"
                    },
                    "organizationID": {
                      "value": {
                        "value": "organizationID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "partner": {
                      "value": "AWS",
                      "type": "enum"
                    },
                    "productID": {
                      "value": {
                        "value": "productID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "service": {
                      "value": {
                        "value": "MARKETPLACE",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "status": {
                      "value": "ACCEPTED",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list usageRecordGroups by product",
      "audiences": [],
      "operationId": "ListUsageRecordGroupsByProduct",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordGroupsByProductRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordGroupsByProductRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByProductRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordGroupsByProductRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByProductRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordGroupsByProductRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByProductRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordGroupsByProductRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByProductRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordGroupsByProductRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUsageRecordGroupsByProductRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListUsageRecordGroupsByProductResponse",
          "schema": "shared.ListUsageRecordGroupsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "list UsageRecordGroups for the given organization and product",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/product/{productId}/usageRecordGroup",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "usageRecordGroups": {
                  "value": [
                    {
                      "properties": {
                        "creationTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastUpdateTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "records": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": 1.1,
                                  "type": "double"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "serialID": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "usageRecordReportID": {
                          "value": {
                            "value": "usageRecordReportID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list usageRecordReports by product",
      "audiences": [],
      "operationId": "ListUsageRecordReportsByProduct",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordReportsByProductRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "Product ID",
          "name": "productId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordReportsByProductRequestProductId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListUsageRecordReportsByProductRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordReportsByProductRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListUsageRecordReportsByProductRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordReportsByProductRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListUsageRecordReportsByProductRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordReportsByProductRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListUsageRecordReportsByProductRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordReportsByProductRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUsageRecordReportsByProductRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListUsageRecordReportsByProductResponse",
          "schema": "shared.ListUsageRecordReportsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List usageRecordReports for the given organization and product",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/product/{productId}/usageRecordReport",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "productId",
              "value": {
                "value": {
                  "value": "productId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "usageRecordReports": {
                  "value": [
                    {
                      "properties": {
                        "creationTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "entitlementTermID": {
                          "value": {
                            "value": "entitlementTermID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "productID": {
                          "value": {
                            "value": "productID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get revenue report",
      "audiences": [],
      "operationId": "GetRevenueReport",
      "tags": [
        "Report"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRevenueReportRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetRevenueReportRequest",
      "request": {
        "schema": {
          "generatedName": "GetRevenueReportRequest",
          "schema": "shared.GetRevenueReportParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetRevenueReportResponse",
          "schema": "shared.RevenueReport",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Bad request error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "internal error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get the revenue report of the given organization, product, entitlement, or buyer.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/revenueReport",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "partner": {
                "value": "AWS",
                "type": "enum"
              },
              "reportType": {
                "value": "InvoicedAmount",
                "type": "enum"
              },
              "service": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "type": "literal"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "buyerID": {
                  "value": {
                    "value": "buyerID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "entitlementID": {
                  "value": {
                    "value": "entitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partner": {
                  "value": {
                    "value": "partner",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "reportDate": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "reportType": {
                  "value": "InvoicedAmount",
                  "type": "enum"
                },
                "revenueRecords": {
                  "value": [
                    {
                      "properties": {
                        "amount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "buyerID": {
                          "value": {
                            "value": "buyerID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "collectableAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "currency": {
                          "value": {
                            "value": "currency",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "disburseAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "disburseDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "invoiceAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "invoiceDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "partner": {
                          "value": {
                            "value": "partner",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "paymentDueDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "productID": {
                          "value": {
                            "value": "productID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "refundDisburseAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "refundDisburseDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "refundInvoiceAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "refundInvoiceDate": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "taxAmount": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "service": {
                  "value": {
                    "value": "service",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list usageRecordGroups by organization",
      "audiences": [],
      "operationId": "ListUsageRecordGroupsByOrganization",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordGroupsByOrganizationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByOrganizationRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordGroupsByOrganizationRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByOrganizationRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordGroupsByOrganizationRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByOrganizationRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordGroupsByOrganizationRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListUsageRecordGroupsByOrganizationRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordGroupsByOrganizationRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUsageRecordGroupsByOrganizationRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListUsageRecordGroupsByOrganizationResponse",
          "schema": "shared.ListUsageRecordGroupsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "list UsageRecordGroups under the given organization.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/usageRecordGroup",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "usageRecordGroups": {
                  "value": [
                    {
                      "properties": {
                        "creationTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "lastUpdateTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "records": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": 1.1,
                                  "type": "double"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "serialID": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": {
                            "value": "status",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "usageRecordReportID": {
                          "value": {
                            "value": "usageRecordReportID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get usageRecordGroup",
      "audiences": [],
      "operationId": "GetUsageRecordGroup",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUsageRecordGroupRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "UsageRecordGroup ID",
          "name": "usageRecordGroupId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUsageRecordGroupRequestUsageRecordGroupId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetUsageRecordGroupRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetUsageRecordGroupResponse",
          "schema": "shared.MeteringUsageRecordGroup",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "get UsageRecordGroup for the given organization and usageRecordGroup ID",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/usageRecordGroup/{usageRecordGroupId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "usageRecordGroupId",
              "value": {
                "value": {
                  "value": "usageRecordGroupId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "entitlementID": {
                  "value": {
                    "value": "entitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "lastUpdateTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "metaInfo": {
                  "properties": {
                    "originRecords": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "records": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": 1.1,
                          "type": "double"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "serialID": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": {
                    "value": "status",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "usageRecordReportID": {
                  "value": {
                    "value": "usageRecordReportID",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "list usageRecordReports by organization",
      "audiences": [],
      "operationId": "ListUsageRecordReportsByOrganization",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ListUsageRecordReportsByOrganizationRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
          "name": "startDate",
          "schema": {
            "generatedName": "ListUsageRecordReportsByOrganizationRequestStartDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordReportsByOrganizationRequestStartDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "end date (UTC) in YYYY-MM-DD format, default is today",
          "name": "endDate",
          "schema": {
            "generatedName": "ListUsageRecordReportsByOrganizationRequestEndDate",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ListUsageRecordReportsByOrganizationRequestEndDate",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination size, default 20, max value is 1000",
          "name": "limit",
          "schema": {
            "generatedName": "ListUsageRecordReportsByOrganizationRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordReportsByOrganizationRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "List pagination offset, default 0",
          "name": "offset",
          "schema": {
            "generatedName": "ListUsageRecordReportsByOrganizationRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ListUsageRecordReportsByOrganizationRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListUsageRecordReportsByOrganizationRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "ListUsageRecordReportsByOrganizationResponse",
          "schema": "shared.ListUsageRecordReportsResponse",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad Request",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "List usageRecordReports under the given organization",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/usageRecordReport",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "nextOffset": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "usageRecordReports": {
                  "value": [
                    {
                      "properties": {
                        "creationTime": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "entitlementID": {
                          "value": {
                            "value": "entitlementID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "entitlementTermID": {
                          "value": {
                            "value": "entitlementTermID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "organizationID": {
                          "value": {
                            "value": "organizationID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "productID": {
                          "value": {
                            "value": "productID",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get usageRecordReport",
      "audiences": [],
      "operationId": "GetUsageRecordReport",
      "tags": [
        "Metering"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUsageRecordReportRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        },
        {
          "description": "UsageRecordReport ID",
          "name": "usageRecordReportId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUsageRecordReportRequestUsageRecordReportId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetUsageRecordReportRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetUsageRecordReportResponse",
          "schema": "shared.MeteringUsageRecordReport",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "get the usageRecordReport for a given organization and usageRecordReport ID.",
      "authed": true,
      "method": "GET",
      "path": "/org/{orgId}/usageRecordReport/{usageRecordReportId}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "usageRecordReportId",
              "value": {
                "value": {
                  "value": "usageRecordReportId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "creationTime": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "entitlementID": {
                  "value": {
                    "value": "entitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "entitlementTermID": {
                  "value": {
                    "value": "entitlementTermID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "info": {
                  "properties": {
                    "awsMeteringResponse": {
                      "properties": {
                        "resultMetadata": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "results": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "unprocessedRecords": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "azureMeteringResponse": {
                      "properties": {
                        "count": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "result": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "commitAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "creditAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "creditRecords": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "dimensionUnitPrice": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "endTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "gcpMeteringResponse": {
                      "properties": {
                        "reportErrors": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "serviceConfigId": {
                          "value": {
                            "value": "serviceConfigId",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "serviceRolloutId": {
                          "value": {
                            "value": "serviceRolloutId",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "includedRecords": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "reportedRecords": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": 1.1,
                              "type": "double"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "startTime": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "usageRecordGroupIds": {
                      "value": [
                        {
                          "value": {
                            "value": "usageRecordGroupIds",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "usedCommitAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "usedCommitAmountIncrement": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "usedCreditAmount": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "usedCreditAmountIncrement": {
                      "value": {
                        "value": 1.1,
                        "type": "double"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "productID": {
                  "value": {
                    "value": "productID",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get usage report",
      "audiences": [],
      "operationId": "GetUsageReport",
      "tags": [
        "Report"
      ],
      "pathParameters": [
        {
          "description": "Organization ID",
          "name": "orgId",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetUsageReportRequestOrgId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetUsageReportRequest",
      "request": {
        "schema": {
          "generatedName": "GetUsageReportRequest",
          "schema": "shared.GetUsageReportParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetUsageReportResponse",
          "schema": "shared.UsageReport",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Bad request error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "internal error description",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "get the daily usage report of the given entitlement, the default timespan is lifetime.",
      "authed": true,
      "method": "POST",
      "path": "/org/{orgId}/usageReport",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "orgId",
              "value": {
                "value": {
                  "value": "orgId",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "entitlementID": {
                "value": {
                  "value": "entitlementID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "entitlementID": {
                  "value": {
                    "value": "entitlementID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "organizationID": {
                  "value": {
                    "value": "organizationID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "reportDate": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "usageRecords": {
                  "value": [
                    {
                      "properties": {
                        "amounts": {
                          "value": [
                            {
                              "value": {
                                "value": 1.1,
                                "type": "double"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "keys": {
                          "value": [
                            {
                              "value": {
                                "value": "keys",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "quantities": {
                          "value": [
                            {
                              "value": {
                                "value": 1.1,
                                "type": "double"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    },
    {
      "summary": "get api access token",
      "audiences": [],
      "operationId": "GetApiClientAccessToken",
      "tags": [
        "API"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetApiClientAccessTokenRequest",
      "request": {
        "schema": {
          "generatedName": "GetApiClientAccessTokenRequest",
          "schema": "shared.GetApiClientAccessTokenParams",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetApiClientAccessTokenResponse",
          "schema": "shared.ApiClientAccessToken",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "type": "unknown"
          },
          "description": "Internal Server Error",
          "source": {
            "file": "../swagger.json",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Get the Bearer Access Token by giving the Suger API Client ID & Client Secret.",
      "authed": false,
      "method": "POST",
      "path": "/public/apiClient/accessToken",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "organizationID": {
                "value": {
                  "value": "organizationID",
                  "type": "string"
                },
                "type": "primitive"
              },
              "secret": {
                "value": {
                  "value": "secret",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "access_token": {
                  "value": {
                    "value": "access_token",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "expires_in": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "token_type": {
                  "value": {
                    "value": "token_type",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../swagger.json",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "AzureAudience": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureAudienceDescription",
            "key": "description",
            "schema": {
              "generatedName": "azureAudienceDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureAudienceDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureAudienceId",
            "key": "id",
            "schema": {
              "generatedName": "azureAudienceId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureAudienceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureAudience",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureGovernmentCertification": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureGovernmentCertificationTitle",
            "key": "title",
            "schema": {
              "generatedName": "azureGovernmentCertificationTitle",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureGovernmentCertificationTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureGovernmentCertificationUri",
            "key": "uri",
            "schema": {
              "generatedName": "azureGovernmentCertificationUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureGovernmentCertificationUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureGovernmentCertificationValidationResults",
            "key": "validationResults",
            "schema": {
              "generatedName": "azureGovernmentCertificationValidationResults",
              "value": {
                "value": {
                  "generatedName": "AzureGovernmentCertificationValidationResultsItem",
                  "schema": "AzureValidationResult",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureGovernmentCertificationValidationResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureGovernmentCertification",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureIncludedBaseQuantity": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureIncludedBaseQuantityIsInfinite",
            "key": "isInfinite",
            "schema": {
              "generatedName": "azureIncludedBaseQuantityIsInfinite",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureIncludedBaseQuantityIsInfinite",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureIncludedBaseQuantityQuantity",
            "key": "quantity",
            "schema": {
              "generatedName": "azureIncludedBaseQuantityQuantity",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "AzureIncludedBaseQuantityQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureIncludedBaseQuantityRecurringUnit",
            "key": "recurringUnit",
            "schema": {
              "generatedName": "azureIncludedBaseQuantityRecurringUnit",
              "value": {
                "generatedName": "AzureIncludedBaseQuantityRecurringUnit",
                "values": [
                  {
                    "generatedName": "Monthly",
                    "value": "Monthly",
                    "casing": {}
                  },
                  {
                    "generatedName": "Annual",
                    "value": "Annual",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureIncludedBaseQuantity",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureListingContact": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureListingContactEmail",
            "key": "email",
            "schema": {
              "generatedName": "azureListingContactEmail",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingContactEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureListingContactName",
            "key": "name",
            "schema": {
              "generatedName": "azureListingContactName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingContactName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureListingContactPhone",
            "key": "phone",
            "schema": {
              "generatedName": "azureListingContactPhone",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingContactPhone",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureListingContactType",
            "key": "type",
            "schema": {
              "generatedName": "azureListingContactType",
              "value": {
                "generatedName": "AzureListingContactType",
                "values": [
                  {
                    "generatedName": "CustomerSupport",
                    "value": "CustomerSupport",
                    "casing": {}
                  },
                  {
                    "generatedName": "Engineering",
                    "value": "Engineering",
                    "casing": {}
                  },
                  {
                    "generatedName": "ChannelManager",
                    "value": "ChannelManager",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureListingContactUri",
            "key": "uri",
            "schema": {
              "generatedName": "azureListingContactUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingContactUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureListingContact",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureListingUri": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureListingUriDisplayText",
            "key": "displayText",
            "schema": {
              "generatedName": "azureListingUriDisplayText",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingUriDisplayText",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureListingUriSubtype",
            "key": "subtype",
            "schema": {
              "generatedName": "azureListingUriSubtype",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingUriSubtype",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureListingUriType",
            "key": "type",
            "schema": {
              "generatedName": "azureListingUriType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingUriType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureListingUriUri",
            "key": "uri",
            "schema": {
              "generatedName": "azureListingUriUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureListingUriUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureListingUri",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureLocalizedDateTime": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureLocalizedDateTimeDateTimeInUtc",
            "key": "dateTimeInUtc",
            "schema": {
              "generatedName": "azureLocalizedDateTimeDateTimeInUtc",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureLocalizedDateTimeDateTimeInUtc",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureLocalizedDateTimeLocalizePerMarket",
            "key": "localizePerMarket",
            "schema": {
              "generatedName": "azureLocalizedDateTimeLocalizePerMarket",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureLocalizedDateTimeLocalizePerMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureLocalizedDateTime",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureLocalizedTimeRange": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureLocalizedTimeRangeEndAt",
            "key": "endAt",
            "schema": {
              "generatedName": "azureLocalizedTimeRangeEndAt",
              "value": {
                "generatedName": "AzureLocalizedTimeRangeEndAt",
                "schema": "AzureLocalizedDateTime",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azureLocalizedTimeRangeStartAt",
            "key": "startAt",
            "schema": {
              "generatedName": "azureLocalizedTimeRangeStartAt",
              "value": {
                "generatedName": "AzureLocalizedTimeRangeStartAt",
                "schema": "AzureLocalizedDateTime",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureLocalizedTimeRange",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarket": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketFriendlyName",
            "key": "friendlyName",
            "schema": {
              "generatedName": "azureMarketFriendlyName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketFriendlyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketMarketCode",
            "key": "marketCode",
            "schema": {
              "generatedName": "azureMarketMarketCode",
              "value": {
                "description": "ISO Country Code",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketMarketCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarket",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketState": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketStateMarketCode",
            "key": "marketCode",
            "schema": {
              "generatedName": "azureMarketStateMarketCode",
              "value": {
                "description": "ISO Country Code",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketStateMarketCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketStateState",
            "key": "state",
            "schema": {
              "generatedName": "azureMarketStateState",
              "value": {
                "generatedName": "AzureMarketStateState",
                "values": [
                  {
                    "generatedName": "Disabled",
                    "value": "Disabled",
                    "casing": {}
                  },
                  {
                    "generatedName": "Enabled",
                    "value": "Enabled",
                    "casing": {}
                  },
                  {
                    "generatedName": "StopSelling",
                    "value": "StopSelling",
                    "casing": {}
                  },
                  {
                    "generatedName": "Terminated",
                    "value": "Terminated",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketState",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplacePrice": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplacePriceCurrency",
            "key": "currency",
            "schema": {
              "generatedName": "azureMarketplacePriceCurrency",
              "value": {
                "description": "ISO 4217 currency code",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePriceCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePriceMarkets",
            "key": "markets",
            "schema": {
              "generatedName": "azureMarketplacePriceMarkets",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureMarketplacePriceMarketsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureMarketplacePriceMarkets",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePricePrice",
            "key": "price",
            "schema": {
              "generatedName": "azureMarketplacePricePrice",
              "value": {
                "description": "default 0",
                "schema": {
                  "type": "double"
                },
                "generatedName": "AzureMarketplacePricePrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePricePrices",
            "key": "prices",
            "schema": {
              "generatedName": "azureMarketplacePricePrices",
              "value": {
                "generatedName": "AzureMarketplacePricePrices",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplacePrice",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplacePrivateOffer": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferSchema",
            "key": "$schema",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferSchema",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferSchema",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferAcceptBy",
            "key": "acceptBy",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferAcceptBy",
              "value": {
                "description": "in format YYYY-MM-DD",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AzureMarketplacePrivateOfferAcceptBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferAcceptanceLinks",
            "key": "acceptanceLinks",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferAcceptanceLinks",
              "value": {
                "value": {
                  "generatedName": "AzureMarketplacePrivateOfferAcceptanceLinksItem",
                  "schema": "AzureMarketplacePrivateOfferAcceptanceLink",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureMarketplacePrivateOfferAcceptanceLinks",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferBeneficiaries",
            "key": "beneficiaries",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferBeneficiaries",
              "value": {
                "description": "array of email addresses.",
                "value": {
                  "generatedName": "AzureMarketplacePrivateOfferBeneficiariesItem",
                  "schema": "AzureMarketplacePrivateOfferBeneficiary",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureMarketplacePrivateOfferBeneficiaries",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferETag",
            "key": "eTag",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferETag",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferETag",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferEnd",
            "key": "end",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferEnd",
              "value": {
                "description": "in format YYYY-MM-DD",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AzureMarketplacePrivateOfferEnd",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferId",
            "key": "id",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferId",
              "value": {
                "description": "in format of \"private-offer/private-offer-durable-id\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferLastModified",
            "key": "lastModified",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferLastModified",
              "value": {
                "description": "in format YYYY-MM-DD",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AzureMarketplacePrivateOfferLastModified",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferName",
            "key": "name",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferNotificationContacts",
            "key": "notificationContacts",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferNotificationContacts",
              "value": {
                "description": "array of email addresses of the users to be notified of any changes in the private offer status.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureMarketplacePrivateOfferNotificationContactsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureMarketplacePrivateOfferNotificationContacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPreparedBy",
            "key": "preparedBy",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPreparedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPreparedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricing",
            "key": "pricing",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricing",
              "value": {
                "description": "Up to 10 pricing entries are allowed.",
                "value": {
                  "generatedName": "AzureMarketplacePrivateOfferPricingItem",
                  "schema": "AzureMarketplacePrivateOfferPricing",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureMarketplacePrivateOfferPricing",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPrivateOfferType",
            "key": "privateOfferType",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPrivateOfferType",
              "value": {
                "generatedName": "AzureMarketplacePrivateOfferPrivateOfferType",
                "values": [
                  {
                    "generatedName": "customerPromotion",
                    "value": "customerPromotion",
                    "casing": {}
                  },
                  {
                    "generatedName": "cspPromotion",
                    "value": "cspPromotion",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferResourceName",
            "key": "resourceName",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferResourceName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferResourceName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferStart",
            "key": "start",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferStart",
              "value": {
                "description": "in format YYYY-MM-DD, if VariableStartDate = true, this field should be empty.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AzureMarketplacePrivateOfferStart",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferState",
            "key": "state",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferState",
              "value": {
                "generatedName": "AzureMarketplacePrivateOfferState",
                "values": [
                  {
                    "generatedName": "draft",
                    "value": "draft",
                    "casing": {}
                  },
                  {
                    "generatedName": "live",
                    "value": "live",
                    "casing": {}
                  },
                  {
                    "generatedName": "withdrawn",
                    "value": "withdrawn",
                    "casing": {}
                  },
                  {
                    "generatedName": "deleted",
                    "value": "deleted",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferSubState",
            "key": "subState",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferSubState",
              "value": {
                "generatedName": "AzureMarketplacePrivateOfferSubState",
                "values": [
                  {
                    "generatedName": "pendingAcceptance",
                    "value": "pendingAcceptance",
                    "casing": {}
                  },
                  {
                    "generatedName": "accepted",
                    "value": "accepted",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferTermsAndConditionsDocSasUrl",
            "key": "termsAndConditionsDocSasUrl",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferTermsAndConditionsDocSasUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferTermsAndConditionsDocSasUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferUpgradedFrom",
            "key": "upgradedFrom",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferUpgradedFrom",
              "value": {
                "generatedName": "AzureMarketplacePrivateOfferUpgradedFrom",
                "schema": "AzureMarketplacePrivateOfferPromotionReference",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferValidations",
            "key": "validations",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferValidations",
              "value": {
                "value": {
                  "generatedName": "AzureMarketplacePrivateOfferValidationsItem",
                  "schema": "AzureMarketplaceValidation",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureMarketplacePrivateOfferValidations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferVariableStartDate",
            "key": "variableStartDate",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferVariableStartDate",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureMarketplacePrivateOfferVariableStartDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplacePrivateOffer",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplacePrivateOfferAcceptanceLink": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferAcceptanceLinkBeneficiaryId",
            "key": "beneficiaryId",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferAcceptanceLinkBeneficiaryId",
              "value": {
                "description": "The Customer Billing Account ID.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferAcceptanceLinkBeneficiaryId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferAcceptanceLinkLink",
            "key": "link",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferAcceptanceLinkLink",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferAcceptanceLinkLink",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplacePrivateOfferAcceptanceLink",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplacePrivateOfferBeneficiary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferBeneficiaryBeneficiaryRecipients",
            "key": "beneficiaryRecipients",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferBeneficiaryBeneficiaryRecipients",
              "value": {
                "value": {
                  "generatedName": "AzureMarketplacePrivateOfferBeneficiaryBeneficiaryRecipientsItem",
                  "schema": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureMarketplacePrivateOfferBeneficiaryBeneficiaryRecipients",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferBeneficiaryDescription",
            "key": "description",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferBeneficiaryDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferBeneficiaryDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferBeneficiaryId",
            "key": "id",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferBeneficiaryId",
              "value": {
                "description": "the customer billing account id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferBeneficiaryId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplacePrivateOfferBeneficiary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplacePrivateOfferBeneficiaryRecipient": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferBeneficiaryRecipientId",
            "key": "id",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferBeneficiaryRecipientId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferBeneficiaryRecipientRecipientType",
            "key": "recipientType",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferBeneficiaryRecipientRecipientType",
              "value": {
                "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipientRecipientType",
                "values": [
                  {
                    "generatedName": "cspCustomer",
                    "value": "cspCustomer",
                    "casing": {}
                  },
                  {
                    "generatedName": "billingGroup",
                    "value": "billingGroup",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplacePrivateOfferPricing": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingDiscountPercentage",
            "key": "discountPercentage",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingDiscountPercentage",
              "value": {
                "description": "between 0 and 100",
                "schema": {
                  "type": "double"
                },
                "generatedName": "AzureMarketplacePrivateOfferPricingDiscountPercentage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingDiscountType",
            "key": "discountType",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingDiscountType",
              "value": {
                "generatedName": "AzureMarketplacePrivateOfferPricingDiscountType",
                "values": [
                  {
                    "generatedName": "percentage",
                    "value": "percentage",
                    "casing": {}
                  },
                  {
                    "generatedName": "absolute",
                    "value": "absolute",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingOriginalPlan",
            "key": "originalPlan",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingOriginalPlan",
              "value": {
                "description": "the pricing plan of the original plan.",
                "generatedName": "AzureMarketplacePrivateOfferPricingOriginalPlan",
                "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingPlan",
            "key": "plan",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingPlan",
              "value": {
                "description": "in format of \"plan/product-durable-id/plan-durable-id\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPricingPlan",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingPlanName",
            "key": "planName",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingPlanName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPricingPlanName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingPlanType",
            "key": "planType",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingPlanType",
              "value": {
                "description": "The type of the plan, FLAT_RATE or PER_USER.",
                "generatedName": "AzureMarketplacePrivateOfferPricingPlanType",
                "values": [
                  {
                    "generatedName": "FLAT_RATE",
                    "value": "FLAT_RATE",
                    "casing": {}
                  },
                  {
                    "generatedName": "PER_USER",
                    "value": "PER_USER",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingPriceDetails",
            "key": "priceDetails",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingPriceDetails",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPricingPriceDetails",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingPrivateOfferPlan",
            "key": "privateOfferPlan",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingPrivateOfferPlan",
              "value": {
                "description": "the pricing plan of the private offer",
                "generatedName": "AzureMarketplacePrivateOfferPricingPrivateOfferPlan",
                "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingProduct",
            "key": "product",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingProduct",
              "value": {
                "description": "in format of \"product/product-durable-id\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPricingProduct",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPricingSugerOfferId",
            "key": "sugerOfferId",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPricingSugerOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPricingSugerOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplacePrivateOfferPricing",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplacePrivateOfferPromotionReference": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPromotionReferenceId",
            "key": "id",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPromotionReferenceId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPromotionReferenceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplacePrivateOfferPromotionReferenceName",
            "key": "name",
            "schema": {
              "generatedName": "azureMarketplacePrivateOfferPromotionReferenceName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplacePrivateOfferPromotionReferenceName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplacePrivateOfferPromotionReference",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplaceTerm": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplaceTermType",
            "key": "type",
            "schema": {
              "generatedName": "azureMarketplaceTermType",
              "value": {
                "generatedName": "AzureMarketplaceTermType",
                "values": [
                  {
                    "generatedName": "day",
                    "value": "day",
                    "casing": {}
                  },
                  {
                    "generatedName": "week",
                    "value": "week",
                    "casing": {}
                  },
                  {
                    "generatedName": "month",
                    "value": "month",
                    "casing": {}
                  },
                  {
                    "generatedName": "year",
                    "value": "year",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplaceTermValue",
            "key": "value",
            "schema": {
              "generatedName": "azureMarketplaceTermValue",
              "value": {
                "description": "default 0",
                "schema": {
                  "type": "double"
                },
                "generatedName": "AzureMarketplaceTermValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplaceTerm",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureMarketplaceValidation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureMarketplaceValidationSchema",
            "key": "$schema",
            "schema": {
              "generatedName": "azureMarketplaceValidationSchema",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplaceValidationSchema",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplaceValidationCode",
            "key": "code",
            "schema": {
              "generatedName": "azureMarketplaceValidationCode",
              "value": {
                "generatedName": "AzureMarketplaceValidationCode",
                "values": [
                  {
                    "generatedName": "businessValidationError",
                    "value": "businessValidationError",
                    "casing": {}
                  },
                  {
                    "generatedName": "collectionLimitExceeded",
                    "value": "collectionLimitExceeded",
                    "casing": {}
                  },
                  {
                    "generatedName": "invalidId",
                    "value": "invalidId",
                    "casing": {}
                  },
                  {
                    "generatedName": "invalidEntityStatus",
                    "value": "invalidEntityStatus",
                    "casing": {}
                  },
                  {
                    "generatedName": "invalidRequest",
                    "value": "invalidRequest",
                    "casing": {}
                  },
                  {
                    "generatedName": "invalidResource",
                    "value": "invalidResource",
                    "casing": {}
                  },
                  {
                    "generatedName": "invalidState",
                    "value": "invalidState",
                    "casing": {}
                  },
                  {
                    "generatedName": "notDeployed",
                    "value": "notDeployed",
                    "casing": {}
                  },
                  {
                    "generatedName": "notSupported",
                    "value": "notSupported",
                    "casing": {}
                  },
                  {
                    "generatedName": "operationCanceled",
                    "value": "operationCanceled",
                    "casing": {}
                  },
                  {
                    "generatedName": "productLocked",
                    "value": "productLocked",
                    "casing": {}
                  },
                  {
                    "generatedName": "resourceNotFound",
                    "value": "resourceNotFound",
                    "casing": {}
                  },
                  {
                    "generatedName": "schemaValidationError",
                    "value": "schemaValidationError",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplaceValidationLevel",
            "key": "level",
            "schema": {
              "generatedName": "azureMarketplaceValidationLevel",
              "value": {
                "generatedName": "AzureMarketplaceValidationLevel",
                "values": [
                  {
                    "generatedName": "informational",
                    "value": "informational",
                    "casing": {}
                  },
                  {
                    "generatedName": "warning",
                    "value": "warning",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplaceValidationMessage",
            "key": "message",
            "schema": {
              "generatedName": "azureMarketplaceValidationMessage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplaceValidationMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureMarketplaceValidationResourceId",
            "key": "resourceId",
            "schema": {
              "generatedName": "azureMarketplaceValidationResourceId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureMarketplaceValidationResourceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureMarketplaceValidation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePendingUpdateInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePendingUpdateInfoStatus",
            "key": "status",
            "schema": {
              "generatedName": "azurePendingUpdateInfoStatus",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePendingUpdateInfoStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePendingUpdateInfoUpdateType",
            "key": "updateType",
            "schema": {
              "generatedName": "azurePendingUpdateInfoUpdateType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePendingUpdateInfoUpdateType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePendingUpdateInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePrice": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceCurrencyCode",
            "key": "currencyCode",
            "schema": {
              "generatedName": "azurePriceCurrencyCode",
              "value": {
                "description": "ISO currency code, Three characters",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePriceCurrencyCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceOpenPrice",
            "key": "openPrice",
            "schema": {
              "generatedName": "azurePriceOpenPrice",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "AzurePriceOpenPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePricePriceTierId",
            "key": "priceTierID",
            "schema": {
              "generatedName": "azurePricePriceTierId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePricePriceTierId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePrice",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePriceAndAvailabilityPrivateOfferCustomMeters": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferCustomMetersMeters",
            "key": "meters",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferCustomMetersMeters",
              "value": {
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMetersMeters",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption",
            "key": "priceInputOption",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption",
              "value": {
                "description": "default \"usd\"",
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption",
                "values": [
                  {
                    "generatedName": "perMarket",
                    "value": "perMarket",
                    "casing": {}
                  },
                  {
                    "generatedName": "usd",
                    "value": "usd",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePriceAndAvailabilityPrivateOfferPlan": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanSchema",
            "key": "$schema",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanSchema",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanSchema",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanId",
            "key": "id",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanPlan",
            "key": "plan",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanPlan",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanPlan",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanPricing",
            "key": "pricing",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanPricing",
              "value": {
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanPricing",
                "schema": "AzurePriceAndAvailabilityPrivateOfferPrice",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanProduct",
            "key": "product",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanProduct",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanProduct",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanResourceName",
            "key": "resourceName",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanResourceName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanResourceName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanValidations",
            "key": "validations",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPlanValidations",
              "value": {
                "value": {
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanValidationsItem",
                  "schema": "AzureMarketplaceValidation",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanValidations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlan",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePriceAndAvailabilityPrivateOfferPrice": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPriceCustomMeters",
            "key": "customMeters",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPriceCustomMeters",
              "value": {
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPriceCustomMeters",
                "schema": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityPrivateOfferPriceRecurrentPrice",
            "key": "recurrentPrice",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityPrivateOfferPriceRecurrentPrice",
              "value": {
                "generatedName": "AzurePriceAndAvailabilityPrivateOfferPriceRecurrentPrice",
                "schema": "AzurePriceAndAvailabilityRecurrentPrice",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePriceAndAvailabilityPrivateOfferPrice",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePriceAndAvailabilityRecurrentPrice": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityRecurrentPricePriceInputOption",
            "key": "priceInputOption",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityRecurrentPricePriceInputOption",
              "value": {
                "description": "default \"usd\"",
                "generatedName": "AzurePriceAndAvailabilityRecurrentPricePriceInputOption",
                "values": [
                  {
                    "generatedName": "perMarket",
                    "value": "perMarket",
                    "casing": {}
                  },
                  {
                    "generatedName": "usd",
                    "value": "usd",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityRecurrentPricePrices",
            "key": "prices",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityRecurrentPricePrices",
              "value": {
                "value": {
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPricePricesItem",
                  "schema": "AzurePriceAndAvailabilityRecurrentPriceItem",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzurePriceAndAvailabilityRecurrentPricePrices",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePriceAndAvailabilityRecurrentPrice",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePriceAndAvailabilityRecurrentPriceItem": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemBillingTerm",
            "key": "billingTerm",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemBillingTerm",
              "value": {
                "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemBillingTerm",
                "schema": "AzureMarketplaceTerm",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemPaymentOption",
            "key": "paymentOption",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemPaymentOption",
              "value": {
                "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPaymentOption",
                "schema": "AzureMarketplaceTerm",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemPricePerPaymentInUsd",
            "key": "pricePerPaymentInUsd",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemPricePerPaymentInUsd",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPricePerPaymentInUsd",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemPrices",
            "key": "prices",
            "schema": {
              "generatedName": "azurePriceAndAvailabilityRecurrentPriceItemPrices",
              "value": {
                "value": {
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPricesItem",
                  "schema": "AzureMarketplacePrice",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPrices",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItem",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePriceCadence": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceCadenceType",
            "key": "type",
            "schema": {
              "generatedName": "azurePriceCadenceType",
              "value": {
                "generatedName": "AzurePriceCadenceType",
                "values": [
                  {
                    "generatedName": "Month",
                    "value": "Month",
                    "casing": {}
                  },
                  {
                    "generatedName": "Year",
                    "value": "Year",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceCadenceValue",
            "key": "value",
            "schema": {
              "generatedName": "azurePriceCadenceValue",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "AzurePriceCadenceValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePriceCadence",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePriceSchedule": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePriceSchedulePriceCadence",
            "key": "priceCadence",
            "schema": {
              "generatedName": "azurePriceSchedulePriceCadence",
              "value": {
                "generatedName": "AzurePriceSchedulePriceCadence",
                "schema": "AzurePriceCadence",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azurePriceSchedulePricingModel",
            "key": "pricingModel",
            "schema": {
              "generatedName": "azurePriceSchedulePricingModel",
              "value": {
                "generatedName": "AzurePriceSchedulePricingModel",
                "values": [
                  {
                    "generatedName": "Flat",
                    "value": "Flat",
                    "casing": {}
                  },
                  {
                    "generatedName": "Recurring",
                    "value": "Recurring",
                    "casing": {}
                  },
                  {
                    "generatedName": "Usage",
                    "value": "Usage",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceSchedulePricingUnits",
            "key": "pricingUnits",
            "schema": {
              "generatedName": "azurePriceSchedulePricingUnits",
              "value": {
                "value": {
                  "generatedName": "AzurePriceSchedulePricingUnitsItem",
                  "schema": "AzurePricingUnit",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzurePriceSchedulePricingUnits",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePriceScheduleRetailPrice",
            "key": "retailPrice",
            "schema": {
              "generatedName": "azurePriceScheduleRetailPrice",
              "value": {
                "generatedName": "AzurePriceScheduleRetailPrice",
                "schema": "AzurePrice",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePriceSchedule",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzurePricingUnit": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azurePricingUnitIsUnlimitedUnit",
            "key": "isUnlimitedUnit",
            "schema": {
              "generatedName": "azurePricingUnitIsUnlimitedUnit",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzurePricingUnitIsUnlimitedUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePricingUnitLowerUnit",
            "key": "lowerUnit",
            "schema": {
              "generatedName": "azurePricingUnitLowerUnit",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "AzurePricingUnitLowerUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePricingUnitName",
            "key": "name",
            "schema": {
              "generatedName": "azurePricingUnitName",
              "value": {
                "generatedName": "AzurePricingUnitName",
                "values": [
                  {
                    "generatedName": "sharedcore",
                    "value": "sharedcore",
                    "casing": {}
                  },
                  {
                    "generatedName": "transactions",
                    "value": "transactions",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePricingUnitUnitType",
            "key": "unitType",
            "schema": {
              "generatedName": "azurePricingUnitUnitType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzurePricingUnitUnitType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azurePricingUnitUpperUnit",
            "key": "upperUnit",
            "schema": {
              "generatedName": "azurePricingUnitUpperUnit",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "AzurePricingUnitUpperUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzurePricingUnit",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProduct": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductAvailabilities",
            "key": "availabilities",
            "schema": {
              "generatedName": "azureProductAvailabilities",
              "value": {
                "value": {
                  "generatedName": "AzureProductAvailabilitiesItem",
                  "schema": "AzureProductAvailability",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductAvailabilities",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductBranches",
            "key": "branches",
            "schema": {
              "generatedName": "azureProductBranches",
              "value": {
                "value": {
                  "generatedName": "AzureProductBranchesItem",
                  "schema": "AzureProductBranch",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductBranches",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductExternalIDs",
            "key": "externalIDs",
            "schema": {
              "generatedName": "azureProductExternalIDs",
              "value": {
                "value": {
                  "generatedName": "AzureProductExternalIDsItem",
                  "schema": "AzureTypeValue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductExternalIDs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductIsModularPublishing",
            "key": "isModularPublishing",
            "schema": {
              "generatedName": "azureProductIsModularPublishing",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductIsModularPublishing",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListings",
            "key": "listings",
            "schema": {
              "generatedName": "azureProductListings",
              "value": {
                "value": {
                  "generatedName": "AzureProductListingsItem",
                  "schema": "AzureProductListing",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductListings",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductName",
            "key": "name",
            "schema": {
              "generatedName": "azureProductName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPackageConfigurations",
            "key": "packageConfigurations",
            "schema": {
              "generatedName": "azureProductPackageConfigurations",
              "value": {
                "value": {
                  "generatedName": "AzureProductPackageConfigurationsItem",
                  "schema": "AzureProductPackageConfiguration",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductPackageConfigurations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductProperties",
            "key": "properties",
            "schema": {
              "generatedName": "azureProductProperties",
              "value": {
                "value": {
                  "generatedName": "AzureProductPropertiesItem",
                  "schema": "AzureProductProperty",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductProperties",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductResourceType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductResourceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSetup",
            "key": "setup",
            "schema": {
              "generatedName": "azureProductSetup",
              "value": {
                "description": "Not original fields. They are populated by other API calls",
                "generatedName": "AzureProductSetup",
                "schema": "AzureProductSetup",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissions",
            "key": "submissions",
            "schema": {
              "generatedName": "azureProductSubmissions",
              "value": {
                "value": {
                  "generatedName": "AzureProductSubmissionsItem",
                  "schema": "AzureProductSubmission",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductSubmissions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariants",
            "key": "variants",
            "schema": {
              "generatedName": "azureProductVariants",
              "value": {
                "value": {
                  "generatedName": "AzureProductVariantsItem",
                  "schema": "AzureProductVariant",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductVariants",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProduct",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductAvailability": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductAvailabilityEmailAudiences",
            "key": "emailAudiences",
            "schema": {
              "generatedName": "azureProductAvailabilityEmailAudiences",
              "value": {
                "value": {
                  "generatedName": "AzureProductAvailabilityEmailAudiencesItem",
                  "schema": "AzureAudience",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductAvailabilityEmailAudiences",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductAvailabilityEnterpriseLicensing",
            "key": "enterpriseLicensing",
            "schema": {
              "generatedName": "azureProductAvailabilityEnterpriseLicensing",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductAvailabilityEnterpriseLicensing",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductAvailabilityId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductAvailabilityId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductAvailabilityId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductAvailabilityResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductAvailabilityResourceType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductAvailabilityResourceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductAvailabilitySubscriptionAudiences",
            "key": "subscriptionAudiences",
            "schema": {
              "generatedName": "azureProductAvailabilitySubscriptionAudiences",
              "value": {
                "value": {
                  "generatedName": "AzureProductAvailabilitySubscriptionAudiencesItem",
                  "schema": "AzureAudience",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductAvailabilitySubscriptionAudiences",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductAvailabilityVisibility",
            "key": "visibility",
            "schema": {
              "generatedName": "azureProductAvailabilityVisibility",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductAvailabilityVisibility",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductAvailability",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductBranch": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductBranchCurrentDraftInstanceId",
            "key": "currentDraftInstanceID",
            "schema": {
              "generatedName": "azureProductBranchCurrentDraftInstanceId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductBranchCurrentDraftInstanceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductBranchFriendlyName",
            "key": "friendlyName",
            "schema": {
              "generatedName": "azureProductBranchFriendlyName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductBranchFriendlyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductBranchId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductBranchId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductBranchId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductBranchModule",
            "key": "module",
            "schema": {
              "generatedName": "azureProductBranchModule",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductBranchModule",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductBranchResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductBranchResourceType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductBranchResourceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductBranchType",
            "key": "type",
            "schema": {
              "generatedName": "azureProductBranchType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductBranchType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductBranchVariantId",
            "key": "variantID",
            "schema": {
              "generatedName": "azureProductBranchVariantId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductBranchVariantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductBranch",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductFeatureAvailability": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityCustomMeters",
            "key": "customMeters",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityCustomMeters",
              "value": {
                "value": {
                  "generatedName": "AzureProductFeatureAvailabilityCustomMetersItem",
                  "schema": "AzureProductVariantCustomMeter",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductFeatureAvailabilityCustomMeters",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductFeatureAvailabilityId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityIsHidden",
            "key": "isHidden",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityIsHidden",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductFeatureAvailabilityIsHidden",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityMarketStates",
            "key": "marketStates",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityMarketStates",
              "value": {
                "value": {
                  "generatedName": "AzureProductFeatureAvailabilityMarketStatesItem",
                  "schema": "AzureMarketState",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductFeatureAvailabilityMarketStates",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityMarkets",
            "key": "markets",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityMarkets",
              "value": {
                "value": {
                  "generatedName": "AzureProductFeatureAvailabilityMarketsItem",
                  "schema": "AzureMarket",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductFeatureAvailabilityMarkets",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityPriceSchedules",
            "key": "priceSchedules",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityPriceSchedules",
              "value": {
                "value": {
                  "generatedName": "AzureProductFeatureAvailabilityPriceSchedulesItem",
                  "schema": "AzureProductVariantPriceSchedule",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductFeatureAvailabilityPriceSchedules",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityProperties",
            "key": "properties",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityProperties",
              "value": {
                "value": {
                  "generatedName": "AzureProductFeatureAvailabilityPropertiesItem",
                  "schema": "AzureTypeValue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductFeatureAvailabilityProperties",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityResourceType",
              "value": {
                "description": "ResourceType = FeatureAvailability",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductFeatureAvailabilityResourceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilitySubscriptionAudiences",
            "key": "subscriptionAudiences",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilitySubscriptionAudiences",
              "value": {
                "value": {
                  "generatedName": "AzureProductFeatureAvailabilitySubscriptionAudiencesItem",
                  "schema": "AzureAudience",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductFeatureAvailabilitySubscriptionAudiences",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityTenantAudiences",
            "key": "tenantAudiences",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityTenantAudiences",
              "value": {
                "value": {
                  "generatedName": "AzureProductFeatureAvailabilityTenantAudiencesItem",
                  "schema": "AzureAudience",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductFeatureAvailabilityTenantAudiences",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityTrial",
            "key": "trial",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityTrial",
              "value": {
                "generatedName": "AzureProductFeatureAvailabilityTrial",
                "schema": "AzureProductVariantTrial",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azureProductFeatureAvailabilityVisibility",
            "key": "visibility",
            "schema": {
              "generatedName": "azureProductFeatureAvailabilityVisibility",
              "value": {
                "generatedName": "AzureProductFeatureAvailabilityVisibility",
                "values": [
                  {
                    "generatedName": "Public",
                    "value": "Public",
                    "casing": {}
                  },
                  {
                    "generatedName": "Private",
                    "value": "Private",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductFeatureAvailability",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductListing": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductListingAccessInformation",
            "key": "accessInformation",
            "schema": {
              "generatedName": "azureProductListingAccessInformation",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAccessInformation",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssets",
            "key": "assets",
            "schema": {
              "generatedName": "azureProductListingAssets",
              "value": {
                "description": "Not original fields. They are populated by other API calls",
                "value": {
                  "generatedName": "AzureProductListingAssetsItem",
                  "schema": "AzureProductListingAsset",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductListingAssets",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingCompatibleProducts",
            "key": "compatibleProducts",
            "schema": {
              "generatedName": "azureProductListingCompatibleProducts",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductListingCompatibleProductsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductListingCompatibleProducts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingDescription",
            "key": "description",
            "schema": {
              "generatedName": "azureProductListingDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingGettingStartedInstructions",
            "key": "gettingStartedInstructions",
            "schema": {
              "generatedName": "azureProductListingGettingStartedInstructions",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingGettingStartedInstructions",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductListingId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingKeywords",
            "key": "keywords",
            "schema": {
              "generatedName": "azureProductListingKeywords",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductListingKeywordsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductListingKeywords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingLanguageCode",
            "key": "languageCode",
            "schema": {
              "generatedName": "azureProductListingLanguageCode",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingLanguageCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingListingContacts",
            "key": "listingContacts",
            "schema": {
              "generatedName": "azureProductListingListingContacts",
              "value": {
                "value": {
                  "generatedName": "AzureProductListingListingContactsItem",
                  "schema": "AzureListingContact",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductListingListingContacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingListingUris",
            "key": "listingUris",
            "schema": {
              "generatedName": "azureProductListingListingUris",
              "value": {
                "value": {
                  "generatedName": "AzureProductListingListingUrisItem",
                  "schema": "AzureListingUri",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductListingListingUris",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingProductDisplayName",
            "key": "productDisplayName",
            "schema": {
              "generatedName": "azureProductListingProductDisplayName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingProductDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingPublisherName",
            "key": "publisherName",
            "schema": {
              "generatedName": "azureProductListingPublisherName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingPublisherName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductListingResourceType",
              "value": {
                "value": {
                  "value": "AzureListing",
                  "type": "string"
                },
                "generatedName": "AzureProductListingResourceType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingShortDescription",
            "key": "shortDescription",
            "schema": {
              "generatedName": "azureProductListingShortDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingShortDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingSummary",
            "key": "summary",
            "schema": {
              "generatedName": "azureProductListingSummary",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingSummary",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingTitle",
            "key": "title",
            "schema": {
              "generatedName": "azureProductListingTitle",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductListing",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductListingAsset": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetDescription",
            "key": "description",
            "schema": {
              "generatedName": "azureProductListingAssetDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAssetDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetFileName",
            "key": "fileName",
            "schema": {
              "generatedName": "azureProductListingAssetFileName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAssetFileName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetFileSasUri",
            "key": "fileSasUri",
            "schema": {
              "generatedName": "azureProductListingAssetFileSasUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAssetFileSasUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetFriendlyName",
            "key": "friendlyName",
            "schema": {
              "generatedName": "azureProductListingAssetFriendlyName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAssetFriendlyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductListingAssetId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAssetId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetOrder",
            "key": "order",
            "schema": {
              "generatedName": "azureProductListingAssetOrder",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "AzureProductListingAssetOrder",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetPublisherDefinedSasUri",
            "key": "publisherDefinedSasUri",
            "schema": {
              "generatedName": "azureProductListingAssetPublisherDefinedSasUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAssetPublisherDefinedSasUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductListingAssetResourceType",
              "value": {
                "generatedName": "AzureProductListingAssetResourceType",
                "values": [
                  {
                    "generatedName": "ListingAsset",
                    "value": "ListingAsset",
                    "casing": {}
                  },
                  {
                    "generatedName": "ListingImage",
                    "value": "ListingImage",
                    "casing": {}
                  },
                  {
                    "generatedName": "ListingVideo",
                    "value": "ListingVideo",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetState",
            "key": "state",
            "schema": {
              "generatedName": "azureProductListingAssetState",
              "value": {
                "generatedName": "AzureProductListingAssetState",
                "values": [
                  {
                    "generatedName": "PendingUpload",
                    "value": "PendingUpload",
                    "casing": {}
                  },
                  {
                    "generatedName": "Uploaded",
                    "value": "Uploaded",
                    "casing": {}
                  },
                  {
                    "generatedName": "InProcessing",
                    "value": "InProcessing",
                    "casing": {}
                  },
                  {
                    "generatedName": "Processed",
                    "value": "Processed",
                    "casing": {}
                  },
                  {
                    "generatedName": "ProcessFailed",
                    "value": "ProcessFailed",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductListingAssetType",
            "key": "type",
            "schema": {
              "generatedName": "azureProductListingAssetType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductListingAssetType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductListingAsset",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductPackageConfiguration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductPackageConfigurationAzureActiveDirectoryApplicationId",
            "key": "azureActiveDirectoryApplicationID",
            "schema": {
              "generatedName": "azureProductPackageConfigurationAzureActiveDirectoryApplicationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPackageConfigurationAzureActiveDirectoryApplicationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPackageConfigurationAzureActiveDirectoryTenantId",
            "key": "azureActiveDirectoryTenantID",
            "schema": {
              "generatedName": "azureProductPackageConfigurationAzureActiveDirectoryTenantId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPackageConfigurationAzureActiveDirectoryTenantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPackageConfigurationConnectionWebhook",
            "key": "connectionWebhook",
            "schema": {
              "generatedName": "azureProductPackageConfigurationConnectionWebhook",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPackageConfigurationConnectionWebhook",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPackageConfigurationId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductPackageConfigurationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPackageConfigurationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPackageConfigurationLandingPageUri",
            "key": "landingPageUri",
            "schema": {
              "generatedName": "azureProductPackageConfigurationLandingPageUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPackageConfigurationLandingPageUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPackageConfigurationResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductPackageConfigurationResourceType",
              "value": {
                "value": {
                  "value": "AzureSoftwareAsAServicePackageConfiguration",
                  "type": "string"
                },
                "generatedName": "AzureProductPackageConfigurationResourceType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductPackageConfiguration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductProperty": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductPropertyAdditionalCategories",
            "key": "additionalCategories",
            "schema": {
              "generatedName": "azureProductPropertyAdditionalCategories",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyAdditionalCategoriesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyAdditionalCategories",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyAppVersion",
            "key": "appVersion",
            "schema": {
              "generatedName": "azureProductPropertyAppVersion",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPropertyAppVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyApplicableProducts",
            "key": "applicableProducts",
            "schema": {
              "generatedName": "azureProductPropertyApplicableProducts",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyApplicableProductsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyApplicableProducts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyCategories",
            "key": "categories",
            "schema": {
              "generatedName": "azureProductPropertyCategories",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyCategoriesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyCategories",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyCustomAmendments",
            "key": "customAmendments",
            "schema": {
              "generatedName": "azureProductPropertyCustomAmendments",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyCustomAmendmentsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyCustomAmendments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyExtendedProperties",
            "key": "extendedProperties",
            "schema": {
              "generatedName": "azureProductPropertyExtendedProperties",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyExtendedPropertiesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyExtendedProperties",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyGlobalAmendmentTerms",
            "key": "globalAmendmentTerms",
            "schema": {
              "generatedName": "azureProductPropertyGlobalAmendmentTerms",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPropertyGlobalAmendmentTerms",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyHideKeys",
            "key": "hideKeys",
            "schema": {
              "generatedName": "azureProductPropertyHideKeys",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyHideKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyHideKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductPropertyId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPropertyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyIndustries",
            "key": "industries",
            "schema": {
              "generatedName": "azureProductPropertyIndustries",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyIndustriesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyIndustries",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyLeveledCategories",
            "key": "leveledCategories",
            "schema": {
              "generatedName": "azureProductPropertyLeveledCategories",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyLeveledCategoriesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "AzureProductPropertyLeveledCategoriesValue",
                  "type": "unknown"
                },
                "generatedName": "AzureProductPropertyLeveledCategories",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyLeveledIndustries",
            "key": "leveledIndustries",
            "schema": {
              "generatedName": "azureProductPropertyLeveledIndustries",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyLeveledIndustriesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "AzureProductPropertyLeveledIndustriesValue",
                  "type": "unknown"
                },
                "generatedName": "AzureProductPropertyLeveledIndustries",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyMarketingOnlyChange",
            "key": "marketingOnlyChange",
            "schema": {
              "generatedName": "azureProductPropertyMarketingOnlyChange",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductPropertyMarketingOnlyChange",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyProductTags",
            "key": "productTags",
            "schema": {
              "generatedName": "azureProductPropertyProductTags",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductPropertyProductTagsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductPropertyProductTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductPropertyResourceType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPropertyResourceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertySubmissionVersion",
            "key": "submissionVersion",
            "schema": {
              "generatedName": "azureProductPropertySubmissionVersion",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPropertySubmissionVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyTermsOfUse",
            "key": "termsOfUse",
            "schema": {
              "generatedName": "azureProductPropertyTermsOfUse",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductPropertyTermsOfUse",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductPropertyUseEnterpriseContract",
            "key": "useEnterpriseContract",
            "schema": {
              "generatedName": "azureProductPropertyUseEnterpriseContract",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductPropertyUseEnterpriseContract",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductProperty",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductSetup": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductSetupCallToAction",
            "key": "callToAction",
            "schema": {
              "generatedName": "azureProductSetupCallToAction",
              "value": {
                "generatedName": "AzureProductSetupCallToAction",
                "values": [
                  {
                    "generatedName": "free",
                    "value": "free",
                    "casing": {}
                  },
                  {
                    "generatedName": "FreeTrial",
                    "value": "free-trial",
                    "casing": {}
                  },
                  {
                    "generatedName": "ContactMe",
                    "value": "contact-me",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSetupChannelStates",
            "key": "channelStates",
            "schema": {
              "generatedName": "azureProductSetupChannelStates",
              "value": {
                "value": {
                  "generatedName": "AzureProductSetupChannelStatesItem",
                  "schema": "AzureTypeValue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductSetupChannelStates",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSetupEnableTestDrive",
            "key": "enableTestDrive",
            "schema": {
              "generatedName": "azureProductSetupEnableTestDrive",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductSetupEnableTestDrive",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSetupResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductSetupResourceType",
              "value": {
                "value": {
                  "value": "AzureProductSetup",
                  "type": "string"
                },
                "generatedName": "AzureProductSetupResourceType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSetupSellingOption",
            "key": "sellingOption",
            "schema": {
              "generatedName": "azureProductSetupSellingOption",
              "value": {
                "generatedName": "AzureProductSetupSellingOption",
                "values": [
                  {
                    "generatedName": "ListingOnly",
                    "value": "ListingOnly",
                    "casing": {}
                  },
                  {
                    "generatedName": "ListAndSell",
                    "value": "ListAndSell",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSetupTestDriveType",
            "key": "testDriveType",
            "schema": {
              "generatedName": "azureProductSetupTestDriveType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductSetupTestDriveType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSetupTrialUri",
            "key": "trialUri",
            "schema": {
              "generatedName": "azureProductSetupTrialUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductSetupTrialUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductSetup",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductSubmission": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionAreResourcesReady",
            "key": "areResourcesReady",
            "schema": {
              "generatedName": "azureProductSubmissionAreResourcesReady",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductSubmissionAreResourcesReady",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionFriendlyName",
            "key": "friendlyName",
            "schema": {
              "generatedName": "azureProductSubmissionFriendlyName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductSubmissionFriendlyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductSubmissionId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductSubmissionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionPendingUpdateInfo",
            "key": "pendingUpdateInfo",
            "schema": {
              "generatedName": "azureProductSubmissionPendingUpdateInfo",
              "value": {
                "generatedName": "AzureProductSubmissionPendingUpdateInfo",
                "schema": "AzurePendingUpdateInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionPublishedTimeInUtc",
            "key": "publishedTimeInUtc",
            "schema": {
              "generatedName": "azureProductSubmissionPublishedTimeInUtc",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AzureProductSubmissionPublishedTimeInUtc",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionReleaseNumber",
            "key": "releaseNumber",
            "schema": {
              "generatedName": "azureProductSubmissionReleaseNumber",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "AzureProductSubmissionReleaseNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductSubmissionResourceType",
              "value": {
                "value": {
                  "value": "Submission",
                  "type": "string"
                },
                "generatedName": "AzureProductSubmissionResourceType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionResources",
            "key": "resources",
            "schema": {
              "generatedName": "azureProductSubmissionResources",
              "value": {
                "value": {
                  "generatedName": "AzureProductSubmissionResourcesItem",
                  "schema": "AzureTypeValue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductSubmissionResources",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionState",
            "key": "state",
            "schema": {
              "generatedName": "azureProductSubmissionState",
              "value": {
                "generatedName": "AzureProductSubmissionState",
                "values": [
                  {
                    "generatedName": "Inprogress",
                    "value": "Inprogress",
                    "casing": {}
                  },
                  {
                    "generatedName": "Published",
                    "value": "Published",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionSubState",
            "key": "subState",
            "schema": {
              "generatedName": "azureProductSubmissionSubState",
              "value": {
                "generatedName": "AzureProductSubmissionSubState",
                "values": [
                  {
                    "generatedName": "InDraft",
                    "value": "InDraft",
                    "casing": {}
                  },
                  {
                    "generatedName": "Submitted",
                    "value": "Submitted",
                    "casing": {}
                  },
                  {
                    "generatedName": "Failed",
                    "value": "Failed",
                    "casing": {}
                  },
                  {
                    "generatedName": "FailedInCertification",
                    "value": "FailedInCertification",
                    "casing": {}
                  },
                  {
                    "generatedName": "ReadyToPublish",
                    "value": "ReadyToPublish",
                    "casing": {}
                  },
                  {
                    "generatedName": "Publishing",
                    "value": "Publishing",
                    "casing": {}
                  },
                  {
                    "generatedName": "Published",
                    "value": "Published",
                    "casing": {}
                  },
                  {
                    "generatedName": "InStore",
                    "value": "InStore",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionTargets",
            "key": "targets",
            "schema": {
              "generatedName": "azureProductSubmissionTargets",
              "value": {
                "value": {
                  "generatedName": "AzureProductSubmissionTargetsItem",
                  "schema": "AzureTypeValue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductSubmissionTargets",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductSubmissionVariantResources",
            "key": "variantResources",
            "schema": {
              "generatedName": "azureProductSubmissionVariantResources",
              "value": {
                "value": {
                  "generatedName": "AzureProductSubmissionVariantResourcesItem",
                  "schema": "AzureVariantResource",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductSubmissionVariantResources",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductSubmission",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductVariant": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductVariantAzureGovernmentCertifications",
            "key": "azureGovernmentCertifications",
            "schema": {
              "generatedName": "azureProductVariantAzureGovernmentCertifications",
              "value": {
                "value": {
                  "generatedName": "AzureProductVariantAzureGovernmentCertificationsItem",
                  "schema": "AzureGovernmentCertification",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductVariantAzureGovernmentCertifications",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantCloudAvailabilities",
            "key": "cloudAvailabilities",
            "schema": {
              "generatedName": "azureProductVariantCloudAvailabilities",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductVariantCloudAvailabilitiesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductVariantCloudAvailabilities",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantConversionPaths",
            "key": "conversionPaths",
            "schema": {
              "generatedName": "azureProductVariantConversionPaths",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantConversionPaths",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantExtendedProperties",
            "key": "extendedProperties",
            "schema": {
              "generatedName": "azureProductVariantExtendedProperties",
              "value": {
                "value": {
                  "generatedName": "AzureProductVariantExtendedPropertiesItem",
                  "schema": "AzureTypeValue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductVariantExtendedProperties",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantExternalId",
            "key": "externalID",
            "schema": {
              "generatedName": "azureProductVariantExternalId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantFeatureAvailabilities",
            "key": "featureAvailabilities",
            "schema": {
              "generatedName": "azureProductVariantFeatureAvailabilities",
              "value": {
                "description": "Not original fields. They are populated by other API calls",
                "value": {
                  "generatedName": "AzureProductVariantFeatureAvailabilitiesItem",
                  "schema": "AzureProductFeatureAvailability",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductVariantFeatureAvailabilities",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantFriendlyName",
            "key": "friendlyName",
            "schema": {
              "generatedName": "azureProductVariantFriendlyName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantFriendlyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductVariantId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantLeadGenId",
            "key": "leadGenID",
            "schema": {
              "generatedName": "azureProductVariantLeadGenId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantLeadGenId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantReferenceVariantId",
            "key": "referenceVariantID",
            "schema": {
              "generatedName": "azureProductVariantReferenceVariantId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantReferenceVariantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantResourceType",
            "key": "resourceType",
            "schema": {
              "generatedName": "azureProductVariantResourceType",
              "value": {
                "generatedName": "AzureProductVariantResourceType",
                "values": [
                  {
                    "generatedName": "AzureSkuVariant",
                    "value": "AzureSkuVariant",
                    "casing": {}
                  },
                  {
                    "generatedName": "AzureTestDriveVariant",
                    "value": "AzureTestDriveVariant",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantState",
            "key": "state",
            "schema": {
              "generatedName": "azureProductVariantState",
              "value": {
                "generatedName": "AzureProductVariantState",
                "values": [
                  {
                    "generatedName": "InActive",
                    "value": "InActive",
                    "casing": {}
                  },
                  {
                    "generatedName": "Active",
                    "value": "Active",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductVariant",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductVariantCustomMeter": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductVariantCustomMeterDisplayName",
            "key": "displayName",
            "schema": {
              "generatedName": "azureProductVariantCustomMeterDisplayName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantCustomMeterDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantCustomMeterId",
            "key": "id",
            "schema": {
              "generatedName": "azureProductVariantCustomMeterId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantCustomMeterId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantCustomMeterIncludedBaseQuantities",
            "key": "includedBaseQuantities",
            "schema": {
              "generatedName": "azureProductVariantCustomMeterIncludedBaseQuantities",
              "value": {
                "value": {
                  "generatedName": "AzureProductVariantCustomMeterIncludedBaseQuantitiesItem",
                  "schema": "AzureIncludedBaseQuantity",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductVariantCustomMeterIncludedBaseQuantities",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantCustomMeterIsEnabled",
            "key": "isEnabled",
            "schema": {
              "generatedName": "azureProductVariantCustomMeterIsEnabled",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductVariantCustomMeterIsEnabled",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantCustomMeterPriceInUsd",
            "key": "priceInUsd",
            "schema": {
              "generatedName": "azureProductVariantCustomMeterPriceInUsd",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "AzureProductVariantCustomMeterPriceInUsd",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantCustomMeterUniqueId",
            "key": "uniqueID",
            "schema": {
              "generatedName": "azureProductVariantCustomMeterUniqueId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantCustomMeterUniqueId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantCustomMeterUnitOfMeasure",
            "key": "unitOfMeasure",
            "schema": {
              "generatedName": "azureProductVariantCustomMeterUnitOfMeasure",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantCustomMeterUnitOfMeasure",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductVariantCustomMeter",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductVariantPriceSchedule": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductVariantPriceScheduleDateTimeRange",
            "key": "dateTimeRange",
            "schema": {
              "generatedName": "azureProductVariantPriceScheduleDateTimeRange",
              "value": {
                "generatedName": "AzureProductVariantPriceScheduleDateTimeRange",
                "schema": "AzureLocalizedTimeRange",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantPriceScheduleFriendlyName",
            "key": "friendlyName",
            "schema": {
              "generatedName": "azureProductVariantPriceScheduleFriendlyName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureProductVariantPriceScheduleFriendlyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantPriceScheduleIsBaseSchedule",
            "key": "isBaseSchedule",
            "schema": {
              "generatedName": "azureProductVariantPriceScheduleIsBaseSchedule",
              "value": {
                "description": "There is only one base schedule.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AzureProductVariantPriceScheduleIsBaseSchedule",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantPriceScheduleMarketCodes",
            "key": "marketCodes",
            "schema": {
              "generatedName": "azureProductVariantPriceScheduleMarketCodes",
              "value": {
                "description": "ISO country code",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureProductVariantPriceScheduleMarketCodesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureProductVariantPriceScheduleMarketCodes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantPriceScheduleSchedules",
            "key": "schedules",
            "schema": {
              "generatedName": "azureProductVariantPriceScheduleSchedules",
              "value": {
                "value": {
                  "generatedName": "AzureProductVariantPriceScheduleSchedulesItem",
                  "schema": "AzurePriceSchedule",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureProductVariantPriceScheduleSchedules",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductVariantPriceSchedule",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureProductVariantTrial": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureProductVariantTrialDateTimeRange",
            "key": "dateTimeRange",
            "schema": {
              "generatedName": "azureProductVariantTrialDateTimeRange",
              "value": {
                "generatedName": "AzureProductVariantTrialDateTimeRange",
                "schema": "AzureLocalizedTimeRange",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantTrialDuration",
            "key": "duration",
            "schema": {
              "generatedName": "azureProductVariantTrialDuration",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "AzureProductVariantTrialDuration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantTrialDurationType",
            "key": "durationType",
            "schema": {
              "generatedName": "azureProductVariantTrialDurationType",
              "value": {
                "generatedName": "AzureProductVariantTrialDurationType",
                "values": [
                  {
                    "generatedName": "Minute",
                    "value": "Minute",
                    "casing": {}
                  },
                  {
                    "generatedName": "Days",
                    "value": "Days",
                    "casing": {}
                  },
                  {
                    "generatedName": "Months",
                    "value": "Months",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureProductVariantTrialType",
            "key": "type",
            "schema": {
              "generatedName": "azureProductVariantTrialType",
              "value": {
                "generatedName": "AzureProductVariantTrialType",
                "values": [
                  {
                    "generatedName": "NoTrial",
                    "value": "NoTrial",
                    "casing": {}
                  },
                  {
                    "generatedName": "TimedAccess",
                    "value": "TimedAccess",
                    "casing": {}
                  },
                  {
                    "generatedName": "TimedUsage",
                    "value": "TimedUsage",
                    "casing": {}
                  },
                  {
                    "generatedName": "Unlimited",
                    "value": "Unlimited",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureProductVariantTrial",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureTypeValue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureTypeValueType",
            "key": "type",
            "schema": {
              "generatedName": "azureTypeValueType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureTypeValueType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureTypeValueValue",
            "key": "value",
            "schema": {
              "generatedName": "azureTypeValueValue",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureTypeValueValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureTypeValue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureValidationResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureValidationResultErrorMessage",
            "key": "errorMessage",
            "schema": {
              "generatedName": "azureValidationResultErrorMessage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureValidationResultErrorMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureValidationResultMemberNames",
            "key": "memberNames",
            "schema": {
              "generatedName": "azureValidationResultMemberNames",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AzureValidationResultMemberNamesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AzureValidationResultMemberNames",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureValidationResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "AzureVariantResource": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "azureVariantResourceResources",
            "key": "resources",
            "schema": {
              "generatedName": "azureVariantResourceResources",
              "value": {
                "value": {
                  "generatedName": "AzureVariantResourceResourcesItem",
                  "schema": "AzureTypeValue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AzureVariantResourceResources",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "azureVariantResourceVariantId",
            "key": "variantID",
            "schema": {
              "generatedName": "azureVariantResourceVariantId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AzureVariantResourceVariantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AzureVariantResource",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTagKey",
            "key": "key",
            "schema": {
              "generatedName": "githubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTagKey",
              "value": {
                "description": "One part of a key-value pair that makes up a tag. A key is a label that acts\nlike a category for the specific tag values.\n\nThis member is required.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTagKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTagValue",
            "key": "value",
            "schema": {
              "generatedName": "githubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTagValue",
              "value": {
                "description": "One part of a key-value pair that makes up a tag. A value acts as a descriptor\nwithin a tag category (key). The value can be empty or null.\n\nThis member is required.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTagValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTag",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseCount",
            "key": "count",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseCount",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseResult",
            "key": "result",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseResult",
              "value": {
                "value": {
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseResultItem",
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseResult",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageDimension",
            "key": "dimension",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageDimension",
              "value": {
                "description": "Dimension identifier",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageDimension",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageEffectiveStartTime",
            "key": "effectiveStartTime",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageEffectiveStartTime",
              "value": {
                "description": "Time in UTC when the usage event occurred",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageEffectiveStartTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageError",
            "key": "error",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageError",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageError",
                "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageMessageTime",
            "key": "messageTime",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageMessageTime",
              "value": {
                "description": "Time this message was created in UTC",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageMessageTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessagePlanId",
            "key": "planId",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessagePlanId",
              "value": {
                "description": "Plan associated with the purchased offer",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessagePlanId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageQuantity",
            "key": "quantity",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageQuantity",
              "value": {
                "description": "Number of units consumed",
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageResourceId",
            "key": "resourceId",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageResourceId",
              "value": {
                "description": "Identifier of the resource against which usage is emitted",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageResourceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageResourceUri",
            "key": "resourceUri",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageResourceUri",
              "value": {
                "description": "Identifier of the managed app resource against which usage is emitted",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageResourceUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageStatus",
            "key": "status",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageStatus",
              "value": {
                "description": "Status of the operation.",
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageStatus",
                "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageUsageEventId",
            "key": "usageEventId",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageUsageEventId",
              "value": {
                "description": "Unique identifier associated with the usage event",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageUsageEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
            "key": "additionalInfo",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
                "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseCode",
            "key": "code",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseCode",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseMessage",
            "key": "message",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseMessage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfoAcceptedMessage",
            "key": "acceptedMessage",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfoAcceptedMessage",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfoAcceptedMessage",
                "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseDimension",
            "key": "dimension",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseDimension",
              "value": {
                "description": "Dimension identifier",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseDimension",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseEffectiveStartTime",
            "key": "effectiveStartTime",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseEffectiveStartTime",
              "value": {
                "description": "Time in UTC when the usage event occurred",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseEffectiveStartTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseMessageTime",
            "key": "messageTime",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseMessageTime",
              "value": {
                "description": "Time this message was created in UTC",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseMessageTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponsePlanId",
            "key": "planId",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponsePlanId",
              "value": {
                "description": "Plan associated with the purchased offer",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponsePlanId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseQuantity",
            "key": "quantity",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseQuantity",
              "value": {
                "description": "Number of units consumed",
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseResourceId",
            "key": "resourceId",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseResourceId",
              "value": {
                "description": "Identifier of the resource against which usage is emitted",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseResourceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseResourceUri",
            "key": "resourceUri",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseResourceUri",
              "value": {
                "description": "Identifier of the managed app resource against which usage is emitted",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseResourceUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseStatus",
            "key": "status",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseStatus",
              "value": {
                "description": "Status of the operation.",
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseStatus",
                "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseUsageEventId",
            "key": "usageEventId",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseUsageEventId",
              "value": {
                "description": "Unique identifier associated with the usage event",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseUsageEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum": {
        "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum",
        "values": [
          {
            "nameOverride": "Accepted",
            "generatedName": "Accepted",
            "value": "Accepted",
            "casing": {}
          },
          {
            "nameOverride": "Expired",
            "generatedName": "Expired",
            "value": "Expired",
            "casing": {}
          },
          {
            "nameOverride": "Duplicate",
            "generatedName": "Duplicate",
            "value": "Duplicate",
            "casing": {}
          },
          {
            "nameOverride": "Error",
            "generatedName": "Error",
            "value": "Error",
            "casing": {}
          },
          {
            "nameOverride": "ResourceNotFound",
            "generatedName": "ResourceNotFound",
            "value": "ResourceNotFound",
            "casing": {}
          },
          {
            "nameOverride": "ResourceNotAuthorized",
            "generatedName": "ResourceNotAuthorized",
            "value": "ResourceNotAuthorized",
            "casing": {}
          },
          {
            "nameOverride": "InvalidDimension",
            "generatedName": "InvalidDimension",
            "value": "InvalidDimension",
            "casing": {}
          },
          {
            "nameOverride": "InvalidQuantity",
            "generatedName": "InvalidQuantity",
            "value": "InvalidQuantity",
            "casing": {}
          },
          {
            "nameOverride": "BadArgument",
            "generatedName": "BadArgument",
            "value": "BadArgument",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAction",
            "key": "action",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAction",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAction",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAgreementId",
            "key": "agreementID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAgreementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAgreementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAmount",
            "key": "amount",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBalanceImpacting",
            "key": "balanceImpacting",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBalanceImpacting",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBalanceImpacting",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBankTraceId",
            "key": "bankTraceID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBankTraceId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBankTraceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBillingAddressId",
            "key": "billingAddressID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBillingAddressId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBillingAddressId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBrokerId",
            "key": "brokerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBrokerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBrokerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventCurrency",
            "key": "currency",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventCurrency",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventDataFeedProductId",
            "key": "dataFeedProductID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventDataFeedProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventDataFeedProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventDisbursementBillingEventId",
            "key": "disbursementBillingEventID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventDisbursementBillingEventId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventDisbursementBillingEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventEndUserAccountId",
            "key": "endUserAccountID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventEndUserAccountId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventEndUserAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventFromAccountId",
            "key": "fromAccountID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventFromAccountId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventFromAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventId",
            "key": "id",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInsertDate",
            "key": "insertDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInsertDate",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInsertDate",
                "schema": "sql.NullTime",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceDate",
            "key": "invoiceDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceDate",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceDate",
                "schema": "sql.NullTime",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceId",
            "key": "invoiceID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventOfferId",
            "key": "offerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventParentBillingEventId",
            "key": "parentBillingEventID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventParentBillingEventId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventParentBillingEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventPaymentDueDate",
            "key": "paymentDueDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventPaymentDueDate",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventPaymentDueDate",
                "schema": "sql.NullTime",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventProductId",
            "key": "productID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventToAccountId",
            "key": "toAccountID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventToAccountId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventToAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventTransactionReferenceId",
            "key": "transactionReferenceID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventTransactionReferenceId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventTransactionReferenceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventTransactionType",
            "key": "transactionType",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventTransactionType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventTransactionType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodEndDate",
            "key": "usagePeriodEndDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodEndDate",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodEndDate",
                "schema": "sql.NullTime",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodStartDate",
            "key": "usagePeriodStartDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodStartDate",
              "value": {
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodStartDate",
                "schema": "sql.NullTime",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureAssetId",
            "key": "azureAssetID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureAssetId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureAssetId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureBillingAccountId",
            "key": "azureBillingAccountID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureBillingAccountId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureBillingAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureCustomerId",
            "key": "azureCustomerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureCustomerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureCustomerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureOfferId",
            "key": "azureOfferID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzureOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzurePlanId",
            "key": "azurePlanID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzurePlanId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueAzurePlanId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueBillingModel",
            "key": "billingModel",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueBillingModel",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueBillingModel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueEarningUsd",
            "key": "earningUsd",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueEarningUsd",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueEarningUsd",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueOfferId",
            "key": "offerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenuePayoutStatus",
            "key": "payoutStatus",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenuePayoutStatus",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenuePayoutStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueProductId",
            "key": "productID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenuePurchaseRecordId",
            "key": "purchaseRecordID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenuePurchaseRecordId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenuePurchaseRecordId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueRevenueUsd",
            "key": "revenueUsd",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueRevenueUsd",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueRevenueUsd",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueTermEndDate",
            "key": "termEndDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueTermEndDate",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueTermEndDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueTermStartDate",
            "key": "termStartDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueTermStartDate",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenueTermStartDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageAbandoned",
            "key": "abandoned",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageAbandoned",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageAbandoned",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageAccountId",
            "key": "accountID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageAccountId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageCharges",
            "key": "charges",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageCharges",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageCharges",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageCurrency",
            "key": "currency",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageCurrency",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageDueVendor",
            "key": "dueVendor",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageDueVendor",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageDueVendor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageGoogleEntity",
            "key": "googleEntity",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageGoogleEntity",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageGoogleEntity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageInsightAccountId",
            "key": "insightAccountID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageInsightAccountId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageInsightAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageOfferId",
            "key": "offerID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePaymentSchedule",
            "key": "paymentSchedule",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePaymentSchedule",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePaymentSchedule",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePaymentType",
            "key": "paymentType",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePaymentType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePaymentType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePrepayCredits",
            "key": "prepayCredits",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePrepayCredits",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsagePrepayCredits",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageProductId",
            "key": "productID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundBalanceDeductedThisMonth",
            "key": "refundBalanceDeductedThisMonth",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundBalanceDeductedThisMonth",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundBalanceDeductedThisMonth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundBalanceOutstanding",
            "key": "refundBalanceOutstanding",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundBalanceOutstanding",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundBalanceOutstanding",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundReason",
            "key": "refundReason",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundReason",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageRefundReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageReleased",
            "key": "released",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageReleased",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageReleased",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageReportDate",
            "key": "reportDate",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageReportDate",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageReportDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageResource",
            "key": "resource",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageResource",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageResource",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageSku",
            "key": "sku",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageSku",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageSku",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageTrialUse",
            "key": "trialUse",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageTrialUse",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageTrialUse",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUnit",
            "key": "unit",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUnit",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUsage",
            "key": "usage",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUsage",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUsage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUsedBy",
            "key": "usedBy",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUsedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageUsedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageWithheld",
            "key": "withheld",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageWithheld",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsageWithheld",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsDescription",
            "key": "description",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsId",
            "key": "id",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsName",
            "key": "name",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParamsOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsId",
            "key": "id",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsName",
            "key": "name",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "githubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParamsOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "marketplacemetering.BatchMeterUsageOutput": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "marketplacemeteringBatchMeterUsageOutputResultMetadata",
            "key": "resultMetadata",
            "schema": {
              "generatedName": "marketplacemeteringBatchMeterUsageOutputResultMetadata",
              "value": {
                "description": "Metadata pertaining to the operation's result.",
                "generatedName": "MarketplacemeteringBatchMeterUsageOutputResultMetadata",
                "schema": "middleware.Metadata",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "marketplacemeteringBatchMeterUsageOutputResults",
            "key": "results",
            "schema": {
              "generatedName": "marketplacemeteringBatchMeterUsageOutputResults",
              "value": {
                "description": "Contains all UsageRecords processed by BatchMeterUsage. These records were\neither honored by AWS Marketplace Metering Service or were invalid. Invalid\nrecords should be fixed before being resubmitted.",
                "value": {
                  "generatedName": "MarketplacemeteringBatchMeterUsageOutputResultsItem",
                  "schema": "types.UsageRecordResult",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "MarketplacemeteringBatchMeterUsageOutputResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "marketplacemeteringBatchMeterUsageOutputUnprocessedRecords",
            "key": "unprocessedRecords",
            "schema": {
              "generatedName": "marketplacemeteringBatchMeterUsageOutputUnprocessedRecords",
              "value": {
                "description": "Contains all UsageRecords that were not processed by BatchMeterUsage. This is a\nlist of UsageRecords. You can retry the failed request by making another\nBatchMeterUsage call with this list as input in the BatchMeterUsageRequest.",
                "value": {
                  "generatedName": "MarketplacemeteringBatchMeterUsageOutputUnprocessedRecordsItem",
                  "schema": "types.UsageRecord",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "MarketplacemeteringBatchMeterUsageOutputUnprocessedRecords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MarketplacemeteringBatchMeterUsageOutput",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "middleware.Metadata": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "MiddlewareMetadataKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "MiddlewareMetadataValue",
          "type": "unknown"
        },
        "generatedName": "MiddlewareMetadata",
        "groupName": [],
        "type": "map"
      },
      "servicecontrol.ReportError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "servicecontrolReportErrorOperationId",
            "key": "operationId",
            "schema": {
              "generatedName": "servicecontrolReportErrorOperationId",
              "value": {
                "description": "OperationId: The Operation.operation_id value from the request.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ServicecontrolReportErrorOperationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "servicecontrolReportErrorStatus",
            "key": "status",
            "schema": {
              "generatedName": "servicecontrolReportErrorStatus",
              "value": {
                "description": "Status: Details of the error when processing the Operation.",
                "generatedName": "ServicecontrolReportErrorStatus",
                "schema": "servicecontrol.Status",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ServicecontrolReportError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "servicecontrol.ReportResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "servicecontrolReportResponseReportErrors",
            "key": "reportErrors",
            "schema": {
              "generatedName": "servicecontrolReportResponseReportErrors",
              "value": {
                "description": "ReportErrors: Partial failures, one for each `Operation` in the\nrequest that failed processing. There are three possible combinations\nof the RPC status: 1. The combination of a successful RPC status and\nan empty `report_errors` list indicates a complete success where all\n`Operations` in the request are processed successfully. 2. The\ncombination of a successful RPC status and a non-empty\n`report_errors` list indicates a partial success where some\n`Operations` in the request succeeded. Each `Operation` that failed\nprocessing has a corresponding item in this list. 3. A failed RPC\nstatus indicates a general non-deterministic failure. When this\nhappens, it's impossible to know which of the 'Operations' in the\nrequest succeeded or failed.",
                "value": {
                  "generatedName": "ServicecontrolReportResponseReportErrorsItem",
                  "schema": "servicecontrol.ReportError",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ServicecontrolReportResponseReportErrors",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "servicecontrolReportResponseServiceConfigId",
            "key": "serviceConfigId",
            "schema": {
              "generatedName": "servicecontrolReportResponseServiceConfigId",
              "value": {
                "description": "ServiceConfigId: The actual config id used to process the request.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ServicecontrolReportResponseServiceConfigId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "servicecontrolReportResponseServiceRolloutId",
            "key": "serviceRolloutId",
            "schema": {
              "generatedName": "servicecontrolReportResponseServiceRolloutId",
              "value": {
                "description": "ServiceRolloutId: The current service rollout id used to process the\nrequest.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ServicecontrolReportResponseServiceRolloutId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ServicecontrolReportResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "servicecontrol.Status": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "servicecontrolStatusCode",
            "key": "code",
            "schema": {
              "generatedName": "servicecontrolStatusCode",
              "value": {
                "description": "Code: The status code, which should be an enum value of\ngoogle.rpc.Code.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "ServicecontrolStatusCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "servicecontrolStatusDetails",
            "key": "details",
            "schema": {
              "generatedName": "servicecontrolStatusDetails",
              "value": {
                "description": "Details: A list of messages that carry the error details. There is a\ncommon set of message types for APIs to use.",
                "value": {
                  "value": {
                    "schema": {
                      "type": "int"
                    },
                    "generatedName": "ServicecontrolStatusDetailsItemItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ServicecontrolStatusDetailsItem",
                  "groupName": [],
                  "type": "array"
                },
                "generatedName": "ServicecontrolStatusDetails",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "servicecontrolStatusMessage",
            "key": "message",
            "schema": {
              "generatedName": "servicecontrolStatusMessage",
              "value": {
                "description": "Message: A developer-facing error message, which should be in\nEnglish. Any user-facing error message should be localized and sent\nin the google.rpc.Status.details field, or localized by the client.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ServicecontrolStatusMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ServicecontrolStatus",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AddEntitlementCreditParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditParamsCreditAmountIncrement",
            "key": "creditAmountIncrement",
            "schema": {
              "description": "The amount to be added to the credit amount.",
              "schema": {
                "type": "double"
              },
              "generatedName": "SharedAddEntitlementCreditParamsCreditAmountIncrement",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditParamsEntitlementId",
            "key": "entitlementID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedAddEntitlementCreditParamsEntitlementId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedAddEntitlementCreditParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAddEntitlementCreditParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AddEntitlementCreditResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditResponseCreditAmountIncrement",
            "key": "creditAmountIncrement",
            "schema": {
              "generatedName": "sharedAddEntitlementCreditResponseCreditAmountIncrement",
              "value": {
                "description": "The amount to be added to the credit amount.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedAddEntitlementCreditResponseCreditAmountIncrement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditResponseEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedAddEntitlementCreditResponseEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAddEntitlementCreditResponseEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditResponseEntitlementTermId",
            "key": "entitlementTermID",
            "schema": {
              "generatedName": "sharedAddEntitlementCreditResponseEntitlementTermId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAddEntitlementCreditResponseEntitlementTermId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditResponseNewCreditAmount",
            "key": "newCreditAmount",
            "schema": {
              "generatedName": "sharedAddEntitlementCreditResponseNewCreditAmount",
              "value": {
                "description": "The new credit amount after the increment.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedAddEntitlementCreditResponseNewCreditAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAddEntitlementCreditResponseOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedAddEntitlementCreditResponseOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAddEntitlementCreditResponseOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAddEntitlementCreditResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.ApiClientAccessToken": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedApiClientAccessTokenAccessToken",
            "key": "access_token",
            "schema": {
              "generatedName": "sharedApiClientAccessTokenAccessToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedApiClientAccessTokenAccessToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedApiClientAccessTokenExpiresIn",
            "key": "expires_in",
            "schema": {
              "generatedName": "sharedApiClientAccessTokenExpiresIn",
              "value": {
                "description": "The token expires in 1 hour",
                "schema": {
                  "default": 3600,
                  "type": "int"
                },
                "generatedName": "SharedApiClientAccessTokenExpiresIn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedApiClientAccessTokenTokenType",
            "key": "token_type",
            "schema": {
              "generatedName": "sharedApiClientAccessTokenTokenType",
              "value": {
                "schema": {
                  "default": "Bearer",
                  "type": "string"
                },
                "generatedName": "SharedApiClientAccessTokenTokenType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedApiClientAccessToken",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsAccountIdentifier": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsAccountIdentifierAwsAccountId",
            "key": "awsAccountID",
            "schema": {
              "generatedName": "sharedAwsAccountIdentifierAwsAccountId",
              "value": {
                "description": "The AWS Account ID of the buyer in AWS Marketplace",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsAccountIdentifierAwsAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsAccountIdentifierAwsCustomerId",
            "key": "awsCustomerID",
            "schema": {
              "generatedName": "sharedAwsAccountIdentifierAwsCustomerId",
              "value": {
                "description": "The AWS Customer ID of the buyer in AWS Marketplace",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsAccountIdentifierAwsCustomerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsAccountIdentifierCompanyInfo",
            "key": "companyInfo",
            "schema": {
              "generatedName": "sharedAwsAccountIdentifierCompanyInfo",
              "value": {
                "generatedName": "SharedAwsAccountIdentifierCompanyInfo",
                "schema": "shared.CompanyInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsAccountIdentifierDataFeedAccountId",
            "key": "dataFeedAccountID",
            "schema": {
              "generatedName": "sharedAwsAccountIdentifierDataFeedAccountId",
              "value": {
                "description": "The Account ID in AWS Marketplace Data Feed service",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsAccountIdentifierDataFeedAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsAccountIdentifier",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsAceIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsAceIntegrationCredential",
            "key": "credential",
            "schema": {
              "generatedName": "sharedAwsAceIntegrationCredential",
              "value": {
                "generatedName": "SharedAwsAceIntegrationCredential",
                "schema": "shared.AwsIntegrationCredential",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsAceIntegrationPartnerId",
            "key": "partnerId",
            "schema": {
              "generatedName": "sharedAwsAceIntegrationPartnerId",
              "value": {
                "description": "The partner ID of the ISV/Seller in AWS Partner Network.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsAceIntegrationPartnerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsAceIntegrationS3BucketName",
            "key": "s3BucketName",
            "schema": {
              "generatedName": "sharedAwsAceIntegrationS3BucketName",
              "value": {
                "description": "The Name of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsAceIntegrationS3BucketName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsAceIntegrationS3BucketRegion",
            "key": "s3BucketRegion",
            "schema": {
              "generatedName": "sharedAwsAceIntegrationS3BucketRegion",
              "value": {
                "description": "The region of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsAceIntegrationS3BucketRegion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsAceIntegrationSecretKey",
            "key": "secretKey",
            "schema": {
              "generatedName": "sharedAwsAceIntegrationSecretKey",
              "value": {
                "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsAceIntegrationSecretKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsAceIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsIntegrationCredential": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsIntegrationCredentialAccessKeyId",
            "key": "accessKeyId",
            "schema": {
              "generatedName": "sharedAwsIntegrationCredentialAccessKeyId",
              "value": {
                "description": "The access key ID of the IAM user for Suger service to access the client's AWS services.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsIntegrationCredentialAccessKeyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsIntegrationCredentialIamUserArn",
            "key": "iamUserArn",
            "schema": {
              "generatedName": "sharedAwsIntegrationCredentialIamUserArn",
              "value": {
                "description": "The ARN of the IAM user for Suger service to access the client's AWS services.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsIntegrationCredentialIamUserArn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsIntegrationCredentialSecretAccessKey",
            "key": "secretAccessKey",
            "schema": {
              "generatedName": "sharedAwsIntegrationCredentialSecretAccessKey",
              "value": {
                "description": "The secret access key of the IAM user for Suger service to access the client's AWS services.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsIntegrationCredentialSecretAccessKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsIntegrationCredential",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsMarketplaceIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationExternalId",
            "key": "externalID",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationExternalId",
              "value": {
                "description": "The external ID for assuming IAM role. If empty, means no external ID set or needed. Otherwise, it should be auth_id in table identity.organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationIamRoleArn",
            "key": "iamRoleArn",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationIamRoleArn",
              "value": {
                "description": "The AWS IAM role for Suger service to assume to access the client's AWS services.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationIamRoleArn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMarketplaceStartDate",
            "key": "marketplaceStartDate",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMarketplaceStartDate",
              "value": {
                "description": "AWS Marketplace start date which comes from MDFS Full-Sync.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMarketplaceStartDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMcasFullSyncDone",
            "key": "mcasFullSyncDone",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMcasFullSyncDone",
              "value": {
                "description": "Is AWS Marketplace Commerce Analytics Service (MCAS) full-sync done.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMcasFullSyncDone",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMcasIamRoleArn",
            "key": "mcasIamRoleArn",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMcasIamRoleArn",
              "value": {
                "description": "IAM role ARN to allow AWS Marketplace to write to the S3 bucket and publish notifications to the SNS topic.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMcasIamRoleArn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMcasS3Bucket",
            "key": "mcasS3Bucket",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMcasS3Bucket",
              "value": {
                "description": "S3 bucket for AWS Marketplace Commerce Analytics Service (MCAS)",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMcasS3Bucket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMcasSnsTopic",
            "key": "mcasSnsTopic",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMcasSnsTopic",
              "value": {
                "description": "SNS topic ARN for AWS Marketplace Commerce Analytics Service (MCAS)",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMcasSnsTopic",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMdfsFullSyncDone",
            "key": "mdfsFullSyncDone",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMdfsFullSyncDone",
              "value": {
                "description": "Is AWS Marketplace Data Feeds Service (MDFS) full-sync done.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMdfsFullSyncDone",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMdfsKmsKeyArn",
            "key": "mdfsKmsKeyArn",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMdfsKmsKeyArn",
              "value": {
                "description": "KMS Key ARN for the S3 bucket of AWS Marketplace Data Feeds Service (MDFS)",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMdfsKmsKeyArn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationMdfsS3BucketArn",
            "key": "mdfsS3BucketArn",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationMdfsS3BucketArn",
              "value": {
                "description": "S3 bucket ARN for AWS Marketplace Data Feeds Service (MDFS)",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationMdfsS3BucketArn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationPolicyArns",
            "key": "policyArns",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationPolicyArns",
              "value": {
                "description": "The policy ARNs in the IAM role.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedAwsMarketplaceIntegrationPolicyArnsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationPolicyArns",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsMarketplaceIntegrationRevenueRecordFullSyncDone",
            "key": "revenueRecordFullSyncDone",
            "schema": {
              "generatedName": "sharedAwsMarketplaceIntegrationRevenueRecordFullSyncDone",
              "value": {
                "description": "Is AWS Marketplace Revenue Record full-sync done.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAwsMarketplaceIntegrationRevenueRecordFullSyncDone",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The data struct to store integration info for Suger service to access the client's AWS services.",
        "generatedName": "SharedAwsMarketplaceIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProduct": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescription",
            "key": "Description",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescription",
              "value": {
                "generatedName": "SharedAwsSaasProductDescription",
                "schema": "shared.AwsSaasProductDescription",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDimensions",
            "key": "Dimensions",
            "schema": {
              "generatedName": "sharedAwsSaasProductDimensions",
              "value": {
                "value": {
                  "generatedName": "SharedAwsSaasProductDimensionsItem",
                  "schema": "shared.AwsSaasProductDimension",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedAwsSaasProductDimensions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductPromotionalResources",
            "key": "PromotionalResources",
            "schema": {
              "generatedName": "sharedAwsSaasProductPromotionalResources",
              "value": {
                "generatedName": "SharedAwsSaasProductPromotionalResources",
                "schema": "shared.AwsSaasProductPromotionalResources",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductSupportInformation",
            "key": "SupportInformation",
            "schema": {
              "generatedName": "sharedAwsSaasProductSupportInformation",
              "value": {
                "generatedName": "SharedAwsSaasProductSupportInformation",
                "schema": "shared.AwsSaasProductSupportInformation",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductVersions",
            "key": "Versions",
            "schema": {
              "generatedName": "sharedAwsSaasProductVersions",
              "value": {
                "value": {
                  "generatedName": "SharedAwsSaasProductVersionsItem",
                  "schema": "shared.AwsSaasProductVersion",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedAwsSaasProductVersions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDataFeedProductId",
            "key": "dataFeedProductId",
            "schema": {
              "generatedName": "sharedAwsSaasProductDataFeedProductId",
              "value": {
                "description": "The product Id in AWS Marketplace Data Feed Service.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDataFeedProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductProductId",
            "key": "productId",
            "schema": {
              "generatedName": "sharedAwsSaasProductProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProduct",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProductAdditionalResource": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductAdditionalResourceText",
            "key": "Text",
            "schema": {
              "generatedName": "sharedAwsSaasProductAdditionalResourceText",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductAdditionalResourceText",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductAdditionalResourceType",
            "key": "Type",
            "schema": {
              "generatedName": "sharedAwsSaasProductAdditionalResourceType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductAdditionalResourceType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductAdditionalResourceUrl",
            "key": "Url",
            "schema": {
              "generatedName": "sharedAwsSaasProductAdditionalResourceUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductAdditionalResourceUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProductAdditionalResource",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProductDeliveryOption": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDeliveryOptionFulfillmentUrl",
            "key": "FulfillmentUrl",
            "schema": {
              "generatedName": "sharedAwsSaasProductDeliveryOptionFulfillmentUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDeliveryOptionFulfillmentUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDeliveryOptionId",
            "key": "Id",
            "schema": {
              "generatedName": "sharedAwsSaasProductDeliveryOptionId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDeliveryOptionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDeliveryOptionType",
            "key": "Type",
            "schema": {
              "generatedName": "sharedAwsSaasProductDeliveryOptionType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDeliveryOptionType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProductDeliveryOption",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProductDescription": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionAssociatedProducts",
            "key": "AssociatedProducts",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionAssociatedProducts",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionAssociatedProducts",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionCategories",
            "key": "Categories",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionCategories",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedAwsSaasProductDescriptionCategoriesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedAwsSaasProductDescriptionCategories",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionEuW8Submitted",
            "key": "EuW8Submitted",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionEuW8Submitted",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAwsSaasProductDescriptionEuW8Submitted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionHighlights",
            "key": "Highlights",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionHighlights",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedAwsSaasProductDescriptionHighlightsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedAwsSaasProductDescriptionHighlights",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionLongDescription",
            "key": "LongDescription",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionLongDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionLongDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionManufacturer",
            "key": "Manufacturer",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionManufacturer",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionManufacturer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionProductCode",
            "key": "ProductCode",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionProductCode",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionProductCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionProductTitle",
            "key": "ProductTitle",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionProductTitle",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionProductTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionRegistered",
            "key": "Registered",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionRegistered",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAwsSaasProductDescriptionRegistered",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionSearchKeywords",
            "key": "SearchKeywords",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionSearchKeywords",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedAwsSaasProductDescriptionSearchKeywordsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedAwsSaasProductDescriptionSearchKeywords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionShortDescription",
            "key": "ShortDescription",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionShortDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionShortDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionSku",
            "key": "Sku",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionSku",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionSku",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionUsW9Submitted",
            "key": "UsW9Submitted",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionUsW9Submitted",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAwsSaasProductDescriptionUsW9Submitted",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDescriptionVisibility",
            "key": "Visibility",
            "schema": {
              "generatedName": "sharedAwsSaasProductDescriptionVisibility",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDescriptionVisibility",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProductDescription",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProductDimension": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDimensionDescription",
            "key": "Description",
            "schema": {
              "generatedName": "sharedAwsSaasProductDimensionDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDimensionDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDimensionKey",
            "key": "Key",
            "schema": {
              "generatedName": "sharedAwsSaasProductDimensionKey",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDimensionKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDimensionName",
            "key": "Name",
            "schema": {
              "generatedName": "sharedAwsSaasProductDimensionName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDimensionName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDimensionTypes",
            "key": "Types",
            "schema": {
              "generatedName": "sharedAwsSaasProductDimensionTypes",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedAwsSaasProductDimensionTypesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedAwsSaasProductDimensionTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductDimensionUnit",
            "key": "Unit",
            "schema": {
              "generatedName": "sharedAwsSaasProductDimensionUnit",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductDimensionUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProductDimension",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProductPromotionalResources": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductPromotionalResourcesAdditionalResources",
            "key": "AdditionalResources",
            "schema": {
              "generatedName": "sharedAwsSaasProductPromotionalResourcesAdditionalResources",
              "value": {
                "value": {
                  "generatedName": "SharedAwsSaasProductPromotionalResourcesAdditionalResourcesItem",
                  "schema": "shared.AwsSaasProductAdditionalResource",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedAwsSaasProductPromotionalResourcesAdditionalResources",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductPromotionalResourcesLogoUrl",
            "key": "LogoUrl",
            "schema": {
              "generatedName": "sharedAwsSaasProductPromotionalResourcesLogoUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductPromotionalResourcesLogoUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProductPromotionalResources",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProductSupportInformation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductSupportInformationDescription",
            "key": "Description",
            "schema": {
              "generatedName": "sharedAwsSaasProductSupportInformationDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductSupportInformationDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProductSupportInformation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSaasProductVersion": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductVersionDeliveryOptions",
            "key": "DeliveryOptions",
            "schema": {
              "generatedName": "sharedAwsSaasProductVersionDeliveryOptions",
              "value": {
                "value": {
                  "generatedName": "SharedAwsSaasProductVersionDeliveryOptionsItem",
                  "schema": "shared.AwsSaasProductDeliveryOption",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedAwsSaasProductVersionDeliveryOptions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSaasProductVersionId",
            "key": "Id",
            "schema": {
              "generatedName": "sharedAwsSaasProductVersionId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSaasProductVersionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSaasProductVersion",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSnsSubscription": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAwsSnsSubscriptionEndpoint",
            "key": "Endpoint",
            "schema": {
              "generatedName": "sharedAwsSnsSubscriptionEndpoint",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSnsSubscriptionEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSnsSubscriptionProtocol",
            "key": "Protocol",
            "schema": {
              "generatedName": "sharedAwsSnsSubscriptionProtocol",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSnsSubscriptionProtocol",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSnsSubscriptionStatus",
            "key": "Status",
            "schema": {
              "generatedName": "sharedAwsSnsSubscriptionStatus",
              "value": {
                "generatedName": "SharedAwsSnsSubscriptionStatus",
                "schema": "shared.AwsSnsSubscriptionStatus",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSnsSubscriptionSubscriptionArn",
            "key": "SubscriptionArn",
            "schema": {
              "generatedName": "sharedAwsSnsSubscriptionSubscriptionArn",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSnsSubscriptionSubscriptionArn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAwsSnsSubscriptionTopicArn",
            "key": "TopicArn",
            "schema": {
              "generatedName": "sharedAwsSnsSubscriptionTopicArn",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAwsSnsSubscriptionTopicArn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAwsSnsSubscription",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AwsSnsSubscriptionStatus": {
        "generatedName": "SharedAwsSnsSubscriptionStatus",
        "values": [
          {
            "nameOverride": "UNKNOWN",
            "generatedName": "UNKNOWN",
            "value": "UNKNOWN",
            "casing": {}
          },
          {
            "nameOverride": "CONFIRMED",
            "generatedName": "CONFIRMED",
            "value": "CONFIRMED",
            "casing": {}
          },
          {
            "nameOverride": "PENDING_CONFIRMATION",
            "generatedName": "PENDING_CONFIRMATION",
            "value": "PENDING_CONFIRMATION",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.AzureADIdentifier": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAzureAdIdentifierBuyerInfo",
            "key": "buyerInfo",
            "schema": {
              "generatedName": "sharedAzureAdIdentifierBuyerInfo",
              "value": {
                "generatedName": "SharedAzureAdIdentifierBuyerInfo",
                "schema": "shared.AzureBuyerInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureAdIdentifierCompanyInfo",
            "key": "companyInfo",
            "schema": {
              "generatedName": "sharedAzureAdIdentifierCompanyInfo",
              "value": {
                "generatedName": "SharedAzureAdIdentifierCompanyInfo",
                "schema": "shared.CompanyInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureAdIdentifierEmailId",
            "key": "emailId",
            "schema": {
              "generatedName": "sharedAzureAdIdentifierEmailId",
              "value": {
                "description": "Email address",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureAdIdentifierEmailId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureAdIdentifierObjectId",
            "key": "objectId",
            "schema": {
              "generatedName": "sharedAzureAdIdentifierObjectId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureAdIdentifierObjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureAdIdentifierPuid",
            "key": "puid",
            "schema": {
              "generatedName": "sharedAzureAdIdentifierPuid",
              "value": {
                "description": "ID of the user, used as External ID of suger IdentityBuyer.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureAdIdentifierPuid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureAdIdentifierTenantId",
            "key": "tenantId",
            "schema": {
              "generatedName": "sharedAzureAdIdentifierTenantId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureAdIdentifierTenantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAzureAdIdentifier",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AzureBuyerInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAzureBuyerInfoBillingAccountId",
            "key": "billingAccountId",
            "schema": {
              "generatedName": "sharedAzureBuyerInfoBillingAccountId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureBuyerInfoBillingAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureBuyerInfoCustomerId",
            "key": "customerId",
            "schema": {
              "generatedName": "sharedAzureBuyerInfoCustomerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureBuyerInfoCustomerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureBuyerInfoFirstName",
            "key": "firstName",
            "schema": {
              "generatedName": "sharedAzureBuyerInfoFirstName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureBuyerInfoFirstName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureBuyerInfoLastName",
            "key": "lastName",
            "schema": {
              "generatedName": "sharedAzureBuyerInfoLastName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureBuyerInfoLastName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAzureBuyerInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AzureIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCmaFullSyncDone",
            "key": "cmaFullSyncDone",
            "schema": {
              "generatedName": "sharedAzureIntegrationCmaFullSyncDone",
              "value": {
                "description": "Is Azure Commercial Marketplace Analytics (CMA) full-sync done.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAzureIntegrationCmaFullSyncDone",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredential",
            "key": "credential",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredential",
              "value": {
                "generatedName": "SharedAzureIntegrationCredential",
                "schema": "shared.AzureIntegrationCredential",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationSecretKey",
            "key": "secretKey",
            "schema": {
              "generatedName": "sharedAzureIntegrationSecretKey",
              "value": {
                "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationSecretKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAzureIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AzureIntegrationCredential": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialAccessToken",
            "key": "accessToken",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialAccessToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialAccessToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialClientId",
            "key": "clientID",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialClientId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialClientSecret",
            "key": "clientSecret",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialClientSecret",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialClientSecret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialExpiresOn",
            "key": "expiresOn",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialExpiresOn",
              "value": {
                "description": "The time when the access token expires.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialExpiresOn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialRefreshToken",
            "key": "refreshToken",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialRefreshToken",
              "value": {
                "description": "The refresh token used to refresh the access token.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialRefreshToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialTenantId",
            "key": "tenantID",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialTenantId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialTenantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialTokenScope",
            "key": "tokenScope",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialTokenScope",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialTokenScope",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureIntegrationCredentialTokenType",
            "key": "tokenType",
            "schema": {
              "generatedName": "sharedAzureIntegrationCredentialTokenType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureIntegrationCredentialTokenType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAzureIntegrationCredential",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AzureMarketplaceSubscription": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionAllowedCustomerOperations",
            "key": "allowedCustomerOperations",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionAllowedCustomerOperations",
              "value": {
                "value": {
                  "generatedName": "SharedAzureMarketplaceSubscriptionAllowedCustomerOperationsItem",
                  "values": [
                    {
                      "generatedName": "Read",
                      "value": "Read",
                      "casing": {}
                    },
                    {
                      "generatedName": "Update",
                      "value": "Update",
                      "casing": {}
                    },
                    {
                      "generatedName": "Delete",
                      "value": "Delete",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionAllowedCustomerOperations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionAutoRenew",
            "key": "autoRenew",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionAutoRenew",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionAutoRenew",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionBeneficiary",
            "key": "beneficiary",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionBeneficiary",
              "value": {
                "generatedName": "SharedAzureMarketplaceSubscriptionBeneficiary",
                "schema": "shared.AzureADIdentifier",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionCreated",
            "key": "created",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionCreated",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionCreated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionFulfillmentId",
            "key": "fulfillmentId",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionFulfillmentId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionFulfillmentId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionId",
            "key": "id",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionIsFreeTrial",
            "key": "isFreeTrial",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionIsFreeTrial",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionIsFreeTrial",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionIsTest",
            "key": "isTest",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionIsTest",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionIsTest",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionLastModified",
            "key": "lastModified",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionLastModified",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionLastModified",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionName",
            "key": "name",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionOfferId",
            "key": "offerId",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionPlanId",
            "key": "planId",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionPlanId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionPlanId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionPublisherId",
            "key": "publisherId",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionPublisherId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionPublisherId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionPurchaser",
            "key": "purchaser",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionPurchaser",
              "value": {
                "generatedName": "SharedAzureMarketplaceSubscriptionPurchaser",
                "schema": "shared.AzureADIdentifier",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionQuantity",
            "key": "quantity",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionQuantity",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionSaasSubscriptionStatus",
            "key": "saasSubscriptionStatus",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionSaasSubscriptionStatus",
              "value": {
                "generatedName": "SharedAzureMarketplaceSubscriptionSaasSubscriptionStatus",
                "schema": "shared.AzureMarketplaceSubscriptionStatus",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionSandboxType",
            "key": "sandboxType",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionSandboxType",
              "value": {
                "generatedName": "SharedAzureMarketplaceSubscriptionSandboxType",
                "values": [
                  {
                    "generatedName": "None",
                    "value": "None",
                    "casing": {}
                  },
                  {
                    "generatedName": "Csp",
                    "value": "Csp",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionSessionId",
            "key": "sessionId",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionSessionId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionSessionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionSessionMode",
            "key": "sessionMode",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionSessionMode",
              "value": {
                "generatedName": "SharedAzureMarketplaceSubscriptionSessionMode",
                "values": [
                  {
                    "generatedName": "None",
                    "value": "None",
                    "casing": {}
                  },
                  {
                    "generatedName": "DryRun",
                    "value": "DryRun",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionStoreFront",
            "key": "storeFront",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionStoreFront",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureMarketplaceSubscriptionStoreFront",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureMarketplaceSubscriptionTerm",
            "key": "term",
            "schema": {
              "generatedName": "sharedAzureMarketplaceSubscriptionTerm",
              "value": {
                "generatedName": "SharedAzureMarketplaceSubscriptionTerm",
                "schema": "shared.AzureTerm",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAzureMarketplaceSubscription",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.AzureMarketplaceSubscriptionStatus": {
        "generatedName": "SharedAzureMarketplaceSubscriptionStatus",
        "values": [
          {
            "nameOverride": "NotStarted",
            "generatedName": "NotStarted",
            "value": "NotStarted",
            "casing": {}
          },
          {
            "nameOverride": "PendingFulfillmentStart",
            "generatedName": "PendingFulfillmentStart",
            "value": "PendingFulfillmentStart",
            "casing": {}
          },
          {
            "nameOverride": "Subscribed",
            "generatedName": "Subscribed",
            "value": "Subscribed",
            "casing": {}
          },
          {
            "nameOverride": "Suspended",
            "generatedName": "Suspended",
            "value": "Suspended",
            "casing": {}
          },
          {
            "nameOverride": "Unsubscribed",
            "generatedName": "Unsubscribed",
            "value": "Unsubscribed",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.AzureTerm": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedAzureTermChargeDuration",
            "key": "chargeDuration",
            "schema": {
              "generatedName": "sharedAzureTermChargeDuration",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureTermChargeDuration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureTermEndDate",
            "key": "endDate",
            "schema": {
              "generatedName": "sharedAzureTermEndDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedAzureTermEndDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureTermStartDate",
            "key": "startDate",
            "schema": {
              "generatedName": "sharedAzureTermStartDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedAzureTermStartDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedAzureTermTermUnit",
            "key": "termUnit",
            "schema": {
              "generatedName": "sharedAzureTermTermUnit",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedAzureTermTermUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedAzureTerm",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.BuyerInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedBuyerInfoAwsBuyer",
            "key": "awsBuyer",
            "schema": {
              "generatedName": "sharedBuyerInfoAwsBuyer",
              "value": {
                "description": "Buyer from AWS Marketplace",
                "generatedName": "SharedBuyerInfoAwsBuyer",
                "schema": "shared.AwsAccountIdentifier",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedBuyerInfoAzureBuyer",
            "key": "azureBuyer",
            "schema": {
              "generatedName": "sharedBuyerInfoAzureBuyer",
              "value": {
                "description": "Buyer from Azure Marketplace",
                "generatedName": "SharedBuyerInfoAzureBuyer",
                "schema": "shared.AzureADIdentifier",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedBuyerInfoCollectableAmount",
            "key": "collectableAmount",
            "schema": {
              "generatedName": "sharedBuyerInfoCollectableAmount",
              "value": {
                "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedBuyerInfoCollectableAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedBuyerInfoDisbursedAmount",
            "key": "disbursedAmount",
            "schema": {
              "generatedName": "sharedBuyerInfoDisbursedAmount",
              "value": {
                "description": "The amount that has been disbursed to the seller account.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedBuyerInfoDisbursedAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedBuyerInfoGcpBuyer",
            "key": "gcpBuyer",
            "schema": {
              "generatedName": "sharedBuyerInfoGcpBuyer",
              "value": {
                "description": "Buyer from GCP Marketplace",
                "generatedName": "SharedBuyerInfoGcpBuyer",
                "schema": "shared.GcpMarketplaceUserAccount",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedBuyerInfoInvoicedAmount",
            "key": "invoicedAmount",
            "schema": {
              "generatedName": "sharedBuyerInfoInvoicedAmount",
              "value": {
                "description": "The amount that the buyer has got invoiced.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedBuyerInfoInvoicedAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedBuyerInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.CommitDimension": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionCategory",
            "key": "category",
            "schema": {
              "generatedName": "sharedCommitDimensionCategory",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCommitDimensionCategory",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionDescription",
            "key": "description",
            "schema": {
              "generatedName": "sharedCommitDimensionDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCommitDimensionDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionIsUserCreated",
            "key": "isUserCreated",
            "schema": {
              "generatedName": "sharedCommitDimensionIsUserCreated",
              "value": {
                "description": "Whether this commit dimension is newly created by user when creating AWS Marketplace Contract private offer.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedCommitDimensionIsUserCreated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionKey",
            "key": "key",
            "schema": {
              "generatedName": "sharedCommitDimensionKey",
              "value": {
                "description": "API name of the dimension",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCommitDimensionKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionLength",
            "key": "length",
            "schema": {
              "generatedName": "sharedCommitDimensionLength",
              "value": {
                "description": "The term length for the commit amount, such as 6 months, or 1 year. length is used together with timeUnit",
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedCommitDimensionLength",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionMaximumUsers",
            "key": "maximumUsers",
            "schema": {
              "generatedName": "sharedCommitDimensionMaximumUsers",
              "value": {
                "description": "The maximum number of users for PER_USER commit",
                "schema": {
                  "default": 1000000,
                  "minimum": 1,
                  "maximum": 1000000,
                  "type": "int"
                },
                "generatedName": "SharedCommitDimensionMaximumUsers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionMinimumUsers",
            "key": "minimumUsers",
            "schema": {
              "generatedName": "sharedCommitDimensionMinimumUsers",
              "value": {
                "description": "The minimum number of users for PER_USER commit",
                "schema": {
                  "default": 1,
                  "minimum": 1,
                  "maximum": 1000000,
                  "type": "int"
                },
                "generatedName": "SharedCommitDimensionMinimumUsers",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionName",
            "key": "name",
            "schema": {
              "generatedName": "sharedCommitDimensionName",
              "value": {
                "description": "Display name of the dimension",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCommitDimensionName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionQuantity",
            "key": "quantity",
            "schema": {
              "generatedName": "sharedCommitDimensionQuantity",
              "value": {
                "description": "The quantity of this commit.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedCommitDimensionQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionRate",
            "key": "rate",
            "schema": {
              "generatedName": "sharedCommitDimensionRate",
              "value": {
                "description": "The commit amount.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedCommitDimensionRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionTimeUnit",
            "key": "timeUnit",
            "schema": {
              "generatedName": "sharedCommitDimensionTimeUnit",
              "value": {
                "description": "The term unit for the commit amount.",
                "generatedName": "SharedCommitDimensionTimeUnit",
                "schema": "shared.CommitDimensionTimeUnit",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionType",
            "key": "type",
            "schema": {
              "generatedName": "sharedCommitDimensionType",
              "value": {
                "generatedName": "SharedCommitDimensionType",
                "schema": "shared.CommitDimensionType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedCommitDimensionTypes",
            "key": "types",
            "schema": {
              "generatedName": "sharedCommitDimensionTypes",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedCommitDimensionTypesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedCommitDimensionTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The commit dimension. There may be one or more commit dimensions defined in single product, offer or entitlement.",
        "generatedName": "SharedCommitDimension",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.CommitDimensionTimeUnit": {
        "generatedName": "SharedCommitDimensionTimeUnit",
        "values": [
          {
            "nameOverride": "DAY",
            "generatedName": "DAY",
            "value": "DAY",
            "casing": {}
          },
          {
            "nameOverride": "MONTH",
            "generatedName": "MONTH",
            "value": "MONTH",
            "casing": {}
          },
          {
            "nameOverride": "YEAR",
            "generatedName": "YEAR",
            "value": "YEAR",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.CommitDimensionType": {
        "generatedName": "SharedCommitDimensionType",
        "values": [
          {
            "nameOverride": "FLAT_RATE",
            "generatedName": "FLAT_RATE",
            "value": "FLAT_RATE",
            "casing": {}
          },
          {
            "nameOverride": "PER_USER",
            "generatedName": "PER_USER",
            "value": "PER_USER",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.CompanyInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoAddressLine1",
            "key": "addressLine1",
            "schema": {
              "generatedName": "sharedCompanyInfoAddressLine1",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoAddressLine1",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoAddressLine2",
            "key": "addressLine2",
            "schema": {
              "generatedName": "sharedCompanyInfoAddressLine2",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoAddressLine2",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoCity",
            "key": "city",
            "schema": {
              "generatedName": "sharedCompanyInfoCity",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoCity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoCountry",
            "key": "country",
            "schema": {
              "generatedName": "sharedCompanyInfoCountry",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoCountry",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoEmailDomain",
            "key": "emailDomain",
            "schema": {
              "generatedName": "sharedCompanyInfoEmailDomain",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoEmailDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoName",
            "key": "name",
            "schema": {
              "generatedName": "sharedCompanyInfoName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoPostalCode",
            "key": "postalCode",
            "schema": {
              "generatedName": "sharedCompanyInfoPostalCode",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoPostalCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCompanyInfoState",
            "key": "state",
            "schema": {
              "generatedName": "sharedCompanyInfoState",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCompanyInfoState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedCompanyInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.Contact": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedContactCompany",
            "key": "company",
            "schema": {
              "generatedName": "sharedContactCompany",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedContactCompany",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedContactEmail",
            "key": "email",
            "schema": {
              "generatedName": "sharedContactEmail",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedContactEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedContactName",
            "key": "name",
            "schema": {
              "generatedName": "sharedContactName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedContactName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedContact",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.CreateIntegrationParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedCreateIntegrationParamsCreatedBy",
            "key": "createdBy",
            "schema": {
              "generatedName": "sharedCreateIntegrationParamsCreatedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCreateIntegrationParamsCreatedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateIntegrationParamsInfo",
            "key": "info",
            "schema": {
              "generatedName": "SharedCreateIntegrationParamsInfo",
              "schema": "shared.IntegrationInfo",
              "source": {
                "file": "../swagger.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateIntegrationParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedCreateIntegrationParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateIntegrationParamsPartner",
            "key": "partner",
            "schema": {
              "generatedName": "SharedCreateIntegrationParamsPartner",
              "values": [
                {
                  "generatedName": "AWS",
                  "value": "AWS",
                  "casing": {}
                },
                {
                  "generatedName": "AZURE",
                  "value": "AZURE",
                  "casing": {}
                },
                {
                  "generatedName": "GCP",
                  "value": "GCP",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../swagger.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateIntegrationParamsService",
            "key": "service",
            "schema": {
              "value": {
                "value": "MARKETPLACE",
                "type": "string"
              },
              "generatedName": "SharedCreateIntegrationParamsService",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedCreateIntegrationParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.CreateUsageRecordGroupParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedCreateUsageRecordGroupParamsEntitlementId",
            "key": "entitlementID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedCreateUsageRecordGroupParamsEntitlementId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateUsageRecordGroupParamsId",
            "key": "id",
            "schema": {
              "generatedName": "sharedCreateUsageRecordGroupParamsId",
              "value": {
                "description": "uuid of the UsageRecordGroup (the size is up to 36 characters), if not provided, suger will generate one.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCreateUsageRecordGroupParamsId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateUsageRecordGroupParamsMetaInfo",
            "key": "metaInfo",
            "schema": {
              "generatedName": "sharedCreateUsageRecordGroupParamsMetaInfo",
              "value": {
                "description": "read-only, don't set it when reporting the usage record group.",
                "generatedName": "SharedCreateUsageRecordGroupParamsMetaInfo",
                "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateUsageRecordGroupParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedCreateUsageRecordGroupParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedCreateUsageRecordGroupParamsRecords",
            "key": "records",
            "schema": {
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedCreateUsageRecordGroupParamsRecordsKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedCreateUsageRecordGroupParamsRecordsValue",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "SharedCreateUsageRecordGroupParamsRecords",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedCreateUsageRecordGroupParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.EntitlementInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoAutoRenew",
            "key": "autoRenew",
            "schema": {
              "generatedName": "sharedEntitlementInfoAutoRenew",
              "value": {
                "description": "Is this Entitlement Auto Renew enabled.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedEntitlementInfoAutoRenew",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoAwsEntitlements",
            "key": "awsEntitlements",
            "schema": {
              "generatedName": "sharedEntitlementInfoAwsEntitlements",
              "value": {
                "description": "Nullable. AWS Entitlements from AWS Marketplace.",
                "value": {
                  "generatedName": "SharedEntitlementInfoAwsEntitlementsItem",
                  "schema": "types.Entitlement",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedEntitlementInfoAwsEntitlements",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoAzureSubscriptions",
            "key": "azureSubscriptions",
            "schema": {
              "generatedName": "sharedEntitlementInfoAzureSubscriptions",
              "value": {
                "description": "Nullable. Azure Subscriptions from Azure Marketplace.",
                "value": {
                  "generatedName": "SharedEntitlementInfoAzureSubscriptionsItem",
                  "schema": "shared.AzureMarketplaceSubscription",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedEntitlementInfoAzureSubscriptions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoCollectableAmount",
            "key": "collectableAmount",
            "schema": {
              "generatedName": "sharedEntitlementInfoCollectableAmount",
              "value": {
                "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedEntitlementInfoCollectableAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoCommitAmount",
            "key": "commitAmount",
            "schema": {
              "generatedName": "sharedEntitlementInfoCommitAmount",
              "value": {
                "description": "The amount that the buyer has committed to pay. It can be the sum of payment installments if applicable.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedEntitlementInfoCommitAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoCommits",
            "key": "commits",
            "schema": {
              "generatedName": "sharedEntitlementInfoCommits",
              "value": {
                "description": "The dimensions for commit.",
                "value": {
                  "generatedName": "SharedEntitlementInfoCommitsItem",
                  "schema": "shared.CommitDimension",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedEntitlementInfoCommits",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoCurrency",
            "key": "currency",
            "schema": {
              "generatedName": "sharedEntitlementInfoCurrency",
              "value": {
                "description": "The default Currency is USD.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedEntitlementInfoCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoDimensions",
            "key": "dimensions",
            "schema": {
              "generatedName": "sharedEntitlementInfoDimensions",
              "value": {
                "description": "The dimensions for usage-based metering.",
                "value": {
                  "generatedName": "SharedEntitlementInfoDimensionsItem",
                  "schema": "shared.MeteringDimension",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedEntitlementInfoDimensions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoDisbursedAmount",
            "key": "disbursedAmount",
            "schema": {
              "generatedName": "sharedEntitlementInfoDisbursedAmount",
              "value": {
                "description": "The amount that has been disbursed to the seller account.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedEntitlementInfoDisbursedAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoDiscount",
            "key": "discount",
            "schema": {
              "generatedName": "sharedEntitlementInfoDiscount",
              "value": {
                "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedEntitlementInfoDiscount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoEulaType",
            "key": "eulaType",
            "schema": {
              "generatedName": "sharedEntitlementInfoEulaType",
              "value": {
                "generatedName": "SharedEntitlementInfoEulaType",
                "schema": "shared.EulaType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoEulaUrl",
            "key": "eulaUrl",
            "schema": {
              "generatedName": "sharedEntitlementInfoEulaUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedEntitlementInfoEulaUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoGcpEntitlements",
            "key": "gcpEntitlements",
            "schema": {
              "generatedName": "sharedEntitlementInfoGcpEntitlements",
              "value": {
                "description": "Nullable. GCP Entitlements from GCP Marketplace.",
                "value": {
                  "generatedName": "SharedEntitlementInfoGcpEntitlementsItem",
                  "schema": "shared.GcpMarketplaceEntitlement",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedEntitlementInfoGcpEntitlements",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoGcpPlans",
            "key": "gcpPlans",
            "schema": {
              "generatedName": "sharedEntitlementInfoGcpPlans",
              "value": {
                "description": "Only applicable for GCP Marketplace Entitlements.",
                "value": {
                  "generatedName": "SharedEntitlementInfoGcpPlansItem",
                  "schema": "shared.GcpPurchasePlan",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedEntitlementInfoGcpPlans",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoInvoicedAmount",
            "key": "invoicedAmount",
            "schema": {
              "generatedName": "sharedEntitlementInfoInvoicedAmount",
              "value": {
                "description": "The amount that the buyer has got invoiced.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedEntitlementInfoInvoicedAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoPaymentInstallments",
            "key": "paymentInstallments",
            "schema": {
              "generatedName": "sharedEntitlementInfoPaymentInstallments",
              "value": {
                "description": "For flexible payment schedules",
                "value": {
                  "generatedName": "SharedEntitlementInfoPaymentInstallmentsItem",
                  "schema": "shared.PaymentInstallment",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedEntitlementInfoPaymentInstallments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoRefundCancelationPolicy",
            "key": "refundCancelationPolicy",
            "schema": {
              "generatedName": "sharedEntitlementInfoRefundCancelationPolicy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedEntitlementInfoRefundCancelationPolicy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementInfoSellerNotes",
            "key": "sellerNotes",
            "schema": {
              "generatedName": "sharedEntitlementInfoSellerNotes",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedEntitlementInfoSellerNotes",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedEntitlementInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.EntitlementTermInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedEntitlementTermInfoType",
            "key": "type",
            "schema": {
              "generatedName": "sharedEntitlementTermInfoType",
              "value": {
                "generatedName": "SharedEntitlementTermInfoType",
                "schema": "shared.EntitlementTermType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedEntitlementTermInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.EntitlementTermType": {
        "generatedName": "SharedEntitlementTermType",
        "values": [
          {
            "nameOverride": "Unknown",
            "generatedName": "EMPTY",
            "value": "",
            "casing": {}
          },
          {
            "nameOverride": "AutoRenew",
            "generatedName": "AutoRenew",
            "value": "AutoRenew",
            "casing": {}
          },
          {
            "nameOverride": "ManualRenew",
            "generatedName": "ManualRenew",
            "value": "ManualRenew",
            "casing": {}
          },
          {
            "nameOverride": "PlanChange",
            "generatedName": "PlanChange",
            "value": "PlanChange",
            "casing": {}
          },
          {
            "nameOverride": "QuantityChange",
            "generatedName": "QuantityChange",
            "value": "QuantityChange",
            "casing": {}
          },
          {
            "nameOverride": "Signup",
            "generatedName": "Signup",
            "value": "Signup",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.EntitlementUsageRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedEntitlementUsageRecordAmounts",
            "key": "amounts",
            "schema": {
              "generatedName": "sharedEntitlementUsageRecordAmounts",
              "value": {
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedEntitlementUsageRecordAmountsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedEntitlementUsageRecordAmounts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementUsageRecordDate",
            "key": "date",
            "schema": {
              "generatedName": "sharedEntitlementUsageRecordDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedEntitlementUsageRecordDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementUsageRecordKeys",
            "key": "keys",
            "schema": {
              "generatedName": "sharedEntitlementUsageRecordKeys",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedEntitlementUsageRecordKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedEntitlementUsageRecordKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedEntitlementUsageRecordQuantities",
            "key": "quantities",
            "schema": {
              "generatedName": "sharedEntitlementUsageRecordQuantities",
              "value": {
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedEntitlementUsageRecordQuantitiesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedEntitlementUsageRecordQuantities",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedEntitlementUsageRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.EntityType": {
        "generatedName": "SharedEntityType",
        "values": [
          {
            "nameOverride": "ORGANIZATION",
            "generatedName": "ORGANIZATION",
            "value": "ORGANIZATION",
            "casing": {}
          },
          {
            "nameOverride": "PRODUCT",
            "generatedName": "PRODUCT",
            "value": "PRODUCT",
            "casing": {}
          },
          {
            "nameOverride": "OFFER",
            "generatedName": "OFFER",
            "value": "OFFER",
            "casing": {}
          },
          {
            "nameOverride": "ENTITLEMENT",
            "generatedName": "ENTITLEMENT",
            "value": "ENTITLEMENT",
            "casing": {}
          },
          {
            "nameOverride": "ENTITLEMENT_TERM",
            "generatedName": "ENTITLEMENT_TERM",
            "value": "ENTITLEMENT_TERM",
            "casing": {}
          },
          {
            "nameOverride": "INTEGRATION",
            "generatedName": "INTEGRATION",
            "value": "INTEGRATION",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.EulaType": {
        "generatedName": "SharedEulaType",
        "values": [
          {
            "nameOverride": "UNKNOWN",
            "generatedName": "EMPTY",
            "value": "",
            "casing": {}
          },
          {
            "nameOverride": "SCMP",
            "generatedName": "SCMP",
            "value": "SCMP",
            "casing": {}
          },
          {
            "nameOverride": "ECMP",
            "generatedName": "ECMP",
            "value": "ECMP",
            "casing": {}
          },
          {
            "nameOverride": "CUSTOM",
            "generatedName": "CUSTOM",
            "value": "CUSTOM",
            "casing": {}
          },
          {
            "nameOverride": "ISV",
            "generatedName": "ISV",
            "value": "ISV",
            "casing": {}
          },
          {
            "nameOverride": "CURRENT",
            "generatedName": "CURRENT",
            "value": "CURRENT",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.GcpCommerceProducerExternalAccountSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerExternalAccountSpecLoginUri",
            "key": "loginUri",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerExternalAccountSpecLoginUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerExternalAccountSpecLoginUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerExternalAccountSpecSignupUri",
            "key": "signupUri",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerExternalAccountSpecSignupUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerExternalAccountSpecSignupUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerExternalAccountSpecSingleSignOnUri",
            "key": "singleSignOnUri",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerExternalAccountSpecSingleSignOnUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerExternalAccountSpecSingleSignOnUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerExternalAccountSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerListingSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerListingSpecExternalAccountSpec",
            "key": "externalAccountSpec",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerListingSpecExternalAccountSpec",
              "value": {
                "generatedName": "SharedGcpCommerceProducerListingSpecExternalAccountSpec",
                "schema": "shared.GcpCommerceProducerExternalAccountSpec",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerListingSpecListingType",
            "key": "listingType",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerListingSpecListingType",
              "value": {
                "value": {
                  "value": "BillingIntegratedManagedService",
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerListingSpecListingType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerListingSpecMarketingSpec",
            "key": "marketingSpec",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerListingSpecMarketingSpec",
              "value": {
                "generatedName": "SharedGcpCommerceProducerListingSpecMarketingSpec",
                "schema": "shared.GcpCommerceProducerMarketingSpec",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerListingSpecPurchaseSpec",
            "key": "purchaseSpec",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerListingSpecPurchaseSpec",
              "value": {
                "generatedName": "SharedGcpCommerceProducerListingSpecPurchaseSpec",
                "schema": "shared.GcpCommerceProducerPurchaseSpec",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerListingSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerMarketingSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecDescription",
            "key": "description",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecDisplayNames",
            "key": "displayNames",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecDisplayNames",
              "value": {
                "description": "In format of \"{provider-id}/{product-name}\"",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedGcpCommerceProducerMarketingSpecDisplayNamesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecDisplayNames",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecEulaUrl",
            "key": "eulaUrl",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecEulaUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecEulaUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecExternalMarketingUrl",
            "key": "externalMarketingUrl",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecExternalMarketingUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecExternalMarketingUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecIcon",
            "key": "icon",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecIcon",
              "value": {
                "description": "In format of \"base64://...\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecIcon",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecSearchCategories",
            "key": "searchCategories",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecSearchCategories",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedGcpCommerceProducerMarketingSpecSearchCategoriesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecSearchCategories",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecSearchDescription",
            "key": "searchDescription",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecSearchDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecSearchDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecSearchKeywords",
            "key": "searchKeywords",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecSearchKeywords",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedGcpCommerceProducerMarketingSpecSearchKeywordsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecSearchKeywords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecShortTitle",
            "key": "shortTitle",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecShortTitle",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecShortTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecSupportSpec",
            "key": "supportSpec",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecSupportSpec",
              "value": {
                "generatedName": "SharedGcpCommerceProducerMarketingSpecSupportSpec",
                "schema": "shared.GcpCommerceProducerSupportSpec",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerMarketingSpecTitle",
            "key": "title",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerMarketingSpecTitle",
              "value": {
                "description": "The product title.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerMarketingSpecTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerMarketingSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerPrice": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceCurrencyCode",
            "key": "currencyCode",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceCurrencyCode",
              "value": {
                "description": "ISO currency code, Three UPPER_CASE characters",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPriceCurrencyCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceNanos",
            "key": "nanos",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceNanos",
              "value": {
                "description": "Decimal part of the price. For example, 2000000 = 0.002, 200000000 = 0.2",
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedGcpCommerceProducerPriceNanos",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceUnits",
            "key": "units",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceUnits",
              "value": {
                "description": "Integer part of the price.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedGcpCommerceProducerPriceUnits",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerPrice",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerPriceInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceInfoDescription",
            "key": "description",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceInfoDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPriceInfoDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceInfoPriceModel",
            "key": "priceModel",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceInfoPriceModel",
              "value": {
                "generatedName": "SharedGcpCommerceProducerPriceInfoPriceModel",
                "schema": "shared.GcpCommerceProducerPriceModel",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceInfoSubscriptionPlans",
            "key": "subscriptionPlans",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceInfoSubscriptionPlans",
              "value": {
                "description": "Commit price plan, when priceModel = SUBSCRIPTION or SUBSCRIPTION_PLUS_USAGE.",
                "value": {
                  "generatedName": "SharedGcpCommerceProducerPriceInfoSubscriptionPlansItem",
                  "schema": "shared.GcpCommerceProducerPriceSubscription",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpCommerceProducerPriceInfoSubscriptionPlans",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceInfoUsageFees",
            "key": "usageFees",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceInfoUsageFees",
              "value": {
                "description": "Usage based metering plan, when priceModel =  USAGE or SUBSCRIPTION_PLUS_USAGE",
                "value": {
                  "generatedName": "SharedGcpCommerceProducerPriceInfoUsageFeesItem",
                  "schema": "shared.GcpCommerceProducerPriceUsage",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpCommerceProducerPriceInfoUsageFees",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerPriceInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerPriceModel": {
        "generatedName": "SharedGcpCommerceProducerPriceModel",
        "values": [
          {
            "nameOverride": "FREE",
            "generatedName": "FREE",
            "value": "FREE",
            "casing": {}
          },
          {
            "nameOverride": "SUBSCRIPTION",
            "generatedName": "SUBSCRIPTION",
            "value": "SUBSCRIPTION",
            "casing": {}
          },
          {
            "nameOverride": "USAGE",
            "generatedName": "USAGE",
            "value": "USAGE",
            "casing": {}
          },
          {
            "nameOverride": "SUBSCRIPTION_PLUS_USAGE",
            "generatedName": "SUBSCRIPTION_PLUS_USAGE",
            "value": "SUBSCRIPTION_PLUS_USAGE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.GcpCommerceProducerPriceSubscription": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceSubscriptionPeriod",
            "key": "period",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceSubscriptionPeriod",
              "value": {
                "value": {
                  "value": "ONE_YEAR",
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPriceSubscriptionPeriod",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceSubscriptionPrice",
            "key": "price",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceSubscriptionPrice",
              "value": {
                "description": "the Monthly subscription fee as commit.",
                "generatedName": "SharedGcpCommerceProducerPriceSubscriptionPrice",
                "schema": "shared.GcpCommerceProducerPrice",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceSubscriptionTaxCategoryOverride",
            "key": "taxCategoryOverride",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceSubscriptionTaxCategoryOverride",
              "value": {
                "value": {
                  "value": "TAX_CATEGORY_UNSPECIFIED",
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPriceSubscriptionTaxCategoryOverride",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerPriceSubscription",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerPriceTier": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceTierEndUsageAmount",
            "key": "endUsageAmount",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceTierEndUsageAmount",
              "value": {
                "description": "The usage amount below which this tier is effective.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedGcpCommerceProducerPriceTierEndUsageAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceTierPrice",
            "key": "price",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceTierPrice",
              "value": {
                "description": "The price of this tier",
                "generatedName": "SharedGcpCommerceProducerPriceTierPrice",
                "schema": "shared.GcpCommerceProducerPrice",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceTierStartUsageAmount",
            "key": "startUsageAmount",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceTierStartUsageAmount",
              "value": {
                "description": "The usage amount beyond which this tier is effective.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedGcpCommerceProducerPriceTierStartUsageAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerPriceTier",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerPriceUsage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceUsageDisplayQuantity",
            "key": "displayQuantity",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceUsageDisplayQuantity",
              "value": {
                "description": "Default value is 1.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedGcpCommerceProducerPriceUsageDisplayQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceUsageMetricId",
            "key": "metricId",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceUsageMetricId",
              "value": {
                "description": "the usage metering dimension key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPriceUsageMetricId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceUsagePriceTiers",
            "key": "priceTiers",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceUsagePriceTiers",
              "value": {
                "value": {
                  "generatedName": "SharedGcpCommerceProducerPriceUsagePriceTiersItem",
                  "schema": "shared.GcpCommerceProducerPriceTier",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpCommerceProducerPriceUsagePriceTiers",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPriceUsageTaxCategoryOverride",
            "key": "taxCategoryOverride",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPriceUsageTaxCategoryOverride",
              "value": {
                "value": {
                  "value": "TAX_CATEGORY_UNSPECIFIED",
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPriceUsageTaxCategoryOverride",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerPriceUsage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerPurchaseMetric": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricDescription",
            "key": "description",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricDescription",
              "value": {
                "description": "Description: A detailed description of the metric, which can be used in documentation.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricDisplayName",
            "key": "displayName",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricDisplayName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricDisplayUnit",
            "key": "displayUnit",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricDisplayUnit",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricDisplayUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricDisplayUnitDescription",
            "key": "displayUnitDescription",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricDisplayUnitDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricDisplayUnitDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricId",
            "key": "id",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricId",
              "value": {
                "description": "The usage metering dimension key, in format of \"{plan_key}_{usage_dimension_key}\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricMetricKind",
            "key": "metricKind",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricMetricKind",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricMetricKind",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricName",
            "key": "name",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricName",
              "value": {
                "description": "Name: The resource name of the metric descriptor, in format of \"{service_name}/{plan_key}_{usage_dimension_key}\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricReportingUnit",
            "key": "reportingUnit",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricReportingUnit",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricReportingUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricUnit",
            "key": "unit",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricUnit",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricUnit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseMetricValueType",
            "key": "valueType",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseMetricValueType",
              "value": {
                "generatedName": "SharedGcpCommerceProducerPurchaseMetricValueType",
                "schema": "shared.ValueType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerPurchaseMetric",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerPurchaseSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseSpecMetrics",
            "key": "metrics",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseSpecMetrics",
              "value": {
                "value": {
                  "generatedName": "SharedGcpCommerceProducerPurchaseSpecMetricsItem",
                  "schema": "shared.GcpCommerceProducerPurchaseMetric",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseSpecMetrics",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerPurchaseSpecPurchaseOptionSpecs",
            "key": "purchaseOptionSpecs",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerPurchaseSpecPurchaseOptionSpecs",
              "value": {
                "value": {
                  "generatedName": "SharedGcpCommerceProducerPurchaseSpecPurchaseOptionSpecsItem",
                  "schema": "shared.GcpPurchasePlan",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpCommerceProducerPurchaseSpecPurchaseOptionSpecs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerPurchaseSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerServiceBilling": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerServiceBillingMetrics",
            "key": "metrics",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerServiceBillingMetrics",
              "value": {
                "description": "in format of [\"{product-name}.endpoints.{provider-id}.cloud.goog/{plan_key}_{usage_dimension_key}\"]",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedGcpCommerceProducerServiceBillingMetricsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpCommerceProducerServiceBillingMetrics",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerServiceBilling",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerServiceConfig": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerServiceConfigBilling",
            "key": "billing",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerServiceConfigBilling",
              "value": {
                "generatedName": "SharedGcpCommerceProducerServiceConfigBilling",
                "schema": "shared.GcpCommerceProducerServiceBilling",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerServiceConfigMetrics",
            "key": "metrics",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerServiceConfigMetrics",
              "value": {
                "description": "Metrics: Defines the metrics used by this service.",
                "value": {
                  "generatedName": "SharedGcpCommerceProducerServiceConfigMetricsItem",
                  "schema": "shared.GcpCommerceProducerPurchaseMetric",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpCommerceProducerServiceConfigMetrics",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerServiceConfigName",
            "key": "name",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerServiceConfigName",
              "value": {
                "description": "In format of \"{product-name}.endpoints.{provider-id}.cloud.goog\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerServiceConfigName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerServiceConfigProducerProjectId",
            "key": "producerProjectId",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerServiceConfigProducerProjectId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerServiceConfigProducerProjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerServiceConfigTitle",
            "key": "title",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerServiceConfigTitle",
              "value": {
                "description": "The Product title",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerServiceConfigTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerServiceConfig",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpCommerceProducerSupportSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerSupportSpecDescription",
            "key": "description",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerSupportSpecDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerSupportSpecDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerSupportSpecEmail",
            "key": "email",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerSupportSpecEmail",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerSupportSpecEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpCommerceProducerSupportSpecUri",
            "key": "uri",
            "schema": {
              "generatedName": "sharedGcpCommerceProducerSupportSpecUri",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpCommerceProducerSupportSpecUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpCommerceProducerSupportSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationGcpProjectId",
            "key": "gcpProjectId",
            "schema": {
              "generatedName": "sharedGcpIntegrationGcpProjectId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationGcpProjectId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationGcpProjectNumber",
            "key": "gcpProjectNumber",
            "schema": {
              "generatedName": "sharedGcpIntegrationGcpProjectNumber",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationGcpProjectNumber",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationIdentityProviderId",
            "key": "identityProviderId",
            "schema": {
              "generatedName": "sharedGcpIntegrationIdentityProviderId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationIdentityProviderId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationPartnerId",
            "key": "partnerId",
            "schema": {
              "generatedName": "sharedGcpIntegrationPartnerId",
              "value": {
                "description": "The GCP Marketplace Partner ID, it is also called as Provider ID somewhere.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationPartnerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationPubsubTopic",
            "key": "pubsubTopic",
            "schema": {
              "generatedName": "sharedGcpIntegrationPubsubTopic",
              "value": {
                "description": "The resource name of the Pub/Sub topic to receive notifications from Google when a user signs up for your service, purchases a plan, or changes an existing plan.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationPubsubTopic",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationReportBucket",
            "key": "reportBucket",
            "schema": {
              "generatedName": "sharedGcpIntegrationReportBucket",
              "value": {
                "description": "The GCP storage bucket name to store the GCP Marketplace reports.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationReportBucket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationReportFullSyncDone",
            "key": "reportFullSyncDone",
            "schema": {
              "generatedName": "sharedGcpIntegrationReportFullSyncDone",
              "value": {
                "description": "Is GCP Marketplace Report full-sync done.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedGcpIntegrationReportFullSyncDone",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationReportStartDate",
            "key": "reportStartDate",
            "schema": {
              "generatedName": "sharedGcpIntegrationReportStartDate",
              "value": {
                "description": "The UTC date when GCP Marketplace reprots start to generate.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedGcpIntegrationReportStartDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationServiceAccountEmail",
            "key": "serviceAccountEmail",
            "schema": {
              "generatedName": "sharedGcpIntegrationServiceAccountEmail",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationServiceAccountEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationServiceNames",
            "key": "serviceNames",
            "schema": {
              "generatedName": "sharedGcpIntegrationServiceNames",
              "value": {
                "description": "The array of service resource names of the listings in GCP Marketplace.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedGcpIntegrationServiceNamesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpIntegrationServiceNames",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpIntegrationWorkloadIdentityPoolId",
            "key": "workloadIdentityPoolId",
            "schema": {
              "generatedName": "sharedGcpIntegrationWorkloadIdentityPoolId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpIntegrationWorkloadIdentityPoolId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpMarketplaceConsumer": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceConsumerProject",
            "key": "project",
            "schema": {
              "generatedName": "sharedGcpMarketplaceConsumerProject",
              "value": {
                "description": "The project name with format `projects/`.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceConsumerProject",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpMarketplaceConsumer",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpMarketplaceEntitlement": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementAccount",
            "key": "account",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementAccount",
              "value": {
                "description": "The resource name of the account that this entitlement is based on, if any, in format \"\"providers/{provider_id}/accounts/{account_id}\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementConsumers",
            "key": "consumers",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementConsumers",
              "value": {
                "description": "The resources using this entitlement, if applicable.",
                "value": {
                  "generatedName": "SharedGcpMarketplaceEntitlementConsumersItem",
                  "schema": "shared.GcpMarketplaceConsumer",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementConsumers",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementCreateTime",
            "key": "createTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementCreateTime",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementCreateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementId",
            "key": "id",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementId",
              "value": {
                "description": "Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub event.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementInputProperties",
            "key": "inputProperties",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementInputProperties",
              "value": {
                "description": "The custom properties that were collected from the user to create this entitlement.",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "SharedGcpMarketplaceEntitlementInputPropertiesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementInputProperties",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementMessageToUser",
            "key": "messageToUser",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementMessageToUser",
              "value": {
                "description": "Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for\nprovisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is\nEntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementMessageToUser",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementName",
            "key": "name",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementName",
              "value": {
                "description": "The resource name of the entitlement. Entitlement names have the form `providers/{provider_id}/entitlements/{entitlement_id}`.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementNewOfferDuration",
            "key": "newOfferDuration",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementNewOfferDuration",
              "value": {
                "description": "in ISO 8601 duration format, such as \"P2Y3M\". For Marketplace pub/sub event.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementNewOfferDuration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementNewOfferEndTime",
            "key": "newOfferEndTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementNewOfferEndTime",
              "value": {
                "description": "Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer.\nIf the offer was created with a term instead of a specified end date, this field is empty.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementNewOfferEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementNewOfferStartTime",
            "key": "newOfferStartTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementNewOfferStartTime",
              "value": {
                "description": "Output only. The start time of the new offer. Field is empty if the pending plan change is not moving to an offer.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementNewOfferStartTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementNewPendingOffer",
            "key": "newPendingOffer",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementNewPendingOffer",
              "value": {
                "description": "The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the\npending plan change is moving to an offer. Format:\n'projects/{project}/services/{service}/privateOffers/{offer-id}' OR\n'projects/{project}/services/{service}/standardOffers/{offer-id}',\ndepending on whether the offer is private or public.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementNewPendingOffer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementNewPendingOfferDuration",
            "key": "newPendingOfferDuration",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementNewPendingOfferDuration",
              "value": {
                "description": "The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan\nchange is not moving to an offer since the entitlement is not pending, only the plan change is pending.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementNewPendingOfferDuration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementNewPendingPlan",
            "key": "newPendingPlan",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementNewPendingPlan",
              "value": {
                "description": "The identifier of the pending new plan. Required if the product has plans and the entitlement has a pending plan change.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementNewPendingPlan",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementNewPlan",
            "key": "newPlan",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementNewPlan",
              "value": {
                "description": "When the buyer changes plan, For Marketplace pub/sub event.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementNewPlan",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementOffer",
            "key": "offer",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementOffer",
              "value": {
                "description": "The name of the offer that was procured. Field is empty if order was not made using an offer. Format:\n'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}',\ndepending on whether the offer is private or public.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementOffer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementOfferDuration",
            "key": "offerDuration",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementOfferDuration",
              "value": {
                "description": "The offer duration of the current offer in ISO 8601 duration format. Field is empty if entitlement was not made using an offer, such as \"P1Y\", \"P2M\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementOfferDuration",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementOfferEndTime",
            "key": "offerEndTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementOfferEndTime",
              "value": {
                "description": "Output only. End time for the Offer association corresponding to this entitlement. The field is only populated if the entitlement is currently associated with an Offer.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementOfferEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementPlan",
            "key": "plan",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementPlan",
              "value": {
                "description": "The identifier of the plan that was procured. Required if the product has plans.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementPlan",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementProduct",
            "key": "product",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementProduct",
              "value": {
                "description": "The identifier of the entity that was purchased. This may actually represent a product, quote, or offer.\nFor Private offer, \"projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementProduct",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementProductExternalName",
            "key": "productExternalName",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementProductExternalName",
              "value": {
                "description": "The identifier of the product that was procured.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementProductExternalName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementProvider",
            "key": "provider",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementProvider",
              "value": {
                "description": "The ID of the service provider under Cloud Commerce platform that this entitlement was created against.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementProvider",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementQuoteExternalName",
            "key": "quoteExternalName",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementQuoteExternalName",
              "value": {
                "description": "The identifier of the quote that was used to procure, such as the private offer Id. Empty if the order is not purchased using a quote.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementQuoteExternalName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementState",
            "key": "state",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementState",
              "value": {
                "description": "Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState",
                "generatedName": "SharedGcpMarketplaceEntitlementState",
                "schema": "shared.GcpMarketplaceEntitlementState",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementSubscriptionEndTime",
            "key": "subscriptionEndTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementSubscriptionEndTime",
              "value": {
                "description": "The End time for the subscription corresponding to this entitlement.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementSubscriptionEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementUpdateTime",
            "key": "updateTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementUpdateTime",
              "value": {
                "description": "The last update timestamp. It is the endTime for the cancelled entitlement.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceEntitlementUsageReportingId",
            "key": "usageReportingId",
            "schema": {
              "generatedName": "sharedGcpMarketplaceEntitlementUsageReportingId",
              "value": {
                "description": "The consumerId to use when reporting usage through the Service Control API. See the consumerId field at\nReporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details.\nThis field is present only if the product has usage-based billing configured.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceEntitlementUsageReportingId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpMarketplaceEntitlement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpMarketplaceEntitlementState": {
        "generatedName": "SharedGcpMarketplaceEntitlementState",
        "values": [
          {
            "nameOverride": "STATE_UNSPECIFIED",
            "generatedName": "ENTITLEMENT_STATE_UNSPECIFIED",
            "value": "ENTITLEMENT_STATE_UNSPECIFIED",
            "casing": {}
          },
          {
            "nameOverride": "ACTIVATION_REQUESTED",
            "generatedName": "ENTITLEMENT_ACTIVATION_REQUESTED",
            "value": "ENTITLEMENT_ACTIVATION_REQUESTED",
            "casing": {}
          },
          {
            "nameOverride": "ACTIVE",
            "generatedName": "ENTITLEMENT_ACTIVE",
            "value": "ENTITLEMENT_ACTIVE",
            "casing": {}
          },
          {
            "nameOverride": "PENDING_CANCELLATION",
            "generatedName": "ENTITLEMENT_PENDING_CANCELLATION",
            "value": "ENTITLEMENT_PENDING_CANCELLATION",
            "casing": {}
          },
          {
            "nameOverride": "CANCELLED",
            "generatedName": "ENTITLEMENT_CANCELLED",
            "value": "ENTITLEMENT_CANCELLED",
            "casing": {}
          },
          {
            "nameOverride": "PENDING_PLAN_CHANGE",
            "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE",
            "value": "ENTITLEMENT_PENDING_PLAN_CHANGE",
            "casing": {}
          },
          {
            "nameOverride": "PENDING_PLAN_CHANGE_APPROVAL",
            "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
            "value": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
            "casing": {}
          },
          {
            "nameOverride": "SUSPENDED",
            "generatedName": "ENTITLEMENT_SUSPENDED",
            "value": "ENTITLEMENT_SUSPENDED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.GcpMarketplaceUserAccount": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountApprovals",
            "key": "approvals",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountApprovals",
              "value": {
                "description": "The approvals for this account, that are permitted or have been completed.",
                "value": {
                  "generatedName": "SharedGcpMarketplaceUserAccountApprovalsItem",
                  "schema": "shared.GcpMarketplaceUserAccountApproval",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountApprovals",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountCreateTime",
            "key": "createTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountCreateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountCreateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountId",
            "key": "id",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountId",
              "value": {
                "description": "GCP Marketplace User Account ID.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountInputProperties",
            "key": "inputProperties",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountInputProperties",
              "value": {
                "description": "RFC3339 UTC timestamp",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "SharedGcpMarketplaceUserAccountInputPropertiesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountInputProperties",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountName",
            "key": "name",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountName",
              "value": {
                "description": "The resource name of the account. Account names have the form providers/{provider_id}/accounts/{account_id}.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountProvider",
            "key": "provider",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountProvider",
              "value": {
                "description": "The identifier of the service provider (SaaS Seller) that this account was created against.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountProvider",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountState",
            "key": "state",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountState",
              "value": {
                "description": "The state of the account. An account might not be able to make a purchase if the billing account is suspended, for example.",
                "generatedName": "SharedGcpMarketplaceUserAccountState",
                "schema": "shared.GcpMarketplaceUserAccountState",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountUpdateTime",
            "key": "updateTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountUpdateTime",
              "value": {
                "description": "RFC3339 UTC timestamp",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountUserInfo",
            "key": "userInfo",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountUserInfo",
              "value": {
                "generatedName": "SharedGcpMarketplaceUserAccountUserInfo",
                "schema": "shared.GcpUserInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpMarketplaceUserAccount",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpMarketplaceUserAccountApproval": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountApprovalName",
            "key": "name",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountApprovalName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountApprovalName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountApprovalReason",
            "key": "reason",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountApprovalReason",
              "value": {
                "description": "An explanation for the state of the approval.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountApprovalReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountApprovalState",
            "key": "state",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountApprovalState",
              "value": {
                "generatedName": "SharedGcpMarketplaceUserAccountApprovalState",
                "schema": "shared.GcpMarketplaceUserAccountApprovalState",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpMarketplaceUserAccountApprovalUpdateTime",
            "key": "updateTime",
            "schema": {
              "generatedName": "sharedGcpMarketplaceUserAccountApprovalUpdateTime",
              "value": {
                "description": "RFC3339 UTC timestamp",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpMarketplaceUserAccountApprovalUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpMarketplaceUserAccountApproval",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpMarketplaceUserAccountApprovalState": {
        "generatedName": "SharedGcpMarketplaceUserAccountApprovalState",
        "values": [
          {
            "nameOverride": "STATE_UNSPECIFIED",
            "generatedName": "STATE_UNSPECIFIED",
            "value": "STATE_UNSPECIFIED",
            "casing": {}
          },
          {
            "nameOverride": "PENDING",
            "generatedName": "PENDING",
            "value": "PENDING",
            "casing": {}
          },
          {
            "nameOverride": "APPROVED",
            "generatedName": "APPROVED",
            "value": "APPROVED",
            "casing": {}
          },
          {
            "nameOverride": "REJECTED",
            "generatedName": "REJECTED",
            "value": "REJECTED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.GcpMarketplaceUserAccountState": {
        "generatedName": "SharedGcpMarketplaceUserAccountState",
        "values": [
          {
            "nameOverride": "UNSPECIFIED",
            "generatedName": "ACCOUNT_STATE_UNSPECIFIED",
            "value": "ACCOUNT_STATE_UNSPECIFIED",
            "casing": {}
          },
          {
            "nameOverride": "ACTIVE",
            "generatedName": "ACCOUNT_ACTIVE",
            "value": "ACCOUNT_ACTIVE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.GcpProduct": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpProductCreateTime",
            "key": "createTime",
            "schema": {
              "generatedName": "sharedGcpProductCreateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedGcpProductCreateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpProductId",
            "key": "id",
            "schema": {
              "generatedName": "sharedGcpProductId",
              "value": {
                "description": "Nullable, GCP Marketplace Product UUID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpProductListingSpec",
            "key": "listingSpec",
            "schema": {
              "generatedName": "sharedGcpProductListingSpec",
              "value": {
                "generatedName": "SharedGcpProductListingSpec",
                "schema": "shared.GcpCommerceProducerListingSpec",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpProductMarketplace",
            "key": "marketplace",
            "schema": {
              "generatedName": "sharedGcpProductMarketplace",
              "value": {
                "value": {
                  "value": "marketplaces/google-cloud",
                  "type": "string"
                },
                "generatedName": "SharedGcpProductMarketplace",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpProductName",
            "key": "name",
            "schema": {
              "generatedName": "sharedGcpProductName",
              "value": {
                "description": "In format of \"projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpProductName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpProductService",
            "key": "service",
            "schema": {
              "generatedName": "sharedGcpProductService",
              "value": {
                "description": "In format of \"services/{product-name}.endpoints.{provider-id}.cloud.goog\"",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpProductService",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpProductServiceConfig",
            "key": "serviceConfig",
            "schema": {
              "generatedName": "sharedGcpProductServiceConfig",
              "value": {
                "generatedName": "SharedGcpProductServiceConfig",
                "schema": "shared.GcpCommerceProducerServiceConfig",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpProduct",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpPurchasePlan": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpPurchasePlanName",
            "key": "name",
            "schema": {
              "generatedName": "sharedGcpPurchasePlanName",
              "value": {
                "description": "The Plan key.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpPurchasePlanName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpPurchasePlanPriceInfo",
            "key": "priceInfo",
            "schema": {
              "generatedName": "sharedGcpPurchasePlanPriceInfo",
              "value": {
                "generatedName": "SharedGcpPurchasePlanPriceInfo",
                "schema": "shared.GcpCommerceProducerPriceInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpPurchasePlanPurchaseMode",
            "key": "purchaseMode",
            "schema": {
              "generatedName": "sharedGcpPurchasePlanPurchaseMode",
              "value": {
                "value": {
                  "value": "PURCHASE_MODE_PUBLIC",
                  "type": "string"
                },
                "generatedName": "SharedGcpPurchasePlanPurchaseMode",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpPurchasePlanTitle",
            "key": "title",
            "schema": {
              "generatedName": "sharedGcpPurchasePlanTitle",
              "value": {
                "description": "The Plan title",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpPurchasePlanTitle",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpPurchasePlan",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GcpUserInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGcpUserInfoRoles",
            "key": "roles",
            "schema": {
              "generatedName": "sharedGcpUserInfoRoles",
              "value": {
                "description": "An array of strings representing the user's roles. Right now, it can be either: ** account_admin, which indicates that the user is a Billing Account Administrator of the billing account that purchased the product, or ** project_editor, which indicates that the user is a Project Editor, but not a Billing Administrator, of the project under that billing account.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedGcpUserInfoRolesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedGcpUserInfoRoles",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGcpUserInfoUserIdentity",
            "key": "user_identity",
            "schema": {
              "generatedName": "sharedGcpUserInfoUserIdentity",
              "value": {
                "description": "The user's obfuscated GAIA ID, which can be used to initiate Open ID Connect.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGcpUserInfoUserIdentity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGcpUserInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GetApiClientAccessTokenParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGetApiClientAccessTokenParamsId",
            "key": "id",
            "schema": {
              "description": "The ID of the API Client.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedGetApiClientAccessTokenParamsId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetApiClientAccessTokenParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedGetApiClientAccessTokenParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetApiClientAccessTokenParamsSecret",
            "key": "secret",
            "schema": {
              "description": "The secret of the API Client.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedGetApiClientAccessTokenParamsSecret",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGetApiClientAccessTokenParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GetRevenueReportParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGetRevenueReportParamsBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "sharedGetRevenueReportParamsBuyerId",
              "value": {
                "description": "Optional, if available, return the report for the Buyer.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGetRevenueReportParamsBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetRevenueReportParamsEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedGetRevenueReportParamsEntitlementId",
              "value": {
                "description": "Optional, if available, return the report for the Entitlement.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGetRevenueReportParamsEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetRevenueReportParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "description": "Required. If the productID & entitlementID are emtpy, return the report for the entire Organization.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedGetRevenueReportParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetRevenueReportParamsPartner",
            "key": "partner",
            "schema": {
              "description": "Required.",
              "generatedName": "SharedGetRevenueReportParamsPartner",
              "values": [
                {
                  "generatedName": "AWS",
                  "value": "AWS",
                  "casing": {}
                },
                {
                  "generatedName": "AZURE",
                  "value": "AZURE",
                  "casing": {}
                },
                {
                  "generatedName": "GCP",
                  "value": "GCP",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../swagger.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetRevenueReportParamsProductId",
            "key": "productID",
            "schema": {
              "generatedName": "sharedGetRevenueReportParamsProductId",
              "value": {
                "description": "Optional, if available, return the report for the Product.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedGetRevenueReportParamsProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetRevenueReportParamsReportType",
            "key": "reportType",
            "schema": {
              "generatedName": "SharedGetRevenueReportParamsReportType",
              "schema": "shared.RevenueReportType",
              "source": {
                "file": "../swagger.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedGetRevenueReportParamsService",
            "key": "service",
            "schema": {
              "description": "Required.",
              "value": {
                "value": "MARKETPLACE",
                "type": "string"
              },
              "generatedName": "SharedGetRevenueReportParamsService",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGetRevenueReportParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.GetUsageReportParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedGetUsageReportParamsEntitlementId",
            "key": "entitlementID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedGetUsageReportParamsEntitlementId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedGetUsageReportParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedGetUsageReportParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedGetUsageReportParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.HubspotCrmCredential": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedHubspotCrmCredentialAccessToken",
            "key": "accessToken",
            "schema": {
              "generatedName": "sharedHubspotCrmCredentialAccessToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedHubspotCrmCredentialAccessToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedHubspotCrmCredentialAcquiredOn",
            "key": "acquiredOn",
            "schema": {
              "generatedName": "sharedHubspotCrmCredentialAcquiredOn",
              "value": {
                "description": "UTC timestamp on receiving the auth response",
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedHubspotCrmCredentialAcquiredOn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedHubspotCrmCredentialExpiresIn",
            "key": "expiresIn",
            "schema": {
              "generatedName": "sharedHubspotCrmCredentialExpiresIn",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedHubspotCrmCredentialExpiresIn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedHubspotCrmCredentialRefreshToken",
            "key": "refreshToken",
            "schema": {
              "generatedName": "sharedHubspotCrmCredentialRefreshToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedHubspotCrmCredentialRefreshToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedHubspotCrmCredential",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.HubspotCrmIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedHubspotCrmIntegrationCredential",
            "key": "credential",
            "schema": {
              "generatedName": "sharedHubspotCrmIntegrationCredential",
              "value": {
                "generatedName": "SharedHubspotCrmIntegrationCredential",
                "schema": "shared.HubspotCrmCredential",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedHubspotCrmIntegrationPortalId",
            "key": "portalId",
            "schema": {
              "generatedName": "sharedHubspotCrmIntegrationPortalId",
              "value": {
                "description": "Hubspot Account Id",
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedHubspotCrmIntegrationPortalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedHubspotCrmIntegrationSecretKey",
            "key": "secretKey",
            "schema": {
              "generatedName": "sharedHubspotCrmIntegrationSecretKey",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedHubspotCrmIntegrationSecretKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedHubspotCrmIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.IdentityBuyer": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerCreationTime",
            "key": "creationTime",
            "schema": {
              "generatedName": "sharedIdentityBuyerCreationTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedIdentityBuyerCreationTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerDescription",
            "key": "description",
            "schema": {
              "generatedName": "sharedIdentityBuyerDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityBuyerDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerExternalId",
            "key": "externalID",
            "schema": {
              "generatedName": "sharedIdentityBuyerExternalId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityBuyerExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerId",
            "key": "id",
            "schema": {
              "generatedName": "sharedIdentityBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedIdentityBuyerInfo",
              "value": {
                "generatedName": "SharedIdentityBuyerInfo",
                "schema": "shared.BuyerInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerLastUpdateTime",
            "key": "lastUpdateTime",
            "schema": {
              "generatedName": "sharedIdentityBuyerLastUpdateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedIdentityBuyerLastUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerName",
            "key": "name",
            "schema": {
              "generatedName": "sharedIdentityBuyerName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityBuyerName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedIdentityBuyerOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityBuyerOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityBuyerPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedIdentityBuyerPartner",
              "value": {
                "generatedName": "SharedIdentityBuyerPartner",
                "values": [
                  {
                    "generatedName": "AWS",
                    "value": "AWS",
                    "casing": {}
                  },
                  {
                    "generatedName": "AZURE",
                    "value": "AZURE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GCP",
                    "value": "GCP",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedIdentityBuyer",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.IdentityIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationCreatedBy",
            "key": "createdBy",
            "schema": {
              "generatedName": "sharedIdentityIntegrationCreatedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityIntegrationCreatedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationCreationTime",
            "key": "creationTime",
            "schema": {
              "generatedName": "sharedIdentityIntegrationCreationTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedIdentityIntegrationCreationTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedIdentityIntegrationInfo",
              "value": {
                "generatedName": "SharedIdentityIntegrationInfo",
                "schema": "shared.IntegrationInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationLastUpdateTime",
            "key": "lastUpdateTime",
            "schema": {
              "generatedName": "sharedIdentityIntegrationLastUpdateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedIdentityIntegrationLastUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationLastUpdatedBy",
            "key": "lastUpdatedBy",
            "schema": {
              "generatedName": "sharedIdentityIntegrationLastUpdatedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityIntegrationLastUpdatedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedIdentityIntegrationOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedIdentityIntegrationOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedIdentityIntegrationPartner",
              "value": {
                "generatedName": "SharedIdentityIntegrationPartner",
                "values": [
                  {
                    "generatedName": "AWS",
                    "value": "AWS",
                    "casing": {}
                  },
                  {
                    "generatedName": "AZURE",
                    "value": "AZURE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GCP",
                    "value": "GCP",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationService",
            "key": "service",
            "schema": {
              "generatedName": "sharedIdentityIntegrationService",
              "value": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "generatedName": "SharedIdentityIntegrationService",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIdentityIntegrationStatus",
            "key": "status",
            "schema": {
              "generatedName": "sharedIdentityIntegrationStatus",
              "value": {
                "generatedName": "SharedIdentityIntegrationStatus",
                "values": [
                  {
                    "generatedName": "CREATED",
                    "value": "CREATED",
                    "casing": {}
                  },
                  {
                    "generatedName": "VERIFIED",
                    "value": "VERIFIED",
                    "casing": {}
                  },
                  {
                    "generatedName": "NOT_VERIFIED",
                    "value": "NOT_VERIFIED",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedIdentityIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.IntegrationInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedIntegrationInfoAwsAceIntegration",
            "key": "awsAceIntegration",
            "schema": {
              "generatedName": "sharedIntegrationInfoAwsAceIntegration",
              "value": {
                "description": "AWS ACE Integration",
                "generatedName": "SharedIntegrationInfoAwsAceIntegration",
                "schema": "shared.AwsAceIntegration",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIntegrationInfoAwsIntegration",
            "key": "awsIntegration",
            "schema": {
              "generatedName": "sharedIntegrationInfoAwsIntegration",
              "value": {
                "description": "AWS Marketplace Integration",
                "generatedName": "SharedIntegrationInfoAwsIntegration",
                "schema": "shared.AwsMarketplaceIntegration",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIntegrationInfoAzureIntegration",
            "key": "azureIntegration",
            "schema": {
              "generatedName": "sharedIntegrationInfoAzureIntegration",
              "value": {
                "description": "Azure Marketplace Integration",
                "generatedName": "SharedIntegrationInfoAzureIntegration",
                "schema": "shared.AzureIntegration",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIntegrationInfoGcpIntegration",
            "key": "gcpIntegration",
            "schema": {
              "generatedName": "sharedIntegrationInfoGcpIntegration",
              "value": {
                "description": "GCP Marketplace Integration",
                "generatedName": "SharedIntegrationInfoGcpIntegration",
                "schema": "shared.GcpIntegration",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIntegrationInfoHubspotCrmIntegration",
            "key": "hubspotCrmIntegration",
            "schema": {
              "generatedName": "sharedIntegrationInfoHubspotCrmIntegration",
              "value": {
                "description": "Integration for HubSpot CRM",
                "generatedName": "SharedIntegrationInfoHubspotCrmIntegration",
                "schema": "shared.HubspotCrmIntegration",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIntegrationInfoSalesforceCrmIntegration",
            "key": "salesforceCrmIntegration",
            "schema": {
              "generatedName": "sharedIntegrationInfoSalesforceCrmIntegration",
              "value": {
                "description": "Integration for Salesforce CRM",
                "generatedName": "SharedIntegrationInfoSalesforceCrmIntegration",
                "schema": "shared.SalesforceCrmIntegration",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedIntegrationInfoSlackIntegration",
            "key": "slackIntegration",
            "schema": {
              "generatedName": "sharedIntegrationInfoSlackIntegration",
              "value": {
                "generatedName": "SharedIntegrationInfoSlackIntegration",
                "schema": "shared.SlackIntegration",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedIntegrationInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.ListRevenueRecordDetailsResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedListRevenueRecordDetailsResponseNextOffset",
            "key": "nextOffset",
            "schema": {
              "generatedName": "sharedListRevenueRecordDetailsResponseNextOffset",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedListRevenueRecordDetailsResponseNextOffset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedListRevenueRecordDetailsResponseRevenueRecordDetails",
            "key": "revenueRecordDetails",
            "schema": {
              "generatedName": "sharedListRevenueRecordDetailsResponseRevenueRecordDetails",
              "value": {
                "value": {
                  "generatedName": "SharedListRevenueRecordDetailsResponseRevenueRecordDetailsItem",
                  "schema": "shared.RevenueRecordDetail",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedListRevenueRecordDetailsResponseRevenueRecordDetails",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedListRevenueRecordDetailsResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.ListRevenueRecordsResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedListRevenueRecordsResponseNextOffset",
            "key": "nextOffset",
            "schema": {
              "generatedName": "sharedListRevenueRecordsResponseNextOffset",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedListRevenueRecordsResponseNextOffset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedListRevenueRecordsResponseRevenueRecords",
            "key": "revenueRecords",
            "schema": {
              "generatedName": "sharedListRevenueRecordsResponseRevenueRecords",
              "value": {
                "value": {
                  "generatedName": "SharedListRevenueRecordsResponseRevenueRecordsItem",
                  "schema": "shared.RevenueRecord",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedListRevenueRecordsResponseRevenueRecords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedListRevenueRecordsResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.ListUsageRecordGroupsResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedListUsageRecordGroupsResponseNextOffset",
            "key": "nextOffset",
            "schema": {
              "generatedName": "sharedListUsageRecordGroupsResponseNextOffset",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedListUsageRecordGroupsResponseNextOffset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedListUsageRecordGroupsResponseUsageRecordGroups",
            "key": "usageRecordGroups",
            "schema": {
              "generatedName": "sharedListUsageRecordGroupsResponseUsageRecordGroups",
              "value": {
                "value": {
                  "generatedName": "SharedListUsageRecordGroupsResponseUsageRecordGroupsItem",
                  "schema": "shared.MeteringUsageRecordGroup",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedListUsageRecordGroupsResponseUsageRecordGroups",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedListUsageRecordGroupsResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.ListUsageRecordReportsResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedListUsageRecordReportsResponseNextOffset",
            "key": "nextOffset",
            "schema": {
              "generatedName": "sharedListUsageRecordReportsResponseNextOffset",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedListUsageRecordReportsResponseNextOffset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedListUsageRecordReportsResponseUsageRecordReports",
            "key": "usageRecordReports",
            "schema": {
              "generatedName": "sharedListUsageRecordReportsResponseUsageRecordReports",
              "value": {
                "value": {
                  "generatedName": "SharedListUsageRecordReportsResponseUsageRecordReportsItem",
                  "schema": "shared.MeteringUsageRecordReport",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedListUsageRecordReportsResponseUsageRecordReports",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedListUsageRecordReportsResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.MeteringDimension": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionCategory",
            "key": "category",
            "schema": {
              "generatedName": "sharedMeteringDimensionCategory",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringDimensionCategory",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionDescription",
            "key": "description",
            "schema": {
              "generatedName": "sharedMeteringDimensionDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringDimensionDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionIncludedBaseQuantities",
            "key": "includedBaseQuantities",
            "schema": {
              "generatedName": "sharedMeteringDimensionIncludedBaseQuantities",
              "value": {
                "description": "how many quantities of this dimension are included in the commit.",
                "value": {
                  "generatedName": "SharedMeteringDimensionIncludedBaseQuantitiesItem",
                  "schema": "AzureIncludedBaseQuantity",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedMeteringDimensionIncludedBaseQuantities",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionKey",
            "key": "key",
            "schema": {
              "generatedName": "sharedMeteringDimensionKey",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringDimensionKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionName",
            "key": "name",
            "schema": {
              "generatedName": "sharedMeteringDimensionName",
              "value": {
                "description": "Display name of the dimension",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringDimensionName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionRate",
            "key": "rate",
            "schema": {
              "generatedName": "sharedMeteringDimensionRate",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedMeteringDimensionRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionTypes",
            "key": "types",
            "schema": {
              "generatedName": "sharedMeteringDimensionTypes",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringDimensionTypesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringDimensionTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionUsageCount",
            "key": "usageCount",
            "schema": {
              "generatedName": "sharedMeteringDimensionUsageCount",
              "value": {
                "description": "The current Dimension Usage Count. Available when call GetEntitlement API.",
                "generatedName": "SharedMeteringDimensionUsageCount",
                "schema": "shared.UsageCount",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringDimensionValueType",
            "key": "valueType",
            "schema": {
              "generatedName": "sharedMeteringDimensionValueType",
              "value": {
                "generatedName": "SharedMeteringDimensionValueType",
                "schema": "shared.ValueType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The dimension to meter usage in entitlement.",
        "generatedName": "SharedMeteringDimension",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.MeteringUsageRecordGroup": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupCreationTime",
            "key": "creationTime",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupCreationTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedMeteringUsageRecordGroupCreationTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordGroupEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupId",
            "key": "id",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordGroupId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupLastUpdateTime",
            "key": "lastUpdateTime",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupLastUpdateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedMeteringUsageRecordGroupLastUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupMetaInfo",
            "key": "metaInfo",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupMetaInfo",
              "value": {
                "generatedName": "SharedMeteringUsageRecordGroupMetaInfo",
                "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordGroupOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupRecords",
            "key": "records",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupRecords",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringUsageRecordGroupRecordsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedMeteringUsageRecordGroupRecordsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringUsageRecordGroupRecords",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupSerialId",
            "key": "serialID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupSerialId",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedMeteringUsageRecordGroupSerialId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupStatus",
            "key": "status",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupStatus",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordGroupStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupUsageRecordReportId",
            "key": "usageRecordReportID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupUsageRecordReportId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordGroupUsageRecordReportId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedMeteringUsageRecordGroup",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.MeteringUsageRecordGroupMetaInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordGroupMetaInfoOriginRecords",
            "key": "originRecords",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordGroupMetaInfoOriginRecords",
              "value": {
                "description": "The original records reported by the customer before convertion. If no dimension mapping is applied, this field is the same as the records field.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringUsageRecordGroupMetaInfoOriginRecordsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedMeteringUsageRecordGroupMetaInfoOriginRecordsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringUsageRecordGroupMetaInfoOriginRecords",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedMeteringUsageRecordGroupMetaInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.MeteringUsageRecordReport": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportCreationTime",
            "key": "creationTime",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportCreationTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedMeteringUsageRecordReportCreationTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordReportEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportEntitlementTermId",
            "key": "entitlementTermID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportEntitlementTermId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordReportEntitlementTermId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportId",
            "key": "id",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordReportId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfo",
              "value": {
                "generatedName": "SharedMeteringUsageRecordReportInfo",
                "schema": "shared.MeteringUsageRecordReportInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordReportOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportProductId",
            "key": "productID",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedMeteringUsageRecordReportProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedMeteringUsageRecordReport",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.MeteringUsageRecordReportInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoAwsMeteringResponse",
            "key": "awsMeteringResponse",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoAwsMeteringResponse",
              "value": {
                "description": "The raw response from AWS metering service.",
                "generatedName": "SharedMeteringUsageRecordReportInfoAwsMeteringResponse",
                "schema": "marketplacemetering.BatchMeterUsageOutput",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoAzureMeteringResponse",
            "key": "azureMeteringResponse",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoAzureMeteringResponse",
              "value": {
                "description": "The raw response from Azure metering service.",
                "generatedName": "SharedMeteringUsageRecordReportInfoAzureMeteringResponse",
                "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoCommitAmount",
            "key": "commitAmount",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoCommitAmount",
              "value": {
                "description": "The amount of the commit if applicable.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoCommitAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoCreditAmount",
            "key": "creditAmount",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoCreditAmount",
              "value": {
                "description": "The amount of the credit if applicable.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoCreditAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoCreditRecords",
            "key": "creditRecords",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoCreditRecords",
              "value": {
                "description": "The credit usage records in the map of <DimensionKey, Count>",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoCreditRecordsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoCreditRecordsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoCreditRecords",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoDimensionUnitPrice",
            "key": "dimensionUnitPrice",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoDimensionUnitPrice",
              "value": {
                "description": "The unit price of each dimension in the map of <DimensionKey, UnitPrice>",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoDimensionUnitPriceKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoDimensionUnitPriceValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoDimensionUnitPrice",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoEndTime",
            "key": "endTime",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoEndTime",
              "value": {
                "description": "time in UTC when the UsageRecordReport ends",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoGcpMeteringResponse",
            "key": "gcpMeteringResponse",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoGcpMeteringResponse",
              "value": {
                "description": "The raw response from GCP metering service.",
                "generatedName": "SharedMeteringUsageRecordReportInfoGcpMeteringResponse",
                "schema": "servicecontrol.ReportResponse",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoIncludedRecords",
            "key": "includedRecords",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoIncludedRecords",
              "value": {
                "description": "The included usage records in the map of <DimensionKey, Count>",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoIncludedRecordsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoIncludedRecordsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoIncludedRecords",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoReportedRecords",
            "key": "reportedRecords",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoReportedRecords",
              "value": {
                "description": "The reported usage records in the map of <DimensionKey, Count>",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoReportedRecordsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoReportedRecordsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoReportedRecords",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoStartTime",
            "key": "startTime",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoStartTime",
              "value": {
                "description": "time in UTC when the UsageRecordReport starts",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoStartTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoUsageRecordGroupIds",
            "key": "usageRecordGroupIds",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoUsageRecordGroupIds",
              "value": {
                "description": "The IDs of UsageRecordGroups aggregated in this UsageRecordReport.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedMeteringUsageRecordReportInfoUsageRecordGroupIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoUsageRecordGroupIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoUsedCommitAmount",
            "key": "usedCommitAmount",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoUsedCommitAmount",
              "value": {
                "description": "The amount of the used commit before the this usage record report if applicable.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoUsedCommitAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoUsedCommitAmountIncrement",
            "key": "usedCommitAmountIncrement",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoUsedCommitAmountIncrement",
              "value": {
                "description": "The amount of the used commit increment in this usage record report if applicable.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoUsedCommitAmountIncrement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoUsedCreditAmount",
            "key": "usedCreditAmount",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoUsedCreditAmount",
              "value": {
                "description": "The amount of the used credit before the this usage record report if applicable.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoUsedCreditAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedMeteringUsageRecordReportInfoUsedCreditAmountIncrement",
            "key": "usedCreditAmountIncrement",
            "schema": {
              "generatedName": "sharedMeteringUsageRecordReportInfoUsedCreditAmountIncrement",
              "value": {
                "description": "The amount of the used credit increment in this usage record report if applicable.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedMeteringUsageRecordReportInfoUsedCreditAmountIncrement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedMeteringUsageRecordReportInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.NotificationEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventAction",
            "key": "action",
            "schema": {
              "generatedName": "sharedNotificationEventAction",
              "value": {
                "generatedName": "SharedNotificationEventAction",
                "schema": "shared.NotificationEventAction",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventEntityId",
            "key": "entityID",
            "schema": {
              "generatedName": "sharedNotificationEventEntityId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedNotificationEventEntityId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventEntityStatus",
            "key": "entityStatus",
            "schema": {
              "generatedName": "sharedNotificationEventEntityStatus",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedNotificationEventEntityStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventEntityType",
            "key": "entityType",
            "schema": {
              "generatedName": "sharedNotificationEventEntityType",
              "value": {
                "generatedName": "SharedNotificationEventEntityType",
                "schema": "shared.EntityType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventEventId",
            "key": "eventID",
            "schema": {
              "generatedName": "sharedNotificationEventEventId",
              "value": {
                "description": "notification event id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedNotificationEventEventId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventEventStatus",
            "key": "eventStatus",
            "schema": {
              "generatedName": "sharedNotificationEventEventStatus",
              "value": {
                "description": "notification event status.",
                "generatedName": "SharedNotificationEventEventStatus",
                "schema": "shared.NotificationEventStatus",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventLastUpdateTime",
            "key": "lastUpdateTime",
            "schema": {
              "generatedName": "sharedNotificationEventLastUpdateTime",
              "value": {
                "description": "timestamp of the event when it is updated.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedNotificationEventLastUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventMessage",
            "key": "message",
            "schema": {
              "generatedName": "sharedNotificationEventMessage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedNotificationEventMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedNotificationEventOrganizationId",
              "value": {
                "description": "suger organization id.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedNotificationEventOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedNotificationEventTimestamp",
            "key": "timestamp",
            "schema": {
              "generatedName": "sharedNotificationEventTimestamp",
              "value": {
                "description": "timestamp of the event when it is scheduled or created.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedNotificationEventTimestamp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedNotificationEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.NotificationEventAction": {
        "generatedName": "SharedNotificationEventAction",
        "values": [
          {
            "nameOverride": "ACCEPT",
            "generatedName": "ACCEPT",
            "value": "ACCEPT",
            "casing": {}
          },
          {
            "nameOverride": "CREATE",
            "generatedName": "CREATE",
            "value": "CREATE",
            "casing": {}
          },
          {
            "nameOverride": "DELETE",
            "generatedName": "DELETE",
            "value": "DELETE",
            "casing": {}
          },
          {
            "nameOverride": "CANCEL",
            "generatedName": "CANCEL",
            "value": "CANCEL",
            "casing": {}
          },
          {
            "nameOverride": "PENDING_CANCEL",
            "generatedName": "PENDING_CANCEL",
            "value": "PENDING_CANCEL",
            "casing": {}
          },
          {
            "nameOverride": "EXPIRE",
            "generatedName": "EXPIRE",
            "value": "EXPIRE",
            "casing": {}
          },
          {
            "nameOverride": "REINSTATE",
            "generatedName": "REINSTATE",
            "value": "REINSTATE",
            "casing": {}
          },
          {
            "nameOverride": "SUSPEND",
            "generatedName": "SUSPEND",
            "value": "SUSPEND",
            "casing": {}
          },
          {
            "nameOverride": "UPDATE",
            "generatedName": "UPDATE",
            "value": "UPDATE",
            "casing": {}
          },
          {
            "nameOverride": "NOTIFY_CONTACTS",
            "generatedName": "NOTIFY_CONTACTS",
            "value": "NOTIFY_CONTACTS",
            "casing": {}
          },
          {
            "nameOverride": "TEST",
            "generatedName": "TEST",
            "value": "TEST",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.NotificationEventStatus": {
        "generatedName": "SharedNotificationEventStatus",
        "values": [
          {
            "nameOverride": "UNKNOWN",
            "generatedName": "EMPTY",
            "value": "",
            "casing": {}
          },
          {
            "nameOverride": "SCHEDULED",
            "generatedName": "SCHEDULED",
            "value": "SCHEDULED",
            "casing": {}
          },
          {
            "nameOverride": "PENDING",
            "generatedName": "PENDING",
            "value": "PENDING",
            "casing": {}
          },
          {
            "nameOverride": "DONE",
            "generatedName": "DONE",
            "value": "DONE",
            "casing": {}
          },
          {
            "nameOverride": "FAILED",
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.OfferInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoAzureOriginalPlan",
            "key": "azureOriginalPlan",
            "schema": {
              "generatedName": "sharedOfferInfoAzureOriginalPlan",
              "value": {
                "description": "The origin pricing of Azure plan. Only applicable for Azure Marketplace plans.",
                "generatedName": "SharedOfferInfoAzureOriginalPlan",
                "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoAzurePrivateOffer",
            "key": "azurePrivateOffer",
            "schema": {
              "generatedName": "sharedOfferInfoAzurePrivateOffer",
              "value": {
                "description": "The private offer for Azure Marketplace. Only applicable for Azure Marketplace private offers.",
                "generatedName": "SharedOfferInfoAzurePrivateOffer",
                "schema": "AzureMarketplacePrivateOffer",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoAzureProductVariant",
            "key": "azureProductVariant",
            "schema": {
              "generatedName": "sharedOfferInfoAzureProductVariant",
              "value": {
                "generatedName": "SharedOfferInfoAzureProductVariant",
                "schema": "AzureProductVariant",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoBuyerAwsAccountIds",
            "key": "buyerAwsAccountIds",
            "schema": {
              "generatedName": "sharedOfferInfoBuyerAwsAccountIds",
              "value": {
                "description": "The buyers' AWS Account IDs of this offer.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedOfferInfoBuyerAwsAccountIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedOfferInfoBuyerAwsAccountIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoBuyerAzureTenants",
            "key": "buyerAzureTenants",
            "schema": {
              "generatedName": "sharedOfferInfoBuyerAzureTenants",
              "value": {
                "description": "The buyers' Azure tenants of this offer.",
                "value": {
                  "generatedName": "SharedOfferInfoBuyerAzureTenantsItem",
                  "schema": "AzureAudience",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferInfoBuyerAzureTenants",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoCommits",
            "key": "commits",
            "schema": {
              "generatedName": "sharedOfferInfoCommits",
              "value": {
                "value": {
                  "generatedName": "SharedOfferInfoCommitsItem",
                  "schema": "shared.CommitDimension",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferInfoCommits",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoCurrency",
            "key": "currency",
            "schema": {
              "generatedName": "sharedOfferInfoCurrency",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOfferInfoCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoDimensions",
            "key": "dimensions",
            "schema": {
              "generatedName": "sharedOfferInfoDimensions",
              "value": {
                "value": {
                  "generatedName": "SharedOfferInfoDimensionsItem",
                  "schema": "shared.MeteringDimension",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferInfoDimensions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoDiscount",
            "key": "discount",
            "schema": {
              "generatedName": "sharedOfferInfoDiscount",
              "value": {
                "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedOfferInfoDiscount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoEulaType",
            "key": "eulaType",
            "schema": {
              "generatedName": "sharedOfferInfoEulaType",
              "value": {
                "generatedName": "SharedOfferInfoEulaType",
                "schema": "shared.EulaType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoEulaUrl",
            "key": "eulaUrl",
            "schema": {
              "generatedName": "sharedOfferInfoEulaUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOfferInfoEulaUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoGcpMetrics",
            "key": "gcpMetrics",
            "schema": {
              "generatedName": "sharedOfferInfoGcpMetrics",
              "value": {
                "description": "Only applicable for GCP Marketplace Offers (the default or private offer)",
                "value": {
                  "generatedName": "SharedOfferInfoGcpMetricsItem",
                  "schema": "shared.GcpCommerceProducerPurchaseMetric",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferInfoGcpMetrics",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoGcpPlans",
            "key": "gcpPlans",
            "schema": {
              "generatedName": "sharedOfferInfoGcpPlans",
              "value": {
                "description": "Only applicable for GCP Marketplace Offers (the default or private offer).",
                "value": {
                  "generatedName": "SharedOfferInfoGcpPlansItem",
                  "schema": "shared.GcpPurchasePlan",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferInfoGcpPlans",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoPaymentInstallments",
            "key": "paymentInstallments",
            "schema": {
              "generatedName": "sharedOfferInfoPaymentInstallments",
              "value": {
                "description": "For flexible payment schedule. Not empty if it is enabled.",
                "value": {
                  "generatedName": "SharedOfferInfoPaymentInstallmentsItem",
                  "schema": "shared.PaymentInstallment",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferInfoPaymentInstallments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoPrivateOfferUrl",
            "key": "privateOfferUrl",
            "schema": {
              "generatedName": "sharedOfferInfoPrivateOfferUrl",
              "value": {
                "description": "The URL of the private offer sent to buyers to accept. Only applicable for private offer.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOfferInfoPrivateOfferUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoRefundCancelationPolicy",
            "key": "refundCancelationPolicy",
            "schema": {
              "generatedName": "sharedOfferInfoRefundCancelationPolicy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOfferInfoRefundCancelationPolicy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoSellerNotes",
            "key": "sellerNotes",
            "schema": {
              "generatedName": "sharedOfferInfoSellerNotes",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOfferInfoSellerNotes",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferInfoVisibility",
            "key": "visibility",
            "schema": {
              "generatedName": "sharedOfferInfoVisibility",
              "value": {
                "description": "The default visibility of offer is PRIVATE.",
                "generatedName": "SharedOfferInfoVisibility",
                "values": [
                  {
                    "generatedName": "PRIVATE",
                    "value": "PRIVATE",
                    "casing": {}
                  },
                  {
                    "generatedName": "PUBLIC",
                    "value": "PUBLIC",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedOfferInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.OfferMetaInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedOfferMetaInfoBaseAgreementId",
            "key": "baseAgreementId",
            "schema": {
              "generatedName": "sharedOfferMetaInfoBaseAgreementId",
              "value": {
                "description": "Applicable for AWS Marketplace only, when the IsAgreementBasedOffer is true.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOfferMetaInfoBaseAgreementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferMetaInfoContacts",
            "key": "contacts",
            "schema": {
              "generatedName": "sharedOfferMetaInfoContacts",
              "value": {
                "description": "The contacts of the offer to notify if any updates.",
                "value": {
                  "generatedName": "SharedOfferMetaInfoContactsItem",
                  "schema": "shared.Contact",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferMetaInfoContacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferMetaInfoIsAgreementBasedOffer",
            "key": "isAgreementBasedOffer",
            "schema": {
              "generatedName": "sharedOfferMetaInfoIsAgreementBasedOffer",
              "value": {
                "description": "Applicable for AWS Marketplace only, If this offer is agreement based offer.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedOfferMetaInfoIsAgreementBasedOffer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferMetaInfoIsRenewalOffer",
            "key": "isRenewalOffer",
            "schema": {
              "generatedName": "sharedOfferMetaInfoIsRenewalOffer",
              "value": {
                "description": "Applicable for AWS Marketplace only, If this offer is renewal offer.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedOfferMetaInfoIsRenewalOffer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOfferMetaInfoNotifications",
            "key": "notifications",
            "schema": {
              "generatedName": "sharedOfferMetaInfoNotifications",
              "value": {
                "description": "The notifications of the offer if any updates. In most cases, it is to notify contacts/buyers when the offer is pending acceptance.",
                "value": {
                  "generatedName": "SharedOfferMetaInfoNotificationsItem",
                  "schema": "shared.NotificationEvent",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedOfferMetaInfoNotifications",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedOfferMetaInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.Operation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedOperationEndTime",
            "key": "endTime",
            "schema": {
              "generatedName": "sharedOperationEndTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedOperationEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOperationId",
            "key": "id",
            "schema": {
              "generatedName": "sharedOperationId",
              "value": {
                "description": "Operation ID.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOperationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOperationMessage",
            "key": "message",
            "schema": {
              "generatedName": "sharedOperationMessage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOperationMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOperationName",
            "key": "name",
            "schema": {
              "generatedName": "sharedOperationName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOperationName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOperationStartTime",
            "key": "startTime",
            "schema": {
              "generatedName": "sharedOperationStartTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedOperationStartTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOperationStatus",
            "key": "status",
            "schema": {
              "generatedName": "sharedOperationStatus",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedOperationStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedOperationType",
            "key": "type",
            "schema": {
              "generatedName": "sharedOperationType",
              "value": {
                "generatedName": "SharedOperationType",
                "schema": "shared.OperationType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedOperation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.OperationType": {
        "value": {
          "value": "TemporalWorkflow",
          "type": "string"
        },
        "generatedName": "SharedOperationType",
        "groupName": [],
        "type": "literal"
      },
      "shared.PaymentInstallment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedPaymentInstallmentAmount",
            "key": "amount",
            "schema": {
              "generatedName": "sharedPaymentInstallmentAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedPaymentInstallmentAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedPaymentInstallmentChargeOn",
            "key": "chargeOn",
            "schema": {
              "generatedName": "sharedPaymentInstallmentChargeOn",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedPaymentInstallmentChargeOn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedPaymentInstallment",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.ProductInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedProductInfoAttributes",
            "key": "attributes",
            "schema": {
              "generatedName": "sharedProductInfoAttributes",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedProductInfoAttributesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SharedProductInfoAttributesValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SharedProductInfoAttributes",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoAwsSaasProduct",
            "key": "awsSaasProduct",
            "schema": {
              "generatedName": "sharedProductInfoAwsSaasProduct",
              "value": {
                "generatedName": "SharedProductInfoAwsSaasProduct",
                "schema": "shared.AwsSaasProduct",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoAwsSnsSubscriptions",
            "key": "awsSnsSubscriptions",
            "schema": {
              "generatedName": "sharedProductInfoAwsSnsSubscriptions",
              "value": {
                "value": {
                  "generatedName": "SharedProductInfoAwsSnsSubscriptionsItem",
                  "schema": "shared.AwsSnsSubscription",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedProductInfoAwsSnsSubscriptions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoAzureProduct",
            "key": "azureProduct",
            "schema": {
              "generatedName": "sharedProductInfoAzureProduct",
              "value": {
                "generatedName": "SharedProductInfoAzureProduct",
                "schema": "AzureProduct",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoCommits",
            "key": "commits",
            "schema": {
              "generatedName": "sharedProductInfoCommits",
              "value": {
                "value": {
                  "generatedName": "SharedProductInfoCommitsItem",
                  "schema": "shared.CommitDimension",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedProductInfoCommits",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoCurrency",
            "key": "currency",
            "schema": {
              "generatedName": "sharedProductInfoCurrency",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedProductInfoCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoDimensions",
            "key": "dimensions",
            "schema": {
              "generatedName": "sharedProductInfoDimensions",
              "value": {
                "value": {
                  "generatedName": "SharedProductInfoDimensionsItem",
                  "schema": "shared.MeteringDimension",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedProductInfoDimensions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoEulaUrl",
            "key": "eulaUrl",
            "schema": {
              "generatedName": "sharedProductInfoEulaUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedProductInfoEulaUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoGcpProduct",
            "key": "gcpProduct",
            "schema": {
              "generatedName": "sharedProductInfoGcpProduct",
              "value": {
                "generatedName": "SharedProductInfoGcpProduct",
                "schema": "shared.GcpProduct",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoRefundCancelationPolicy",
            "key": "refundCancelationPolicy",
            "schema": {
              "generatedName": "sharedProductInfoRefundCancelationPolicy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedProductInfoRefundCancelationPolicy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedProductInfoSellerNotes",
            "key": "sellerNotes",
            "schema": {
              "generatedName": "sharedProductInfoSellerNotes",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedProductInfoSellerNotes",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedProductInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.RevenueRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordAmount",
            "key": "amount",
            "schema": {
              "generatedName": "sharedRevenueRecordAmount",
              "value": {
                "description": "The revenue amount for the revenue report",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedRevenueRecordAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "sharedRevenueRecordBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueRecordBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordCollectableAmount",
            "key": "collectableAmount",
            "schema": {
              "generatedName": "sharedRevenueRecordCollectableAmount",
              "value": {
                "description": "The revenue amount that the seller/ISV can collect.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedRevenueRecordCollectableAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordCurrency",
            "key": "currency",
            "schema": {
              "generatedName": "sharedRevenueRecordCurrency",
              "value": {
                "description": "The currency of the revenue in ISO 4217 format, such as \"USD\".",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueRecordCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordDate",
            "key": "date",
            "schema": {
              "generatedName": "sharedRevenueRecordDate",
              "value": {
                "description": "The date for the revenue report",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedRevenueRecordDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordDisburseAmount",
            "key": "disburseAmount",
            "schema": {
              "generatedName": "sharedRevenueRecordDisburseAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedRevenueRecordDisburseAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordDisburseDate",
            "key": "disburseDate",
            "schema": {
              "generatedName": "sharedRevenueRecordDisburseDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedRevenueRecordDisburseDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedRevenueRecordEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueRecordEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordId",
            "key": "id",
            "schema": {
              "generatedName": "sharedRevenueRecordId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueRecordId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedRevenueRecordInfo",
              "value": {
                "generatedName": "SharedRevenueRecordInfo",
                "schema": "shared.RevenueRecordInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordInvoiceAmount",
            "key": "invoiceAmount",
            "schema": {
              "generatedName": "sharedRevenueRecordInvoiceAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedRevenueRecordInvoiceAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordInvoiceDate",
            "key": "invoiceDate",
            "schema": {
              "generatedName": "sharedRevenueRecordInvoiceDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedRevenueRecordInvoiceDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedRevenueRecordOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueRecordOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedRevenueRecordPartner",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueRecordPartner",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordPaymentDueDate",
            "key": "paymentDueDate",
            "schema": {
              "generatedName": "sharedRevenueRecordPaymentDueDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedRevenueRecordPaymentDueDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordProductId",
            "key": "productID",
            "schema": {
              "generatedName": "sharedRevenueRecordProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueRecordProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordRefundDisburseAmount",
            "key": "refundDisburseAmount",
            "schema": {
              "generatedName": "sharedRevenueRecordRefundDisburseAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedRevenueRecordRefundDisburseAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordRefundDisburseDate",
            "key": "refundDisburseDate",
            "schema": {
              "generatedName": "sharedRevenueRecordRefundDisburseDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedRevenueRecordRefundDisburseDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordRefundInvoiceAmount",
            "key": "refundInvoiceAmount",
            "schema": {
              "generatedName": "sharedRevenueRecordRefundInvoiceAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedRevenueRecordRefundInvoiceAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordRefundInvoiceDate",
            "key": "refundInvoiceDate",
            "schema": {
              "generatedName": "sharedRevenueRecordRefundInvoiceDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedRevenueRecordRefundInvoiceDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordTaxAmount",
            "key": "taxAmount",
            "schema": {
              "generatedName": "sharedRevenueRecordTaxAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedRevenueRecordTaxAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedRevenueRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.RevenueRecordDetail": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordDetailAwsRevenueRecordDetail",
            "key": "awsRevenueRecordDetail",
            "schema": {
              "generatedName": "sharedRevenueRecordDetailAwsRevenueRecordDetail",
              "value": {
                "description": "For AWS Marketplace",
                "generatedName": "SharedRevenueRecordDetailAwsRevenueRecordDetail",
                "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordDetailAzureRevenueRecordDetail",
            "key": "azureRevenueRecordDetail",
            "schema": {
              "generatedName": "sharedRevenueRecordDetailAzureRevenueRecordDetail",
              "value": {
                "description": "For Azure Marketplace",
                "generatedName": "SharedRevenueRecordDetailAzureRevenueRecordDetail",
                "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordDetailGcpRevenueRecordDetail",
            "key": "gcpRevenueRecordDetail",
            "schema": {
              "generatedName": "sharedRevenueRecordDetailGcpRevenueRecordDetail",
              "value": {
                "description": "For GCP Marketplace",
                "generatedName": "SharedRevenueRecordDetailGcpRevenueRecordDetail",
                "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedRevenueRecordDetail",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.RevenueRecordInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordInfoAwsRevenueRecords",
            "key": "awsRevenueRecords",
            "schema": {
              "generatedName": "sharedRevenueRecordInfoAwsRevenueRecords",
              "value": {
                "description": "For raw revenue records in AWS Marketplace",
                "value": {
                  "generatedName": "SharedRevenueRecordInfoAwsRevenueRecordsItem",
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedRevenueRecordInfoAwsRevenueRecords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordInfoAzureRevenueRecords",
            "key": "azureRevenueRecords",
            "schema": {
              "generatedName": "sharedRevenueRecordInfoAzureRevenueRecords",
              "value": {
                "description": "For raw revenue records in Azure Marketplace",
                "value": {
                  "generatedName": "SharedRevenueRecordInfoAzureRevenueRecordsItem",
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedRevenueRecordInfoAzureRevenueRecords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueRecordInfoGcpRevenueRecords",
            "key": "gcpRevenueRecords",
            "schema": {
              "generatedName": "sharedRevenueRecordInfoGcpRevenueRecords",
              "value": {
                "description": "For raw revenue records in GCP Marketplace",
                "value": {
                  "generatedName": "SharedRevenueRecordInfoGcpRevenueRecordsItem",
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedRevenueRecordInfoGcpRevenueRecords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedRevenueRecordInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.RevenueReport": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "sharedRevenueReportBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueReportBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedRevenueReportEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueReportEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedRevenueReportOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueReportOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedRevenueReportPartner",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueReportPartner",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportProductId",
            "key": "productID",
            "schema": {
              "generatedName": "sharedRevenueReportProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueReportProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportReportDate",
            "key": "reportDate",
            "schema": {
              "generatedName": "sharedRevenueReportReportDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedRevenueReportReportDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportReportType",
            "key": "reportType",
            "schema": {
              "generatedName": "sharedRevenueReportReportType",
              "value": {
                "generatedName": "SharedRevenueReportReportType",
                "schema": "shared.RevenueReportType",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportRevenueRecords",
            "key": "revenueRecords",
            "schema": {
              "generatedName": "sharedRevenueReportRevenueRecords",
              "value": {
                "value": {
                  "generatedName": "SharedRevenueReportRevenueRecordsItem",
                  "schema": "shared.RevenueRecord",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedRevenueReportRevenueRecords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedRevenueReportService",
            "key": "service",
            "schema": {
              "generatedName": "sharedRevenueReportService",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedRevenueReportService",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedRevenueReport",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.RevenueReportType": {
        "generatedName": "SharedRevenueReportType",
        "values": [
          {
            "nameOverride": "InvoicedAmount",
            "generatedName": "InvoicedAmount",
            "value": "InvoicedAmount",
            "casing": {}
          },
          {
            "nameOverride": "CollectableAmount",
            "generatedName": "CollectableAmount",
            "value": "CollectableAmount",
            "casing": {}
          },
          {
            "nameOverride": "DisbursedAmount",
            "generatedName": "DisbursedAmount",
            "value": "DisbursedAmount",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.SalesforceCrmCredential": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmCredentialAccessToken",
            "key": "access_token",
            "schema": {
              "generatedName": "sharedSalesforceCrmCredentialAccessToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceCrmCredentialAccessToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmCredentialExp",
            "key": "exp",
            "schema": {
              "generatedName": "sharedSalesforceCrmCredentialExp",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedSalesforceCrmCredentialExp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmCredentialInstanceUrl",
            "key": "instance_url",
            "schema": {
              "generatedName": "sharedSalesforceCrmCredentialInstanceUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceCrmCredentialInstanceUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmCredentialRefreshToken",
            "key": "refresh_token",
            "schema": {
              "generatedName": "sharedSalesforceCrmCredentialRefreshToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceCrmCredentialRefreshToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedSalesforceCrmCredential",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.SalesforceCrmIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmIntegrationCredential",
            "key": "credential",
            "schema": {
              "generatedName": "sharedSalesforceCrmIntegrationCredential",
              "value": {
                "description": "System created",
                "generatedName": "SharedSalesforceCrmIntegrationCredential",
                "schema": "shared.SalesforceCrmCredential",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmIntegrationFilters",
            "key": "filters",
            "schema": {
              "generatedName": "sharedSalesforceCrmIntegrationFilters",
              "value": {
                "value": {
                  "generatedName": "SharedSalesforceCrmIntegrationFiltersItem",
                  "schema": "shared.SalesforceSyncFilter",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedSalesforceCrmIntegrationFilters",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmIntegrationInstanceUrl",
            "key": "instanceUrl",
            "schema": {
              "generatedName": "sharedSalesforceCrmIntegrationInstanceUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceCrmIntegrationInstanceUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmIntegrationIsSandbox",
            "key": "isSandbox",
            "schema": {
              "generatedName": "sharedSalesforceCrmIntegrationIsSandbox",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SharedSalesforceCrmIntegrationIsSandbox",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmIntegrationSecretKey",
            "key": "secretKey",
            "schema": {
              "generatedName": "sharedSalesforceCrmIntegrationSecretKey",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceCrmIntegrationSecretKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceCrmIntegrationSubdomain",
            "key": "subdomain",
            "schema": {
              "generatedName": "sharedSalesforceCrmIntegrationSubdomain",
              "value": {
                "description": "User defined when setting up the integration",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceCrmIntegrationSubdomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedSalesforceCrmIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.SalesforceSyncFilter": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedSalesforceSyncFilterFieldName",
            "key": "fieldName",
            "schema": {
              "generatedName": "sharedSalesforceSyncFilterFieldName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceSyncFilterFieldName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceSyncFilterOperator",
            "key": "operator",
            "schema": {
              "generatedName": "sharedSalesforceSyncFilterOperator",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSalesforceSyncFilterOperator",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSalesforceSyncFilterValue",
            "key": "value",
            "schema": {
              "generatedName": "sharedSalesforceSyncFilterValue",
              "value": {
                "generatedName": "SharedSalesforceSyncFilterValue",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedSalesforceSyncFilter",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.SlackIntegration": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationAccessToken",
            "key": "accessToken",
            "schema": {
              "generatedName": "sharedSlackIntegrationAccessToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSlackIntegrationAccessToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationAppId",
            "key": "appId",
            "schema": {
              "generatedName": "sharedSlackIntegrationAppId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSlackIntegrationAppId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationAuthedUser",
            "key": "authedUser",
            "schema": {
              "generatedName": "sharedSlackIntegrationAuthedUser",
              "value": {
                "generatedName": "SharedSlackIntegrationAuthedUser",
                "schema": "slack.OAuthV2ResponseAuthedUser",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationBotUserId",
            "key": "botUserId",
            "schema": {
              "generatedName": "sharedSlackIntegrationBotUserId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSlackIntegrationBotUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationEnterprise",
            "key": "enterprise",
            "schema": {
              "generatedName": "sharedSlackIntegrationEnterprise",
              "value": {
                "generatedName": "SharedSlackIntegrationEnterprise",
                "schema": "slack.OAuthV2ResponseEnterprise",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationExpiresIn",
            "key": "expiresIn",
            "schema": {
              "generatedName": "sharedSlackIntegrationExpiresIn",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SharedSlackIntegrationExpiresIn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationIncomingWebhook",
            "key": "incomingWebhook",
            "schema": {
              "generatedName": "sharedSlackIntegrationIncomingWebhook",
              "value": {
                "generatedName": "SharedSlackIntegrationIncomingWebhook",
                "schema": "slack.OAuthResponseIncomingWebhook",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationRedirectUrl",
            "key": "redirectUrl",
            "schema": {
              "generatedName": "sharedSlackIntegrationRedirectUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSlackIntegrationRedirectUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationRefreshToken",
            "key": "refreshToken",
            "schema": {
              "generatedName": "sharedSlackIntegrationRefreshToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSlackIntegrationRefreshToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationScope",
            "key": "scope",
            "schema": {
              "generatedName": "sharedSlackIntegrationScope",
              "value": {
                "description": "The scope of the access token. multiple scopes are separated by comma.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSlackIntegrationScope",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationTeam",
            "key": "team",
            "schema": {
              "generatedName": "sharedSlackIntegrationTeam",
              "value": {
                "generatedName": "SharedSlackIntegrationTeam",
                "schema": "slack.OAuthV2ResponseTeam",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedSlackIntegrationTokenType",
            "key": "tokenType",
            "schema": {
              "generatedName": "sharedSlackIntegrationTokenType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedSlackIntegrationTokenType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedSlackIntegration",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.UpdateIntegrationParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedUpdateIntegrationParamsInfo",
            "key": "info",
            "schema": {
              "generatedName": "SharedUpdateIntegrationParamsInfo",
              "schema": "shared.IntegrationInfo",
              "source": {
                "file": "../swagger.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedUpdateIntegrationParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedUpdateIntegrationParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUpdateIntegrationParamsPartner",
            "key": "partner",
            "schema": {
              "generatedName": "SharedUpdateIntegrationParamsPartner",
              "values": [
                {
                  "generatedName": "AWS",
                  "value": "AWS",
                  "casing": {}
                },
                {
                  "generatedName": "AZURE",
                  "value": "AZURE",
                  "casing": {}
                },
                {
                  "generatedName": "GCP",
                  "value": "GCP",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../swagger.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUpdateIntegrationParamsService",
            "key": "service",
            "schema": {
              "value": {
                "value": "MARKETPLACE",
                "type": "string"
              },
              "generatedName": "SharedUpdateIntegrationParamsService",
              "groupName": [],
              "type": "literal"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedUpdateIntegrationParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.UpdateProductParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedUpdateProductParamsFulfillmentUrl",
            "key": "fulfillmentUrl",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedUpdateProductParamsFulfillmentUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUpdateProductParamsId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedUpdateProductParamsId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUpdateProductParamsOrganizationId",
            "key": "organizationID",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SharedUpdateProductParamsOrganizationId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedUpdateProductParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.UsageCount": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedUsageCountCreditCount",
            "key": "creditCount",
            "schema": {
              "generatedName": "sharedUsageCountCreditCount",
              "value": {
                "description": "The count of this dimension usage records that are handled as credit.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedUsageCountCreditCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUsageCountIncludedCount",
            "key": "includedCount",
            "schema": {
              "generatedName": "sharedUsageCountIncludedCount",
              "value": {
                "description": "The count of this dimension usage records that are handled as included in IncludedBaseQuantity",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedUsageCountIncludedCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUsageCountReportedCount",
            "key": "reportedCount",
            "schema": {
              "generatedName": "sharedUsageCountReportedCount",
              "value": {
                "description": "The count of this dimension usage records that are reported to cloud vendors.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedUsageCountReportedCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedUsageCount",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.UsageReport": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedUsageReportEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedUsageReportEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedUsageReportEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUsageReportOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedUsageReportOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedUsageReportOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUsageReportReportDate",
            "key": "reportDate",
            "schema": {
              "generatedName": "sharedUsageReportReportDate",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedUsageReportReportDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedUsageReportUsageRecords",
            "key": "usageRecords",
            "schema": {
              "generatedName": "sharedUsageReportUsageRecords",
              "value": {
                "value": {
                  "generatedName": "SharedUsageReportUsageRecordsItem",
                  "schema": "shared.EntitlementUsageRecord",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SharedUsageReportUsageRecords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedUsageReport",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.ValueType": {
        "generatedName": "SharedValueType",
        "values": [
          {
            "nameOverride": "UNSPECIFIED",
            "generatedName": "VALUE_TYPE_UNSPECIFIED",
            "value": "VALUE_TYPE_UNSPECIFIED",
            "casing": {}
          },
          {
            "nameOverride": "BOOL",
            "generatedName": "BOOL",
            "value": "BOOL",
            "casing": {}
          },
          {
            "nameOverride": "INT64",
            "generatedName": "INT64",
            "value": "INT64",
            "casing": {}
          },
          {
            "nameOverride": "DOUBLE",
            "generatedName": "DOUBLE",
            "value": "DOUBLE",
            "casing": {}
          },
          {
            "nameOverride": "STRING",
            "generatedName": "STRING",
            "value": "STRING",
            "casing": {}
          },
          {
            "nameOverride": "DISTRIBUTION",
            "generatedName": "DISTRIBUTION",
            "value": "DISTRIBUTION",
            "casing": {}
          },
          {
            "nameOverride": "MONEY",
            "generatedName": "MONEY",
            "value": "MONEY",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "shared.WorkloadEntitlement": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementCreationTime",
            "key": "creationTime",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementCreationTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadEntitlementCreationTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementEndTime",
            "key": "endTime",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementEndTime",
              "value": {
                "description": "nullable",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadEntitlementEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementEntitlementTermId",
            "key": "entitlementTermID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementEntitlementTermId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementEntitlementTermId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementExternalBuyerId",
            "key": "externalBuyerID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementExternalBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementExternalBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementExternalId",
            "key": "externalID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementExternalId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementExternalProductId",
            "key": "externalProductID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementExternalProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementExternalProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementId",
            "key": "id",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementInfo",
              "value": {
                "generatedName": "SharedWorkloadEntitlementInfo",
                "schema": "shared.EntitlementInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementLastUpdateTime",
            "key": "lastUpdateTime",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementLastUpdateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadEntitlementLastUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementName",
            "key": "name",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementOfferId",
            "key": "offerID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementPartner",
              "value": {
                "generatedName": "SharedWorkloadEntitlementPartner",
                "values": [
                  {
                    "generatedName": "AWS",
                    "value": "AWS",
                    "casing": {}
                  },
                  {
                    "generatedName": "AZURE",
                    "value": "AZURE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GCP",
                    "value": "GCP",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementProductId",
            "key": "productID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementService",
            "key": "service",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementService",
              "value": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementService",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementStartTime",
            "key": "startTime",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementStartTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadEntitlementStartTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementStatus",
            "key": "status",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementStatus",
              "value": {
                "generatedName": "SharedWorkloadEntitlementStatus",
                "values": [
                  {
                    "generatedName": "ACTIVE",
                    "value": "ACTIVE",
                    "casing": {}
                  },
                  {
                    "generatedName": "CANCELLED",
                    "value": "CANCELLED",
                    "casing": {}
                  },
                  {
                    "generatedName": "SUSPENDED",
                    "value": "SUSPENDED",
                    "casing": {}
                  },
                  {
                    "generatedName": "PENDING_START",
                    "value": "PENDING_START",
                    "casing": {}
                  },
                  {
                    "generatedName": "UNKNOWN",
                    "value": "UNKNOWN",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementType",
            "key": "type",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedWorkloadEntitlement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.WorkloadEntitlementTerm": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermBuyerId",
            "key": "buyerID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermBuyerId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermBuyerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermCommitAmount",
            "key": "commitAmount",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermCommitAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedWorkloadEntitlementTermCommitAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermCreditAmount",
            "key": "creditAmount",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermCreditAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedWorkloadEntitlementTermCreditAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermEndTime",
            "key": "endTime",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermEndTime",
              "value": {
                "description": "nullable",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadEntitlementTermEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermEntitlementId",
            "key": "entitlementID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermEntitlementInfo",
            "key": "entitlementInfo",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermEntitlementInfo",
              "value": {
                "generatedName": "SharedWorkloadEntitlementTermEntitlementInfo",
                "schema": "shared.EntitlementInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermExternalEntitlementId",
            "key": "externalEntitlementID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermExternalEntitlementId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermExternalEntitlementId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermId",
            "key": "id",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermInfo",
              "value": {
                "generatedName": "SharedWorkloadEntitlementTermInfo",
                "schema": "shared.EntitlementTermInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermOfferId",
            "key": "offerID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermPartner",
              "value": {
                "generatedName": "SharedWorkloadEntitlementTermPartner",
                "values": [
                  {
                    "generatedName": "AWS",
                    "value": "AWS",
                    "casing": {}
                  },
                  {
                    "generatedName": "AZURE",
                    "value": "AZURE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GCP",
                    "value": "GCP",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermProductId",
            "key": "productID",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermService",
            "key": "service",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermService",
              "value": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "generatedName": "SharedWorkloadEntitlementTermService",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermStartTime",
            "key": "startTime",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermStartTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadEntitlementTermStartTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermUsedCommitAmount",
            "key": "usedCommitAmount",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermUsedCommitAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedWorkloadEntitlementTermUsedCommitAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadEntitlementTermUsedCreditAmount",
            "key": "usedCreditAmount",
            "schema": {
              "generatedName": "sharedWorkloadEntitlementTermUsedCreditAmount",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "SharedWorkloadEntitlementTermUsedCreditAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedWorkloadEntitlementTerm",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.WorkloadOffer": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferCreatedBy",
            "key": "createdBy",
            "schema": {
              "generatedName": "sharedWorkloadOfferCreatedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferCreatedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferCreationTime",
            "key": "creationTime",
            "schema": {
              "generatedName": "sharedWorkloadOfferCreationTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadOfferCreationTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferEndTime",
            "key": "endTime",
            "schema": {
              "generatedName": "sharedWorkloadOfferEndTime",
              "value": {
                "description": "nullable",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadOfferEndTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferExpireTime",
            "key": "expireTime",
            "schema": {
              "generatedName": "sharedWorkloadOfferExpireTime",
              "value": {
                "description": "nullable",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadOfferExpireTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferExternalId",
            "key": "externalID",
            "schema": {
              "generatedName": "sharedWorkloadOfferExternalId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferId",
            "key": "id",
            "schema": {
              "generatedName": "sharedWorkloadOfferId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedWorkloadOfferInfo",
              "value": {
                "generatedName": "SharedWorkloadOfferInfo",
                "schema": "shared.OfferInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferLastUpdateTime",
            "key": "lastUpdateTime",
            "schema": {
              "generatedName": "sharedWorkloadOfferLastUpdateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadOfferLastUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferLastUpdatedBy",
            "key": "lastUpdatedBy",
            "schema": {
              "generatedName": "sharedWorkloadOfferLastUpdatedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferLastUpdatedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferMetaInfo",
            "key": "metaInfo",
            "schema": {
              "generatedName": "sharedWorkloadOfferMetaInfo",
              "value": {
                "generatedName": "SharedWorkloadOfferMetaInfo",
                "schema": "shared.OfferMetaInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferName",
            "key": "name",
            "schema": {
              "generatedName": "sharedWorkloadOfferName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferOfferType",
            "key": "offerType",
            "schema": {
              "generatedName": "sharedWorkloadOfferOfferType",
              "value": {
                "generatedName": "SharedWorkloadOfferOfferType",
                "values": [
                  {
                    "generatedName": "DEFAULT",
                    "value": "DEFAULT",
                    "casing": {}
                  },
                  {
                    "generatedName": "CONTRACT",
                    "value": "CONTRACT",
                    "casing": {}
                  },
                  {
                    "generatedName": "SUBSCRIPTION",
                    "value": "SUBSCRIPTION",
                    "casing": {}
                  },
                  {
                    "generatedName": "FREE_TRIAL",
                    "value": "FREE_TRIAL",
                    "casing": {}
                  },
                  {
                    "generatedName": "FLAT_RATE",
                    "value": "FLAT_RATE",
                    "casing": {}
                  },
                  {
                    "generatedName": "PER_USER",
                    "value": "PER_USER",
                    "casing": {}
                  },
                  {
                    "generatedName": "PRIVATE",
                    "value": "PRIVATE",
                    "casing": {}
                  },
                  {
                    "generatedName": "UNKNOWN",
                    "value": "UNKNOWN",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedWorkloadOfferOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedWorkloadOfferPartner",
              "value": {
                "generatedName": "SharedWorkloadOfferPartner",
                "values": [
                  {
                    "generatedName": "AWS",
                    "value": "AWS",
                    "casing": {}
                  },
                  {
                    "generatedName": "AZURE",
                    "value": "AZURE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GCP",
                    "value": "GCP",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferProductId",
            "key": "productID",
            "schema": {
              "generatedName": "sharedWorkloadOfferProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferService",
            "key": "service",
            "schema": {
              "generatedName": "sharedWorkloadOfferService",
              "value": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "generatedName": "SharedWorkloadOfferService",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadOfferStatus",
            "key": "status",
            "schema": {
              "generatedName": "sharedWorkloadOfferStatus",
              "value": {
                "generatedName": "SharedWorkloadOfferStatus",
                "values": [
                  {
                    "generatedName": "ACCEPTED",
                    "value": "ACCEPTED",
                    "casing": {}
                  },
                  {
                    "generatedName": "PENDING_CREATE",
                    "value": "PENDING_CREATE",
                    "casing": {}
                  },
                  {
                    "generatedName": "CREATE_FAILED",
                    "value": "CREATE_FAILED",
                    "casing": {}
                  },
                  {
                    "generatedName": "CREATE_SUCCESS",
                    "value": "CREATE_SUCCESS",
                    "casing": {}
                  },
                  {
                    "generatedName": "DRAFT",
                    "value": "DRAFT",
                    "casing": {}
                  },
                  {
                    "generatedName": "EXPIRED",
                    "value": "EXPIRED",
                    "casing": {}
                  },
                  {
                    "generatedName": "PENDING_ACCEPTANCE",
                    "value": "PENDING_ACCEPTANCE",
                    "casing": {}
                  },
                  {
                    "generatedName": "PENDING_CANCEL",
                    "value": "PENDING_CANCEL",
                    "casing": {}
                  },
                  {
                    "generatedName": "CANCEL_FAILED",
                    "value": "CANCEL_FAILED",
                    "casing": {}
                  },
                  {
                    "generatedName": "CANCEL_SUCCESS",
                    "value": "CANCEL_SUCCESS",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedWorkloadOffer",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "shared.WorkloadProduct": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductCreatedBy",
            "key": "createdBy",
            "schema": {
              "generatedName": "sharedWorkloadProductCreatedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductCreatedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductCreationTime",
            "key": "creationTime",
            "schema": {
              "generatedName": "sharedWorkloadProductCreationTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadProductCreationTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductExternalId",
            "key": "externalID",
            "schema": {
              "generatedName": "sharedWorkloadProductExternalId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductExternalId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductFulfillmentUrl",
            "key": "fulfillmentUrl",
            "schema": {
              "generatedName": "sharedWorkloadProductFulfillmentUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductFulfillmentUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductId",
            "key": "id",
            "schema": {
              "generatedName": "sharedWorkloadProductId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductInfo",
            "key": "info",
            "schema": {
              "generatedName": "sharedWorkloadProductInfo",
              "value": {
                "generatedName": "SharedWorkloadProductInfo",
                "schema": "shared.ProductInfo",
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductLastUpdateTime",
            "key": "lastUpdateTime",
            "schema": {
              "generatedName": "sharedWorkloadProductLastUpdateTime",
              "value": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "SharedWorkloadProductLastUpdateTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductLastUpdatedBy",
            "key": "lastUpdatedBy",
            "schema": {
              "generatedName": "sharedWorkloadProductLastUpdatedBy",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductLastUpdatedBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductName",
            "key": "name",
            "schema": {
              "generatedName": "sharedWorkloadProductName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductOrganizationId",
            "key": "organizationID",
            "schema": {
              "generatedName": "sharedWorkloadProductOrganizationId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductOrganizationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductPartner",
            "key": "partner",
            "schema": {
              "generatedName": "sharedWorkloadProductPartner",
              "value": {
                "generatedName": "SharedWorkloadProductPartner",
                "values": [
                  {
                    "generatedName": "AWS",
                    "value": "AWS",
                    "casing": {}
                  },
                  {
                    "generatedName": "AZURE",
                    "value": "AZURE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GCP",
                    "value": "GCP",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductProductType",
            "key": "productType",
            "schema": {
              "generatedName": "sharedWorkloadProductProductType",
              "value": {
                "generatedName": "SharedWorkloadProductProductType",
                "values": [
                  {
                    "generatedName": "UNKNOWN",
                    "value": "UNKNOWN",
                    "casing": {}
                  },
                  {
                    "generatedName": "SUBSCRIPTION",
                    "value": "SUBSCRIPTION",
                    "casing": {}
                  },
                  {
                    "generatedName": "CONTRACT",
                    "value": "CONTRACT",
                    "casing": {}
                  },
                  {
                    "generatedName": "FLAT_RATE",
                    "value": "FLAT_RATE",
                    "casing": {}
                  },
                  {
                    "generatedName": "PER_USER",
                    "value": "PER_USER",
                    "casing": {}
                  },
                  {
                    "generatedName": "USAGE_BASED",
                    "value": "USAGE_BASED",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductService",
            "key": "service",
            "schema": {
              "generatedName": "sharedWorkloadProductService",
              "value": {
                "value": {
                  "value": "MARKETPLACE",
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductService",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sharedWorkloadProductStatus",
            "key": "status",
            "schema": {
              "generatedName": "sharedWorkloadProductStatus",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SharedWorkloadProductStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SharedWorkloadProduct",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "slack.OAuthResponseIncomingWebhook": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "slackOAuthResponseIncomingWebhookChannel",
            "key": "channel",
            "schema": {
              "generatedName": "slackOAuthResponseIncomingWebhookChannel",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthResponseIncomingWebhookChannel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthResponseIncomingWebhookChannelId",
            "key": "channel_id",
            "schema": {
              "generatedName": "slackOAuthResponseIncomingWebhookChannelId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthResponseIncomingWebhookChannelId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthResponseIncomingWebhookConfigurationUrl",
            "key": "configuration_url",
            "schema": {
              "generatedName": "slackOAuthResponseIncomingWebhookConfigurationUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthResponseIncomingWebhookConfigurationUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthResponseIncomingWebhookUrl",
            "key": "url",
            "schema": {
              "generatedName": "slackOAuthResponseIncomingWebhookUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthResponseIncomingWebhookUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SlackOAuthResponseIncomingWebhook",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "slack.OAuthV2ResponseAuthedUser": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseAuthedUserAccessToken",
            "key": "access_token",
            "schema": {
              "generatedName": "slackOAuthV2ResponseAuthedUserAccessToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseAuthedUserAccessToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseAuthedUserExpiresIn",
            "key": "expires_in",
            "schema": {
              "generatedName": "slackOAuthV2ResponseAuthedUserExpiresIn",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "SlackOAuthV2ResponseAuthedUserExpiresIn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseAuthedUserId",
            "key": "id",
            "schema": {
              "generatedName": "slackOAuthV2ResponseAuthedUserId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseAuthedUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseAuthedUserRefreshToken",
            "key": "refresh_token",
            "schema": {
              "generatedName": "slackOAuthV2ResponseAuthedUserRefreshToken",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseAuthedUserRefreshToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseAuthedUserScope",
            "key": "scope",
            "schema": {
              "generatedName": "slackOAuthV2ResponseAuthedUserScope",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseAuthedUserScope",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseAuthedUserTokenType",
            "key": "token_type",
            "schema": {
              "generatedName": "slackOAuthV2ResponseAuthedUserTokenType",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseAuthedUserTokenType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SlackOAuthV2ResponseAuthedUser",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "slack.OAuthV2ResponseEnterprise": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseEnterpriseId",
            "key": "id",
            "schema": {
              "generatedName": "slackOAuthV2ResponseEnterpriseId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseEnterpriseId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseEnterpriseName",
            "key": "name",
            "schema": {
              "generatedName": "slackOAuthV2ResponseEnterpriseName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseEnterpriseName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SlackOAuthV2ResponseEnterprise",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "slack.OAuthV2ResponseTeam": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseTeamId",
            "key": "id",
            "schema": {
              "generatedName": "slackOAuthV2ResponseTeamId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseTeamId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slackOAuthV2ResponseTeamName",
            "key": "name",
            "schema": {
              "generatedName": "slackOAuthV2ResponseTeamName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SlackOAuthV2ResponseTeamName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SlackOAuthV2ResponseTeam",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "sql.NullTime": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sqlNullTimeTime",
            "key": "time",
            "schema": {
              "generatedName": "sqlNullTimeTime",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SqlNullTimeTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sqlNullTimeValid",
            "key": "valid",
            "schema": {
              "generatedName": "sqlNullTimeValid",
              "value": {
                "description": "Valid is true if Time is not NULL",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SqlNullTimeValid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SqlNullTime",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "types.Entitlement": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "typesEntitlementCustomerIdentifier",
            "key": "customerIdentifier",
            "schema": {
              "generatedName": "typesEntitlementCustomerIdentifier",
              "value": {
                "description": "The customer identifier is a handle to each unique customer in an application.\nCustomer identifiers are obtained through the ResolveCustomer operation in AWS\nMarketplace Metering Service.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesEntitlementCustomerIdentifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesEntitlementDimension",
            "key": "dimension",
            "schema": {
              "generatedName": "typesEntitlementDimension",
              "value": {
                "description": "The dimension for which the given entitlement applies. Dimensions represent\ncategories of capacity in a product and are specified when the product is listed\nin AWS Marketplace.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesEntitlementDimension",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesEntitlementExpirationDate",
            "key": "expirationDate",
            "schema": {
              "generatedName": "typesEntitlementExpirationDate",
              "value": {
                "description": "The expiration date represents the minimum date through which this entitlement\nis expected to remain valid. For contractual products listed on AWS Marketplace,\nthe expiration date is the date at which the customer will renew or cancel their\ncontract. Customers who are opting to renew their contract will still have\nentitlements with an expiration date.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesEntitlementExpirationDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesEntitlementProductCode",
            "key": "productCode",
            "schema": {
              "generatedName": "typesEntitlementProductCode",
              "value": {
                "description": "The product code for which the given entitlement applies. Product codes are\nprovided by AWS Marketplace when the product listing is created.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesEntitlementProductCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesEntitlementValue",
            "key": "value",
            "schema": {
              "generatedName": "typesEntitlementValue",
              "value": {
                "generatedName": "TypesEntitlementValue",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TypesEntitlement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "types.UsageAllocation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "typesUsageAllocationAllocatedUsageQuantity",
            "key": "allocatedUsageQuantity",
            "schema": {
              "generatedName": "typesUsageAllocationAllocatedUsageQuantity",
              "value": {
                "description": "The total quantity allocated to this bucket of usage.\n\nThis member is required.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "TypesUsageAllocationAllocatedUsageQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesUsageAllocationTags",
            "key": "tags",
            "schema": {
              "generatedName": "typesUsageAllocationTags",
              "value": {
                "description": "The set of tags that define the bucket of usage. For the bucket of items with no\ntags, this parameter can be left out.",
                "value": {
                  "generatedName": "TypesUsageAllocationTagsItem",
                  "schema": "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TypesUsageAllocationTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TypesUsageAllocation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "types.UsageRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "typesUsageRecordCustomerIdentifier",
            "key": "customerIdentifier",
            "schema": {
              "generatedName": "typesUsageRecordCustomerIdentifier",
              "value": {
                "description": "The CustomerIdentifier is obtained through the ResolveCustomer operation and\nrepresents an individual buyer in your application.\n\nThis member is required.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesUsageRecordCustomerIdentifier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesUsageRecordDimension",
            "key": "dimension",
            "schema": {
              "generatedName": "typesUsageRecordDimension",
              "value": {
                "description": "During the process of registering a product on AWS Marketplace, dimensions are\nspecified. These represent different units of value in your application.\n\nThis member is required.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesUsageRecordDimension",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesUsageRecordQuantity",
            "key": "quantity",
            "schema": {
              "generatedName": "typesUsageRecordQuantity",
              "value": {
                "description": "The quantity of usage consumed by the customer for the given dimension and time.\nDefaults to 0 if not specified.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "TypesUsageRecordQuantity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesUsageRecordTimestamp",
            "key": "timestamp",
            "schema": {
              "generatedName": "typesUsageRecordTimestamp",
              "value": {
                "description": "Timestamp, in UTC, for which the usage is being reported. Your application can\nmeter usage for up to one hour in the past. Make sure the timestamp value is not\nbefore the start of the software usage.\n\nThis member is required.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesUsageRecordTimestamp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesUsageRecordUsageAllocations",
            "key": "usageAllocations",
            "schema": {
              "generatedName": "typesUsageRecordUsageAllocations",
              "value": {
                "description": "The set of UsageAllocations to submit. The sum of all UsageAllocation quantities\nmust equal the Quantity of the UsageRecord.",
                "value": {
                  "generatedName": "TypesUsageRecordUsageAllocationsItem",
                  "schema": "types.UsageAllocation",
                  "source": {
                    "file": "../swagger.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TypesUsageRecordUsageAllocations",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TypesUsageRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "types.UsageRecordResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "typesUsageRecordResultMeteringRecordId",
            "key": "meteringRecordId",
            "schema": {
              "generatedName": "typesUsageRecordResultMeteringRecordId",
              "value": {
                "description": "The MeteringRecordId is a unique identifier for this metering event.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TypesUsageRecordResultMeteringRecordId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesUsageRecordResultStatus",
            "key": "status",
            "schema": {
              "generatedName": "typesUsageRecordResultStatus",
              "value": {
                "description": "The UsageRecordResultStatus indicates the status of an individual UsageRecord\nprocessed by BatchMeterUsage.\n\n* Success- The UsageRecord was accepted and\nhonored by BatchMeterUsage.\n\n* CustomerNotSubscribed- The CustomerIdentifier\nspecified is not able to use your product. The UsageRecord was not honored.\nThere are three causes for this result:\n\n* The customer identifier is\ninvalid.\n\n* The customer identifier provided in the metering record does not\nhave an active agreement or subscription with this product. Future UsageRecords\nfor this customer will fail until the customer subscribes to your product.\n\n*\nThe customer's AWS account was suspended.\n\n* DuplicateRecord- Indicates that the\nUsageRecord was invalid and not honored. A previously metered UsageRecord had\nthe same customer, dimension, and time, but a different quantity.",
                "generatedName": "TypesUsageRecordResultStatus",
                "schema": "types.UsageRecordResultStatus",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "typesUsageRecordResultUsageRecord",
            "key": "usageRecord",
            "schema": {
              "generatedName": "typesUsageRecordResultUsageRecord",
              "value": {
                "description": "The UsageRecord that was part of the BatchMeterUsage request.",
                "generatedName": "TypesUsageRecordResultUsageRecord",
                "schema": "types.UsageRecord",
                "groupName": [],
                "source": {
                  "file": "../swagger.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TypesUsageRecordResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "types.UsageRecordResultStatus": {
        "generatedName": "TypesUsageRecordResultStatus",
        "values": [
          {
            "nameOverride": "Success",
            "generatedName": "Success",
            "value": "Success",
            "casing": {}
          },
          {
            "nameOverride": "CustomerNotSubscribed",
            "generatedName": "CustomerNotSubscribed",
            "value": "CustomerNotSubscribed",
            "casing": {}
          },
          {
            "nameOverride": "DuplicateRecord",
            "generatedName": "DuplicateRecord",
            "value": "DuplicateRecord",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../swagger.json",
          "type": "openapi"
        },
        "type": "enum"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "BearerTokenAuth": {
      "headerName": "Authorization",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}