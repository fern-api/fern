{
  "title": "Ntropy Transaction API",
  "servers": [
    {
      "url": "https://api.ntropy.com",
      "description": "Production server (uses live data)."
    }
  ],
  "tags": {
    "tagsById": {
      "Enrichment": {
        "id": "Enrichment",
        "description": "\nThe Enrichment API allows you to submit multiple transactions for enrichment in a single request. It supports both \nsynchronous and asynchronous submission of transactions.\n\nTransactions enriched by these endpoints are accessible via the [Transactions API](#tag/Transactions) \nand only accessible by the API key that has submitted them. Each transaction is identified by an id, if you submit two\ntransactions the same id, the most recent will replace the previous one. Transactions also accept an account holder.\nNot supplying one will disable both categorization and recurrence.\n\nFor more information on account holder attributes, please refer to \n[this](../../../account-holders/#optional-account-holder-fields) guide.\n\nComplete guide: [Transaction Enrichment](../../../enrichment/introduction).\n"
      },
      "Transactions": {
        "id": "Transactions",
        "description": "\nThe Transaction API allows you to manage, retrieve and search through enriched transactions. A transaction contains\nboth the enrichment fields and the original input fields. They are made available after being \n[enriched](#tag/Enrichment).\n"
      },
      "Account Holders": {
        "id": "Account Holders",
        "description": "\nThe Account Holder API allows you to retrieve, create and modify account holders. An account holder represents an\nentity that holds an account associated with transactions. An account holder can either be a business or an individual\nperson - consumer.\n\nThe fields chosen for an account holder are used by our enrichment process and can dramatically improve the accuracy\nof the results. \n\nComplete guide: [Account Holders](../../../account-holders).\n"
      },
      "Recurrence": {
        "id": "Recurrence",
        "description": "\nThe Recurrence API allows you to identify and categorize recurring patterns found in the transactions of an \n[account holder](#tag/Account-Holders), such as periodic payments or subscriptions and group them \ninto recurrence groups. Each recurrence group contains detailed information about the pattern, \nsuch as periodicity, amount and counterparty.\n\nTransactions can be added to an account holder via the [Enrichment API](#tag/Enrichment). \nIt is crucial that transactions are submitted with the [correct](../../../account-holders) \naccount holder information as the recurrence calculation relies heavily on it.\n\nComplete guide: [Recurrence](../../../enrichment/recurrence).\n"
      },
      "Bank statements": {
        "id": "Bank statements",
        "description": "\nThe Bank Statements API allows you to manage and extract information from bank statements. We support extraction of\naccount holder information, account information and transaction records. Files should be uploaded in PDF format.\n\nDuring the extraction process, the bank statements undergo several status changes:\n|  Status  |                              Description                               |\n|----------|------------------------------------------------------------------------|\n|processing|The upload was successful. Extraction is in progress.                   |\n|completed |The extraction was successful. Results are available.                   |\n|error     |An error occurred during extraction. Check `error` for more information.|\n\n\nA list of error codes for the `error` status can be found below:\n|         Code         |                Description                |\n|----------------------|-------------------------------------------|\n|invalid_bank_statement|Failed to process file as a bank statement.|\n|internal_error        |Internal error. Please contact support.    |\n\n\nComplete guide: [Bank Statements](../../../bank-statements).\n"
      },
      "Webhooks": {
        "id": "Webhooks",
        "description": "\nThe Webhooks API allows you to receive notifications when certain events occur,\nsuch as when a batch or bank statement finishes processing. \n\nWhen an event occurs, Ntropy will make a POST request to the `url` of the\nwebhook. If you specified a `token` when creating the webhook, this string will\nbe included in the `X-Ntropy-Token` header. The webhook call has a timeout limit of 10 \nseconds, so any processing of the event \n"
      },
      "Personalization": {
        "id": "Personalization",
        "description": "\nThe Personalization API allows you to customize the output of enrichment by\nuploading a set of rules. For more information, see our documentation on\n[Personalization](None).\n"
      },
      "Reports": {
        "id": "Reports",
        "description": "\nThe Reports API allows you to flag transactions with incorrect fields. You can also track the progress of each\nreport either through the API or using [webhooks](#tag/Webhooks).\n"
      }
    },
    "orderedTagIds": [
      "Enrichment",
      "Transactions",
      "Account Holders",
      "Recurrence",
      "Bank statements",
      "Webhooks",
      "Personalization",
      "Reports"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "Retrieve a transaction",
      "audiences": [],
      "operationId": "get_transaction_v3_transactions__id__get",
      "tags": [
        "Transactions"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetTransactionV3TransactionsIdGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetTransactionV3TransactionsIdGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetTransactionV3TransactionsIdGetResponse",
          "schema": "Transaction",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Transaction with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v3/transactions/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "xbx8YP14g565Xk",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "SQ* STARBUCKS NW 43RD",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "date": {
                  "value": {
                    "value": "2024-03-30",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "amount": {
                  "value": {
                    "value": 10,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "entry_type": {
                  "value": "outgoing",
                  "type": "enum"
                },
                "currency": {
                  "value": "USD",
                  "type": "enum"
                },
                "entities": {
                  "properties": {
                    "counterparty": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Starbucks",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "website": {
                          "value": {
                            "value": "starbucks.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "logo": {
                          "value": {
                            "value": "https://logos.ntropy.com/starbucks.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mccs": {
                          "value": [
                            {
                              "value": {
                                "value": 5814,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "type": {
                          "value": "organization",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "intermediaries": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "Square",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "website": {
                              "value": {
                                "value": "squareup.com",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "logo": {
                              "value": {
                                "value": "https://logos.ntropy.com/squareup.com",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "mccs": {
                              "value": [
                                {
                                  "value": {
                                    "value": 1,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "type": {
                              "value": "payment_processor",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "categories": {
                  "properties": {
                    "general": {
                      "value": {
                        "value": "outgoing - coffee shops",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "accounting": {
                      "value": "operational expenses",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "location": {
                  "properties": {
                    "raw_address": {
                      "value": {
                        "value": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "structured": {
                      "properties": {
                        "street": {
                          "value": {
                            "value": "Nw 43rd Street 5480",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "city": {
                          "value": {
                            "value": "Gainesville",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "Florida",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "postcode": {
                          "value": {
                            "value": "32653",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country_code": {
                          "value": {
                            "value": "US",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country": {
                          "value": {
                            "value": "United States",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "latitude": {
                          "value": {
                            "value": 29.704558,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "longitude": {
                          "value": {
                            "value": -82.389277,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "google_maps_url": {
                          "value": {
                            "value": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "apple_maps_url": {
                          "value": {
                            "value": "https://maps.apple.com/?q=29.704558,-82.389277",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "store_number": {
                          "value": {
                            "value": "store_number",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "error": {
                  "properties": {
                    "code": {
                      "value": "account_holder_not_found",
                      "type": "enum"
                    },
                    "message": {
                      "value": {
                        "value": "message",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "created_at": {
                  "value": {
                    "value": "2024-03-30T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "account_holder_id": {
                  "value": {
                    "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "recurrence": {
                  "properties": {
                    "type": {
                      "value": "recurring",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/transactions/xbx8YP14g565Xk\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\ntx = sdk.transactions.get(\"xbx8YP14g565Xk\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deletes a transaction",
      "audiences": [],
      "operationId": "delete_transaction_v3_transactions__id__delete",
      "tags": [
        "Transactions"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTransactionV3TransactionsIdDeleteRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteTransactionV3TransactionsIdDeleteRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Transaction with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deleting a transaction will also delete it from our systems. This operation is permanent.",
      "authed": true,
      "method": "DELETE",
      "path": "/v3/transactions/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"DELETE\" \\\n    \"https://api.ntropy.com/v3/transactions/xbx8YP14g565Xk\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\ntx = sdk.transactions.delete(\"xbx8YP14g565Xk\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List all transactions",
      "audiences": [],
      "operationId": "list_transactions_v3_transactions_get",
      "tags": [
        "Transactions"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Only return transactions older or equal than this date",
          "name": "created_after",
          "schema": {
            "generatedName": "ListTransactionsV3TransactionsGetRequestCreatedAfter",
            "title": "Created After",
            "description": "Only return transactions older or equal than this date",
            "value": {
              "description": "Only return transactions older or equal than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListTransactionsV3TransactionsGetRequestCreatedAfter",
              "title": "Created After",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Only return transactions newer than this date",
          "name": "created_before",
          "schema": {
            "generatedName": "ListTransactionsV3TransactionsGetRequestCreatedBefore",
            "title": "Created Before",
            "description": "Only return transactions newer than this date",
            "value": {
              "description": "Only return transactions newer than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ListTransactionsV3TransactionsGetRequestCreatedBefore",
              "title": "Created Before",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Starting point for the set of transactions",
          "name": "cursor",
          "schema": {
            "generatedName": "ListTransactionsV3TransactionsGetRequestCursor",
            "nameOverride": "Cursor",
            "title": "Cursor",
            "description": "Starting point for the set of transactions",
            "value": {
              "description": "Starting point for the set of transactions",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListTransactionsV3TransactionsGetRequestCursor",
              "nameOverride": "Cursor",
              "title": "Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The limit of transactions to be returned",
          "name": "limit",
          "schema": {
            "generatedName": "ListTransactionsV3TransactionsGetRequestLimit",
            "nameOverride": "Limit",
            "title": "Limit",
            "description": "The limit of transactions to be returned",
            "value": {
              "description": "The limit of transactions to be returned",
              "schema": {
                "default": 25,
                "minimum": 1,
                "maximum": 500,
                "type": "int"
              },
              "generatedName": "ListTransactionsV3TransactionsGetRequestLimit",
              "nameOverride": "Limit",
              "title": "Limit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If specified, only return the transactions of this account holder",
          "name": "account_holder_id",
          "schema": {
            "generatedName": "ListTransactionsV3TransactionsGetRequestAccountHolderId",
            "title": "Account Holder Id",
            "description": "If specified, only return the transactions of this account holder",
            "value": {
              "description": "If specified, only return the transactions of this account holder",
              "schema": {
                "type": "string"
              },
              "generatedName": "ListTransactionsV3TransactionsGetRequestAccountHolderId",
              "title": "Account Holder Id",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ListTransactionsV3TransactionsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "ListTransactionsV3TransactionsGetResponse",
          "schema": "PagedResponse_Transaction",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Return a list of enriched transactions starting with the most recent one.",
      "authed": true,
      "method": "GET",
      "path": "/v3/transactions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "XjdHaksD",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "data": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "xbx8YP14g565Xk",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "SQ* STARBUCKS NW 43RD",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "date": {
                          "value": {
                            "value": "2024-03-30",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": 10,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "entry_type": {
                          "value": "outgoing",
                          "type": "enum"
                        },
                        "currency": {
                          "value": "USD",
                          "type": "enum"
                        },
                        "entities": {
                          "properties": {
                            "counterparty": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "Starbucks",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "website": {
                                  "value": {
                                    "value": "starbucks.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "logo": {
                                  "value": {
                                    "value": "https://logos.ntropy.com/starbucks.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "mccs": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": 5814,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "type": {
                                  "value": "organization",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            },
                            "intermediaries": {
                              "value": [
                                {
                                  "properties": {
                                    "id": {
                                      "value": {
                                        "value": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "name": {
                                      "value": {
                                        "value": "Square",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "website": {
                                      "value": {
                                        "value": "squareup.com",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "logo": {
                                      "value": {
                                        "value": "https://logos.ntropy.com/squareup.com",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "mccs": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": 1,
                                            "type": "int"
                                          },
                                          "type": "primitive"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "type": {
                                      "value": "payment_processor",
                                      "type": "enum"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "categories": {
                          "properties": {
                            "general": {
                              "value": {
                                "value": "outgoing - coffee shops",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "location": {
                          "properties": {
                            "raw_address": {
                              "value": {
                                "value": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "structured": {
                              "properties": {
                                "street": {
                                  "value": {
                                    "value": "Nw 43rd Street 5480",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "city": {
                                  "value": {
                                    "value": "Gainesville",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "state": {
                                  "value": {
                                    "value": "Florida",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "postcode": {
                                  "value": {
                                    "value": "32653",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "country_code": {
                                  "value": {
                                    "value": "US",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "country": {
                                  "value": {
                                    "value": "United States",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "latitude": {
                                  "value": {
                                    "value": 29.704558,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "longitude": {
                                  "value": {
                                    "value": -82.389277,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "google_maps_url": {
                                  "value": {
                                    "value": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "apple_maps_url": {
                                  "value": {
                                    "value": "https://maps.apple.com/?q=29.704558,-82.389277",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "error": {
                          "properties": {
                            "code": {
                              "value": "account_holder_not_found",
                              "type": "enum"
                            },
                            "message": {
                              "value": {
                                "value": "message",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-03-30T00:00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "account_holder_id": {
                          "value": {
                            "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "recurrence": {
                          "properties": {
                            "type": {
                              "value": "recurring",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/transactions\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nfor tx in sdk.transactions.list().auto_paginate():\n    ... ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Synchronously enrich transactions",
      "audiences": [],
      "operationId": "post_transactions_v3_transactions_post",
      "tags": [
        "Transactions"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostTransactionsV3TransactionsPostRequest",
      "request": {
        "schema": {
          "generatedName": "PostTransactionsV3TransactionsPostRequest",
          "schema": "SyncEnrichmentInput",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Enriched transactions.",
        "schema": {
          "generatedName": "PostTransactionsV3TransactionsPostResponse",
          "schema": "SyncEnrichmentOutput",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Enriches a list of transactions in synchronous fashion. The enriched transactions returned in\nthe order that they were submitted. Webhook events are not triggered for this operation. \n\nThis endpoint supports up to 1000 transactions. \n\nIf you want more throughput and live updates refer to the \n[async enrichment endpoint](../batches/post-batch).",
      "authed": true,
      "method": "POST",
      "path": "/v3/transactions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "transactions": {
                "value": [
                  {
                    "properties": {
                      "id": {
                        "value": {
                          "value": "xbx8YP14g565Xk",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "description": {
                        "value": {
                          "value": "SQ* STARBUCKS NW 43RD",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "date": {
                        "value": {
                          "value": "2024-03-30",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "amount": {
                        "value": {
                          "value": 10,
                          "type": "double"
                        },
                        "type": "primitive"
                      },
                      "entry_type": {
                        "value": "outgoing",
                        "type": "enum"
                      },
                      "currency": {
                        "value": "USD",
                        "type": "enum"
                      },
                      "account_holder_id": {
                        "value": {
                          "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "location": {
                        "properties": {
                          "country": {
                            "value": "US",
                            "type": "enum"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "transactions": {
                  "value": [
                    {
                      "properties": {
                        "entities": {
                          "properties": {
                            "counterparty": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "Starbucks",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "website": {
                                  "value": {
                                    "value": "starbucks.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "logo": {
                                  "value": {
                                    "value": "https://logos.ntropy.com/starbucks.com",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "mccs": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": 5814,
                                        "type": "int"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "type": {
                                  "value": "organization",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            },
                            "intermediaries": {
                              "value": [
                                {
                                  "properties": {
                                    "id": {
                                      "value": {
                                        "value": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "name": {
                                      "value": {
                                        "value": "Square",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "website": {
                                      "value": {
                                        "value": "squareup.com",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "logo": {
                                      "value": {
                                        "value": "https://logos.ntropy.com/squareup.com",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "mccs": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": 1,
                                            "type": "int"
                                          },
                                          "type": "primitive"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "type": {
                                      "value": "payment_processor",
                                      "type": "enum"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "categories": {
                          "properties": {
                            "general": {
                              "value": {
                                "value": "outgoing - coffee shops",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "location": {
                          "properties": {
                            "raw_address": {
                              "value": {
                                "value": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "structured": {
                              "properties": {
                                "street": {
                                  "value": {
                                    "value": "Nw 43rd Street 5480",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "city": {
                                  "value": {
                                    "value": "Gainesville",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "state": {
                                  "value": {
                                    "value": "Florida",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "postcode": {
                                  "value": {
                                    "value": "32653",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "country_code": {
                                  "value": {
                                    "value": "US",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "country": {
                                  "value": {
                                    "value": "United States",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "latitude": {
                                  "value": {
                                    "value": 29.704558,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "longitude": {
                                  "value": {
                                    "value": -82.389277,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "google_maps_url": {
                                  "value": {
                                    "value": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "apple_maps_url": {
                                  "value": {
                                    "value": "https://maps.apple.com/?q=29.704558,-82.389277",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-03-30T00:00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "xbx8YP14g565Xk",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/transactions\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '[{\n        \"id\": \"xbx8YP14g565Xk\",\n        \"description\": \"SQ* STARBUCKS NW 43RD\",\n        \"date\": \"2024-03-30\",\n        \"amount\": 10.0,\n        \"entry_type\": \"outgoing\",\n        \"currency\": \"USD\",\n        \"account_holder_id\": \"35b927b6-6fda-40aa-93b8-95b47c2b2cad\",\n        \"location\": {\n            \"country\": \"US\"\n        }\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK, TransactionInput, LocationInput\n\nsdk = SDK(\"cd1H...Wmhl\")\nenriched = sdk.transactions.create([\n    TransactionInput(\n        id=\"xbx8YP14g565Xk\",\n        description=\"SQ* STARBUCKS NW 43RD\",\n        account_holder_id=\"35b927b6-6fda-40aa-93b8-95b47c2b2cad\",\n        amount=10.0,\n        entry_type=\"outgoing\",\n        date=\"2024-03-30\",\n        currency=\"USD\",\n        location=LocationInput(\n          country=\"US\",\n        )\n    )\n]) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign a transaction to an account holder",
      "audiences": [],
      "operationId": "set_transaction_ah_v3_transactions__id__assign_post",
      "tags": [
        "Transactions"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SetTransactionAhV3TransactionsIdAssignPostRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SetTransactionAhV3TransactionsIdAssignPostRequest",
      "request": {
        "schema": {
          "generatedName": "SetTransactionAhV3TransactionsIdAssignPostRequest",
          "schema": "Body_set_transaction_ah_v3_transactions__id__assign_post",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "SetTransactionAhV3TransactionsIdAssignPostResponse",
          "schema": "Transaction",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Transaction or account holder with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Changes the account holder associated with the transaction. The old and new account holder must share the same categories",
      "authed": true,
      "method": "POST",
      "path": "/v3/transactions/{id}/assign",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "account_holder_id": {
                "value": {
                  "value": "account_holder_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "xbx8YP14g565Xk",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "SQ* STARBUCKS NW 43RD",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "date": {
                  "value": {
                    "value": "2024-03-30",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "amount": {
                  "value": {
                    "value": 10,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "entry_type": {
                  "value": "outgoing",
                  "type": "enum"
                },
                "currency": {
                  "value": "USD",
                  "type": "enum"
                },
                "entities": {
                  "properties": {
                    "counterparty": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Starbucks",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "website": {
                          "value": {
                            "value": "starbucks.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "logo": {
                          "value": {
                            "value": "https://logos.ntropy.com/starbucks.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mccs": {
                          "value": [
                            {
                              "value": {
                                "value": 5814,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "type": {
                          "value": "organization",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "intermediaries": {
                      "value": [
                        {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "Square",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "website": {
                              "value": {
                                "value": "squareup.com",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "logo": {
                              "value": {
                                "value": "https://logos.ntropy.com/squareup.com",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "mccs": {
                              "value": [
                                {
                                  "value": {
                                    "value": 1,
                                    "type": "int"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "type": {
                              "value": "payment_processor",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "categories": {
                  "properties": {
                    "general": {
                      "value": {
                        "value": "outgoing - coffee shops",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "accounting": {
                      "value": "operational expenses",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                },
                "location": {
                  "properties": {
                    "raw_address": {
                      "value": {
                        "value": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "structured": {
                      "properties": {
                        "street": {
                          "value": {
                            "value": "Nw 43rd Street 5480",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "city": {
                          "value": {
                            "value": "Gainesville",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "Florida",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "postcode": {
                          "value": {
                            "value": "32653",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country_code": {
                          "value": {
                            "value": "US",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country": {
                          "value": {
                            "value": "United States",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "latitude": {
                          "value": {
                            "value": 29.704558,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "longitude": {
                          "value": {
                            "value": -82.389277,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "google_maps_url": {
                          "value": {
                            "value": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "apple_maps_url": {
                          "value": {
                            "value": "https://maps.apple.com/?q=29.704558,-82.389277",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "store_number": {
                          "value": {
                            "value": "store_number",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "error": {
                  "properties": {
                    "code": {
                      "value": "account_holder_not_found",
                      "type": "enum"
                    },
                    "message": {
                      "value": {
                        "value": "message",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "created_at": {
                  "value": {
                    "value": "2024-03-30T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "account_holder_id": {
                  "value": {
                    "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "recurrence": {
                  "properties": {
                    "type": {
                      "value": "recurring",
                      "type": "enum"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/transactions/xbx8YP14g565Xk\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"account_holder_id\": \"35b927b6-6fda-40aa-93b8-95b47c2b2cad\"\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.transactions.assign(\n    transaction_id=\"xbx8YP14g565Xk\", \n    account_holder_id=\"35b927b6-6fda-40aa-93b8-95b47c2b2cad\"\n) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List all batches",
      "audiences": [],
      "operationId": "get_batches_v3_batches_get",
      "tags": [
        "Batches"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Only return batches older or equal than this date",
          "name": "created_after",
          "schema": {
            "generatedName": "GetBatchesV3BatchesGetRequestCreatedAfter",
            "title": "Created After",
            "description": "Only return batches older or equal than this date",
            "value": {
              "description": "Only return batches older or equal than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetBatchesV3BatchesGetRequestCreatedAfter",
              "title": "Created After",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Only return batches newer than this date",
          "name": "created_before",
          "schema": {
            "generatedName": "GetBatchesV3BatchesGetRequestCreatedBefore",
            "title": "Created Before",
            "description": "Only return batches newer than this date",
            "value": {
              "description": "Only return batches newer than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetBatchesV3BatchesGetRequestCreatedBefore",
              "title": "Created Before",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Starting point for the set of batches",
          "name": "cursor",
          "schema": {
            "generatedName": "GetBatchesV3BatchesGetRequestCursor",
            "nameOverride": "Cursor",
            "title": "Cursor",
            "description": "Starting point for the set of batches",
            "value": {
              "description": "Starting point for the set of batches",
              "schema": {
                "type": "string"
              },
              "generatedName": "GetBatchesV3BatchesGetRequestCursor",
              "nameOverride": "Cursor",
              "title": "Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The limit of batches to be returned",
          "name": "limit",
          "schema": {
            "generatedName": "GetBatchesV3BatchesGetRequestLimit",
            "nameOverride": "Limit",
            "title": "Limit",
            "description": "The limit of batches to be returned",
            "value": {
              "description": "The limit of batches to be returned",
              "schema": {
                "default": 10,
                "minimum": 1,
                "maximum": 50,
                "type": "int"
              },
              "generatedName": "GetBatchesV3BatchesGetRequestLimit",
              "nameOverride": "Limit",
              "title": "Limit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If specified, only return batches with this status",
          "name": "status",
          "schema": {
            "generatedName": "GetBatchesV3BatchesGetRequestStatus",
            "description": "If specified, only return batches with this status",
            "value": {
              "generatedName": "GetBatchesV3BatchesGetRequestStatus",
              "schema": "BatchStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetBatchesV3BatchesGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetBatchesV3BatchesGetResponse",
          "schema": "PagedResponse_Batch",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Returns a list of submitted batches starting with the most recent one.",
      "authed": true,
      "method": "GET",
      "path": "/v3/batches",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "XjdHaksD",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "data": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "203613d2-83c8-4130-8809-d14206eeec20",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "processing",
                          "type": "enum"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-01T00:00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2024-01-01T00:00:30",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "progress": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "total": {
                          "value": {
                            "value": 4000,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/batches\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nfor batch in sdk.batches.list().auto_paginate():\n    ... ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Submit a batch of transactions",
      "audiences": [],
      "operationId": "post_batch_v3_batches_post",
      "tags": [
        "Batches"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostBatchV3BatchesPostRequest",
      "request": {
        "schema": {
          "generatedName": "PostBatchV3BatchesPostRequest",
          "schema": "AsyncEnrichmentInput",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PostBatchV3BatchesPostResponse",
          "schema": "Batch",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a batch of transactions and enriches it in an asynchronous fashion. A batch, representing the status of the \nenrichment progress is returned as a result of the submission. \n\nIn order to be notified on the status of the batch, you can setup [webhooks](../../../webhooks) and receive \nthe respective notifications. Alternatively, you can \n[poll](../../../enrichment/introduction/#viewing-the-progress-of-a-batch) for the status of the batch using its id.\n\nThis endpoints supports up to 24960 transactions.",
      "authed": true,
      "method": "POST",
      "path": "/v3/batches",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "transactions": {
                "value": [
                  {
                    "properties": {
                      "id": {
                        "value": {
                          "value": "xbx8YP14g565Xk",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "description": {
                        "value": {
                          "value": "SQ* STARBUCKS NW 43RD",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "date": {
                        "value": {
                          "value": "2024-03-30",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "amount": {
                        "value": {
                          "value": 10,
                          "type": "double"
                        },
                        "type": "primitive"
                      },
                      "entry_type": {
                        "value": "outgoing",
                        "type": "enum"
                      },
                      "currency": {
                        "value": "USD",
                        "type": "enum"
                      },
                      "account_holder_id": {
                        "value": {
                          "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "location": {
                        "properties": {
                          "country": {
                            "value": "US",
                            "type": "enum"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "203613d2-83c8-4130-8809-d14206eeec20",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "processing",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-01T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-01T00:00:30",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "progress": {
                  "value": {
                    "value": 0,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 4000,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/batches/\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '[{\n        \"id\": \"xbx8YP14g565Xk\",\n        \"description\": \"SQ* STARBUCKS NW 43RD\",\n        \"date\": \"2024-03-30\",\n        \"amount\": 10.0,\n        \"entry_type\": \"outgoing\",\n        \"currency\": \"USD\",\n        \"account_holder_id\": \"35b927b6-6fda-40aa-93b8-95b47c2b2cad\",\n        \"location\": {\n            \"country\": \"US\"\n        }\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK, TransactionInput, LocationInput\n\nsdk = SDK(\"cd1H...Wmhl\")\nbatch = sdk.batches.create([\n    TransactionInput(\n        id=\"xbx8YP14g565Xk\",\n        description=\"SQ* STARBUCKS NW 43RD\",\n        account_holder_id=\"35b927b6-6fda-40aa-93b8-95b47c2b2cad\",\n        amount=10.0,\n        entry_type=\"outgoing\",\n        date=\"2024-03-30\",\n        currency=\"USD\",\n        location=LocationInput(\n          country=\"US\",\n        )\n    )\n]) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve a batch",
      "audiences": [],
      "operationId": "get_single_batch_v3_batches__id__get",
      "tags": [
        "Batches"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetSingleBatchV3BatchesIdGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetSingleBatchV3BatchesIdGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetSingleBatchV3BatchesIdGetResponse",
          "schema": "Batch",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Batch with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v3/batches/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "203613d2-83c8-4130-8809-d14206eeec20",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "processing",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-01T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2024-01-01T00:00:30",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "progress": {
                  "value": {
                    "value": 0,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 4000,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/batches/203613d2-83c8-4130-8809-d14206eeec20\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nbatch = sdk.batches.get(\"f203613d2-83c8-4130-8809-d14206eeec20\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve the results of a batch",
      "audiences": [],
      "operationId": "get_batch_results_v3_batches__id__results_get",
      "tags": [
        "Batches"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBatchResultsV3BatchesIdResultsGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBatchResultsV3BatchesIdResultsGetRequest",
      "response": {
        "description": "Returned batch of transaction enrichment results.",
        "schema": {
          "generatedName": "GetBatchResultsV3BatchesIdResultsGetResponse",
          "schema": "BatchResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Batch with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Returns the results of the enrichment request. The resulting enriched transactions are returned in the same order they were submitted. Results are available after the batch has finished processing.",
      "authed": true,
      "method": "GET",
      "path": "/v3/batches/{id}/results",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "total": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "processing",
                  "type": "enum"
                },
                "results": {
                  "properties": {
                    "transactions": {
                      "value": [
                        {
                          "properties": {
                            "entities": {
                              "properties": {
                                "counterparty": {
                                  "properties": {
                                    "id": {
                                      "value": {
                                        "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "name": {
                                      "value": {
                                        "value": "Starbucks",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "website": {
                                      "value": {
                                        "value": "starbucks.com",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "logo": {
                                      "value": {
                                        "value": "https://logos.ntropy.com/starbucks.com",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "mccs": {
                                      "value": [
                                        {
                                          "value": {
                                            "value": 5814,
                                            "type": "int"
                                          },
                                          "type": "primitive"
                                        }
                                      ],
                                      "type": "array"
                                    },
                                    "type": {
                                      "value": "organization",
                                      "type": "enum"
                                    }
                                  },
                                  "type": "object"
                                },
                                "intermediaries": {
                                  "value": [
                                    {
                                      "properties": {
                                        "id": {
                                          "value": {
                                            "value": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "name": {
                                          "value": {
                                            "value": "Square",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "website": {
                                          "value": {
                                            "value": "squareup.com",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "logo": {
                                          "value": {
                                            "value": "https://logos.ntropy.com/squareup.com",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "mccs": {
                                          "value": [
                                            {
                                              "value": {
                                                "value": 1,
                                                "type": "int"
                                              },
                                              "type": "primitive"
                                            }
                                          ],
                                          "type": "array"
                                        },
                                        "type": {
                                          "value": "payment_processor",
                                          "type": "enum"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "categories": {
                              "properties": {
                                "general": {
                                  "value": {
                                    "value": "outgoing - coffee shops",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "location": {
                              "properties": {
                                "raw_address": {
                                  "value": {
                                    "value": "Nw 43rd Street 5480, Gainesville, Florida 32653, US",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "structured": {
                                  "properties": {
                                    "street": {
                                      "value": {
                                        "value": "Nw 43rd Street 5480",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "city": {
                                      "value": {
                                        "value": "Gainesville",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "state": {
                                      "value": {
                                        "value": "Florida",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "postcode": {
                                      "value": {
                                        "value": "32653",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "country_code": {
                                      "value": {
                                        "value": "US",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "country": {
                                      "value": {
                                        "value": "United States",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "latitude": {
                                      "value": {
                                        "value": 29.704558,
                                        "type": "double"
                                      },
                                      "type": "primitive"
                                    },
                                    "longitude": {
                                      "value": {
                                        "value": -82.389277,
                                        "type": "double"
                                      },
                                      "type": "primitive"
                                    },
                                    "google_maps_url": {
                                      "value": {
                                        "value": "https://www.google.com/maps/search/?api=1&query=29.704558,-82.389277",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "apple_maps_url": {
                                      "value": {
                                        "value": "https://maps.apple.com/?q=29.704558,-82.389277",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "created_at": {
                              "value": {
                                "value": "2024-03-30T00:00:00",
                                "type": "datetime"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "xbx8YP14g565Xk",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/batches/203613d2-83c8-4130-8809-d14206eeec20/results\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nresults = sdk.batches.wait_for_results(\"f203613d2-83c8-4130-8809-d14206eeec20\")\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List all bank statements",
      "audiences": [],
      "operationId": "get_bank_statements_v3_bank_statements_get",
      "tags": [
        "Bank statements"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Only return bank statements older or equal than this date",
          "name": "created_after",
          "schema": {
            "generatedName": "GetBankStatementsV3BankStatementsGetRequestCreatedAfter",
            "title": "Created After",
            "description": "Only return bank statements older or equal than this date",
            "value": {
              "description": "Only return bank statements older or equal than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetBankStatementsV3BankStatementsGetRequestCreatedAfter",
              "title": "Created After",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Only return bank statements newer than this date",
          "name": "created_before",
          "schema": {
            "generatedName": "GetBankStatementsV3BankStatementsGetRequestCreatedBefore",
            "title": "Created Before",
            "description": "Only return bank statements newer than this date",
            "value": {
              "description": "Only return bank statements newer than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetBankStatementsV3BankStatementsGetRequestCreatedBefore",
              "title": "Created Before",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Starting point for the set of bank statements",
          "name": "cursor",
          "schema": {
            "generatedName": "GetBankStatementsV3BankStatementsGetRequestCursor",
            "nameOverride": "Cursor",
            "title": "Cursor",
            "description": "Starting point for the set of bank statements",
            "value": {
              "description": "Starting point for the set of bank statements",
              "schema": {
                "type": "string"
              },
              "generatedName": "GetBankStatementsV3BankStatementsGetRequestCursor",
              "nameOverride": "Cursor",
              "title": "Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The limit of bank statements to be returned",
          "name": "limit",
          "schema": {
            "generatedName": "GetBankStatementsV3BankStatementsGetRequestLimit",
            "nameOverride": "Limit",
            "title": "Limit",
            "description": "The limit of bank statements to be returned",
            "value": {
              "description": "The limit of bank statements to be returned",
              "schema": {
                "default": 10,
                "minimum": 1,
                "maximum": 50,
                "type": "int"
              },
              "generatedName": "GetBankStatementsV3BankStatementsGetRequestLimit",
              "nameOverride": "Limit",
              "title": "Limit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If specified, only return bank statements with this status",
          "name": "status",
          "schema": {
            "generatedName": "GetBankStatementsV3BankStatementsGetRequestStatus",
            "description": "If specified, only return bank statements with this status",
            "value": {
              "generatedName": "GetBankStatementsV3BankStatementsGetRequestStatus",
              "schema": "DocumentStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetBankStatementsV3BankStatementsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetBankStatementsV3BankStatementsGetResponse",
          "schema": "PagedResponse_BankStatement",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Return a list of submitted bank statements starting with the most recent one.",
      "authed": true,
      "method": "GET",
      "path": "/v3/bank_statements",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "XjdHaksD",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "data": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "2014-01-01_2014-02-01_statement.pdf",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "processing",
                          "type": "enum"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-01-01T00:00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "file": {
                          "properties": {
                            "no_pages": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "size": {
                              "value": {
                                "value": 4096,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "error": {
                          "properties": {
                            "code": {
                              "value": "invalid_bank_statement",
                              "type": "enum"
                            },
                            "message": {
                              "value": {
                                "value": "message",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/bank_statements\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nfor bs in sdk.bank_statements.list().auto_paginate():\n    ... ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Submit a bank statement PDF",
      "audiences": [],
      "operationId": "post_bank_statement_v3_bank_statements_post",
      "tags": [
        "Bank statements"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostBankStatementV3BankStatementsPostRequest",
      "request": {
        "name": "Body_post_bank_statement_v3_bank_statements_post",
        "properties": [
          {
            "key": "file",
            "schema": {
              "isOptional": false,
              "isArray": false,
              "type": "file"
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "multipart"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PostBankStatementV3BankStatementsPostResponse",
          "schema": "BankStatement",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Upload a PDF file and queue it for extraction.",
      "authed": true,
      "method": "POST",
      "path": "/v3/bank_statements",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "2014-01-01_2014-02-01_statement.pdf",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "processing",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-01T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "file": {
                  "properties": {
                    "no_pages": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "size": {
                      "value": {
                        "value": 4096,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "error": {
                  "properties": {
                    "code": {
                      "value": "invalid_bank_statement",
                      "type": "enum"
                    },
                    "message": {
                      "value": {
                        "value": "message",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n        \"https://api.ntropy.com/v3/bank_statements\" \\\n        -H \"Accept: application/json\" \\\n        -H \"X-API-KEY: cd1H...Wmhl\" \\\n        --form file=@bank_statement.pdf\n    ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nwith open('bank_statement.pdf', 'rb') as fh:\n    bank_statement = sdk.bank_statements.create(fh)\n    results = sdk.bank_statement.wait_for_results(bank_statement.id) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve a bank statement",
      "audiences": [],
      "operationId": "get_bank_statement_v3_bank_statements__id__get",
      "tags": [
        "Bank statements"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBankStatementV3BankStatementsIdGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBankStatementV3BankStatementsIdGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetBankStatementV3BankStatementsIdGetResponse",
          "schema": "BankStatement",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Bank statement with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v3/bank_statements/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "7f8dceac-2848-472d-b5c3-55cdbaf35a9b",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "2014-01-01_2014-02-01_statement.pdf",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "processing",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2024-01-01T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "file": {
                  "properties": {
                    "no_pages": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "size": {
                      "value": {
                        "value": 4096,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "error": {
                  "properties": {
                    "code": {
                      "value": "invalid_bank_statement",
                      "type": "enum"
                    },
                    "message": {
                      "value": {
                        "value": "message",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/bank_statements/7f8dceac-2848-472d-b5c3-55cdbaf35a9b\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nbs = sdk.bank_statements.get(\"7f8dceac-2848-472d-b5c3-55cdbaf35a9b\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deletes a bank statement",
      "audiences": [],
      "operationId": "delete_bank_statement_v3_bank_statements__id__delete",
      "tags": [
        "Bank statements"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteBankStatementV3BankStatementsIdDeleteRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteBankStatementV3BankStatementsIdDeleteRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Bank statement with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/v3/bank_statements/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Quickly extract account holder, institution and first account",
      "audiences": [],
      "operationId": "get_bank_statement_statement_info_v3_bank_statements__id__overview_post",
      "tags": [
        "Bank statements"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBankStatementStatementInfoV3BankStatementsIdOverviewPostRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBankStatementStatementInfoV3BankStatementsIdOverviewPostRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetBankStatementStatementInfoV3BankStatementsIdOverviewPostResponse",
          "schema": "StatementInfo",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Bank statement with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Extracts account holder, bank and account information extracted from the first page of the bank statement, which is typically available before the full results. This is a synchronous call.\n\nComplete guide: [Overview](../../../bank-statements)",
      "authed": true,
      "method": "POST",
      "path": "/v3/bank_statements/{id}/overview",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "institution": {
                  "value": {
                    "value": "Well's Fargo",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "start_date": {
                  "value": {
                    "value": "2024-01-01",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "end_date": {
                  "value": {
                    "value": "2024-02-01",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "account_holder": {
                  "properties": {
                    "type": {
                      "value": "consumer",
                      "type": "enum"
                    },
                    "name": {
                      "value": {
                        "value": "John Doe",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "address": {
                      "properties": {
                        "street": {
                          "value": {
                            "value": "601 Rosebud Avenue",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "postcode": {
                          "value": {
                            "value": "77901",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "city": {
                          "value": {
                            "value": "Victoria",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "Texas",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "country": {
                          "value": {
                            "value": "United States",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "accounts": {
                  "value": [
                    {
                      "properties": {
                        "type": {
                          "value": {
                            "value": "checking",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "number": {
                          "value": {
                            "value": "83721",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "opening_balance": {
                          "value": {
                            "value": 1000,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "closing_balance": {
                          "value": {
                            "value": 1500,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "iso_currency_code": {
                          "value": {
                            "value": "USD",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/bank_statements/7f8dceac-2848-472d-b5c3-55cdbaf35a9b/overview\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\noverview = sdk.bank_statements.overview(\n    \"7f8dceac-2848-472d-b5c3-55cdbaf35a9b\"\n) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve the extraction results",
      "audiences": [],
      "operationId": "get_bank_statement_result_v3_bank_statements__id__results_get",
      "tags": [
        "Bank statements"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBankStatementResultV3BankStatementsIdResultsGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBankStatementResultV3BankStatementsIdResultsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetBankStatementResultV3BankStatementsIdResultsGetResponse",
          "schema": "BankStatementResults",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Bank statement with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Return the extracted account information and associated transactions from a bank statement PDF. The results are accessible once the statement's status is `completed`.",
      "authed": true,
      "method": "GET",
      "path": "/v3/bank_statements/{id}/results",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "accounts": {
                  "value": [
                    {
                      "properties": {
                        "number": {
                          "value": {
                            "value": "972913289",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "opening_balance": {
                          "value": {
                            "value": 400,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "closing_balance": {
                          "value": {
                            "value": 200,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "start_date": {
                          "value": {
                            "value": "2024-01-01",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "end_date": {
                          "value": {
                            "value": "2024-02-01",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "is_balance_reconciled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "total_incoming": {
                          "value": {
                            "value": 0,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "total_outgoing": {
                          "value": {
                            "value": 200,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "transactions": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "xbx8YP14g565Xk",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "description": {
                                  "value": {
                                    "value": "SQ* STARBUCKS NW 43RD",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "date": {
                                  "value": {
                                    "value": "2024-03-30",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "amount": {
                                  "value": {
                                    "value": 200,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                },
                                "entry_type": {
                                  "value": "outgoing",
                                  "type": "enum"
                                },
                                "currency": {
                                  "value": "USD",
                                  "type": "enum"
                                },
                                "running_balance": {
                                  "value": {
                                    "value": 400,
                                    "type": "double"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/bank_statements/7f8dceac-2848-472d-b5c3-55cdbaf35a9b/results\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nbs = sdk.bank_statements.get(\"7f8dceac-2848-472d-b5c3-55cdbaf35a9b\")\nresults = sdk.bank_statements.wait_for_results(\n    \"7f8dceac-2848-472d-b5c3-55cdbaf35a9b\"\n) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve an account holder.",
      "audiences": [],
      "operationId": "get_account_holder_v3_account_holders__id__get",
      "tags": [
        "Account Holders"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetAccountHolderV3AccountHoldersIdGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetAccountHolderV3AccountHoldersIdGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetAccountHolderV3AccountHoldersIdGetResponse",
          "schema": "AccountHolderExternal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Account holder with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v3/account_holders/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "consumer",
                  "type": "enum"
                },
                "name": {
                  "value": {
                    "value": "John Doe",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-03-30T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/account_holders/35b927b6-6fda-40aa-93b8-95b47c2b2cad\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nah = sdk.account_holders.get(\"f35b927b6-6fda-40aa-93b8-95b47c2b2cad\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deletes an account holder and their transactions",
      "audiences": [],
      "operationId": "delete_account_holder_v3_account_holders__id__delete",
      "tags": [
        "Account Holders"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteAccountHolderV3AccountHoldersIdDeleteRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteAccountHolderV3AccountHoldersIdDeleteRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Account holder with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes all of the transactions in the account holder's history. This operation is permanent and irreversible",
      "authed": true,
      "method": "DELETE",
      "path": "/v3/account_holders/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"DELETE\" \\\n    \"https://api.ntropy.com/v3/account_holders/35b927b6-6fda-40aa-93b8-95b47c2b2cad\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nah = sdk.account_holders.delete(\"f35b927b6-6fda-40aa-93b8-95b47c2b2cad\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List all account holders.",
      "audiences": [],
      "operationId": "get_account_holders_v3_account_holders_get",
      "tags": [
        "Account Holders"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Only return account holders older or equal than this date",
          "name": "created_after",
          "schema": {
            "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestCreatedAfter",
            "title": "Created After",
            "description": "Only return account holders older or equal than this date",
            "value": {
              "description": "Only return account holders older or equal than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestCreatedAfter",
              "title": "Created After",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Only return account holders newer than this date",
          "name": "created_before",
          "schema": {
            "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestCreatedBefore",
            "title": "Created Before",
            "description": "Only return account holders newer than this date",
            "value": {
              "description": "Only return account holders newer than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestCreatedBefore",
              "title": "Created Before",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Starting point for the set of account holders",
          "name": "cursor",
          "schema": {
            "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestCursor",
            "nameOverride": "Cursor",
            "title": "Cursor",
            "description": "Starting point for the set of account holders",
            "value": {
              "description": "Starting point for the set of account holders",
              "schema": {
                "type": "string"
              },
              "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestCursor",
              "nameOverride": "Cursor",
              "title": "Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The limit of account holders to be returned",
          "name": "limit",
          "schema": {
            "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestLimit",
            "nameOverride": "Limit",
            "title": "Limit",
            "description": "The limit of account holders to be returned",
            "value": {
              "description": "The limit of account holders to be returned",
              "schema": {
                "default": 10,
                "minimum": 1,
                "maximum": 50,
                "type": "int"
              },
              "generatedName": "GetAccountHoldersV3AccountHoldersGetRequestLimit",
              "nameOverride": "Limit",
              "title": "Limit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetAccountHoldersV3AccountHoldersGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetAccountHoldersV3AccountHoldersGetResponse",
          "schema": "PagedResponse_AccountHolderExternal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/v3/account_holders",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "XjdHaksD",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "data": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "consumer",
                          "type": "enum"
                        },
                        "name": {
                          "value": {
                            "value": "John Doe",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-03-30T00:00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/account_holders/35b927b6-6fda-40aa-93b8-95b47c2b2cad\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nah = sdk.account_holders.get(\"f35b927b6-6fda-40aa-93b8-95b47c2b2cad\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create an account holder.",
      "audiences": [],
      "operationId": "create_account_holder_v3_account_holders_post",
      "tags": [
        "Account Holders"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateAccountHolderV3AccountHoldersPostRequest",
      "request": {
        "schema": {
          "generatedName": "CreateAccountHolderV3AccountHoldersPostRequest",
          "schema": "AccountHolderCreate",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "CreateAccountHolderV3AccountHoldersPostResponse",
          "schema": "AccountHolderExternal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Account holder with the provided id already exists.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/v3/account_holders",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": {
                "value": "consumer",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "35b927b6-6fda-40aa-93b8-95b47c2b2cad",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "consumer",
                  "type": "enum"
                },
                "name": {
                  "value": {
                    "value": "John Doe",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-03-30T00:00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/account_holders\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"id\": \"35b927b6-6fda-40aa-93b8-95b47c2b2cad\",\n        \"type\": \"consumer\",\n        \"name\": \"John Doe\"\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nah = sdk.account_holders.create(\n    id=\"35b927b6-6fda-40aa-93b8-95b47c2b2cad\",\n    type=\"consumer\",\n    name=\"John Doe\",\n) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Find recurring groups in a transaction history",
      "audiences": [],
      "operationId": "get_account_holder_recurring_payments_v3_account_holders__id__recurring_groups_post",
      "tags": [
        "Recurrence"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "value": {
            "generatedName": "GetAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostResponseItem",
            "schema": "RecurrenceGroup",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "GetAccountHolderRecurringPaymentsV3AccountHoldersIdRecurringGroupsPostResponse",
          "title": "Response Get Account Holder Recurring Payments V3 Account Holders  Id  Recurring Groups Post",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Account holder with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Identifies and categorizes recurring patterns found in the transaction history of the account holder, such as periodic payments or subscriptions. These patterns are called recurrence groups.",
      "authed": true,
      "method": "POST",
      "path": "/v3/account_holders/{id}/recurring_groups",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "8efbac45-9bd5-4b67-be29-334106198c40",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "start_date": {
                      "value": {
                        "value": "2024-03-01",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "end_date": {
                      "value": {
                        "value": "2024-03-30",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "total_amount": {
                      "value": {
                        "value": 300,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "average_amount": {
                      "value": {
                        "value": 10,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "periodicity_in_days": {
                      "value": {
                        "value": 1,
                        "type": "double"
                      },
                      "type": "primitive"
                    },
                    "periodicity": {
                      "value": "daily",
                      "type": "enum"
                    },
                    "counterparty": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Starbucks",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "website": {
                          "value": {
                            "value": "starbucks.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "logo": {
                          "value": {
                            "value": "https://logos.ntropy.com/starbucks.com",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mccs": {
                          "value": [
                            {
                              "value": {
                                "value": 5814,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "type": {
                          "value": "organization",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "categories": {
                      "properties": {
                        "general": {
                          "value": {
                            "value": "outgoing - coffee shops",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "accounting": {
                          "value": "operational expenses",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    },
                    "transaction_ids": {
                      "value": [
                        {
                          "value": {
                            "value": "2dc6SE8A7cTQ2jUdUadCg",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "tQYAhhl0XNkl1wasacpVQ",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "NNJTqvockIdKnYxBqPlJw",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/account_holders/35b927b6-6fda-40aa-93b8-95b47c2b2cad/recurring_groups\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nrecurring_groups = sdk.account_holders.recurring_groups(\n    \"35b927b6-6fda-40aa-93b8-95b47c2b2cad\"\n) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List all webhooks",
      "audiences": [],
      "operationId": "get_webhooks_v3_webhooks_get",
      "tags": [
        "Webhooks"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetWebhooksV3WebhooksGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetWebhooksV3WebhooksGetResponse",
          "schema": "PagedResponse_Webhook",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List all webhooks",
      "authed": true,
      "method": "GET",
      "path": "/v3/webhooks",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "XjdHaksD",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "data": {
                  "value": [
                    {
                      "properties": {
                        "url": {
                          "value": {
                            "value": "https://example.com:5689",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "events": {
                          "value": [
                            {
                              "value": "batches.completed",
                              "type": "enum"
                            },
                            {
                              "value": "batches.error",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "token": {
                          "value": {
                            "value": "hunter2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-10-03T02:53:30.167953",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "enabled": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/webhooks\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nfor webhook in sdk.webhooks.list().auto_paginate():\n    ... ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a webhook",
      "audiences": [],
      "operationId": "post_webhook_v3_webhooks_post",
      "tags": [
        "Webhooks"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostWebhookV3WebhooksPostRequest",
      "request": {
        "schema": {
          "generatedName": "PostWebhookV3WebhooksPostRequest",
          "schema": "WebhookBase",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PostWebhookV3WebhooksPostResponse",
          "schema": "Webhook",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create a webhook to be called when certain events occur.",
      "authed": true,
      "method": "POST",
      "path": "/v3/webhooks",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "url": {
                "value": {
                  "value": "url",
                  "type": "string"
                },
                "type": "primitive"
              },
              "events": {
                "value": [
                  {
                    "value": "reports.resolved",
                    "type": "enum"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "url": {
                  "value": {
                    "value": "https://example.com:5689",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "events": {
                  "value": [
                    {
                      "value": "batches.completed",
                      "type": "enum"
                    },
                    {
                      "value": "batches.error",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "token": {
                  "value": {
                    "value": "hunter2",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-10-03T02:53:30.167953",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "enabled": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/webhooks\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"url\": \"https://example.com:5689\",\n        \"events\": [\n            \"batches.completed\",\n            \"batches.error\"\n        ],\n        \"token\": \"hunter2\"\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.webhooks.create(\n    url=\"https://example.com:5689\",\n    events=\"['batches.completed', 'batches.error']\",\n    token=\"hunter2\",\n) ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve a webhook",
      "audiences": [],
      "operationId": "get_webhook_v3_webhooks__id__get",
      "tags": [
        "Webhooks"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetWebhookV3WebhooksIdGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetWebhookV3WebhooksIdGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetWebhookV3WebhooksIdGetResponse",
          "schema": "Webhook",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve a webhook",
      "authed": true,
      "method": "GET",
      "path": "/v3/webhooks/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "url": {
                  "value": {
                    "value": "https://example.com:5689",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "events": {
                  "value": [
                    {
                      "value": "batches.completed",
                      "type": "enum"
                    },
                    {
                      "value": "batches.error",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "token": {
                  "value": {
                    "value": "hunter2",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-10-03T02:53:30.167953",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "enabled": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/webhooks/e94a150d-40af-4e96-8aa7-2948a6b4d8d3\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nwebhook = sdk.webhooks.get(\"e94a150d-40af-4e96-8aa7-2948a6b4d8d3\")\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a webhook",
      "audiences": [],
      "operationId": "delete_webhook_v3_webhooks__id__delete",
      "tags": [
        "Webhooks"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteWebhookV3WebhooksIdDeleteRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteWebhookV3WebhooksIdDeleteRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Webhook with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete a webhook",
      "authed": true,
      "method": "DELETE",
      "path": "/v3/webhooks/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"DELETE\" \\\n    \"https://api.ntropy.com/v3/webhooks/e94a150d-40af-4e96-8aa7-2948a6b4d8d3\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.webhooks.delete(\"e94a150d-40af-4e96-8aa7-2948a6b4d8d3\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a webhook",
      "audiences": [],
      "operationId": "patch_webhook_v3_webhooks__id__patch",
      "tags": [
        "Webhooks"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PatchWebhookV3WebhooksIdPatchRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PatchWebhookV3WebhooksIdPatchRequest",
      "request": {
        "schema": {
          "generatedName": "PatchWebhookV3WebhooksIdPatchRequest",
          "schema": "WebhookPatch",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "PatchWebhookV3WebhooksIdPatchResponse",
          "schema": "Webhook",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Update a webhook. Fields that aren't specified in the body will remain unchanged",
      "authed": true,
      "method": "PATCH",
      "path": "/v3/webhooks/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "url": {
                  "value": {
                    "value": "https://example.com:5689",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "events": {
                  "value": [
                    {
                      "value": "batches.completed",
                      "type": "enum"
                    },
                    {
                      "value": "batches.error",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "token": {
                  "value": {
                    "value": "hunter2",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "e94a150d-40af-4e96-8aa7-2948a6b4d8d3",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-10-03T02:53:30.167953",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "enabled": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/webhooks/e94a150d-40af-4e96-8aa7-2948a6b4d8d3\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"events\": [\n            \"batches.completed\",\n            \"batches.error\"\n        ],\n        \"enabled\": false\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nwh = sdk.webhooks.patch(\n    \"e94a150d-40af-4e96-8aa7-2948a6b4d8d3\",\n    events=['batches.completed', 'batches.error'],\n    enabled=False,\n)\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the current personalization ruleset.",
      "audiences": [],
      "operationId": "filter_get_v3_rules_get",
      "tags": [
        "Personalization",
        "Personalization"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "FilterGetV3RulesGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "FilterGetV3RulesGetResponse",
          "schema": "personalization",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get the current personalization ruleset.",
      "authed": true,
      "method": "GET",
      "path": "/v3/rules",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "if": {
                      "properties": {
                        "is_substring": {
                          "value": [],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/rules\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nrules = sdk.rules.get()\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Set the personalization ruleset.",
      "audiences": [],
      "operationId": "filter_post_v3_rules_post",
      "tags": [
        "Personalization",
        "Personalization"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "FilterPostV3RulesPostRequest",
      "request": {
        "schema": {
          "generatedName": "FilterPostV3RulesPostRequest",
          "schema": "personalization",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "FilterPostV3RulesPostResponse",
          "type": "unknown"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Provided ruleset has invalid structure",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "413": {
          "generatedName": "ContentTooLargeError",
          "schema": {
            "generatedName": "ContentTooLargeErrorBody",
            "type": "unknown"
          },
          "description": "Ruleset was larger than 50KiB",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Set the personalization ruleset.",
      "authed": true,
      "method": "POST",
      "path": "/v3/rules",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "properties": {
                  "if": {
                    "properties": {
                      "is_substring": {
                        "value": [],
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ],
            "type": "array"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": "value",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/rules\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\" \\\n    -H \"Content-Type: application/json\" \\\n    -d '[{\n        \"if\": {\n            \"is_substring\": [\n                {\"get\": \"website\"},\n                \"ntropy\"\n            ]\n        },\n        \"then\": [\n            {\"set\": \"logo\", \"to\": \"http://example.com/favicon.ico\"}\n        ],\n        \"else\": [\n            {\"remove_label\": \"example label\"}\n        ]\n    }]'\n",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.rules.set([{\n    \"if\": {\n        \"is_substring\": [\n            {\"get\": \"website\"},\n            \"ntropy\"\n        ]\n    },\n    \"then\": [\n        {\"set\": \"logo\", \"to\": \"http://example.com/favicon.ico\"}\n    ],\n    \"else\": [\n        {\"remove_label\": \"example label\"}\n    ]\n}])\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Append a rule.",
      "audiences": [],
      "operationId": "filter_append_v3_rules_append_post",
      "tags": [
        "Personalization",
        "Personalization"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "FilterAppendV3RulesAppendPostRequest",
      "request": {
        "schema": {
          "generatedName": "FilterAppendV3RulesAppendPostRequest",
          "schema": "Action",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "FilterAppendV3RulesAppendPostResponse",
          "type": "unknown"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Provided rule has invalid structure",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "413": {
          "generatedName": "ContentTooLargeError",
          "schema": {
            "generatedName": "ContentTooLargeErrorBody",
            "type": "unknown"
          },
          "description": "Ruleset after append was larger than 50KiB",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Append a rule to the personalization ruleset.",
      "authed": true,
      "method": "POST",
      "path": "/v3/rules/append",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "if": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": "value",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/rules/append\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\" \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\"set\": \"logo\", \"to\": \"http://example.com/favicon.ico\"}'\n",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.rules.append({\"set\": \"logo\", \"to\": \"http://example.com/favicon.ico\"})\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a rule.",
      "audiences": [],
      "operationId": "filter_delete_v3_rules__index__delete",
      "tags": [
        "Personalization",
        "Personalization"
      ],
      "pathParameters": [
        {
          "name": "index",
          "schema": {
            "schema": {
              "type": "int"
            },
            "generatedName": "FilterDeleteV3RulesIndexDeleteRequestIndex",
            "nameOverride": "Index",
            "title": "Index",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "FilterDeleteV3RulesIndexDeleteRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "FilterDeleteV3RulesIndexDeleteResponse",
          "type": "unknown"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Provided index does not exist in ruleset",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete the rule at the specified index from the personalization ruleset.",
      "authed": true,
      "method": "DELETE",
      "path": "/v3/rules/{index}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "index",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": "value",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"DELETE\" \\\n    \"https://api.ntropy.com/v3/rules/0\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.rules.delete(0)\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Modify an existing rule.",
      "audiences": [],
      "operationId": "filter_patch_v3_rules__index__patch",
      "tags": [
        "Personalization",
        "Personalization"
      ],
      "pathParameters": [
        {
          "name": "index",
          "schema": {
            "schema": {
              "type": "int"
            },
            "generatedName": "FilterPatchV3RulesIndexPatchRequestIndex",
            "nameOverride": "Index",
            "title": "Index",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "FilterPatchV3RulesIndexPatchRequest",
      "request": {
        "schema": {
          "generatedName": "FilterPatchV3RulesIndexPatchRequest",
          "schema": "Action",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "FilterPatchV3RulesIndexPatchResponse",
          "type": "unknown"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Provided index does not exist in ruleset",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Modify an existing rule at the specified index on the ruleset.",
      "authed": true,
      "method": "PATCH",
      "path": "/v3/rules/{index}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "index",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "if": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": "value",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"PATCH\" \\\n    \"https://api.ntropy.com/v3/rules/0\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\" \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\"set\": \"logo\", \"to\": \"http://example.com/favicon.ico\"}'\n",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.rules.patch(0, {\"set\": \"logo\", \"to\": \"http://example.com/favicon.ico\"})\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List all reports",
      "audiences": [],
      "operationId": "get_reports_v3_reports_get",
      "tags": [
        "Reports"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Only return report older or equal than this date",
          "name": "created_after",
          "schema": {
            "generatedName": "GetReportsV3ReportsGetRequestCreatedAfter",
            "title": "Created After",
            "description": "Only return report older or equal than this date",
            "value": {
              "description": "Only return report older or equal than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetReportsV3ReportsGetRequestCreatedAfter",
              "title": "Created After",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Only return report newer than this date",
          "name": "created_before",
          "schema": {
            "generatedName": "GetReportsV3ReportsGetRequestCreatedBefore",
            "title": "Created Before",
            "description": "Only return report newer than this date",
            "value": {
              "description": "Only return report newer than this date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "GetReportsV3ReportsGetRequestCreatedBefore",
              "title": "Created Before",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Starting point for the set of report",
          "name": "cursor",
          "schema": {
            "generatedName": "GetReportsV3ReportsGetRequestCursor",
            "nameOverride": "Cursor",
            "title": "Cursor",
            "description": "Starting point for the set of report",
            "value": {
              "description": "Starting point for the set of report",
              "schema": {
                "type": "string"
              },
              "generatedName": "GetReportsV3ReportsGetRequestCursor",
              "nameOverride": "Cursor",
              "title": "Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The limit of report to be returned",
          "name": "limit",
          "schema": {
            "generatedName": "GetReportsV3ReportsGetRequestLimit",
            "nameOverride": "Limit",
            "title": "Limit",
            "description": "The limit of report to be returned",
            "value": {
              "description": "The limit of report to be returned",
              "schema": {
                "default": 10,
                "minimum": 1,
                "maximum": 50,
                "type": "int"
              },
              "generatedName": "GetReportsV3ReportsGetRequestLimit",
              "nameOverride": "Limit",
              "title": "Limit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "If specified, only return reports with this status",
          "name": "status",
          "schema": {
            "generatedName": "GetReportsV3ReportsGetRequestStatus",
            "description": "If specified, only return reports with this status",
            "value": {
              "generatedName": "GetReportsV3ReportsGetRequestStatus",
              "schema": "ReportStatus",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetReportsV3ReportsGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetReportsV3ReportsGetResponse",
          "schema": "PagedResponse_Report_",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List all reports",
      "authed": true,
      "method": "GET",
      "path": "/v3/reports",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "next_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "data": {
                  "value": [
                    {
                      "properties": {
                        "transaction_id": {
                          "value": {
                            "value": "xbx8YP14g565Xk",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "lorem ipsum",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fields": {
                          "value": [
                            {
                              "value": {
                                "value": ".entities.counterparty",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "id": {
                          "value": {
                            "value": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2024-10-03T02:53:30.167953+00:00",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "open",
                          "type": "enum"
                        },
                        "rejection_reason": {
                          "value": {
                            "value": "rejection_reason",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/reports\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nreports = sdk.reports.list()\n    ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a report",
      "audiences": [],
      "operationId": "post_report_v3_reports_post",
      "tags": [
        "Reports"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PostReportV3ReportsPostRequest",
      "request": {
        "schema": {
          "generatedName": "PostReportV3ReportsPostRequest",
          "schema": "ReportBase",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "The newly created report",
        "schema": {
          "generatedName": "PostReportV3ReportsPostResponse",
          "schema": "Report",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Report a transaction with incorrect fields.",
      "authed": true,
      "method": "POST",
      "path": "/v3/reports",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "transaction_id": {
                "value": {
                  "value": "xbx8YP14g565Xk",
                  "type": "string"
                },
                "type": "primitive"
              },
              "description": {
                "value": {
                  "value": "lorem ipsum",
                  "type": "string"
                },
                "type": "primitive"
              },
              "fields": {
                "value": [
                  {
                    "value": {
                      "value": ".entities.counterparty",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "transaction_id": {
                  "value": {
                    "value": "xbx8YP14g565Xk",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "lorem ipsum",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fields": {
                  "value": [
                    {
                      "value": {
                        "value": ".entities.counterparty",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-10-03T02:53:30.167953+00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "open",
                  "type": "enum"
                },
                "rejection_reason": {
                  "value": {
                    "value": "rejection_reason",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/reports\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"transaction_id\": \"xbx8YP14g565Xk\",\n        \"description\": \"lorem ipsum\",\n        \"fields\": [\n            \".entities.counterparty\"\n        ]\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nreport = sdk.reports.create(\n    transaction_id=\"xbx8YP14g565Xk\",\n    description=\"lorem ipsum\",\n    fields=['.entities.counterparty'],\n)\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve a report",
      "audiences": [],
      "operationId": "get_report_v3_reports__id__get",
      "tags": [
        "Reports"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetReportV3ReportsIdGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetReportV3ReportsIdGetRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "GetReportV3ReportsIdGetResponse",
          "schema": "Report",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Report with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve a report",
      "authed": true,
      "method": "GET",
      "path": "/v3/reports/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "transaction_id": {
                  "value": {
                    "value": "xbx8YP14g565Xk",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "lorem ipsum",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "fields": {
                  "value": [
                    {
                      "value": {
                        "value": ".entities.counterparty",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "a652285d-de1b-4a6f-b6ce-45efa9be7952",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2024-10-03T02:53:30.167953+00:00",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "open",
                  "type": "enum"
                },
                "rejection_reason": {
                  "value": {
                    "value": "rejection_reason",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/reports/a652285d-de1b-4a6f-b6ce-45efa9be7952\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nreport = sdk.reports.get(\"a652285d-de1b-4a6f-b6ce-45efa9be7952\")\n    ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete a report",
      "audiences": [],
      "operationId": "delete_report_v3_reports__id__delete",
      "tags": [
        "Reports"
      ],
      "pathParameters": [
        {
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteReportV3ReportsIdDeleteRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteReportV3ReportsIdDeleteRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Report with the provided id not found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Delete a report",
      "authed": true,
      "method": "DELETE",
      "path": "/v3/reports/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve category set",
      "audiences": [],
      "operationId": "get_category_set_v3_categories__account_holder_type__get",
      "tags": [
        "Categories"
      ],
      "pathParameters": [
        {
          "name": "account_holder_type",
          "schema": {
            "generatedName": "GetCategorySetV3CategoriesAccountHolderTypeGetRequestAccountHolderType",
            "schema": "AccountHolderType",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetCategorySetV3CategoriesAccountHolderTypeGetRequest",
      "response": {
        "description": "Category set for the selected type of account holder",
        "schema": {
          "generatedName": "GetCategorySetV3CategoriesAccountHolderTypeGetResponse",
          "schema": "CategorySet",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieves the set of categories. Category sets are different per account holder type.",
      "authed": true,
      "method": "GET",
      "path": "/v3/categories/{account_holder_type}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "account_holder_type",
              "value": {
                "value": "consumer",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "incoming": {
                  "value": [
                    {
                      "value": {
                        "value": "transfer from investment app",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer from stock broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer from crypto broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "chargeback",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "freelance income",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "rideshare or delivery income",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "paycheck",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "benefits",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "interest earned",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "stock dividend",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "outgoing": {
                  "value": [
                    {
                      "value": {
                        "value": "digital content and streaming",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "vending machine",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "reversal",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer to investment app",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer to stock broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer to crypto broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "adjustment",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "intra account transfer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "inter account transfer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "peer to peer transfer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "funeral service",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "ATM withdrawal",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "teller withdrawal",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/categories/consumer\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.categories.get(\"consumer\")\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Set a custom set of categories",
      "audiences": [],
      "operationId": "custom_categories_post_v3_categories__account_holder_type__post",
      "tags": [
        "Categories"
      ],
      "pathParameters": [
        {
          "name": "account_holder_type",
          "schema": {
            "generatedName": "CustomCategoriesPostV3CategoriesAccountHolderTypePostRequestAccountHolderType",
            "schema": "AccountHolderType",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CustomCategoriesPostV3CategoriesAccountHolderTypePostRequest",
      "request": {
        "schema": {
          "generatedName": "CustomCategoriesPostV3CategoriesAccountHolderTypePostRequest",
          "schema": "CustomCategorySet",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Custom categories successfully set.",
        "schema": {
          "generatedName": "CustomCategoriesPostV3CategoriesAccountHolderTypePostResponse",
          "schema": "CustomCategorySet",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Sets a custom set of categories. Transactions that don't match a category will be categorized `not enough information` regardless of whether it is present in the set.",
      "authed": true,
      "method": "POST",
      "path": "/v3/categories/{account_holder_type}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "account_holder_type",
              "value": {
                "value": "consumer",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "incoming": {
                "value": [
                  {
                    "value": {
                      "value": "salary",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "investment income",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "other income",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "outgoing": {
                "value": [
                  {
                    "value": {
                      "value": "rent",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "utilities",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "groceries",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "entertainment",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "incoming": {
                  "value": [
                    {
                      "value": {
                        "value": "salary",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "investment income",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "other income",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "outgoing": {
                  "value": [
                    {
                      "value": {
                        "value": "rent",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "utilities",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "groceries",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "entertainment",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/categories/consumer\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"incoming\": [\n            \"salary\",\n            \"investment income\",\n            \"other income\"\n        ],\n        \"outgoing\": [\n            \"rent\",\n            \"utilities\",\n            \"groceries\",\n            \"entertainment\"\n        ]\n    }]'\n ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.categories.set(\"consumer\", {\n    \"incoming\": [\n        \"transfer from investment app\",\n        \"transfer from stock broker\",\n        \"transfer from crypto broker\",\n        \"chargeback\",\n        \"freelance income\",\n        \"rideshare or delivery income\",\n        \"paycheck\",\n        \"benefits\",\n        \"interest earned\",\n        \"stock dividend\"\n    ],\n    \"outgoing\": [\n        \"digital content and streaming\",\n        \"vending machine\",\n        \"reversal\",\n        \"transfer to investment app\",\n        \"transfer to stock broker\",\n        \"transfer to crypto broker\",\n        \"adjustment\",\n        \"intra account transfer\",\n        \"inter account transfer\",\n        \"peer to peer transfer\",\n        \"funeral service\",\n        \"ATM withdrawal\",\n        \"teller withdrawal\"\n    ]\n})\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Reset category set to original values",
      "audiences": [],
      "operationId": "delete_custom_category_set_v3_categories__account_holder_type__reset_post",
      "tags": [
        "Categories"
      ],
      "pathParameters": [
        {
          "name": "account_holder_type",
          "schema": {
            "generatedName": "DeleteCustomCategorySetV3CategoriesAccountHolderTypeResetPostRequestAccountHolderType",
            "schema": "AccountHolderType",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteCustomCategorySetV3CategoriesAccountHolderTypeResetPostRequest",
      "response": {
        "description": "Successful Response",
        "schema": {
          "generatedName": "DeleteCustomCategorySetV3CategoriesAccountHolderTypeResetPostResponse",
          "schema": "CategorySet",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Resets the set of categories of the specified account holder type to the original values.",
      "authed": true,
      "method": "POST",
      "path": "/v3/categories/{account_holder_type}/reset",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "account_holder_type",
              "value": {
                "value": "consumer",
                "type": "enum"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "incoming": {
                  "value": [
                    {
                      "value": {
                        "value": "transfer from investment app",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer from stock broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer from crypto broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "chargeback",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "freelance income",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "rideshare or delivery income",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "paycheck",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "benefits",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "interest earned",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "stock dividend",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "outgoing": {
                  "value": [
                    {
                      "value": {
                        "value": "digital content and streaming",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "vending machine",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "reversal",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer to investment app",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer to stock broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "transfer to crypto broker",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "adjustment",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "intra account transfer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "inter account transfer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "peer to peer transfer",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "funeral service",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "ATM withdrawal",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "teller withdrawal",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"POST\" \\\n    \"https://api.ntropy.com/v3/categories/consumer/reset\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.categories.reset(\"consumer\")\n",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Searches for an entity",
      "audiences": [],
      "operationId": "search_entity_v3_entities_lookup_get",
      "tags": [
        "Entities"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The name of the entity to resolve",
          "name": "name",
          "schema": {
            "generatedName": "SearchEntityV3EntitiesLookupGetRequestName",
            "nameOverride": "Name",
            "title": "Name",
            "description": "The name of the entity to resolve",
            "value": {
              "description": "The name of the entity to resolve",
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchEntityV3EntitiesLookupGetRequestName",
              "nameOverride": "Name",
              "title": "Name",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The website of the entity to resolve",
          "name": "website",
          "schema": {
            "generatedName": "SearchEntityV3EntitiesLookupGetRequestWebsite",
            "nameOverride": "Website",
            "title": "Website",
            "description": "The website of the entity to resolve",
            "value": {
              "description": "The website of the entity to resolve",
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchEntityV3EntitiesLookupGetRequestWebsite",
              "nameOverride": "Website",
              "title": "Website",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An unstructured location string of the entity to resolve",
          "name": "location",
          "schema": {
            "generatedName": "SearchEntityV3EntitiesLookupGetRequestLocation",
            "nameOverride": "Location",
            "title": "Location",
            "description": "An unstructured location string of the entity to resolve",
            "value": {
              "description": "An unstructured location string of the entity to resolve",
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchEntityV3EntitiesLookupGetRequestLocation",
              "nameOverride": "Location",
              "title": "Location",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SearchEntityV3EntitiesLookupGetRequest",
      "response": {
        "description": "Entity",
        "schema": {
          "generatedName": "SearchEntityV3EntitiesLookupGetResponse",
          "schema": "Entity",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "423": {
          "generatedName": "LockedError",
          "schema": {
            "generatedName": "LockedErrorBody",
            "type": "unknown"
          },
          "description": "Not enough credits.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Resolves a query into an entity by querying our entity resolution system. \n    The parameters `name` and `website` are mutually exclusive. Calls to this endpoint using \n    the `name` parameter are billed the same way transactions are.",
      "authed": true,
      "method": "GET",
      "path": "/v3/entities/lookup",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Starbucks",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "website": {
                  "value": {
                    "value": "starbucks.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "logo": {
                  "value": {
                    "value": "https://logos.ntropy.com/starbucks.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mccs": {
                  "value": [
                    {
                      "value": {
                        "value": 5814,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/entities?name=Starbucks\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.entities.lookup(name=\"Starbucks\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve an entity",
      "audiences": [],
      "operationId": "get_entity_by_id_v3_entities__id__get",
      "tags": [
        "Entities"
      ],
      "pathParameters": [
        {
          "description": "The unique ID of the entity",
          "name": "id",
          "schema": {
            "description": "The unique ID of the entity",
            "schema": {
              "type": "string"
            },
            "generatedName": "GetEntityByIdV3EntitiesIdGetRequestId",
            "nameOverride": "Id",
            "title": "Id",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetEntityByIdV3EntitiesIdGetRequest",
      "response": {
        "description": "Entity",
        "schema": {
          "generatedName": "GetEntityByIdV3EntitiesIdGetResponse",
          "schema": "Entity",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "type": "unknown"
          },
          "description": "Bad request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "Entity does not exist for ID",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        "422": {
          "generatedName": "UnprocessableEntityError",
          "schema": {
            "generatedName": "UnprocessableEntityErrorBody",
            "schema": "HTTPValidationError",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Validation Error",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieve more information about an entity by using its unique ID.",
      "authed": true,
      "method": "GET",
      "path": "/v3/entities/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "Starbucks",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "website": {
                  "value": {
                    "value": "starbucks.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "logo": {
                  "value": {
                    "value": "https://logos.ntropy.com/starbucks.com",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mccs": {
                  "value": [
                    {
                      "value": {
                        "value": 5814,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [
            {
              "name": "cURL",
              "language": "cURL",
              "code": "curl -X \"GET\" \\\n    \"https://api.ntropy.com/v3/entities/d4bc3c80-ec1a-3da2-836e-2a4ca4758be5\" \\\n    -H \"Accept: application/json\" \\\n    -H \"X-API-KEY: cd1H...Wmhl\"  ",
              "type": "language"
            },
            {
              "name": "Python SDK",
              "language": "python",
              "code": "from ntropy_sdk import SDK\n\nsdk = SDK(\"cd1H...Wmhl\")\nsdk.entities.lookup(\"d4bc3c80-ec1a-3da2-836e-2a4ca4758be5\") ",
              "type": "language"
            }
          ],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "Account": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountType",
            "key": "type",
            "schema": {
              "generatedName": "accountType",
              "nameOverride": "Account",
              "title": "Account",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountType",
                "nameOverride": "Type",
                "title": "Type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountNumber",
            "key": "number",
            "schema": {
              "generatedName": "accountNumber",
              "nameOverride": "Account",
              "title": "Account",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountNumber",
                "nameOverride": "Number",
                "title": "Number",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountOpeningBalance",
            "key": "opening_balance",
            "schema": {
              "generatedName": "accountOpeningBalance",
              "nameOverride": "Account",
              "title": "Account",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "AccountOpeningBalance",
                "title": "Opening Balance",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountClosingBalance",
            "key": "closing_balance",
            "schema": {
              "generatedName": "accountClosingBalance",
              "nameOverride": "Account",
              "title": "Account",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "AccountClosingBalance",
                "title": "Closing Balance",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountIsoCurrencyCode",
            "key": "iso_currency_code",
            "schema": {
              "generatedName": "accountIsoCurrencyCode",
              "nameOverride": "Account",
              "title": "Account",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountIsoCurrencyCode",
                "title": "Iso Currency Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Account",
        "nameOverride": "Account",
        "title": "Account",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountHolder": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountHolderType",
            "key": "type",
            "schema": {
              "generatedName": "accountHolderType",
              "nameOverride": "AccountHolder",
              "title": "AccountHolder",
              "value": {
                "generatedName": "AccountHolderType",
                "schema": "AccountType",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "accountHolderName",
            "key": "name",
            "schema": {
              "generatedName": "accountHolderName",
              "nameOverride": "AccountHolder",
              "title": "AccountHolder",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountHolderName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountHolderAddress",
            "key": "address",
            "schema": {
              "generatedName": "accountHolderAddress",
              "nameOverride": "AccountHolder",
              "title": "AccountHolder",
              "value": {
                "generatedName": "AccountHolderAddress",
                "schema": "Address",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AccountHolder",
        "nameOverride": "AccountHolder",
        "title": "AccountHolder",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountHolderCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountHolderCreateId",
            "key": "id",
            "schema": {
              "description": "The unique ID of the account holder of the transaction",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AccountHolderCreateId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountHolderCreateType",
            "key": "type",
            "schema": {
              "description": "The type of the account holder. ",
              "generatedName": "AccountHolderCreateType",
              "schema": "AccountHolderType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountHolderCreateName",
            "key": "name",
            "schema": {
              "generatedName": "accountHolderCreateName",
              "nameOverride": "AccountHolderCreate",
              "title": "AccountHolderCreate",
              "value": {
                "description": "The name of the account holder",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountHolderCreateName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AccountHolderCreate",
        "nameOverride": "AccountHolderCreate",
        "title": "AccountHolderCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountHolderExternal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "accountHolderExternalId",
            "key": "id",
            "schema": {
              "description": "The unique ID of the account holder of the transaction",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "AccountHolderExternalId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountHolderExternalType",
            "key": "type",
            "schema": {
              "description": "The type of the account holder. ",
              "generatedName": "AccountHolderExternalType",
              "schema": "AccountHolderType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountHolderExternalName",
            "key": "name",
            "schema": {
              "generatedName": "accountHolderExternalName",
              "nameOverride": "AccountHolderExternal",
              "title": "AccountHolderExternal",
              "value": {
                "description": "The name of the account holder",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AccountHolderExternalName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "accountHolderExternalCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The timestamp of when the account holder was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "AccountHolderExternalCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AccountHolderExternal",
        "nameOverride": "AccountHolderExternal",
        "title": "AccountHolderExternal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AccountHolderType": {
        "description": "An enumeration.",
        "generatedName": "AccountHolderType",
        "nameOverride": "AccountHolderType",
        "title": "AccountHolderType",
        "values": [
          {
            "generatedName": "consumer",
            "value": "consumer",
            "casing": {}
          },
          {
            "generatedName": "business",
            "value": "business",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AccountType": {
        "description": "An enumeration.",
        "generatedName": "AccountType",
        "nameOverride": "AccountType",
        "title": "AccountType",
        "values": [
          {
            "generatedName": "consumer",
            "value": "consumer",
            "casing": {}
          },
          {
            "generatedName": "business",
            "value": "business",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "AccountingCategory": {
        "description": "An enumeration.",
        "generatedName": "AccountingCategory",
        "nameOverride": "AccountingCategory",
        "title": "AccountingCategory",
        "values": [
          {
            "generatedName": "OperationalExpenses",
            "value": "operational expenses",
            "casing": {}
          },
          {
            "generatedName": "CostOfGoodsSold",
            "value": "cost of goods sold",
            "casing": {}
          },
          {
            "generatedName": "revenue",
            "value": "revenue",
            "casing": {}
          },
          {
            "generatedName": "financing",
            "value": "financing",
            "casing": {}
          },
          {
            "generatedName": "taxes",
            "value": "taxes",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ActionModel": {
        "generatedName": "ActionModel",
        "schema": "Action",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "Address": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "addressStreet",
            "key": "street",
            "schema": {
              "generatedName": "addressStreet",
              "nameOverride": "Address",
              "title": "Address",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AddressStreet",
                "nameOverride": "Street",
                "title": "Street",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressPostcode",
            "key": "postcode",
            "schema": {
              "generatedName": "addressPostcode",
              "nameOverride": "Address",
              "title": "Address",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AddressPostcode",
                "nameOverride": "Postcode",
                "title": "Postcode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressCity",
            "key": "city",
            "schema": {
              "generatedName": "addressCity",
              "nameOverride": "Address",
              "title": "Address",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AddressCity",
                "nameOverride": "City",
                "title": "City",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressState",
            "key": "state",
            "schema": {
              "generatedName": "addressState",
              "nameOverride": "Address",
              "title": "Address",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AddressState",
                "nameOverride": "State",
                "title": "State",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "addressCountry",
            "key": "country",
            "schema": {
              "generatedName": "addressCountry",
              "nameOverride": "Address",
              "title": "Address",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AddressCountry",
                "nameOverride": "Country",
                "title": "Country",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Address",
        "nameOverride": "Address",
        "title": "Address",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AsyncEnrichmentInput": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "asyncEnrichmentInputTransactions",
            "key": "transactions",
            "schema": {
              "value": {
                "generatedName": "AsyncEnrichmentInputTransactionsItem",
                "schema": "TransactionInput",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AsyncEnrichmentInputTransactions",
              "nameOverride": "Transactions",
              "title": "Transactions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AsyncEnrichmentInput",
        "nameOverride": "AsyncEnrichmentInput",
        "title": "AsyncEnrichmentInput",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BankStatement": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bankStatementId",
            "key": "id",
            "schema": {
              "description": "A unique identifier for the bank statement job.",
              "schema": {
                "type": "string"
              },
              "generatedName": "BankStatementId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementName",
            "key": "name",
            "schema": {
              "generatedName": "bankStatementName",
              "nameOverride": "BankStatement",
              "title": "BankStatement",
              "value": {
                "description": "The name of the bank statement file, if available.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BankStatementName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementStatus",
            "key": "status",
            "schema": {
              "description": "The current status of the document.",
              "generatedName": "BankStatementStatus",
              "schema": "BankStatementStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The date and time when the job was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BankStatementCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementFile",
            "key": "file",
            "schema": {
              "description": "Information about the bank statement file being processed.",
              "generatedName": "BankStatementFile",
              "schema": "BankStatementFile",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementError",
            "key": "error",
            "schema": {
              "generatedName": "bankStatementError",
              "nameOverride": "BankStatement",
              "title": "BankStatement",
              "value": {
                "generatedName": "BankStatementError",
                "schema": "BankStatementError",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Represents a bank statement with details about the file and its status.",
        "generatedName": "BankStatement",
        "nameOverride": "BankStatement",
        "title": "BankStatement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BankStatementAccount": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bankStatementAccountNumber",
            "key": "number",
            "schema": {
              "generatedName": "bankStatementAccountNumber",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "The account number, if available.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BankStatementAccountNumber",
                "nameOverride": "Number",
                "title": "Number",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountOpeningBalance",
            "key": "opening_balance",
            "schema": {
              "generatedName": "bankStatementAccountOpeningBalance",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "The opening balance of the account for the statement period.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "BankStatementAccountOpeningBalance",
                "title": "Opening Balance",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountClosingBalance",
            "key": "closing_balance",
            "schema": {
              "generatedName": "bankStatementAccountClosingBalance",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "The closing balance of the account for the statement period.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "BankStatementAccountClosingBalance",
                "title": "Closing Balance",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountStartDate",
            "key": "start_date",
            "schema": {
              "generatedName": "bankStatementAccountStartDate",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "The start date of the statement period.",
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "generatedName": "BankStatementAccountStartDate",
                "title": "Start Date",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountEndDate",
            "key": "end_date",
            "schema": {
              "generatedName": "bankStatementAccountEndDate",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "The end date of the statement period.",
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "generatedName": "BankStatementAccountEndDate",
                "title": "End Date",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountIsBalanceReconciled",
            "key": "is_balance_reconciled",
            "schema": {
              "generatedName": "bankStatementAccountIsBalanceReconciled",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "Indicates whether the balance has been reconciled.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "BankStatementAccountIsBalanceReconciled",
                "title": "Is Balance Reconciled",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountTotalIncoming",
            "key": "total_incoming",
            "schema": {
              "generatedName": "bankStatementAccountTotalIncoming",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "The sum of amounts of all incoming transactions.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "BankStatementAccountTotalIncoming",
                "title": "Total Incoming",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountTotalOutgoing",
            "key": "total_outgoing",
            "schema": {
              "generatedName": "bankStatementAccountTotalOutgoing",
              "nameOverride": "BankStatementAccount",
              "title": "BankStatementAccount",
              "value": {
                "description": "The sum of amounts of all outgoing transactions.",
                "schema": {
                  "type": "double"
                },
                "generatedName": "BankStatementAccountTotalOutgoing",
                "title": "Total Outgoing",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementAccountTransactions",
            "key": "transactions",
            "schema": {
              "description": "List of transactions for this account.",
              "value": {
                "generatedName": "BankStatementAccountTransactionsItem",
                "schema": "BankStatementTransaction",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "BankStatementAccountTransactions",
              "nameOverride": "Transactions",
              "title": "Transactions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BankStatementAccount",
        "nameOverride": "BankStatementAccount",
        "title": "BankStatementAccount",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BankStatementError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bankStatementErrorCode",
            "key": "code",
            "schema": {
              "generatedName": "BankStatementErrorCode",
              "schema": "BankStatementErrorCode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "bankStatementErrorMessage",
            "key": "message",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BankStatementErrorMessage",
              "nameOverride": "Message",
              "title": "Message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BankStatementError",
        "nameOverride": "BankStatementError",
        "title": "BankStatementError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BankStatementErrorCode": {
        "description": "An enumeration.",
        "generatedName": "BankStatementErrorCode",
        "nameOverride": "BankStatementErrorCode",
        "title": "BankStatementErrorCode",
        "values": [
          {
            "generatedName": "invalid_bank_statement",
            "value": "invalid_bank_statement",
            "casing": {}
          },
          {
            "generatedName": "internal_error",
            "value": "internal_error",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "BankStatementFile": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bankStatementFileNoPages",
            "key": "no_pages",
            "schema": {
              "description": "The number of pages in the bank statement file.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BankStatementFileNoPages",
              "title": "No Pages",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementFileSize",
            "key": "size",
            "schema": {
              "generatedName": "bankStatementFileSize",
              "nameOverride": "BankStatementFile",
              "title": "BankStatementFile",
              "value": {
                "description": "The size of the bank statement file in bytes, if available.",
                "schema": {
                  "type": "int"
                },
                "generatedName": "BankStatementFileSize",
                "nameOverride": "Size",
                "title": "Size",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BankStatementFile",
        "nameOverride": "BankStatementFile",
        "title": "BankStatementFile",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BankStatementResults": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bankStatementResultsAccounts",
            "key": "accounts",
            "schema": {
              "description": "List of accounts in the bank statement.",
              "value": {
                "generatedName": "BankStatementResultsAccountsItem",
                "schema": "BankStatementAccount",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "BankStatementResultsAccounts",
              "nameOverride": "Accounts",
              "title": "Accounts",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BankStatementResults",
        "nameOverride": "BankStatementResults",
        "title": "BankStatementResults",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BankStatementStatus": {
        "description": "An enumeration.",
        "generatedName": "BankStatementStatus",
        "nameOverride": "BankStatementStatus",
        "title": "BankStatementStatus",
        "values": [
          {
            "generatedName": "processing",
            "value": "processing",
            "casing": {}
          },
          {
            "generatedName": "completed",
            "value": "completed",
            "casing": {}
          },
          {
            "generatedName": "error",
            "value": "error",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "BankStatementTransaction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bankStatementTransactionId",
            "key": "id",
            "schema": {
              "description": "A unique identifier of the transaction",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "BankStatementTransactionId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementTransactionDescription",
            "key": "description",
            "schema": {
              "description": "The description string of the transaction",
              "schema": {
                "minLength": 0,
                "maxLength": 1024,
                "type": "string"
              },
              "generatedName": "BankStatementTransactionDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementTransactionDate",
            "key": "date",
            "schema": {
              "description": "The date that the transaction was posted. Uses ISO 8601 format (YYYY-MM-DD)",
              "schema": {
                "format": "date",
                "type": "string"
              },
              "generatedName": "BankStatementTransactionDate",
              "nameOverride": "Date",
              "title": "Date",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementTransactionAmount",
            "key": "amount",
            "schema": {
              "description": "The amount of the transaction in the `currency`. Must be a positive value. For example, if the `currency` is USD, then it's the amount in dollars.",
              "schema": {
                "minimum": 0,
                "type": "double"
              },
              "generatedName": "BankStatementTransactionAmount",
              "nameOverride": "Amount",
              "title": "Amount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementTransactionEntryType",
            "key": "entry_type",
            "schema": {
              "description": "The direction of the flow of the money from the perspective of the account holder. `outgoing` to represent money leaving the account, such as purchases or fees, while `incoming` represents money entering the account, such as income or refunds.",
              "generatedName": "BankStatementTransactionEntryType",
              "schema": "EntryType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementTransactionCurrency",
            "key": "currency",
            "schema": {
              "description": "The currency of the transaction in ISO 4217 format",
              "generatedName": "BankStatementTransactionCurrency",
              "schema": "Currency",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "bankStatementTransactionRunningBalance",
            "key": "running_balance",
            "schema": {
              "generatedName": "bankStatementTransactionRunningBalance",
              "nameOverride": "BankStatementTransaction",
              "title": "BankStatementTransaction",
              "value": {
                "description": "The account's balance when this transaction was performed",
                "schema": {
                  "type": "double"
                },
                "generatedName": "BankStatementTransactionRunningBalance",
                "title": "Running Balance",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BankStatementTransaction",
        "nameOverride": "BankStatementTransaction",
        "title": "BankStatementTransaction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Batch": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "batchId",
            "key": "id",
            "schema": {
              "description": "A unique identifier for the batch.",
              "schema": {
                "type": "string"
              },
              "generatedName": "BatchId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchStatus",
            "key": "status",
            "schema": {
              "description": "The current status of the batch. A batch will error if at least one of the transactions contains an error.",
              "generatedName": "BatchStatus",
              "schema": "BatchStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The timestamp of when the batch was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BatchCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchUpdatedAt",
            "key": "updated_at",
            "schema": {
              "description": "The timestamp of when the batch was last updated.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BatchUpdatedAt",
              "title": "Updated At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchProgress",
            "key": "progress",
            "schema": {
              "description": "The number of transactions processed so far.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BatchProgress",
              "nameOverride": "Progress",
              "title": "Progress",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchTotal",
            "key": "total",
            "schema": {
              "description": "The total number of transactions in the batch.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BatchTotal",
              "nameOverride": "Total",
              "title": "Total",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The `Batch` object represents the status and progress of an asynchronous batch enrichment job.",
        "generatedName": "Batch",
        "nameOverride": "Batch",
        "title": "Batch",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BatchResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "batchResultId",
            "key": "id",
            "schema": {
              "description": "A unique identifier for the batch.",
              "schema": {
                "type": "string"
              },
              "generatedName": "BatchResultId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchResultTotal",
            "key": "total",
            "schema": {
              "description": "The total number of transactions in the batch result.",
              "schema": {
                "type": "int"
              },
              "generatedName": "BatchResultTotal",
              "nameOverride": "Total",
              "title": "Total",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchResultStatus",
            "key": "status",
            "schema": {
              "description": "The current status of the batch job.",
              "generatedName": "BatchResultStatus",
              "schema": "BatchStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "batchResultResults",
            "key": "results",
            "schema": {
              "generatedName": "BatchResultResults",
              "schema": "EnrichmentResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The `BatchResult` object represents the result of a batch enrichment job, including its status and\nenriched transactions.",
        "generatedName": "BatchResult",
        "nameOverride": "BatchResult",
        "title": "BatchResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BatchStatus": {
        "description": "An enumeration.",
        "generatedName": "BatchStatus",
        "nameOverride": "BatchStatus",
        "title": "BatchStatus",
        "values": [
          {
            "generatedName": "processing",
            "value": "processing",
            "casing": {}
          },
          {
            "generatedName": "completed",
            "value": "completed",
            "casing": {}
          },
          {
            "generatedName": "error",
            "value": "error",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Body_post_bank_statement_v3_bank_statements_post": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bodyPostBankStatementV3BankStatementsPostFile",
            "key": "file",
            "schema": {
              "schema": {
                "format": "binary",
                "type": "string"
              },
              "generatedName": "BodyPostBankStatementV3BankStatementsPostFile",
              "nameOverride": "File",
              "title": "File",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BodyPostBankStatementV3BankStatementsPost",
        "title": "Body_post_bank_statement_v3_bank_statements_post",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Body_set_transaction_ah_v3_transactions__id__assign_post": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "bodySetTransactionAhV3TransactionsIdAssignPostAccountHolderId",
            "key": "account_holder_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BodySetTransactionAhV3TransactionsIdAssignPostAccountHolderId",
              "title": "Account Holder Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "BodySetTransactionAhV3TransactionsIdAssignPost",
        "title": "Body_set_transaction_ah_v3_transactions__id__assign_post",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Categories": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "categoriesGeneral",
            "key": "general",
            "schema": {
              "generatedName": "categoriesGeneral",
              "nameOverride": "Categories",
              "title": "Categories",
              "value": {
                "description": "The category of the transaction. View the valid set of categories for your key [here](./docs/v3/enrichment/entities).",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CategoriesGeneral",
                "nameOverride": "General",
                "title": "General",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "categoriesAccounting",
            "key": "accounting",
            "schema": {
              "generatedName": "categoriesAccounting",
              "nameOverride": "Categories",
              "title": "Categories",
              "value": {
                "description": "The corresponding accounting category. Only available for `business` transactions.",
                "generatedName": "CategoriesAccounting",
                "schema": "AccountingCategory",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Categories",
        "nameOverride": "Categories",
        "title": "Categories",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CategoryConfidence": {
        "description": "An enumeration.",
        "generatedName": "CategoryConfidence",
        "nameOverride": "CategoryConfidence",
        "title": "CategoryConfidence",
        "values": [
          {
            "generatedName": "high",
            "value": "high",
            "casing": {}
          },
          {
            "generatedName": "medium",
            "value": "medium",
            "casing": {}
          },
          {
            "generatedName": "low",
            "value": "low",
            "casing": {}
          },
          {
            "generatedName": "unknown",
            "value": "unknown",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CategorySet": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "categorySetIncoming",
            "key": "incoming",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CategorySetIncomingItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "CategorySetIncoming",
              "nameOverride": "Incoming",
              "title": "Incoming",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "categorySetOutgoing",
            "key": "outgoing",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CategorySetOutgoingItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "CategorySetOutgoing",
              "nameOverride": "Outgoing",
              "title": "Outgoing",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CategorySet",
        "nameOverride": "CategorySet",
        "title": "CategorySet",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Counterparty": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "counterpartyId",
            "key": "id",
            "schema": {
              "generatedName": "counterpartyId",
              "nameOverride": "Counterparty",
              "title": "Counterparty",
              "value": {
                "description": "The unique UUID identifier of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CounterpartyId",
                "nameOverride": "Id",
                "title": "Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "counterpartyName",
            "key": "name",
            "schema": {
              "generatedName": "counterpartyName",
              "nameOverride": "Counterparty",
              "title": "Counterparty",
              "value": {
                "description": "The name of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CounterpartyName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "counterpartyWebsite",
            "key": "website",
            "schema": {
              "generatedName": "counterpartyWebsite",
              "nameOverride": "Counterparty",
              "title": "Counterparty",
              "value": {
                "description": "The website URL of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CounterpartyWebsite",
                "nameOverride": "Website",
                "title": "Website",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "counterpartyLogo",
            "key": "logo",
            "schema": {
              "generatedName": "counterpartyLogo",
              "nameOverride": "Counterparty",
              "title": "Counterparty",
              "value": {
                "description": "Logo's URL",
                "schema": {
                  "type": "string"
                },
                "generatedName": "CounterpartyLogo",
                "nameOverride": "Logo",
                "title": "Logo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "counterpartyMccs",
            "key": "mccs",
            "schema": {
              "generatedName": "counterpartyMccs",
              "nameOverride": "Counterparty",
              "title": "Counterparty",
              "value": {
                "description": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "CounterpartyMccsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CounterpartyMccs",
                "nameOverride": "Mccs",
                "title": "Mccs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "counterpartyType",
            "key": "type",
            "schema": {
              "generatedName": "CounterpartyType",
              "schema": "CounterpartyType",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Counterparty",
        "nameOverride": "Counterparty",
        "title": "Counterparty",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CounterpartyType": {
        "description": "An enumeration.",
        "generatedName": "CounterpartyType",
        "nameOverride": "CounterpartyType",
        "title": "CounterpartyType",
        "values": [
          {
            "generatedName": "person",
            "value": "person",
            "casing": {}
          },
          {
            "generatedName": "organization",
            "value": "organization",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Country": {
        "description": "An enumeration.",
        "generatedName": "Country",
        "nameOverride": "Country",
        "title": "Country",
        "values": [
          {
            "generatedName": "AD",
            "value": "AD",
            "casing": {}
          },
          {
            "generatedName": "AE",
            "value": "AE",
            "casing": {}
          },
          {
            "generatedName": "AF",
            "value": "AF",
            "casing": {}
          },
          {
            "generatedName": "AG",
            "value": "AG",
            "casing": {}
          },
          {
            "generatedName": "AI",
            "value": "AI",
            "casing": {}
          },
          {
            "generatedName": "AL",
            "value": "AL",
            "casing": {}
          },
          {
            "generatedName": "AM",
            "value": "AM",
            "casing": {}
          },
          {
            "generatedName": "AO",
            "value": "AO",
            "casing": {}
          },
          {
            "generatedName": "AR",
            "value": "AR",
            "casing": {}
          },
          {
            "generatedName": "AS",
            "value": "AS",
            "casing": {}
          },
          {
            "generatedName": "AT",
            "value": "AT",
            "casing": {}
          },
          {
            "generatedName": "AU",
            "value": "AU",
            "casing": {}
          },
          {
            "generatedName": "AW",
            "value": "AW",
            "casing": {}
          },
          {
            "generatedName": "AZ",
            "value": "AZ",
            "casing": {}
          },
          {
            "generatedName": "BA",
            "value": "BA",
            "casing": {}
          },
          {
            "generatedName": "BB",
            "value": "BB",
            "casing": {}
          },
          {
            "generatedName": "BD",
            "value": "BD",
            "casing": {}
          },
          {
            "generatedName": "BE",
            "value": "BE",
            "casing": {}
          },
          {
            "generatedName": "BF",
            "value": "BF",
            "casing": {}
          },
          {
            "generatedName": "BG",
            "value": "BG",
            "casing": {}
          },
          {
            "generatedName": "BH",
            "value": "BH",
            "casing": {}
          },
          {
            "generatedName": "BI",
            "value": "BI",
            "casing": {}
          },
          {
            "generatedName": "BJ",
            "value": "BJ",
            "casing": {}
          },
          {
            "generatedName": "BL",
            "value": "BL",
            "casing": {}
          },
          {
            "generatedName": "BM",
            "value": "BM",
            "casing": {}
          },
          {
            "generatedName": "BN",
            "value": "BN",
            "casing": {}
          },
          {
            "generatedName": "BO",
            "value": "BO",
            "casing": {}
          },
          {
            "generatedName": "BQ",
            "value": "BQ",
            "casing": {}
          },
          {
            "generatedName": "BR",
            "value": "BR",
            "casing": {}
          },
          {
            "generatedName": "BS",
            "value": "BS",
            "casing": {}
          },
          {
            "generatedName": "BT",
            "value": "BT",
            "casing": {}
          },
          {
            "generatedName": "BV",
            "value": "BV",
            "casing": {}
          },
          {
            "generatedName": "BW",
            "value": "BW",
            "casing": {}
          },
          {
            "generatedName": "BY",
            "value": "BY",
            "casing": {}
          },
          {
            "generatedName": "BZ",
            "value": "BZ",
            "casing": {}
          },
          {
            "generatedName": "CA",
            "value": "CA",
            "casing": {}
          },
          {
            "generatedName": "CC",
            "value": "CC",
            "casing": {}
          },
          {
            "generatedName": "CD",
            "value": "CD",
            "casing": {}
          },
          {
            "generatedName": "CF",
            "value": "CF",
            "casing": {}
          },
          {
            "generatedName": "CG",
            "value": "CG",
            "casing": {}
          },
          {
            "generatedName": "CH",
            "value": "CH",
            "casing": {}
          },
          {
            "generatedName": "CI",
            "value": "CI",
            "casing": {}
          },
          {
            "generatedName": "CK",
            "value": "CK",
            "casing": {}
          },
          {
            "generatedName": "CL",
            "value": "CL",
            "casing": {}
          },
          {
            "generatedName": "CM",
            "value": "CM",
            "casing": {}
          },
          {
            "generatedName": "CN",
            "value": "CN",
            "casing": {}
          },
          {
            "generatedName": "CO",
            "value": "CO",
            "casing": {}
          },
          {
            "generatedName": "CR",
            "value": "CR",
            "casing": {}
          },
          {
            "generatedName": "CU",
            "value": "CU",
            "casing": {}
          },
          {
            "generatedName": "CV",
            "value": "CV",
            "casing": {}
          },
          {
            "generatedName": "CW",
            "value": "CW",
            "casing": {}
          },
          {
            "generatedName": "CX",
            "value": "CX",
            "casing": {}
          },
          {
            "generatedName": "CY",
            "value": "CY",
            "casing": {}
          },
          {
            "generatedName": "CZ",
            "value": "CZ",
            "casing": {}
          },
          {
            "generatedName": "DE",
            "value": "DE",
            "casing": {}
          },
          {
            "generatedName": "DJ",
            "value": "DJ",
            "casing": {}
          },
          {
            "generatedName": "DK",
            "value": "DK",
            "casing": {}
          },
          {
            "generatedName": "DM",
            "value": "DM",
            "casing": {}
          },
          {
            "generatedName": "DO",
            "value": "DO",
            "casing": {}
          },
          {
            "generatedName": "DZ",
            "value": "DZ",
            "casing": {}
          },
          {
            "generatedName": "EC",
            "value": "EC",
            "casing": {}
          },
          {
            "generatedName": "EE",
            "value": "EE",
            "casing": {}
          },
          {
            "generatedName": "EG",
            "value": "EG",
            "casing": {}
          },
          {
            "generatedName": "EH",
            "value": "EH",
            "casing": {}
          },
          {
            "generatedName": "ER",
            "value": "ER",
            "casing": {}
          },
          {
            "generatedName": "ES",
            "value": "ES",
            "casing": {}
          },
          {
            "generatedName": "ET",
            "value": "ET",
            "casing": {}
          },
          {
            "generatedName": "FI",
            "value": "FI",
            "casing": {}
          },
          {
            "generatedName": "FJ",
            "value": "FJ",
            "casing": {}
          },
          {
            "generatedName": "FK",
            "value": "FK",
            "casing": {}
          },
          {
            "generatedName": "FM",
            "value": "FM",
            "casing": {}
          },
          {
            "generatedName": "FR",
            "value": "FR",
            "casing": {}
          },
          {
            "generatedName": "GA",
            "value": "GA",
            "casing": {}
          },
          {
            "generatedName": "GB",
            "value": "GB",
            "casing": {}
          },
          {
            "generatedName": "GD",
            "value": "GD",
            "casing": {}
          },
          {
            "generatedName": "GE",
            "value": "GE",
            "casing": {}
          },
          {
            "generatedName": "GF",
            "value": "GF",
            "casing": {}
          },
          {
            "generatedName": "GG",
            "value": "GG",
            "casing": {}
          },
          {
            "generatedName": "GH",
            "value": "GH",
            "casing": {}
          },
          {
            "generatedName": "GI",
            "value": "GI",
            "casing": {}
          },
          {
            "generatedName": "GL",
            "value": "GL",
            "casing": {}
          },
          {
            "generatedName": "GM",
            "value": "GM",
            "casing": {}
          },
          {
            "generatedName": "GN",
            "value": "GN",
            "casing": {}
          },
          {
            "generatedName": "GP",
            "value": "GP",
            "casing": {}
          },
          {
            "generatedName": "GQ",
            "value": "GQ",
            "casing": {}
          },
          {
            "generatedName": "GR",
            "value": "GR",
            "casing": {}
          },
          {
            "generatedName": "GS",
            "value": "GS",
            "casing": {}
          },
          {
            "generatedName": "GT",
            "value": "GT",
            "casing": {}
          },
          {
            "generatedName": "GU",
            "value": "GU",
            "casing": {}
          },
          {
            "generatedName": "GW",
            "value": "GW",
            "casing": {}
          },
          {
            "generatedName": "GY",
            "value": "GY",
            "casing": {}
          },
          {
            "generatedName": "HK",
            "value": "HK",
            "casing": {}
          },
          {
            "generatedName": "HM",
            "value": "HM",
            "casing": {}
          },
          {
            "generatedName": "HN",
            "value": "HN",
            "casing": {}
          },
          {
            "generatedName": "HR",
            "value": "HR",
            "casing": {}
          },
          {
            "generatedName": "HT",
            "value": "HT",
            "casing": {}
          },
          {
            "generatedName": "HU",
            "value": "HU",
            "casing": {}
          },
          {
            "generatedName": "ID",
            "value": "ID",
            "casing": {}
          },
          {
            "generatedName": "IE",
            "value": "IE",
            "casing": {}
          },
          {
            "generatedName": "IL",
            "value": "IL",
            "casing": {}
          },
          {
            "generatedName": "IM",
            "value": "IM",
            "casing": {}
          },
          {
            "generatedName": "IN",
            "value": "IN",
            "casing": {}
          },
          {
            "generatedName": "IO",
            "value": "IO",
            "casing": {}
          },
          {
            "generatedName": "IQ",
            "value": "IQ",
            "casing": {}
          },
          {
            "generatedName": "IR",
            "value": "IR",
            "casing": {}
          },
          {
            "generatedName": "IS",
            "value": "IS",
            "casing": {}
          },
          {
            "generatedName": "IT",
            "value": "IT",
            "casing": {}
          },
          {
            "generatedName": "JE",
            "value": "JE",
            "casing": {}
          },
          {
            "generatedName": "JM",
            "value": "JM",
            "casing": {}
          },
          {
            "generatedName": "JO",
            "value": "JO",
            "casing": {}
          },
          {
            "generatedName": "JP",
            "value": "JP",
            "casing": {}
          },
          {
            "generatedName": "KE",
            "value": "KE",
            "casing": {}
          },
          {
            "generatedName": "KG",
            "value": "KG",
            "casing": {}
          },
          {
            "generatedName": "KH",
            "value": "KH",
            "casing": {}
          },
          {
            "generatedName": "KI",
            "value": "KI",
            "casing": {}
          },
          {
            "generatedName": "KM",
            "value": "KM",
            "casing": {}
          },
          {
            "generatedName": "KN",
            "value": "KN",
            "casing": {}
          },
          {
            "generatedName": "KP",
            "value": "KP",
            "casing": {}
          },
          {
            "generatedName": "KR",
            "value": "KR",
            "casing": {}
          },
          {
            "generatedName": "KW",
            "value": "KW",
            "casing": {}
          },
          {
            "generatedName": "KY",
            "value": "KY",
            "casing": {}
          },
          {
            "generatedName": "KZ",
            "value": "KZ",
            "casing": {}
          },
          {
            "generatedName": "LA",
            "value": "LA",
            "casing": {}
          },
          {
            "generatedName": "LB",
            "value": "LB",
            "casing": {}
          },
          {
            "generatedName": "LC",
            "value": "LC",
            "casing": {}
          },
          {
            "generatedName": "LI",
            "value": "LI",
            "casing": {}
          },
          {
            "generatedName": "LK",
            "value": "LK",
            "casing": {}
          },
          {
            "generatedName": "LR",
            "value": "LR",
            "casing": {}
          },
          {
            "generatedName": "LS",
            "value": "LS",
            "casing": {}
          },
          {
            "generatedName": "LT",
            "value": "LT",
            "casing": {}
          },
          {
            "generatedName": "LU",
            "value": "LU",
            "casing": {}
          },
          {
            "generatedName": "LV",
            "value": "LV",
            "casing": {}
          },
          {
            "generatedName": "LY",
            "value": "LY",
            "casing": {}
          },
          {
            "generatedName": "MA",
            "value": "MA",
            "casing": {}
          },
          {
            "generatedName": "MC",
            "value": "MC",
            "casing": {}
          },
          {
            "generatedName": "MD",
            "value": "MD",
            "casing": {}
          },
          {
            "generatedName": "ME",
            "value": "ME",
            "casing": {}
          },
          {
            "generatedName": "MF",
            "value": "MF",
            "casing": {}
          },
          {
            "generatedName": "MG",
            "value": "MG",
            "casing": {}
          },
          {
            "generatedName": "MH",
            "value": "MH",
            "casing": {}
          },
          {
            "generatedName": "MK",
            "value": "MK",
            "casing": {}
          },
          {
            "generatedName": "ML",
            "value": "ML",
            "casing": {}
          },
          {
            "generatedName": "MM",
            "value": "MM",
            "casing": {}
          },
          {
            "generatedName": "MN",
            "value": "MN",
            "casing": {}
          },
          {
            "generatedName": "MO",
            "value": "MO",
            "casing": {}
          },
          {
            "generatedName": "MP",
            "value": "MP",
            "casing": {}
          },
          {
            "generatedName": "MQ",
            "value": "MQ",
            "casing": {}
          },
          {
            "generatedName": "MR",
            "value": "MR",
            "casing": {}
          },
          {
            "generatedName": "MS",
            "value": "MS",
            "casing": {}
          },
          {
            "generatedName": "MT",
            "value": "MT",
            "casing": {}
          },
          {
            "generatedName": "MU",
            "value": "MU",
            "casing": {}
          },
          {
            "generatedName": "MV",
            "value": "MV",
            "casing": {}
          },
          {
            "generatedName": "MW",
            "value": "MW",
            "casing": {}
          },
          {
            "generatedName": "MX",
            "value": "MX",
            "casing": {}
          },
          {
            "generatedName": "MY",
            "value": "MY",
            "casing": {}
          },
          {
            "generatedName": "MZ",
            "value": "MZ",
            "casing": {}
          },
          {
            "generatedName": "NA",
            "value": "NA",
            "casing": {}
          },
          {
            "generatedName": "NC",
            "value": "NC",
            "casing": {}
          },
          {
            "generatedName": "NE",
            "value": "NE",
            "casing": {}
          },
          {
            "generatedName": "NF",
            "value": "NF",
            "casing": {}
          },
          {
            "generatedName": "NG",
            "value": "NG",
            "casing": {}
          },
          {
            "generatedName": "NI",
            "value": "NI",
            "casing": {}
          },
          {
            "generatedName": "NL",
            "value": "NL",
            "casing": {}
          },
          {
            "generatedName": "NO",
            "value": "NO",
            "casing": {}
          },
          {
            "generatedName": "NP",
            "value": "NP",
            "casing": {}
          },
          {
            "generatedName": "NR",
            "value": "NR",
            "casing": {}
          },
          {
            "generatedName": "NU",
            "value": "NU",
            "casing": {}
          },
          {
            "generatedName": "NZ",
            "value": "NZ",
            "casing": {}
          },
          {
            "generatedName": "OM",
            "value": "OM",
            "casing": {}
          },
          {
            "generatedName": "PA",
            "value": "PA",
            "casing": {}
          },
          {
            "generatedName": "PE",
            "value": "PE",
            "casing": {}
          },
          {
            "generatedName": "PF",
            "value": "PF",
            "casing": {}
          },
          {
            "generatedName": "PG",
            "value": "PG",
            "casing": {}
          },
          {
            "generatedName": "PH",
            "value": "PH",
            "casing": {}
          },
          {
            "generatedName": "PK",
            "value": "PK",
            "casing": {}
          },
          {
            "generatedName": "PL",
            "value": "PL",
            "casing": {}
          },
          {
            "generatedName": "PM",
            "value": "PM",
            "casing": {}
          },
          {
            "generatedName": "PN",
            "value": "PN",
            "casing": {}
          },
          {
            "generatedName": "PR",
            "value": "PR",
            "casing": {}
          },
          {
            "generatedName": "PS",
            "value": "PS",
            "casing": {}
          },
          {
            "generatedName": "PT",
            "value": "PT",
            "casing": {}
          },
          {
            "generatedName": "PW",
            "value": "PW",
            "casing": {}
          },
          {
            "generatedName": "PY",
            "value": "PY",
            "casing": {}
          },
          {
            "generatedName": "QA",
            "value": "QA",
            "casing": {}
          },
          {
            "generatedName": "RE",
            "value": "RE",
            "casing": {}
          },
          {
            "generatedName": "RO",
            "value": "RO",
            "casing": {}
          },
          {
            "generatedName": "RS",
            "value": "RS",
            "casing": {}
          },
          {
            "generatedName": "RU",
            "value": "RU",
            "casing": {}
          },
          {
            "generatedName": "RW",
            "value": "RW",
            "casing": {}
          },
          {
            "generatedName": "SA",
            "value": "SA",
            "casing": {}
          },
          {
            "generatedName": "SB",
            "value": "SB",
            "casing": {}
          },
          {
            "generatedName": "SC",
            "value": "SC",
            "casing": {}
          },
          {
            "generatedName": "SD",
            "value": "SD",
            "casing": {}
          },
          {
            "generatedName": "SE",
            "value": "SE",
            "casing": {}
          },
          {
            "generatedName": "SG",
            "value": "SG",
            "casing": {}
          },
          {
            "generatedName": "SH",
            "value": "SH",
            "casing": {}
          },
          {
            "generatedName": "SI",
            "value": "SI",
            "casing": {}
          },
          {
            "generatedName": "SJ",
            "value": "SJ",
            "casing": {}
          },
          {
            "generatedName": "SK",
            "value": "SK",
            "casing": {}
          },
          {
            "generatedName": "SL",
            "value": "SL",
            "casing": {}
          },
          {
            "generatedName": "SM",
            "value": "SM",
            "casing": {}
          },
          {
            "generatedName": "SN",
            "value": "SN",
            "casing": {}
          },
          {
            "generatedName": "SO",
            "value": "SO",
            "casing": {}
          },
          {
            "generatedName": "SR",
            "value": "SR",
            "casing": {}
          },
          {
            "generatedName": "SS",
            "value": "SS",
            "casing": {}
          },
          {
            "generatedName": "ST",
            "value": "ST",
            "casing": {}
          },
          {
            "generatedName": "SV",
            "value": "SV",
            "casing": {}
          },
          {
            "generatedName": "SX",
            "value": "SX",
            "casing": {}
          },
          {
            "generatedName": "SY",
            "value": "SY",
            "casing": {}
          },
          {
            "generatedName": "SZ",
            "value": "SZ",
            "casing": {}
          },
          {
            "generatedName": "TC",
            "value": "TC",
            "casing": {}
          },
          {
            "generatedName": "TD",
            "value": "TD",
            "casing": {}
          },
          {
            "generatedName": "TG",
            "value": "TG",
            "casing": {}
          },
          {
            "generatedName": "TH",
            "value": "TH",
            "casing": {}
          },
          {
            "generatedName": "TJ",
            "value": "TJ",
            "casing": {}
          },
          {
            "generatedName": "TK",
            "value": "TK",
            "casing": {}
          },
          {
            "generatedName": "TL",
            "value": "TL",
            "casing": {}
          },
          {
            "generatedName": "TM",
            "value": "TM",
            "casing": {}
          },
          {
            "generatedName": "TN",
            "value": "TN",
            "casing": {}
          },
          {
            "generatedName": "TO",
            "value": "TO",
            "casing": {}
          },
          {
            "generatedName": "TR",
            "value": "TR",
            "casing": {}
          },
          {
            "generatedName": "TT",
            "value": "TT",
            "casing": {}
          },
          {
            "generatedName": "TV",
            "value": "TV",
            "casing": {}
          },
          {
            "generatedName": "TW",
            "value": "TW",
            "casing": {}
          },
          {
            "generatedName": "TZ",
            "value": "TZ",
            "casing": {}
          },
          {
            "generatedName": "UA",
            "value": "UA",
            "casing": {}
          },
          {
            "generatedName": "UG",
            "value": "UG",
            "casing": {}
          },
          {
            "generatedName": "UM",
            "value": "UM",
            "casing": {}
          },
          {
            "generatedName": "US",
            "value": "US",
            "casing": {}
          },
          {
            "generatedName": "UY",
            "value": "UY",
            "casing": {}
          },
          {
            "generatedName": "UZ",
            "value": "UZ",
            "casing": {}
          },
          {
            "generatedName": "VC",
            "value": "VC",
            "casing": {}
          },
          {
            "generatedName": "VE",
            "value": "VE",
            "casing": {}
          },
          {
            "generatedName": "VG",
            "value": "VG",
            "casing": {}
          },
          {
            "generatedName": "VI",
            "value": "VI",
            "casing": {}
          },
          {
            "generatedName": "VN",
            "value": "VN",
            "casing": {}
          },
          {
            "generatedName": "VU",
            "value": "VU",
            "casing": {}
          },
          {
            "generatedName": "WF",
            "value": "WF",
            "casing": {}
          },
          {
            "generatedName": "WS",
            "value": "WS",
            "casing": {}
          },
          {
            "generatedName": "YE",
            "value": "YE",
            "casing": {}
          },
          {
            "generatedName": "YT",
            "value": "YT",
            "casing": {}
          },
          {
            "generatedName": "ZA",
            "value": "ZA",
            "casing": {}
          },
          {
            "generatedName": "ZM",
            "value": "ZM",
            "casing": {}
          },
          {
            "generatedName": "ZW",
            "value": "ZW",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Currency": {
        "description": "An enumeration.",
        "generatedName": "Currency",
        "nameOverride": "Currency",
        "title": "Currency",
        "values": [
          {
            "generatedName": "EUR",
            "value": "EUR",
            "casing": {}
          },
          {
            "generatedName": "AED",
            "value": "AED",
            "casing": {}
          },
          {
            "generatedName": "AFN",
            "value": "AFN",
            "casing": {}
          },
          {
            "generatedName": "XCD",
            "value": "XCD",
            "casing": {}
          },
          {
            "generatedName": "ALL",
            "value": "ALL",
            "casing": {}
          },
          {
            "generatedName": "AMD",
            "value": "AMD",
            "casing": {}
          },
          {
            "generatedName": "AOA",
            "value": "AOA",
            "casing": {}
          },
          {
            "generatedName": "ARS",
            "value": "ARS",
            "casing": {}
          },
          {
            "generatedName": "USD",
            "value": "USD",
            "casing": {}
          },
          {
            "generatedName": "AUD",
            "value": "AUD",
            "casing": {}
          },
          {
            "generatedName": "AWG",
            "value": "AWG",
            "casing": {}
          },
          {
            "generatedName": "AZN",
            "value": "AZN",
            "casing": {}
          },
          {
            "generatedName": "BAM",
            "value": "BAM",
            "casing": {}
          },
          {
            "generatedName": "BBD",
            "value": "BBD",
            "casing": {}
          },
          {
            "generatedName": "BDT",
            "value": "BDT",
            "casing": {}
          },
          {
            "generatedName": "XOF",
            "value": "XOF",
            "casing": {}
          },
          {
            "generatedName": "BGN",
            "value": "BGN",
            "casing": {}
          },
          {
            "generatedName": "BHD",
            "value": "BHD",
            "casing": {}
          },
          {
            "generatedName": "BIF",
            "value": "BIF",
            "casing": {}
          },
          {
            "generatedName": "BMD",
            "value": "BMD",
            "casing": {}
          },
          {
            "generatedName": "BND",
            "value": "BND",
            "casing": {}
          },
          {
            "generatedName": "BOB",
            "value": "BOB",
            "casing": {}
          },
          {
            "generatedName": "BRL",
            "value": "BRL",
            "casing": {}
          },
          {
            "generatedName": "BSD",
            "value": "BSD",
            "casing": {}
          },
          {
            "generatedName": "INR",
            "value": "INR",
            "casing": {}
          },
          {
            "generatedName": "NOK",
            "value": "NOK",
            "casing": {}
          },
          {
            "generatedName": "BWP",
            "value": "BWP",
            "casing": {}
          },
          {
            "generatedName": "BYR",
            "value": "BYR",
            "casing": {}
          },
          {
            "generatedName": "BZD",
            "value": "BZD",
            "casing": {}
          },
          {
            "generatedName": "CAD",
            "value": "CAD",
            "casing": {}
          },
          {
            "generatedName": "CDF",
            "value": "CDF",
            "casing": {}
          },
          {
            "generatedName": "XAF",
            "value": "XAF",
            "casing": {}
          },
          {
            "generatedName": "CHF",
            "value": "CHF",
            "casing": {}
          },
          {
            "generatedName": "NZD",
            "value": "NZD",
            "casing": {}
          },
          {
            "generatedName": "CLP",
            "value": "CLP",
            "casing": {}
          },
          {
            "generatedName": "CNY",
            "value": "CNY",
            "casing": {}
          },
          {
            "generatedName": "COP",
            "value": "COP",
            "casing": {}
          },
          {
            "generatedName": "CRC",
            "value": "CRC",
            "casing": {}
          },
          {
            "generatedName": "CUP",
            "value": "CUP",
            "casing": {}
          },
          {
            "generatedName": "CVE",
            "value": "CVE",
            "casing": {}
          },
          {
            "generatedName": "ANG",
            "value": "ANG",
            "casing": {}
          },
          {
            "generatedName": "CZK",
            "value": "CZK",
            "casing": {}
          },
          {
            "generatedName": "DJF",
            "value": "DJF",
            "casing": {}
          },
          {
            "generatedName": "DKK",
            "value": "DKK",
            "casing": {}
          },
          {
            "generatedName": "DOP",
            "value": "DOP",
            "casing": {}
          },
          {
            "generatedName": "DZD",
            "value": "DZD",
            "casing": {}
          },
          {
            "generatedName": "EGP",
            "value": "EGP",
            "casing": {}
          },
          {
            "generatedName": "MAD",
            "value": "MAD",
            "casing": {}
          },
          {
            "generatedName": "ERN",
            "value": "ERN",
            "casing": {}
          },
          {
            "generatedName": "ETB",
            "value": "ETB",
            "casing": {}
          },
          {
            "generatedName": "FJD",
            "value": "FJD",
            "casing": {}
          },
          {
            "generatedName": "FKP",
            "value": "FKP",
            "casing": {}
          },
          {
            "generatedName": "GBP",
            "value": "GBP",
            "casing": {}
          },
          {
            "generatedName": "GEL",
            "value": "GEL",
            "casing": {}
          },
          {
            "generatedName": "GHS",
            "value": "GHS",
            "casing": {}
          },
          {
            "generatedName": "GIP",
            "value": "GIP",
            "casing": {}
          },
          {
            "generatedName": "GMD",
            "value": "GMD",
            "casing": {}
          },
          {
            "generatedName": "GNF",
            "value": "GNF",
            "casing": {}
          },
          {
            "generatedName": "GTQ",
            "value": "GTQ",
            "casing": {}
          },
          {
            "generatedName": "GYD",
            "value": "GYD",
            "casing": {}
          },
          {
            "generatedName": "HKD",
            "value": "HKD",
            "casing": {}
          },
          {
            "generatedName": "HNL",
            "value": "HNL",
            "casing": {}
          },
          {
            "generatedName": "HUF",
            "value": "HUF",
            "casing": {}
          },
          {
            "generatedName": "IDR",
            "value": "IDR",
            "casing": {}
          },
          {
            "generatedName": "ILS",
            "value": "ILS",
            "casing": {}
          },
          {
            "generatedName": "IQD",
            "value": "IQD",
            "casing": {}
          },
          {
            "generatedName": "IRR",
            "value": "IRR",
            "casing": {}
          },
          {
            "generatedName": "ISK",
            "value": "ISK",
            "casing": {}
          },
          {
            "generatedName": "JMD",
            "value": "JMD",
            "casing": {}
          },
          {
            "generatedName": "JOD",
            "value": "JOD",
            "casing": {}
          },
          {
            "generatedName": "JPY",
            "value": "JPY",
            "casing": {}
          },
          {
            "generatedName": "KES",
            "value": "KES",
            "casing": {}
          },
          {
            "generatedName": "KGS",
            "value": "KGS",
            "casing": {}
          },
          {
            "generatedName": "KHR",
            "value": "KHR",
            "casing": {}
          },
          {
            "generatedName": "KMF",
            "value": "KMF",
            "casing": {}
          },
          {
            "generatedName": "KPW",
            "value": "KPW",
            "casing": {}
          },
          {
            "generatedName": "KRW",
            "value": "KRW",
            "casing": {}
          },
          {
            "generatedName": "KWD",
            "value": "KWD",
            "casing": {}
          },
          {
            "generatedName": "KYD",
            "value": "KYD",
            "casing": {}
          },
          {
            "generatedName": "KZT",
            "value": "KZT",
            "casing": {}
          },
          {
            "generatedName": "LAK",
            "value": "LAK",
            "casing": {}
          },
          {
            "generatedName": "LBP",
            "value": "LBP",
            "casing": {}
          },
          {
            "generatedName": "LKR",
            "value": "LKR",
            "casing": {}
          },
          {
            "generatedName": "LRD",
            "value": "LRD",
            "casing": {}
          },
          {
            "generatedName": "ZAR",
            "value": "ZAR",
            "casing": {}
          },
          {
            "generatedName": "LYD",
            "value": "LYD",
            "casing": {}
          },
          {
            "generatedName": "MDL",
            "value": "MDL",
            "casing": {}
          },
          {
            "generatedName": "MGA",
            "value": "MGA",
            "casing": {}
          },
          {
            "generatedName": "MKD",
            "value": "MKD",
            "casing": {}
          },
          {
            "generatedName": "MMK",
            "value": "MMK",
            "casing": {}
          },
          {
            "generatedName": "MNT",
            "value": "MNT",
            "casing": {}
          },
          {
            "generatedName": "MOP",
            "value": "MOP",
            "casing": {}
          },
          {
            "generatedName": "MRO",
            "value": "MRO",
            "casing": {}
          },
          {
            "generatedName": "MUR",
            "value": "MUR",
            "casing": {}
          },
          {
            "generatedName": "MVR",
            "value": "MVR",
            "casing": {}
          },
          {
            "generatedName": "MWK",
            "value": "MWK",
            "casing": {}
          },
          {
            "generatedName": "MXN",
            "value": "MXN",
            "casing": {}
          },
          {
            "generatedName": "MYR",
            "value": "MYR",
            "casing": {}
          },
          {
            "generatedName": "MZN",
            "value": "MZN",
            "casing": {}
          },
          {
            "generatedName": "XPF",
            "value": "XPF",
            "casing": {}
          },
          {
            "generatedName": "NGN",
            "value": "NGN",
            "casing": {}
          },
          {
            "generatedName": "NIO",
            "value": "NIO",
            "casing": {}
          },
          {
            "generatedName": "NPR",
            "value": "NPR",
            "casing": {}
          },
          {
            "generatedName": "OMR",
            "value": "OMR",
            "casing": {}
          },
          {
            "generatedName": "PEN",
            "value": "PEN",
            "casing": {}
          },
          {
            "generatedName": "PGK",
            "value": "PGK",
            "casing": {}
          },
          {
            "generatedName": "PHP",
            "value": "PHP",
            "casing": {}
          },
          {
            "generatedName": "PKR",
            "value": "PKR",
            "casing": {}
          },
          {
            "generatedName": "PLN",
            "value": "PLN",
            "casing": {}
          },
          {
            "generatedName": "PYG",
            "value": "PYG",
            "casing": {}
          },
          {
            "generatedName": "QAR",
            "value": "QAR",
            "casing": {}
          },
          {
            "generatedName": "RON",
            "value": "RON",
            "casing": {}
          },
          {
            "generatedName": "RSD",
            "value": "RSD",
            "casing": {}
          },
          {
            "generatedName": "RUB",
            "value": "RUB",
            "casing": {}
          },
          {
            "generatedName": "RWF",
            "value": "RWF",
            "casing": {}
          },
          {
            "generatedName": "SAR",
            "value": "SAR",
            "casing": {}
          },
          {
            "generatedName": "SBD",
            "value": "SBD",
            "casing": {}
          },
          {
            "generatedName": "SCR",
            "value": "SCR",
            "casing": {}
          },
          {
            "generatedName": "SDG",
            "value": "SDG",
            "casing": {}
          },
          {
            "generatedName": "SEK",
            "value": "SEK",
            "casing": {}
          },
          {
            "generatedName": "SGD",
            "value": "SGD",
            "casing": {}
          },
          {
            "generatedName": "SHP",
            "value": "SHP",
            "casing": {}
          },
          {
            "generatedName": "SLL",
            "value": "SLL",
            "casing": {}
          },
          {
            "generatedName": "SOS",
            "value": "SOS",
            "casing": {}
          },
          {
            "generatedName": "SRD",
            "value": "SRD",
            "casing": {}
          },
          {
            "generatedName": "SSP",
            "value": "SSP",
            "casing": {}
          },
          {
            "generatedName": "STD",
            "value": "STD",
            "casing": {}
          },
          {
            "generatedName": "SYP",
            "value": "SYP",
            "casing": {}
          },
          {
            "generatedName": "SZL",
            "value": "SZL",
            "casing": {}
          },
          {
            "generatedName": "THB",
            "value": "THB",
            "casing": {}
          },
          {
            "generatedName": "TJS",
            "value": "TJS",
            "casing": {}
          },
          {
            "generatedName": "TMT",
            "value": "TMT",
            "casing": {}
          },
          {
            "generatedName": "TND",
            "value": "TND",
            "casing": {}
          },
          {
            "generatedName": "TOP",
            "value": "TOP",
            "casing": {}
          },
          {
            "generatedName": "TRY",
            "value": "TRY",
            "casing": {}
          },
          {
            "generatedName": "TTD",
            "value": "TTD",
            "casing": {}
          },
          {
            "generatedName": "TWD",
            "value": "TWD",
            "casing": {}
          },
          {
            "generatedName": "TZS",
            "value": "TZS",
            "casing": {}
          },
          {
            "generatedName": "UAH",
            "value": "UAH",
            "casing": {}
          },
          {
            "generatedName": "UGX",
            "value": "UGX",
            "casing": {}
          },
          {
            "generatedName": "UYU",
            "value": "UYU",
            "casing": {}
          },
          {
            "generatedName": "UZS",
            "value": "UZS",
            "casing": {}
          },
          {
            "generatedName": "VEF",
            "value": "VEF",
            "casing": {}
          },
          {
            "generatedName": "VND",
            "value": "VND",
            "casing": {}
          },
          {
            "generatedName": "VUV",
            "value": "VUV",
            "casing": {}
          },
          {
            "generatedName": "WST",
            "value": "WST",
            "casing": {}
          },
          {
            "generatedName": "YER",
            "value": "YER",
            "casing": {}
          },
          {
            "generatedName": "ZMW",
            "value": "ZMW",
            "casing": {}
          },
          {
            "generatedName": "ZWL",
            "value": "ZWL",
            "casing": {}
          },
          {
            "generatedName": "HRK",
            "value": "HRK",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "CustomCategorySet": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "customCategorySetIncoming",
            "key": "incoming",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CustomCategorySetIncomingItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "CustomCategorySetIncoming",
              "nameOverride": "Incoming",
              "title": "Incoming",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "customCategorySetOutgoing",
            "key": "outgoing",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CustomCategorySetOutgoingItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "CustomCategorySetOutgoing",
              "nameOverride": "Outgoing",
              "title": "Outgoing",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CustomCategorySet",
        "nameOverride": "CustomCategorySet",
        "title": "CustomCategorySet",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DocumentStatus": {
        "description": "An enumeration.",
        "generatedName": "DocumentStatus",
        "nameOverride": "DocumentStatus",
        "title": "DocumentStatus",
        "values": [
          {
            "generatedName": "queued",
            "value": "queued",
            "casing": {}
          },
          {
            "generatedName": "processing",
            "value": "processing",
            "casing": {}
          },
          {
            "generatedName": "processed",
            "value": "processed",
            "casing": {}
          },
          {
            "generatedName": "failed",
            "value": "failed",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EnrichedTransaction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "enrichedTransactionEntities",
            "key": "entities",
            "schema": {
              "generatedName": "enrichedTransactionEntities",
              "nameOverride": "EnrichedTransaction",
              "title": "EnrichedTransaction",
              "value": {
                "generatedName": "EnrichedTransactionEntities",
                "schema": "Entities",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "enrichedTransactionCategories",
            "key": "categories",
            "schema": {
              "generatedName": "enrichedTransactionCategories",
              "nameOverride": "EnrichedTransaction",
              "title": "EnrichedTransaction",
              "value": {
                "generatedName": "EnrichedTransactionCategories",
                "schema": "Categories",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "enrichedTransactionLocation",
            "key": "location",
            "schema": {
              "generatedName": "enrichedTransactionLocation",
              "nameOverride": "EnrichedTransaction",
              "title": "EnrichedTransaction",
              "value": {
                "generatedName": "EnrichedTransactionLocation",
                "schema": "Location",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "enrichedTransactionError",
            "key": "error",
            "schema": {
              "generatedName": "enrichedTransactionError",
              "nameOverride": "EnrichedTransaction",
              "title": "EnrichedTransaction",
              "value": {
                "generatedName": "EnrichedTransactionError",
                "schema": "TransactionError",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "enrichedTransactionCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The timestamp of when the account holder was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "EnrichedTransactionCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "enrichedTransactionId",
            "key": "id",
            "schema": {
              "description": "A unique identifier for the transaction. If two transactions are submitted with the same `id` the most recent one will replace the previous one.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "EnrichedTransactionId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnrichedTransaction",
        "nameOverride": "EnrichedTransaction",
        "title": "EnrichedTransaction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnrichmentResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "enrichmentResultTransactions",
            "key": "transactions",
            "schema": {
              "description": "A list of enriched transactions resulting from the enrichment of this batch.",
              "value": {
                "generatedName": "EnrichmentResultTransactionsItem",
                "schema": "EnrichedTransaction",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "EnrichmentResultTransactions",
              "nameOverride": "Transactions",
              "title": "Transactions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnrichmentResult",
        "nameOverride": "EnrichmentResult",
        "title": "EnrichmentResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Entities": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "entitiesCounterparty",
            "key": "counterparty",
            "schema": {
              "generatedName": "entitiesCounterparty",
              "nameOverride": "Entities",
              "title": "Entities",
              "value": {
                "generatedName": "EntitiesCounterparty",
                "schema": "Counterparty",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "entitiesIntermediaries",
            "key": "intermediaries",
            "schema": {
              "generatedName": "entitiesIntermediaries",
              "nameOverride": "Entities",
              "title": "Entities",
              "value": {
                "value": {
                  "generatedName": "EntitiesIntermediariesItem",
                  "schema": "Intermediary",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "EntitiesIntermediaries",
                "nameOverride": "Intermediaries",
                "title": "Intermediaries",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Entities found by identity identification",
        "generatedName": "Entities",
        "nameOverride": "Entities",
        "title": "Entities",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Entity": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "entityId",
            "key": "id",
            "schema": {
              "generatedName": "entityId",
              "nameOverride": "Entity",
              "title": "Entity",
              "value": {
                "description": "The unique UUID identifier of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EntityId",
                "nameOverride": "Id",
                "title": "Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "entityName",
            "key": "name",
            "schema": {
              "generatedName": "entityName",
              "nameOverride": "Entity",
              "title": "Entity",
              "value": {
                "description": "The name of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EntityName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "entityWebsite",
            "key": "website",
            "schema": {
              "generatedName": "entityWebsite",
              "nameOverride": "Entity",
              "title": "Entity",
              "value": {
                "description": "The website URL of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EntityWebsite",
                "nameOverride": "Website",
                "title": "Website",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "entityLogo",
            "key": "logo",
            "schema": {
              "generatedName": "entityLogo",
              "nameOverride": "Entity",
              "title": "Entity",
              "value": {
                "description": "Logo's URL",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EntityLogo",
                "nameOverride": "Logo",
                "title": "Logo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "entityMccs",
            "key": "mccs",
            "schema": {
              "generatedName": "entityMccs",
              "nameOverride": "Entity",
              "title": "Entity",
              "value": {
                "description": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "EntityMccsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "EntityMccs",
                "nameOverride": "Mccs",
                "title": "Mccs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Entity",
        "nameOverride": "Entity",
        "title": "Entity",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EntryType": {
        "description": "An enumeration.",
        "generatedName": "EntryType",
        "nameOverride": "EntryType",
        "title": "EntryType",
        "values": [
          {
            "generatedName": "incoming",
            "value": "incoming",
            "casing": {}
          },
          {
            "generatedName": "outgoing",
            "value": "outgoing",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "FilterModel": {
        "generatedName": "FilterModel",
        "schema": "personalization",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "HTTPValidationError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "httpValidationErrorDetail",
            "key": "detail",
            "schema": {
              "generatedName": "httpValidationErrorDetail",
              "nameOverride": "HTTPValidationError",
              "title": "HTTPValidationError",
              "value": {
                "value": {
                  "generatedName": "HttpValidationErrorDetailItem",
                  "schema": "ValidationError",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "HttpValidationErrorDetail",
                "nameOverride": "Detail",
                "title": "Detail",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "HttpValidationError",
        "nameOverride": "HTTPValidationError",
        "title": "HTTPValidationError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Intermediary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "intermediaryId",
            "key": "id",
            "schema": {
              "generatedName": "intermediaryId",
              "nameOverride": "Intermediary",
              "title": "Intermediary",
              "value": {
                "description": "The unique UUID identifier of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IntermediaryId",
                "nameOverride": "Id",
                "title": "Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "intermediaryName",
            "key": "name",
            "schema": {
              "generatedName": "intermediaryName",
              "nameOverride": "Intermediary",
              "title": "Intermediary",
              "value": {
                "description": "The name of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IntermediaryName",
                "nameOverride": "Name",
                "title": "Name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "intermediaryWebsite",
            "key": "website",
            "schema": {
              "generatedName": "intermediaryWebsite",
              "nameOverride": "Intermediary",
              "title": "Intermediary",
              "value": {
                "description": "The website URL of the entity",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IntermediaryWebsite",
                "nameOverride": "Website",
                "title": "Website",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "intermediaryLogo",
            "key": "logo",
            "schema": {
              "generatedName": "intermediaryLogo",
              "nameOverride": "Intermediary",
              "title": "Intermediary",
              "value": {
                "description": "Logo's URL",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IntermediaryLogo",
                "nameOverride": "Logo",
                "title": "Logo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "intermediaryMccs",
            "key": "mccs",
            "schema": {
              "generatedName": "intermediaryMccs",
              "nameOverride": "Intermediary",
              "title": "Intermediary",
              "value": {
                "description": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "IntermediaryMccsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IntermediaryMccs",
                "nameOverride": "Mccs",
                "title": "Mccs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "intermediaryType",
            "key": "type",
            "schema": {
              "generatedName": "IntermediaryType",
              "schema": "IntermediaryType",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Intermediary",
        "nameOverride": "Intermediary",
        "title": "Intermediary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IntermediaryType": {
        "description": "An enumeration.",
        "generatedName": "IntermediaryType",
        "nameOverride": "IntermediaryType",
        "title": "IntermediaryType",
        "values": [
          {
            "generatedName": "delivery_service",
            "value": "delivery_service",
            "casing": {}
          },
          {
            "generatedName": "payment_processor",
            "value": "payment_processor",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Location": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "locationRawAddress",
            "key": "raw_address",
            "schema": {
              "generatedName": "locationRawAddress",
              "nameOverride": "Location",
              "title": "Location",
              "value": {
                "description": "An unstructured string containing the address",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationRawAddress",
                "title": "Raw Address",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructured",
            "key": "structured",
            "schema": {
              "generatedName": "locationStructured",
              "nameOverride": "Location",
              "title": "Location",
              "value": {
                "description": "When raw is set, a structured representation of it.",
                "generatedName": "LocationStructured",
                "schema": "LocationStructured",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Location",
        "nameOverride": "Location",
        "title": "Location",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LocationInput": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "locationInputRawAddress",
            "key": "raw_address",
            "schema": {
              "generatedName": "locationInputRawAddress",
              "nameOverride": "LocationInput",
              "title": "LocationInput",
              "value": {
                "description": "An unstructured string containing the address",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationInputRawAddress",
                "title": "Raw Address",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationInputCountry",
            "key": "country",
            "schema": {
              "description": "The country where the transaction was made in ISO 3166-2 format",
              "generatedName": "LocationInputCountry",
              "schema": "Country",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Location of where the transaction has taken place. This can greatly improve entity identification, especially\nunder ambiguity.",
        "generatedName": "LocationInput",
        "nameOverride": "LocationInput",
        "title": "LocationInput",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LocationStructured": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "locationStructuredStreet",
            "key": "street",
            "schema": {
              "generatedName": "locationStructuredStreet",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The street name and number of the location",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredStreet",
                "nameOverride": "Street",
                "title": "Street",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredCity",
            "key": "city",
            "schema": {
              "generatedName": "locationStructuredCity",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The city where the location is situated",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredCity",
                "nameOverride": "City",
                "title": "City",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredState",
            "key": "state",
            "schema": {
              "generatedName": "locationStructuredState",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The state or region of the location",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredState",
                "nameOverride": "State",
                "title": "State",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredPostcode",
            "key": "postcode",
            "schema": {
              "generatedName": "locationStructuredPostcode",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The postal code or ZIP code of the location",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredPostcode",
                "nameOverride": "Postcode",
                "title": "Postcode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredCountryCode",
            "key": "country_code",
            "schema": {
              "generatedName": "locationStructuredCountryCode",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The country code of the location in ISO 3166-2 format",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredCountryCode",
                "title": "Country Code",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredCountry",
            "key": "country",
            "schema": {
              "generatedName": "locationStructuredCountry",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The full name of the country",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredCountry",
                "nameOverride": "Country",
                "title": "Country",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredLatitude",
            "key": "latitude",
            "schema": {
              "generatedName": "locationStructuredLatitude",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The latitude coordinate of the location",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LocationStructuredLatitude",
                "nameOverride": "Latitude",
                "title": "Latitude",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredLongitude",
            "key": "longitude",
            "schema": {
              "generatedName": "locationStructuredLongitude",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "The longitude coordinate of the location",
                "schema": {
                  "type": "double"
                },
                "generatedName": "LocationStructuredLongitude",
                "nameOverride": "Longitude",
                "title": "Longitude",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredGoogleMapsUrl",
            "key": "google_maps_url",
            "schema": {
              "generatedName": "locationStructuredGoogleMapsUrl",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "A URL link to view the location on Google Maps",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredGoogleMapsUrl",
                "title": "Google Maps Url",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredAppleMapsUrl",
            "key": "apple_maps_url",
            "schema": {
              "generatedName": "locationStructuredAppleMapsUrl",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "A URL link to view the location on Apple Maps",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredAppleMapsUrl",
                "title": "Apple Maps Url",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "locationStructuredStoreNumber",
            "key": "store_number",
            "schema": {
              "generatedName": "locationStructuredStoreNumber",
              "nameOverride": "LocationStructured",
              "title": "LocationStructured",
              "value": {
                "description": "A unique identifier for a specific store or branch, if applicable",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LocationStructuredStoreNumber",
                "title": "Store Number",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LocationStructured",
        "nameOverride": "LocationStructured",
        "title": "LocationStructured",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PagedResponse_AccountHolderExternal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pagedResponseAccountHolderExternalNextCursor",
            "key": "next_cursor",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PagedResponseAccountHolderExternalNextCursor",
              "title": "Next Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagedResponseAccountHolderExternalData",
            "key": "data",
            "schema": {
              "value": {
                "generatedName": "PagedResponseAccountHolderExternalDataItem",
                "schema": "AccountHolderExternal",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PagedResponseAccountHolderExternalData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PagedResponseAccountHolderExternal",
        "title": "PagedResponse_AccountHolderExternal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PagedResponse_BankStatement": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pagedResponseBankStatementNextCursor",
            "key": "next_cursor",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PagedResponseBankStatementNextCursor",
              "title": "Next Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagedResponseBankStatementData",
            "key": "data",
            "schema": {
              "value": {
                "generatedName": "PagedResponseBankStatementDataItem",
                "schema": "BankStatement",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PagedResponseBankStatementData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PagedResponseBankStatement",
        "title": "PagedResponse_BankStatement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PagedResponse_Batch": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pagedResponseBatchNextCursor",
            "key": "next_cursor",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PagedResponseBatchNextCursor",
              "title": "Next Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagedResponseBatchData",
            "key": "data",
            "schema": {
              "value": {
                "generatedName": "PagedResponseBatchDataItem",
                "schema": "Batch",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PagedResponseBatchData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PagedResponseBatch",
        "title": "PagedResponse_Batch",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PagedResponse_Report_": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pagedResponseReportNextCursor",
            "key": "next_cursor",
            "schema": {
              "generatedName": "pagedResponseReportNextCursor",
              "title": "PagedResponse[Report]",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PagedResponseReportNextCursor",
                "title": "Next Cursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagedResponseReportData",
            "key": "data",
            "schema": {
              "value": {
                "generatedName": "PagedResponseReportDataItem",
                "schema": "Report",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PagedResponseReportData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PagedResponseReport",
        "title": "PagedResponse[Report]",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PagedResponse_Transaction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pagedResponseTransactionNextCursor",
            "key": "next_cursor",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PagedResponseTransactionNextCursor",
              "title": "Next Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagedResponseTransactionData",
            "key": "data",
            "schema": {
              "value": {
                "generatedName": "PagedResponseTransactionDataItem",
                "schema": "Transaction",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PagedResponseTransactionData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PagedResponseTransaction",
        "title": "PagedResponse_Transaction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PagedResponse_Webhook": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pagedResponseWebhookNextCursor",
            "key": "next_cursor",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PagedResponseWebhookNextCursor",
              "title": "Next Cursor",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "pagedResponseWebhookData",
            "key": "data",
            "schema": {
              "value": {
                "generatedName": "PagedResponseWebhookDataItem",
                "schema": "Webhook",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PagedResponseWebhookData",
              "nameOverride": "Data",
              "title": "Data",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PagedResponseWebhook",
        "title": "PagedResponse_Webhook",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Recurrence": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "recurrenceType",
            "key": "type",
            "schema": {
              "description": "Whether the transaction is a one-time transfer `one-off`, regularly with varying pricing `recurring` or with fixed pricing `subscription`",
              "generatedName": "RecurrenceType",
              "schema": "RecurrenceType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The `Recurrence` object represents the recurrence pattern of a transaction. It provides information about\nwhether a transaction is a one-time event or a part of a recurring series.",
        "generatedName": "Recurrence",
        "nameOverride": "Recurrence",
        "title": "Recurrence",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RecurrenceGroup": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "recurrenceGroupId",
            "key": "id",
            "schema": {
              "description": "A unique UUID identifier for the group",
              "schema": {
                "type": "string"
              },
              "generatedName": "RecurrenceGroupId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupStartDate",
            "key": "start_date",
            "schema": {
              "description": "The date of the oldest transaction in the group",
              "schema": {
                "format": "date",
                "type": "string"
              },
              "generatedName": "RecurrenceGroupStartDate",
              "title": "Start Date",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupEndDate",
            "key": "end_date",
            "schema": {
              "description": "The date of the most recent transaction in the group",
              "schema": {
                "format": "date",
                "type": "string"
              },
              "generatedName": "RecurrenceGroupEndDate",
              "title": "End Date",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupTotalAmount",
            "key": "total_amount",
            "schema": {
              "description": "The sum of all transaction amounts in this group",
              "schema": {
                "type": "double"
              },
              "generatedName": "RecurrenceGroupTotalAmount",
              "title": "Total Amount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupAverageAmount",
            "key": "average_amount",
            "schema": {
              "description": "The average amount per transaction in this group",
              "schema": {
                "type": "double"
              },
              "generatedName": "RecurrenceGroupAverageAmount",
              "title": "Average Amount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupPeriodicityInDays",
            "key": "periodicity_in_days",
            "schema": {
              "description": "The estimated number of days between transactions in this group",
              "schema": {
                "type": "double"
              },
              "generatedName": "RecurrenceGroupPeriodicityInDays",
              "title": "Periodicity In Days",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupPeriodicity",
            "key": "periodicity",
            "schema": {
              "description": "A human-readable description of the transaction frequency",
              "generatedName": "RecurrenceGroupPeriodicity",
              "schema": "RecurrencePeriodicity",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupCounterparty",
            "key": "counterparty",
            "schema": {
              "description": "Counterparty of the transactions",
              "generatedName": "RecurrenceGroupCounterparty",
              "schema": "Counterparty",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupCategories",
            "key": "categories",
            "schema": {
              "description": "Categories of the transactions in the recurrence group",
              "generatedName": "RecurrenceGroupCategories",
              "schema": "Categories",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "recurrenceGroupTransactionIds",
            "key": "transaction_ids",
            "schema": {
              "description": "Transactions in this recurrence group",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RecurrenceGroupTransactionIdsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "RecurrenceGroupTransactionIds",
              "title": "Transaction Ids",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RecurrenceGroup",
        "nameOverride": "RecurrenceGroup",
        "title": "RecurrenceGroup",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RecurrencePeriodicity": {
        "description": "An enumeration.",
        "generatedName": "RecurrencePeriodicity",
        "nameOverride": "RecurrencePeriodicity",
        "title": "RecurrencePeriodicity",
        "values": [
          {
            "generatedName": "daily",
            "value": "daily",
            "casing": {}
          },
          {
            "generatedName": "weekly",
            "value": "weekly",
            "casing": {}
          },
          {
            "generatedName": "bi_weekly",
            "value": "bi_weekly",
            "casing": {}
          },
          {
            "generatedName": "monthly",
            "value": "monthly",
            "casing": {}
          },
          {
            "generatedName": "bi_monthly",
            "value": "bi_monthly",
            "casing": {}
          },
          {
            "generatedName": "quarterly",
            "value": "quarterly",
            "casing": {}
          },
          {
            "generatedName": "semi_yearly",
            "value": "semi_yearly",
            "casing": {}
          },
          {
            "generatedName": "yearly",
            "value": "yearly",
            "casing": {}
          },
          {
            "generatedName": "other",
            "value": "other",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RecurrenceType": {
        "description": "An enumeration.",
        "generatedName": "RecurrenceType",
        "nameOverride": "RecurrenceType",
        "title": "RecurrenceType",
        "values": [
          {
            "generatedName": "recurring",
            "value": "recurring",
            "casing": {}
          },
          {
            "generatedName": "subscription",
            "value": "subscription",
            "casing": {}
          },
          {
            "generatedName": "OneOff",
            "value": "one off",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Report": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "reportTransactionId",
            "key": "transaction_id",
            "schema": {
              "description": "The unique identifier of the transaction",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ReportTransactionId",
              "title": "Transaction Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportDescription",
            "key": "description",
            "schema": {
              "description": "A description of what is wrong in the transaction",
              "schema": {
                "type": "string"
              },
              "generatedName": "ReportDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportFields",
            "key": "fields",
            "schema": {
              "description": "A list of the fields that are incorrect",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ReportFieldsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ReportFields",
              "nameOverride": "Fields",
              "title": "Fields",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportId",
            "key": "id",
            "schema": {
              "description": "A generated unique identifier for the report.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ReportId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The date and time when the report was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ReportCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportStatus",
            "key": "status",
            "schema": {
              "description": "The status of the report.\n\n* `open`: a newly created report\n* `pending`: the report is being investigated\n* `rejected`: the original enrichment output was deemed correct or we couldn't resolve it, check `rejection_reason`\n* `resolved`: the issue has been resolved",
              "generatedName": "ReportStatus",
              "schema": "ReportStatus",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportRejectionReason",
            "key": "rejection_reason",
            "schema": {
              "generatedName": "reportRejectionReason",
              "nameOverride": "Report",
              "title": "Report",
              "value": {
                "description": "An explanation of why the report was rejected",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ReportRejectionReason",
                "title": "Rejection Reason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Report",
        "nameOverride": "Report",
        "title": "Report",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ReportBase": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "reportBaseTransactionId",
            "key": "transaction_id",
            "schema": {
              "description": "The unique identifier of the transaction",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ReportBaseTransactionId",
              "title": "Transaction Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportBaseDescription",
            "key": "description",
            "schema": {
              "description": "A description of what is wrong in the transaction",
              "schema": {
                "type": "string"
              },
              "generatedName": "ReportBaseDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "reportBaseFields",
            "key": "fields",
            "schema": {
              "description": "A list of the fields that are incorrect",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ReportBaseFieldsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ReportBaseFields",
              "nameOverride": "Fields",
              "title": "Fields",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ReportBase",
        "nameOverride": "ReportBase",
        "title": "ReportBase",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ReportStatus": {
        "description": "An enumeration.",
        "generatedName": "ReportStatus",
        "nameOverride": "ReportStatus",
        "title": "ReportStatus",
        "values": [
          {
            "generatedName": "open",
            "value": "open",
            "casing": {}
          },
          {
            "generatedName": "pending",
            "value": "pending",
            "casing": {}
          },
          {
            "generatedName": "resolved",
            "value": "resolved",
            "casing": {}
          },
          {
            "generatedName": "rejected",
            "value": "rejected",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "StatementInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "statementInfoInstitution",
            "key": "institution",
            "schema": {
              "generatedName": "statementInfoInstitution",
              "nameOverride": "StatementInfo",
              "title": "StatementInfo",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "StatementInfoInstitution",
                "nameOverride": "Institution",
                "title": "Institution",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statementInfoStartDate",
            "key": "start_date",
            "schema": {
              "generatedName": "statementInfoStartDate",
              "nameOverride": "StatementInfo",
              "title": "StatementInfo",
              "value": {
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "generatedName": "StatementInfoStartDate",
                "title": "Start Date",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statementInfoEndDate",
            "key": "end_date",
            "schema": {
              "generatedName": "statementInfoEndDate",
              "nameOverride": "StatementInfo",
              "title": "StatementInfo",
              "value": {
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "generatedName": "StatementInfoEndDate",
                "title": "End Date",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "statementInfoAccountHolder",
            "key": "account_holder",
            "schema": {
              "generatedName": "statementInfoAccountHolder",
              "nameOverride": "StatementInfo",
              "title": "StatementInfo",
              "value": {
                "generatedName": "StatementInfoAccountHolder",
                "schema": "AccountHolder",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "statementInfoAccounts",
            "key": "accounts",
            "schema": {
              "generatedName": "statementInfoAccounts",
              "nameOverride": "StatementInfo",
              "title": "StatementInfo",
              "value": {
                "value": {
                  "generatedName": "StatementInfoAccountsItem",
                  "schema": "Account",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "StatementInfoAccounts",
                "nameOverride": "Accounts",
                "title": "Accounts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "StatementInfo",
        "nameOverride": "StatementInfo",
        "title": "StatementInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SyncEnrichmentInput": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "syncEnrichmentInputTransactions",
            "key": "transactions",
            "schema": {
              "value": {
                "generatedName": "SyncEnrichmentInputTransactionsItem",
                "schema": "TransactionInput",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SyncEnrichmentInputTransactions",
              "nameOverride": "Transactions",
              "title": "Transactions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SyncEnrichmentInput",
        "nameOverride": "SyncEnrichmentInput",
        "title": "SyncEnrichmentInput",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SyncEnrichmentOutput": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "syncEnrichmentOutputTransactions",
            "key": "transactions",
            "schema": {
              "description": "A list of enriched transactions resulting from the enrichment of this batch.",
              "value": {
                "generatedName": "SyncEnrichmentOutputTransactionsItem",
                "schema": "EnrichedTransaction",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SyncEnrichmentOutputTransactions",
              "nameOverride": "Transactions",
              "title": "Transactions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SyncEnrichmentOutput",
        "nameOverride": "SyncEnrichmentOutput",
        "title": "SyncEnrichmentOutput",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Transaction": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionId",
            "key": "id",
            "schema": {
              "description": "A unique identifier of the transaction",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TransactionId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionDescription",
            "key": "description",
            "schema": {
              "description": "The description string of the transaction",
              "schema": {
                "minLength": 0,
                "maxLength": 1024,
                "type": "string"
              },
              "generatedName": "TransactionDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionDate",
            "key": "date",
            "schema": {
              "description": "The date that the transaction was posted. Uses ISO 8601 format (YYYY-MM-DD)",
              "schema": {
                "format": "date",
                "type": "string"
              },
              "generatedName": "TransactionDate",
              "nameOverride": "Date",
              "title": "Date",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionAmount",
            "key": "amount",
            "schema": {
              "description": "The amount of the transaction in the `currency`. Must be a positive value. For example, if the `currency` is USD, then it's the amount in dollars.",
              "schema": {
                "minimum": 0,
                "type": "double"
              },
              "generatedName": "TransactionAmount",
              "nameOverride": "Amount",
              "title": "Amount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEntryType",
            "key": "entry_type",
            "schema": {
              "description": "The direction of the flow of the money from the perspective of the account holder. `outgoing` to represent money leaving the account, such as purchases or fees, while `incoming` represents money entering the account, such as income or refunds.",
              "generatedName": "TransactionEntryType",
              "schema": "EntryType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionCurrency",
            "key": "currency",
            "schema": {
              "description": "The currency of the transaction in ISO 4217 format",
              "generatedName": "TransactionCurrency",
              "schema": "Currency",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionEntities",
            "key": "entities",
            "schema": {
              "generatedName": "transactionEntities",
              "nameOverride": "Transaction",
              "title": "Transaction",
              "value": {
                "generatedName": "TransactionEntities",
                "schema": "Entities",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionCategories",
            "key": "categories",
            "schema": {
              "generatedName": "transactionCategories",
              "nameOverride": "Transaction",
              "title": "Transaction",
              "value": {
                "generatedName": "TransactionCategories",
                "schema": "Categories",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionLocation",
            "key": "location",
            "schema": {
              "generatedName": "transactionLocation",
              "nameOverride": "Transaction",
              "title": "Transaction",
              "value": {
                "generatedName": "TransactionLocation",
                "schema": "Location",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionError",
            "key": "error",
            "schema": {
              "generatedName": "transactionError",
              "nameOverride": "Transaction",
              "title": "Transaction",
              "value": {
                "generatedName": "TransactionError",
                "schema": "TransactionError",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The timestamp of when the account holder was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "TransactionCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionAccountHolderId",
            "key": "account_holder_id",
            "schema": {
              "generatedName": "transactionAccountHolderId",
              "nameOverride": "Transaction",
              "title": "Transaction",
              "value": {
                "description": "The unique ID of the account holder of the transaction",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "TransactionAccountHolderId",
                "title": "Account Holder Id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecurrence",
            "key": "recurrence",
            "schema": {
              "generatedName": "transactionRecurrence",
              "nameOverride": "Transaction",
              "title": "Transaction",
              "value": {
                "generatedName": "TransactionRecurrence",
                "schema": "Recurrence",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Transaction",
        "nameOverride": "Transaction",
        "title": "Transaction",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionErrorCode",
            "key": "code",
            "schema": {
              "generatedName": "TransactionErrorCode",
              "schema": "TransactionErrorCode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "transactionErrorMessage",
            "key": "message",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TransactionErrorMessage",
              "nameOverride": "Message",
              "title": "Message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionError",
        "nameOverride": "TransactionError",
        "title": "TransactionError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionErrorCode": {
        "description": "An enumeration.",
        "generatedName": "TransactionErrorCode",
        "nameOverride": "TransactionErrorCode",
        "title": "TransactionErrorCode",
        "values": [
          {
            "generatedName": "account_holder_not_found",
            "value": "account_holder_not_found",
            "casing": {}
          },
          {
            "generatedName": "internal_error",
            "value": "internal_error",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "TransactionInput": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionInputId",
            "key": "id",
            "schema": {
              "description": "A unique identifier of the transaction",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "TransactionInputId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionInputDescription",
            "key": "description",
            "schema": {
              "description": "The description string of the transaction",
              "schema": {
                "minLength": 0,
                "maxLength": 1024,
                "type": "string"
              },
              "generatedName": "TransactionInputDescription",
              "nameOverride": "Description",
              "title": "Description",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionInputDate",
            "key": "date",
            "schema": {
              "description": "The date that the transaction was posted. Uses ISO 8601 format (YYYY-MM-DD)",
              "schema": {
                "format": "date",
                "type": "string"
              },
              "generatedName": "TransactionInputDate",
              "nameOverride": "Date",
              "title": "Date",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionInputAmount",
            "key": "amount",
            "schema": {
              "description": "The amount of the transaction in the `currency`. Must be a positive value. For example, if the `currency` is USD, then it's the amount in dollars.",
              "schema": {
                "minimum": 0,
                "type": "double"
              },
              "generatedName": "TransactionInputAmount",
              "nameOverride": "Amount",
              "title": "Amount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionInputEntryType",
            "key": "entry_type",
            "schema": {
              "description": "The direction of the flow of the money from the perspective of the account holder. `outgoing` to represent money leaving the account, such as purchases or fees, while `incoming` represents money entering the account, such as income or refunds.",
              "generatedName": "TransactionInputEntryType",
              "schema": "EntryType",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionInputCurrency",
            "key": "currency",
            "schema": {
              "description": "The currency of the transaction in ISO 4217 format",
              "generatedName": "TransactionInputCurrency",
              "schema": "Currency",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionInputAccountHolderId",
            "key": "account_holder_id",
            "schema": {
              "description": "The unique ID of the account holder. Unsetting it will disable [categorization](./docs/v3/enrichment/entities).",
              "schema": {
                "type": "string"
              },
              "generatedName": "TransactionInputAccountHolderId",
              "title": "Account Holder Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionInputLocation",
            "key": "location",
            "schema": {
              "generatedName": "transactionInputLocation",
              "nameOverride": "TransactionInput",
              "title": "TransactionInput",
              "value": {
                "generatedName": "TransactionInputLocation",
                "schema": "LocationInput",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionInput",
        "nameOverride": "TransactionInput",
        "title": "TransactionInput",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ValidationError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "validationErrorLoc",
            "key": "loc",
            "schema": {
              "value": {
                "value": {
                  "generatedName": "ValidationErrorLocItem",
                  "schemas": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "ValidationErrorLocItem",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "schema": {
                        "type": "int"
                      },
                      "generatedName": "ValidationErrorLocItem",
                      "groupName": [],
                      "type": "primitive"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "generatedName": "ValidationErrorLoc",
              "nameOverride": "Location",
              "title": "Location",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "validationErrorMsg",
            "key": "msg",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ValidationErrorMsg",
              "nameOverride": "Message",
              "title": "Message",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "validationErrorType",
            "key": "type",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ValidationErrorType",
              "title": "Error Type",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ValidationError",
        "nameOverride": "ValidationError",
        "title": "ValidationError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Webhook": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookUrl",
            "key": "url",
            "schema": {
              "description": "The URL of the webhook",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "maxLength": 1024,
                "type": "string"
              },
              "generatedName": "WebhookUrl",
              "nameOverride": "Url",
              "title": "Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookEvents",
            "key": "events",
            "schema": {
              "description": "A list of events that this webhook subscribes to",
              "value": {
                "generatedName": "WebhookEventsItem",
                "values": [
                  {
                    "generatedName": "ReportsResolved",
                    "value": "reports.resolved",
                    "casing": {}
                  },
                  {
                    "generatedName": "ReportsRejected",
                    "value": "reports.rejected",
                    "casing": {}
                  },
                  {
                    "generatedName": "ReportsPending",
                    "value": "reports.pending",
                    "casing": {}
                  },
                  {
                    "generatedName": "BankStatementsCompleted",
                    "value": "bank_statements.completed",
                    "casing": {}
                  },
                  {
                    "generatedName": "BankStatementsError",
                    "value": "bank_statements.error",
                    "casing": {}
                  },
                  {
                    "generatedName": "BatchesCompleted",
                    "value": "batches.completed",
                    "casing": {}
                  },
                  {
                    "generatedName": "BatchesError",
                    "value": "batches.error",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "generatedName": "WebhookEvents",
              "nameOverride": "Events",
              "title": "Events",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookToken",
            "key": "token",
            "schema": {
              "generatedName": "webhookToken",
              "nameOverride": "Webhook",
              "title": "Webhook",
              "value": {
                "description": "A secret string used to authenticate the webhook. This value will be included in the `X-Ntropy-Token` header when sending requests to the webhook",
                "schema": {
                  "maxLength": 128,
                  "type": "string"
                },
                "generatedName": "WebhookToken",
                "nameOverride": "Token",
                "title": "Token",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookId",
            "key": "id",
            "schema": {
              "description": "A generated unique identifier for the webhook",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookId",
              "nameOverride": "Id",
              "title": "Id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookCreatedAt",
            "key": "created_at",
            "schema": {
              "description": "The date and time when the webhook was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "WebhookCreatedAt",
              "title": "Created At",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookEnabled",
            "key": "enabled",
            "schema": {
              "description": "Whether the webhook is enabled or not.",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "WebhookEnabled",
              "nameOverride": "Enabled",
              "title": "Enabled",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Webhook",
        "nameOverride": "Webhook",
        "title": "Webhook",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WebhookBase": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookBaseUrl",
            "key": "url",
            "schema": {
              "description": "The URL of the webhook",
              "schema": {
                "format": "uri",
                "minLength": 1,
                "maxLength": 1024,
                "type": "string"
              },
              "generatedName": "WebhookBaseUrl",
              "nameOverride": "Url",
              "title": "Url",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookBaseEvents",
            "key": "events",
            "schema": {
              "description": "A list of events that this webhook subscribes to",
              "value": {
                "generatedName": "WebhookBaseEventsItem",
                "values": [
                  {
                    "generatedName": "ReportsResolved",
                    "value": "reports.resolved",
                    "casing": {}
                  },
                  {
                    "generatedName": "ReportsRejected",
                    "value": "reports.rejected",
                    "casing": {}
                  },
                  {
                    "generatedName": "ReportsPending",
                    "value": "reports.pending",
                    "casing": {}
                  },
                  {
                    "generatedName": "BankStatementsCompleted",
                    "value": "bank_statements.completed",
                    "casing": {}
                  },
                  {
                    "generatedName": "BankStatementsError",
                    "value": "bank_statements.error",
                    "casing": {}
                  },
                  {
                    "generatedName": "BatchesCompleted",
                    "value": "batches.completed",
                    "casing": {}
                  },
                  {
                    "generatedName": "BatchesError",
                    "value": "batches.error",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "generatedName": "WebhookBaseEvents",
              "nameOverride": "Events",
              "title": "Events",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookBaseToken",
            "key": "token",
            "schema": {
              "generatedName": "webhookBaseToken",
              "nameOverride": "WebhookBase",
              "title": "WebhookBase",
              "value": {
                "description": "A secret string used to authenticate the webhook. This value will be included in the `X-Ntropy-Token` header when sending requests to the webhook",
                "schema": {
                  "maxLength": 128,
                  "type": "string"
                },
                "generatedName": "WebhookBaseToken",
                "nameOverride": "Token",
                "title": "Token",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookBase",
        "nameOverride": "WebhookBase",
        "title": "WebhookBase",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WebhookPatch": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookPatchUrl",
            "key": "url",
            "schema": {
              "generatedName": "webhookPatchUrl",
              "nameOverride": "WebhookPatch",
              "title": "WebhookPatch",
              "value": {
                "description": "The URL of the webhook",
                "schema": {
                  "format": "uri",
                  "minLength": 1,
                  "maxLength": 1024,
                  "type": "string"
                },
                "generatedName": "WebhookPatchUrl",
                "nameOverride": "Url",
                "title": "Url",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookPatchEvents",
            "key": "events",
            "schema": {
              "generatedName": "webhookPatchEvents",
              "nameOverride": "WebhookPatch",
              "title": "WebhookPatch",
              "value": {
                "description": "A list of events that this webhook subscribes to",
                "value": {
                  "generatedName": "WebhookPatchEventsItem",
                  "values": [
                    {
                      "generatedName": "ReportsResolved",
                      "value": "reports.resolved",
                      "casing": {}
                    },
                    {
                      "generatedName": "ReportsRejected",
                      "value": "reports.rejected",
                      "casing": {}
                    },
                    {
                      "generatedName": "ReportsPending",
                      "value": "reports.pending",
                      "casing": {}
                    },
                    {
                      "generatedName": "BankStatementsCompleted",
                      "value": "bank_statements.completed",
                      "casing": {}
                    },
                    {
                      "generatedName": "BankStatementsError",
                      "value": "bank_statements.error",
                      "casing": {}
                    },
                    {
                      "generatedName": "BatchesCompleted",
                      "value": "batches.completed",
                      "casing": {}
                    },
                    {
                      "generatedName": "BatchesError",
                      "value": "batches.error",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "generatedName": "WebhookPatchEvents",
                "nameOverride": "Events",
                "title": "Events",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookPatchToken",
            "key": "token",
            "schema": {
              "generatedName": "webhookPatchToken",
              "nameOverride": "WebhookPatch",
              "title": "WebhookPatch",
              "value": {
                "description": "A secret string used to authenticate the webhook. This value will be included in the `X-Ntropy-Token` header when sending requests to the webhook",
                "schema": {
                  "maxLength": 128,
                  "type": "string"
                },
                "generatedName": "WebhookPatchToken",
                "nameOverride": "Token",
                "title": "Token",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookPatchEnabled",
            "key": "enabled",
            "schema": {
              "generatedName": "webhookPatchEnabled",
              "nameOverride": "WebhookPatch",
              "title": "WebhookPatch",
              "value": {
                "description": "Whether the webhook is enabled or not.",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "WebhookPatchEnabled",
                "nameOverride": "Enabled",
                "title": "Enabled",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookPatch",
        "nameOverride": "WebhookPatch",
        "title": "WebhookPatch",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Expr": {
        "value": {
          "generatedName": "Expr",
          "title": "expression",
          "nameOverride": "expression",
          "schemas": [
            {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "Expr",
              "nameOverride": "boolean",
              "title": "boolean",
              "groupName": [],
              "type": "primitive"
            },
            {
              "schema": {
                "type": "string"
              },
              "generatedName": "Expr",
              "nameOverride": "string",
              "title": "string",
              "groupName": [],
              "type": "primitive"
            },
            {
              "schema": {
                "type": "double"
              },
              "generatedName": "Expr",
              "nameOverride": "number",
              "title": "number",
              "groupName": [],
              "type": "primitive"
            },
            {
              "generatedName": "ExprThree",
              "schema": "FnCall",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "TxProp": {
        "generatedName": "TxProp",
        "nameOverride": "properties",
        "title": "properties",
        "values": [
          {
            "generatedName": "logo",
            "value": "logo",
            "casing": {}
          },
          {
            "generatedName": "website",
            "value": "website",
            "casing": {}
          },
          {
            "generatedName": "merchant",
            "value": "merchant",
            "casing": {}
          },
          {
            "generatedName": "description",
            "value": "description",
            "casing": {}
          },
          {
            "generatedName": "merchant_id",
            "value": "merchant_id",
            "casing": {}
          },
          {
            "generatedName": "location",
            "value": "location",
            "casing": {}
          },
          {
            "generatedName": "person",
            "value": "person",
            "casing": {}
          },
          {
            "generatedName": "transaction_type",
            "value": "transaction_type",
            "casing": {}
          },
          {
            "generatedName": "amount",
            "value": "amount",
            "casing": {}
          },
          {
            "generatedName": "entry_type",
            "value": "entry_type",
            "casing": {}
          },
          {
            "generatedName": "account_holder_type",
            "value": "account_holder_type",
            "casing": {}
          },
          {
            "generatedName": "account_holder_id",
            "value": "account_holder_id",
            "casing": {}
          },
          {
            "generatedName": "account_holder_name",
            "value": "account_holder_name",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "FnCall": {
        "value": {
          "generatedName": "FnCall",
          "schemas": [
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "&&",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall&&&&Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall&&&&",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall&&",
              "title": "&&",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "||",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall||||Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall||||",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall||",
              "title": "||",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "==",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall====Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall====",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall==",
              "title": "==",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "+",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall++Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall++",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall+",
              "title": "+",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "-",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall--Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall--",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall-",
              "title": "-",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "*",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall**Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall**",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall*",
              "title": "*",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "/",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall//Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall//",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall/",
              "title": "/",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "//",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall////Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall////",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall//",
              "title": "//",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "<",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall<<Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall<<",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall<",
              "title": "<",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "<=",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall<=<=Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall<=<=",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall<=",
              "title": "<=",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": ">",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall>>Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall>>",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall>",
              "title": ">",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": ">=",
                  "schema": {
                    "value": {
                      "generatedName": "FnCall>=>=Item",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCall>=>=",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall>=",
              "title": ">=",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCall",
                  "key": "!",
                  "schema": {
                    "generatedName": "FnCall!!",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCall!",
              "title": "!",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallIsSubstringIsSubstring",
                  "key": "is_substring",
                  "schema": {
                    "value": {
                      "generatedName": "FnCallIsSubstringIsSubstringItem",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCallIsSubstringIsSubstring",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallIsSubstring",
              "title": "is_substring",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallStartsWithStartsWith",
                  "key": "starts_with",
                  "schema": {
                    "value": {
                      "generatedName": "FnCallStartsWithStartsWithItem",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCallStartsWithStartsWith",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallStartsWith",
              "title": "starts_with",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallEndsWithEndsWith",
                  "key": "ends_with",
                  "schema": {
                    "value": {
                      "generatedName": "FnCallEndsWithEndsWithItem",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "FnCallEndsWithEndsWith",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallEndsWith",
              "title": "ends_with",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallToLowerToLower",
                  "key": "to_lower",
                  "schema": {
                    "generatedName": "FnCallToLowerToLower",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallToLower",
              "title": "to_lower",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallToUpperToUpper",
                  "key": "to_upper",
                  "schema": {
                    "generatedName": "FnCallToUpperToUpper",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallToUpper",
              "title": "to_upper",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallHasLabelHasLabel",
                  "key": "has_label",
                  "schema": {
                    "generatedName": "FnCallHasLabelHasLabel",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallHasLabel",
              "title": "has_label",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallHasMccHasMcc",
                  "key": "has_mcc",
                  "schema": {
                    "generatedName": "FnCallHasMccHasMcc",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallHasMcc",
              "title": "has_mcc",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "fnCallGetGet",
                  "key": "get",
                  "schema": {
                    "generatedName": "FnCallGetGet",
                    "schema": "TxProp",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "FnCallGet",
              "title": "get property",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "Action": {
        "value": {
          "generatedName": "Action",
          "title": "action",
          "nameOverride": "action",
          "schemas": [
            {
              "generatedName": "ActionZero",
              "schema": "If",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "ActionOne",
              "schema": "ModifyLabels",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            {
              "generatedName": "ActionTwo",
              "schema": "Setter",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "If": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ifIf",
            "key": "if",
            "schema": {
              "generatedName": "IfIf",
              "schema": "Expr",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ifThen",
            "key": "then",
            "schema": {
              "generatedName": "ifThen",
              "nameOverride": "if",
              "title": "if",
              "value": {
                "value": {
                  "generatedName": "IfThenItem",
                  "schema": "Action",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "IfThen",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ifElse",
            "key": "else",
            "schema": {
              "generatedName": "ifElse",
              "nameOverride": "if",
              "title": "if",
              "value": {
                "value": {
                  "generatedName": "IfElseItem",
                  "schema": "Action",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "IfElse",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "If",
        "nameOverride": "if",
        "title": "if",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModifyLabels": {
        "value": {
          "generatedName": "ModifyLabels",
          "title": "modify labels",
          "schemas": [
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "modifyLabelsAddLabelAddLabel",
                  "key": "add_label",
                  "schema": {
                    "generatedName": "ModifyLabelsAddLabelAddLabel",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ModifyLabelsAddLabel",
              "title": "add_label",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "modifyLabelsRemoveLabelRemoveLabel",
                  "key": "remove_label",
                  "schema": {
                    "generatedName": "ModifyLabelsRemoveLabelRemoveLabel",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ModifyLabelsRemoveLabel",
              "title": "remove_label",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "modifyLabelsSetLabelsSetLabels",
                  "key": "set_labels",
                  "schema": {
                    "value": {
                      "generatedName": "ModifyLabelsSetLabelsSetLabelsItem",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "ModifyLabelsSetLabelsSetLabels",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ModifyLabelsSetLabels",
              "title": "set_labels",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "modifyLabelsAddMccAddMcc",
                  "key": "add_mcc",
                  "schema": {
                    "generatedName": "ModifyLabelsAddMccAddMcc",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ModifyLabelsAddMcc",
              "title": "add_mcc",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "modifyLabelsRemoveMccRemoveMcc",
                  "key": "remove_mcc",
                  "schema": {
                    "generatedName": "ModifyLabelsRemoveMccRemoveMcc",
                    "schema": "Expr",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "audiences": [],
                  "readonly": false
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ModifyLabelsRemoveMcc",
              "title": "remove_mcc",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "modifyLabelsSetMccSetMcc",
                  "key": "set_mcc",
                  "schema": {
                    "value": {
                      "generatedName": "ModifyLabelsSetMccSetMccItem",
                      "schema": "Expr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "generatedName": "ModifyLabelsSetMccSetMcc",
                    "groupName": [],
                    "type": "array"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ModifyLabelsSetMcc",
              "title": "set_mcc",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            }
          ],
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "undiscriminated"
        },
        "type": "oneOf"
      },
      "EditableTxProp": {
        "generatedName": "EditableTxProp",
        "title": "editable properties",
        "values": [
          {
            "generatedName": "logo",
            "value": "logo",
            "casing": {}
          },
          {
            "generatedName": "website",
            "value": "website",
            "casing": {}
          },
          {
            "generatedName": "merchant",
            "value": "merchant",
            "casing": {}
          },
          {
            "generatedName": "merchant_id",
            "value": "merchant_id",
            "casing": {}
          },
          {
            "generatedName": "location",
            "value": "location",
            "casing": {}
          },
          {
            "generatedName": "person",
            "value": "person",
            "casing": {}
          },
          {
            "generatedName": "transaction_type",
            "value": "transaction_type",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Setter": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "setterSet",
            "key": "set",
            "schema": {
              "generatedName": "SetterSet",
              "schema": "EditableTxProp",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "setterTo",
            "key": "to",
            "schema": {
              "generatedName": "SetterTo",
              "schema": "Expr",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Setter",
        "nameOverride": "set",
        "title": "set",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "personalization": {
        "value": {
          "generatedName": "PersonalizationItem",
          "schema": "Action",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "generatedName": "Personalization",
        "nameOverride": "Filter",
        "title": "Filter",
        "groupName": [],
        "type": "array"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "APIKeyHeader": {
      "headerName": "X-Api-Key",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}