{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "endorse-transaction": {
              "auth": true,
              "display-name": "For Endorser to endorse a particular transaction record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "tran_id": "tran_id",
                  },
                  "response": {
                    "body": {
                      "_type": "101",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endorser_write_txn": true,
                      "formats": [
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                      ],
                      "messages_attach": [
                        {},
                        {},
                      ],
                      "signature_request": [
                        {},
                        {},
                      ],
                      "signature_response": [
                        {},
                        {},
                      ],
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transactions/{tran_id}/endorse",
              "path-parameters": {
                "tran_id": {
                  "docs": "Transaction identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "EndorseTransactionRequest",
                "query-parameters": {
                  "endorser_did": {
                    "docs": "Endorser DID",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "TransactionRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AMLRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "aml": {
                "type": "optional<map<string, string>>",
              },
              "amlContext": {
                "type": "optional<string>",
              },
              "version": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActionMenuFetchResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": {
                "type": "optional<ActionMenuFetchResultResult>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActionMenuFetchResultResult": {
            "docs": "Action menu",
            "type": "Menu",
          },
          "ActionMenuModulesResult": "map<string, unknown>",
          "AdminConfig": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "config": {
                "docs": "Configuration settings",
                "type": "optional<AdminConfigConfig>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminConfigConfig": {
            "docs": "Configuration settings",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminModules": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": {
                "docs": "List of admin modules",
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminReset": "map<string, unknown>",
          "AdminShutdown": "map<string, unknown>",
          "AdminStatus": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "conductor": {
                "docs": "Conductor statistics",
                "type": "optional<AdminStatusConductor>",
              },
              "label": {
                "docs": "Default label",
                "type": "optional<string>",
              },
              "timing": {
                "docs": "Timing results",
                "type": "optional<AdminStatusTiming>",
              },
              "version": {
                "docs": "Version code",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminStatusConductor": {
            "docs": "Conductor statistics",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminStatusLiveliness": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "alive": {
                "docs": "Liveliness status",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminStatusReadiness": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ready": {
                "docs": "Readiness status",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminStatusTiming": {
            "docs": "Timing results",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachDecorator": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Attachment identifier",
                "type": "optional<string>",
              },
              "byte_count": {
                "docs": "Byte count of data included by reference",
                "type": "optional<integer>",
              },
              "data": {
                "type": "AttachDecoratorData",
              },
              "description": {
                "docs": "Human-readable description of content",
                "type": "optional<string>",
              },
              "filename": {
                "docs": "File name",
                "type": "optional<string>",
              },
              "lastmod_time": {
                "docs": "Hint regarding last modification datetime, in ISO-8601 format",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "mime-type": {
                "docs": "MIME type",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachDecoratorData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "base64": {
                "docs": "Base64-encoded data",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[a-zA-Z0-9+/]*={0,2}$",
                },
              },
              "json": {
                "docs": "JSON-serialized data",
                "type": "optional<map<string, unknown>>",
              },
              "jws": {
                "type": "optional<AttachDecoratorDataJws>",
              },
              "links": {
                "docs": "List of hypertext links to data",
                "type": "optional<list<string>>",
              },
              "sha256": {
                "docs": "SHA256 hash (binhex encoded) of content",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[a-fA-F0-9+/]{64}$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachDecoratorData1Jws": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "header": {
                "type": "AttachDecoratorDataJWSHeader",
              },
              "protected": {
                "docs": "protected JWS header",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[-_a-zA-Z0-9]*$",
                },
              },
              "signature": {
                "docs": "signature",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[-_a-zA-Z0-9]*$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachDecoratorDataJWS": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "header": {
                "type": "optional<AttachDecoratorDataJWSHeader>",
              },
              "protected": {
                "docs": "protected JWS header",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[-_a-zA-Z0-9]*$",
                },
              },
              "signature": {
                "docs": "signature",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[-_a-zA-Z0-9]*$",
                },
              },
              "signatures": {
                "docs": "List of signatures",
                "type": "optional<list<AttachDecoratorData1Jws>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachDecoratorDataJWSHeader": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "kid": {
                "docs": "Key identifier, in W3C did:key or DID URL format",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\?.*)?#.+)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachDecoratorDataJws": {
            "docs": "Detached Java Web Signature",
            "type": "AttachDecoratorDataJWS",
          },
          "AttachmentDef": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Attachment identifier",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Attachment type",
                "type": "optional<AttachmentDefType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachmentDefType": {
            "docs": "Attachment type",
            "enum": [
              {
                "name": "CredentialOffer",
                "value": "credential-offer",
              },
              {
                "name": "PresentProof",
                "value": "present-proof",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttributeMimeTypesResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<map<string, optional<string>>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicMessageModuleResponse": "map<string, unknown>",
          "ClaimFormat": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "jwt": {
                "type": "optional<jwt>",
              },
              "jwt_vc": {
                "type": "optional<ClaimFormatJwtVc>",
              },
              "jwt_vp": {
                "type": "optional<ClaimFormatJwtVp>",
              },
              "ldp": {
                "type": "optional<ldp>",
              },
              "ldp_vc": {
                "type": "optional<ClaimFormatLdpVc>",
              },
              "ldp_vp": {
                "type": "optional<ClaimFormatLdpVp>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ClaimFormatJwtVc": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ClaimFormatJwtVp": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ClaimFormatLdpVc": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ClaimFormatLdpVp": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "accept": {
                "docs": "Connection acceptance: manual or auto",
                "type": "optional<ConnRecordAccept>",
              },
              "alias": {
                "docs": "Optional alias to apply to connection for later use",
                "type": "optional<string>",
              },
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "connection_protocol": {
                "docs": "Connection protocol used",
                "type": "optional<ConnRecordConnectionProtocol>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "error_msg": {
                "docs": "Error message",
                "type": "optional<string>",
              },
              "inbound_connection_id": {
                "docs": "Inbound routing connection id to use",
                "type": "optional<string>",
              },
              "invitation_key": {
                "docs": "Public key for connection",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
              "invitation_mode": {
                "docs": "Invitation mode",
                "type": "optional<ConnRecordInvitationMode>",
              },
              "invitation_msg_id": {
                "docs": "ID of out-of-band invitation message",
                "type": "optional<string>",
              },
              "my_did": {
                "docs": "Our DID for connection",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "request_id": {
                "docs": "Connection request identifier",
                "type": "optional<string>",
              },
              "rfc23_state": {
                "docs": "State per RFC 23",
                "type": "optional<string>",
              },
              "routing_state": {
                "docs": "Routing state of connection",
                "type": "optional<ConnRecordRoutingState>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "their_did": {
                "docs": "Their DID for connection",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "their_label": {
                "docs": "Their label for connection",
                "type": "optional<string>",
              },
              "their_public_did": {
                "docs": "Other agent's public DID for connection",
                "type": "optional<string>",
              },
              "their_role": {
                "docs": "Their role in the connection protocol",
                "type": "optional<ConnRecordTheirRole>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnRecordAccept": {
            "docs": "Connection acceptance: manual or auto",
            "enum": [
              "manual",
              "auto",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnRecordConnectionProtocol": {
            "docs": "Connection protocol used",
            "enum": [
              {
                "name": "Connections10",
                "value": "connections/1.0",
              },
              {
                "name": "Didexchange10",
                "value": "didexchange/1.0",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnRecordInvitationMode": {
            "docs": "Invitation mode",
            "enum": [
              "once",
              "multi",
              "static",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnRecordRoutingState": {
            "docs": "Routing state of connection",
            "enum": [
              "none",
              "request",
              "active",
              "error",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnRecordTheirRole": {
            "docs": "Their role in the connection protocol",
            "enum": [
              "invitee",
              "requester",
              "inviter",
              "responder",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnectionInvitation": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "did": {
                "docs": "DID for connection invitation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "imageUrl": {
                "docs": "Optional image URL for connection invitation",
                "type": "optional<string>",
              },
              "label": {
                "docs": "Optional label for connection invitation",
                "type": "optional<string>",
              },
              "recipientKeys": {
                "docs": "List of recipient keys",
                "type": "optional<list<string>>",
              },
              "routingKeys": {
                "docs": "List of routing keys",
                "type": "optional<list<string>>",
              },
              "serviceEndpoint": {
                "docs": "Service endpoint at which to reach this agent",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnectionList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of connection records",
                "type": "optional<list<ConnRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnectionMetadata": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "Dictionary of metadata associated with connection.",
                "type": "optional<ConnectionMetadataResults>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnectionMetadataResults": {
            "docs": "Dictionary of metadata associated with connection.",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConnectionModuleResponse": "map<string, unknown>",
          "ConnectionStaticResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "my_did": {
                "docs": "Local DID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "my_endpoint": {
                "docs": "My URL endpoint",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                },
              },
              "my_verkey": {
                "docs": "My verification key",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
              "record": {
                "type": "ConnRecord",
              },
              "their_did": {
                "docs": "Remote DID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "their_verkey": {
                "docs": "Remote verification key",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Constraints": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "fields": {
                "type": "optional<list<DIFField>>",
              },
              "is_holder": {
                "type": "optional<list<DIFHolder>>",
              },
              "limit_disclosure": {
                "docs": "LimitDisclosure",
                "type": "optional<string>",
              },
              "status_active": {
                "type": "optional<ConstraintsStatusActive>",
              },
              "status_revoked": {
                "type": "optional<ConstraintsStatusRevoked>",
              },
              "status_suspended": {
                "type": "optional<ConstraintsStatusSuspended>",
              },
              "subject_is_issuer": {
                "docs": "SubjectIsIssuer",
                "type": "optional<ConstraintsSubjectIsIssuer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConstraintsStatusActive": {
            "enum": [
              "required",
              "allowed",
              "disallowed",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConstraintsStatusRevoked": {
            "enum": [
              "required",
              "allowed",
              "disallowed",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConstraintsStatusSuspended": {
            "enum": [
              "required",
              "allowed",
              "disallowed",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConstraintsSubjectIsIssuer": {
            "docs": "SubjectIsIssuer",
            "enum": [
              "required",
              "preferred",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWalletResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "key_management_mode": {
                "docs": "Mode regarding management of wallet key",
                "type": "CreateWalletResponseKeyManagementMode",
              },
              "settings": {
                "docs": "Settings for this wallet.",
                "type": "optional<CreateWalletResponseSettings>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "token": {
                "docs": "Authorization token to authenticate wallet requests",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "wallet_id": {
                "docs": "Wallet record ID",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWalletResponseKeyManagementMode": {
            "docs": "Mode regarding management of wallet key",
            "enum": [
              "managed",
              "unmanaged",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWalletResponseSettings": {
            "docs": "Settings for this wallet.",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWalletTokenResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "token": {
                "docs": "Authorization token to authenticate wallet requests",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredAttrSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "mime-type": {
                "docs": "MIME type: omit for (null) default",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Attribute name",
                "type": "string",
              },
              "value": {
                "docs": "Attribute value: base64-encode if MIME type is present",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredDefValue": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "primary": {
                "type": "optional<CredDefValuePrimary>",
              },
              "revocation": {
                "type": "optional<CredDefValueRevocation>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredDefValuePrimary": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "n": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "r": {
                "type": "optional<Generated>",
              },
              "rctxt": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "s": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "z": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredDefValueRevocation": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "g": {
                "type": "optional<string>",
              },
              "g_dash": {
                "type": "optional<string>",
              },
              "h": {
                "type": "optional<string>",
              },
              "h0": {
                "type": "optional<string>",
              },
              "h1": {
                "type": "optional<string>",
              },
              "h2": {
                "type": "optional<string>",
              },
              "h_cap": {
                "type": "optional<string>",
              },
              "htilde": {
                "type": "optional<string>",
              },
              "pk": {
                "type": "optional<string>",
              },
              "u": {
                "type": "optional<string>",
              },
              "y": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredInfoList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<list<IndyCredInfo>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredRevIndyRecordsResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "rev_reg_delta": {
                "docs": "Indy revocation registry delta",
                "type": "optional<CredRevIndyRecordsResultRevRegDelta>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredRevIndyRecordsResultRevRegDelta": {
            "docs": "Indy revocation registry delta",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredRevRecordDetailsResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<list<IssuerCredRevRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredRevRecordResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": {
                "type": "optional<IssuerCredRevRecord>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredRevokedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "revoked": {
                "docs": "Whether credential is revoked on the ledger",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Credential": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@context": {
                "docs": "The JSON-LD context of the credential",
                "type": "list<map<string, unknown>>",
              },
              "credentialSubject": {
                "type": "map<string, unknown>",
              },
              "expirationDate": {
                "docs": "The expiration date",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$",
                },
              },
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "\w+:(\/?\/?)[^\s]+",
                },
              },
              "issuanceDate": {
                "docs": "The issuance date",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$",
                },
              },
              "issuer": {
                "docs": "The JSON-LD Verifiable Credential Issuer. Either string of object with id field.",
                "type": "map<string, unknown>",
              },
              "proof": {
                "type": "optional<CredentialProof>",
              },
              "type": {
                "docs": "The JSON-LD type of the credential",
                "type": "list<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialDefinition": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "schemaId": {
                "docs": "Schema identifier within credential definition identifier",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "Tag within credential definition identifier",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Signature type: CL for Camenisch-Lysyanskaya",
                "type": "optional<map<string, unknown>>",
              },
              "value": {
                "type": "optional<CredentialDefinitionValue>",
              },
              "ver": {
                "docs": "Node protocol version",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialDefinitionGetResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "credential_definition": {
                "type": "optional<CredentialDefinition>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialDefinitionSendResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "credential_definition_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialDefinitionValue": {
            "docs": "Credential definition primary and revocation values",
            "type": "CredDefValue",
          },
          "CredentialDefinitionsCreatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "credential_definition_ids": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialOffer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "credential_preview": {
                "type": "optional<CredentialPreview>",
              },
              "offers~attach": {
                "type": "list<AttachDecorator>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialPreview": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@type": {
                "docs": "Message type identifier",
                "type": "optional<string>",
              },
              "attributes": "list<CredAttrSpec>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialProof": {
            "docs": "The proof of the credential",
            "type": "LinkedDataProof",
          },
          "CredentialProposal": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "cred_def_id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "credential_proposal": {
                "type": "optional<CredentialPreview>",
              },
              "issuer_did": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "schema_id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
              "schema_issuer_did": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "schema_name": {
                "type": "optional<string>",
              },
              "schema_version": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CredentialStatusOptions": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "type": {
                "docs": "Credential status method type to use for the credential. Should match status method registered in the Verifiable Credential Extension Registry",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DID": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "did": {
                "docs": "DID of interest",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$",
                },
              },
              "key_type": {
                "docs": "Key type associated with the DID",
                "type": "optional<DidKeyType>",
              },
              "method": {
                "docs": "Did method associated with the DID",
                "type": "optional<string>",
              },
              "posture": {
                "docs": "Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet",
                "type": "optional<DidPosture>",
              },
              "verkey": {
                "docs": "Public verification key",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIDCreateOptions": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "did": {
                "docs": "Specify final value of the did (including did:<method>: prefix)if the method supports or requires so.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$",
                },
              },
              "key_type": {
                "docs": "Key type to use for the DID keypair. Validated with the chosen DID method's supported key types.",
                "type": "DidCreateOptionsKeyType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIDEndpoint": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "did": {
                "docs": "DID of interest",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "endpoint": {
                "docs": "Endpoint to set (omit to delete)",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIDList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "DID list",
                "type": "optional<list<DID>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIDResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": {
                "type": "optional<DID>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIFField": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "filter": {
                "type": "optional<Filter>",
              },
              "id": {
                "docs": "ID",
                "type": "optional<string>",
              },
              "path": {
                "type": "optional<list<string>>",
              },
              "predicate": {
                "docs": "Preference",
                "type": "optional<predicate>",
              },
              "purpose": {
                "docs": "Purpose",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIFHolder": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "directive": {
                "docs": "Preference",
                "type": "optional<directive>",
              },
              "field_id": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIFOptions": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "challenge": {
                "docs": "Challenge protect against replay attack",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                },
              },
              "domain": {
                "docs": "Domain protect against replay attack",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIFPresSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "issuer_id": {
                "docs": "Issuer identifier to sign the presentation, if different from current public DID",
                "type": "optional<string>",
              },
              "presentation_definition": {
                "type": "optional<PresentationDefinition>",
              },
              "record_ids": {
                "docs": "Mapping of input_descriptor id to list of stored W3C credential record_id",
                "type": "optional<DifPresSpecRecordIds>",
              },
              "reveal_doc": {
                "docs": "reveal doc [JSON-LD frame] dict used to derive the credential when selective disclosure is required",
                "type": "optional<DifPresSpecRevealDoc>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIFProofProposal": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "input_descriptors": {
                "type": "optional<list<InputDescriptors>>",
              },
              "options": {
                "type": "optional<DIFOptions>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DIFProofRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "options": {
                "type": "optional<DIFOptions>",
              },
              "presentation_definition": {
                "type": "PresentationDefinition",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DidCreateOptions": {
            "docs": "To define a key type and/or a did depending on chosen DID method.",
            "type": "DIDCreateOptions",
          },
          "DidCreateOptionsKeyType": {
            "docs": "Key type to use for the DID keypair. Validated with the chosen DID method's supported key types.",
            "enum": [
              "ed25519",
              "bls12381g2",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DidKeyType": {
            "docs": "Key type associated with the DID",
            "enum": [
              "ed25519",
              "bls12381g2",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DidPosture": {
            "docs": "Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet",
            "enum": [
              "public",
              "posted",
              "wallet_only",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DidxRequestDidDocAttach": {
            "docs": "As signed attachment, DID Doc associated with DID",
            "type": "AttachDecorator",
          },
          "DifPresSpecRecordIds": {
            "docs": "Mapping of input_descriptor id to list of stored W3C credential record_id",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DifPresSpecRevealDoc": {
            "docs": "reveal doc [JSON-LD frame] dict used to derive the credential when selective disclosure is required",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Disclose": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "protocols": {
                "docs": "List of protocol descriptors",
                "type": "list<ProtocolDescriptor>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Disclosures": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "disclosures": {
                "docs": "List of protocol or goal_code descriptors",
                "type": "list<map<string, unknown>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Doc": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "credential": {
                "docs": "Credential to sign",
                "type": "DocCredential",
              },
              "options": "DocOptions",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DocCredential": {
            "docs": "Credential to sign",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DocOptions": {
            "docs": "Signature options",
            "type": "SignatureOptions",
          },
          "EndorserInfo": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "endorser_did": {
                "docs": "Endorser DID",
                "type": "string",
              },
              "endorser_name": {
                "docs": "Endorser Name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EndpointsResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "my_endpoint": {
                "docs": "My endpoint",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                },
              },
              "their_endpoint": {
                "docs": "Their endpoint",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Filter": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "const": {
                "docs": "Const",
                "type": "optional<map<string, unknown>>",
              },
              "enum": {
                "type": "optional<list<map<string, unknown>>>",
              },
              "exclusiveMaximum": {
                "docs": "ExclusiveMaximum",
                "type": "optional<map<string, unknown>>",
              },
              "exclusiveMinimum": {
                "docs": "ExclusiveMinimum",
                "type": "optional<map<string, unknown>>",
              },
              "format": {
                "docs": "Format",
                "type": "optional<string>",
              },
              "maxLength": {
                "docs": "Max Length",
                "type": "optional<integer>",
              },
              "maximum": {
                "docs": "Maximum",
                "type": "optional<map<string, unknown>>",
              },
              "minLength": {
                "docs": "Min Length",
                "type": "optional<integer>",
              },
              "minimum": {
                "docs": "Minimum",
                "type": "optional<map<string, unknown>>",
              },
              "not": {
                "docs": "Not",
                "type": "optional<boolean>",
              },
              "pattern": {
                "docs": "Pattern",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Type",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Generated": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "master_secret": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "number": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "remainder": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDIDEndpointResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "endpoint": {
                "docs": "Full verification key",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDIDVerkeyResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "verkey": {
                "docs": "Full verification key",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetNymRoleResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "role": {
                "docs": "Ledger role",
                "type": "optional<GetNymRoleResponseRole>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetNymRoleResponseRole": {
            "docs": "Ledger role",
            "enum": [
              "STEWARD",
              "TRUSTEE",
              "ENDORSER",
              "NETWORK_MONITOR",
              "USER",
              "ROLE_REMOVE",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HolderModuleResponse": "map<string, unknown>",
          "IndyAttrValue": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "encoded": {
                "docs": "Attribute encoded value",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^-?[0-9]*$",
                },
              },
              "raw": {
                "docs": "Attribute raw value",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredAbstract": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "key_correctness_proof": "IndyCredAbstractKeyCorrectnessProof",
              "nonce": {
                "docs": "Nonce in credential abstract",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "schema_id": {
                "docs": "Schema identifier",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredAbstractKeyCorrectnessProof": {
            "docs": "Key correctness proof",
            "type": "IndyKeyCorrectnessProof",
          },
          "IndyCredInfo": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attrs": {
                "docs": "Attribute names and value",
                "type": "optional<map<string, string>>",
              },
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "cred_rev_id": {
                "docs": "Credential revocation identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[1-9][0-9]*$",
                },
              },
              "referent": {
                "docs": "Wallet referent",
                "type": "optional<string>",
              },
              "rev_reg_id": {
                "docs": "Revocation registry identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                },
              },
              "schema_id": {
                "docs": "Schema identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredPrecis": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_info": {
                "type": "optional<IndyCredPrecisCredInfo>",
              },
              "interval": {
                "type": "optional<IndyCredPrecisInterval>",
              },
              "presentation_referents": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredPrecisCredInfo": {
            "docs": "Credential info",
            "type": "IndyCredInfo",
          },
          "IndyCredPrecisInterval": {
            "docs": "Non-revocation interval from presentation request",
            "type": "IndyNonRevocationInterval",
          },
          "IndyCredRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "blinded_ms": {
                "docs": "Blinded master secret",
                "type": "IndyCredRequestBlindedMs",
              },
              "blinded_ms_correctness_proof": {
                "docs": "Blinded master secret correctness proof",
                "type": "IndyCredRequestBlindedMsCorrectnessProof",
              },
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "nonce": {
                "docs": "Nonce in credential request",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "prover_did": {
                "docs": "Prover DID",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredRequestBlindedMs": {
            "docs": "Blinded master secret",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredRequestBlindedMsCorrectnessProof": {
            "docs": "Blinded master secret correctness proof",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredential": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "rev_reg": {
                "docs": "Revocation registry state",
                "type": "optional<IndyCredentialRevReg>",
              },
              "rev_reg_id": {
                "docs": "Revocation registry identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                },
              },
              "schema_id": {
                "docs": "Schema identifier",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
              "signature": {
                "docs": "Credential signature",
                "type": "signature",
              },
              "signature_correctness_proof": {
                "docs": "Credential signature correctness proof",
                "type": "IndyCredentialSignatureCorrectnessProof",
              },
              "values": {
                "docs": "Credential attributes",
                "type": "map<string, IndyCredentialValuesValue>",
              },
              "witness": {
                "docs": "Witness for revocation proof",
                "type": "optional<witness>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredentialRevReg": {
            "docs": "Revocation registry state",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredentialSignatureCorrectnessProof": {
            "docs": "Credential signature correctness proof",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyCredentialValuesValue": {
            "docs": "Attribute value",
            "type": "IndyAttrValue",
          },
          "IndyEQProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "a_prime": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "e": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "m": {
                "type": "optional<map<string, string>>",
              },
              "m2": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "revealed_attrs": {
                "type": "optional<map<string, string>>",
              },
              "v": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyGEProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "alpha": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "mj": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "predicate": {
                "type": "optional<IndyGEProofPred>",
              },
              "r": {
                "type": "optional<map<string, string>>",
              },
              "t": {
                "type": "optional<map<string, string>>",
              },
              "u": {
                "type": "optional<map<string, string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyGEProofPred": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attr_name": {
                "docs": "Attribute name, indy-canonicalized",
                "type": "optional<string>",
              },
              "p_type": {
                "docs": "Predicate type",
                "type": "optional<IndyGeProofPredPType>",
              },
              "value": {
                "docs": "Predicate threshold value",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyGeProofPredPType": {
            "docs": "Predicate type",
            "enum": [
              "LT",
              "LE",
              "GE",
              "GT",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyKeyCorrectnessProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "c": {
                "docs": "c in key correctness proof",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
              "xr_cap": {
                "docs": "xr_cap in key correctness proof",
                "type": "list<list<string>>",
              },
              "xz_cap": {
                "docs": "xz_cap in key correctness proof",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9]*$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyNonRevocProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "c_list": {
                "type": "optional<map<string, string>>",
              },
              "x_list": {
                "type": "optional<map<string, string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyNonRevocationInterval": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "from": {
                "docs": "Earliest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "to": {
                "docs": "Latest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyPresAttrSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_def_id": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "mime-type": {
                "docs": "MIME type (default null)",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Attribute name",
                "type": "string",
              },
              "referent": {
                "docs": "Credential referent",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Attribute value",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyPresPredSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "name": {
                "docs": "Attribute name",
                "type": "string",
              },
              "predicate": {
                "docs": "Predicate type ('<', '<=', '>=', or '>')",
                "type": "IndyPresPredSpecPredicate",
              },
              "threshold": {
                "docs": "Threshold value",
                "type": "integer",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyPresPredSpecPredicate": {
            "docs": "Predicate type ('<', '<=', '>=', or '>')",
            "enum": [
              {
                "name": "LessThan",
                "value": "<",
              },
              {
                "name": "LessThanOrEqualTo",
                "value": "<=",
              },
              {
                "name": "GreaterThanOrEqualTo",
                "value": ">=",
              },
              {
                "name": "GreaterThan",
                "value": ">",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyPresPreview": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@type": {
                "docs": "Message type identifier",
                "type": "optional<string>",
              },
              "attributes": "list<IndyPresAttrSpec>",
              "predicates": "list<IndyPresPredSpec>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyPresSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "requested_attributes": {
                "docs": "Nested object mapping proof request attribute referents to requested-attribute specifiers",
                "type": "map<string, IndyRequestedCredsRequestedAttr>",
              },
              "requested_predicates": {
                "docs": "Nested object mapping proof request predicate referents to requested-predicate specifiers",
                "type": "map<string, IndyRequestedCredsRequestedPred>",
              },
              "self_attested_attributes": {
                "docs": "Self-attested attributes to build into proof",
                "type": "map<string, string>",
              },
              "trace": {
                "docs": "Whether to trace event (default false)",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyPrimaryProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "eq_proof": {
                "type": "optional<IndyPrimaryProofEqProof>",
              },
              "ge_proofs": {
                "docs": "Indy GE proofs",
                "type": "optional<list<IndyGEProof>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyPrimaryProofEqProof": {
            "docs": "Indy equality proof",
            "type": "optional<IndyEQProof>",
          },
          "IndyProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "identifiers": {
                "docs": "Indy proof.identifiers content",
                "type": "optional<list<IndyProofIdentifier>>",
              },
              "proof": {
                "type": "optional<IndyProofProof>",
              },
              "requested_proof": {
                "type": "optional<IndyProofRequestedProof>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofIdentifier": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "rev_reg_id": {
                "docs": "Revocation registry identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                },
              },
              "schema_id": {
                "docs": "Schema identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
              "timestamp": {
                "docs": "Timestamp epoch",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "aggregated_proof": {
                "type": "optional<IndyProofProofAggregatedProof>",
              },
              "proofs": {
                "docs": "Indy proof proofs",
                "type": "optional<list<IndyProofProofProofsProof>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofProofAggregatedProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "c_hash": {
                "docs": "c_hash value",
                "type": "optional<string>",
              },
              "c_list": {
                "docs": "c_list value",
                "type": "optional<list<list<integer>>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofProofProofsProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "non_revoc_proof": {
                "type": "optional<IndyProofProofProofsProofNonRevocProof>",
              },
              "primary_proof": {
                "type": "optional<IndyProofProofProofsProofPrimaryProof>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofProofProofsProofNonRevocProof": {
            "docs": "Indy non-revocation proof",
            "type": "optional<IndyNonRevocProof>",
          },
          "IndyProofProofProofsProofPrimaryProof": {
            "docs": "Indy primary proof",
            "type": "IndyPrimaryProof",
          },
          "IndyProofReqAttrSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "Attribute name",
                "type": "optional<string>",
              },
              "names": {
                "docs": "Attribute name group",
                "type": "optional<list<string>>",
              },
              "non_revoked": {
                "type": "optional<IndyProofReqAttrSpecNonRevoked>",
              },
              "restrictions": {
                "docs": "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
                "type": "optional<list<map<string, string>>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofReqAttrSpecNonRevoked": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "from": {
                "docs": "Earliest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "to": {
                "docs": "Latest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofReqPredSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "Attribute name",
                "type": "string",
              },
              "non_revoked": {
                "type": "optional<IndyProofReqPredSpecNonRevoked>",
              },
              "p_type": {
                "docs": "Predicate type ('<', '<=', '>=', or '>')",
                "type": "IndyProofReqPredSpecPType",
              },
              "p_value": {
                "docs": "Threshold value",
                "type": "integer",
              },
              "restrictions": {
                "docs": "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
                "type": "optional<list<map<string, string>>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofReqPredSpecNonRevoked": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "from": {
                "docs": "Earliest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "to": {
                "docs": "Latest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofReqPredSpecPType": {
            "docs": "Predicate type ('<', '<=', '>=', or '>')",
            "enum": [
              {
                "name": "LessThan",
                "value": "<",
              },
              {
                "name": "LessThanOrEqualTo",
                "value": "<=",
              },
              {
                "name": "GreaterThanOrEqualTo",
                "value": ">=",
              },
              {
                "name": "GreaterThan",
                "value": ">",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "Proof request name",
                "type": "optional<string>",
              },
              "non_revoked": {
                "type": "optional<IndyProofRequestNonRevoked>",
              },
              "nonce": {
                "docs": "Nonce",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[1-9][0-9]*$",
                },
              },
              "requested_attributes": {
                "docs": "Requested attribute specifications of proof request",
                "type": "map<string, IndyProofReqAttrSpec>",
              },
              "requested_predicates": {
                "docs": "Requested predicate specifications of proof request",
                "type": "map<string, IndyProofReqPredSpec>",
              },
              "version": {
                "docs": "Proof request version",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequestNonRevoked": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "from": {
                "docs": "Earliest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "to": {
                "docs": "Latest time of interest in non-revocation interval",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequestedProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "predicates": {
                "docs": "Proof requested proof predicates.",
                "type": "optional<map<string, IndyProofRequestedProofPredicate>>",
              },
              "revealed_attr_groups": {
                "docs": "Proof requested proof revealed attribute groups",
                "type": "optional<map<string, optional<IndyProofRequestedProofRevealedAttrGroup>>>",
              },
              "revealed_attrs": {
                "docs": "Proof requested proof revealed attributes",
                "type": "optional<map<string, optional<IndyProofRequestedProofRevealedAttr>>>",
              },
              "self_attested_attrs": {
                "docs": "Proof requested proof self-attested attributes",
                "type": "optional<IndyProofRequestedProofSelfAttestedAttrs>",
              },
              "unrevealed_attrs": {
                "docs": "Unrevealed attributes",
                "type": "optional<IndyProofRequestedProofUnrevealedAttrs>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequestedProofPredicate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sub_proof_index": {
                "docs": "Sub-proof index",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequestedProofRevealedAttr": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "encoded": {
                "docs": "Encoded value",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^-?[0-9]*$",
                },
              },
              "raw": {
                "docs": "Raw value",
                "type": "optional<string>",
              },
              "sub_proof_index": {
                "docs": "Sub-proof index",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequestedProofRevealedAttrGroup": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sub_proof_index": {
                "docs": "Sub-proof index",
                "type": "optional<integer>",
              },
              "values": {
                "docs": "Indy proof requested proof revealed attr groups group value",
                "type": "optional<map<string, RawEncoded>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequestedProofSelfAttestedAttrs": {
            "docs": "Proof requested proof self-attested attributes",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyProofRequestedProofUnrevealedAttrs": {
            "docs": "Unrevealed attributes",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRequestedCredsRequestedAttr": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_id": {
                "docs": "Wallet credential identifier (typically but not necessarily a UUID)",
                "type": "string",
              },
              "revealed": {
                "docs": "Whether to reveal attribute in proof (default true)",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRequestedCredsRequestedPred": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_id": {
                "docs": "Wallet credential identifier (typically but not necessarily a UUID)",
                "type": "string",
              },
              "timestamp": {
                "docs": "Epoch timestamp of interest for non-revocation proof",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRevRegDef": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "credDefId": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "id": {
                "docs": "Indy revocation registry identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                },
              },
              "revocDefType": {
                "docs": "Revocation registry type (specify CL_ACCUM)",
                "type": "optional<literal<"CL_ACCUM">>",
              },
              "tag": {
                "docs": "Revocation registry tag",
                "type": "optional<string>",
              },
              "value": {
                "type": "optional<IndyRevRegDefValue>",
              },
              "ver": {
                "docs": "Version of revocation registry definition",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRevRegDefValue": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "issuanceType": {
                "docs": "Issuance type",
                "type": "optional<issuanceType>",
              },
              "maxCredNum": {
                "docs": "Maximum number of credentials; registry size",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "publicKeys": {
                "type": "optional<IndyRevRegDefValuePublicKeys>",
              },
              "tailsHash": {
                "docs": "Tails hash value",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
              "tailsLocation": {
                "docs": "Tails file location",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRevRegDefValuePublicKeys": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "accumKey": {
                "type": "optional<IndyRevRegDefValuePublicKeysAccumKey>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRevRegDefValuePublicKeysAccumKey": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "z": {
                "docs": "Value for z",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRevRegEntry": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "value": {
                "type": "optional<IndyRevRegEntryValue>",
              },
              "ver": {
                "docs": "Version of revocation registry entry",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndyRevRegEntryValue": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "accum": {
                "docs": "Accumulator value",
                "type": "optional<string>",
              },
              "prevAccum": {
                "docs": "Previous accumulator value",
                "type": "optional<string>",
              },
              "revoked": {
                "docs": "Revoked credential revocation identifiers",
                "type": "optional<list<integer>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InputDescriptors": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "constraints": {
                "type": "optional<Constraints>",
              },
              "group": {
                "type": "optional<list<string>>",
              },
              "id": {
                "docs": "ID",
                "type": "optional<string>",
              },
              "metadata": {
                "docs": "Metadata dictionary",
                "type": "optional<metadata>",
              },
              "name": {
                "docs": "Name",
                "type": "optional<string>",
              },
              "purpose": {
                "docs": "Purpose",
                "type": "optional<string>",
              },
              "schema": {
                "type": "optional<InputDescriptorsSchema>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InputDescriptorsSchema": {
            "docs": "Accepts a list of schema or a dict containing filters like oneof_filter.",
            "type": "SchemasInputDescriptorFilter",
          },
          "IntroModuleResponse": "map<string, unknown>",
          "InvitationMessage": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "accept": {
                "docs": "List of mime type in order of preference",
                "type": "optional<list<string>>",
              },
              "handshake_protocols": {
                "type": "optional<list<string>>",
              },
              "imageUrl": {
                "docs": "Optional image URL for out-of-band invitation",
                "type": "optional<string>",
              },
              "label": {
                "docs": "Optional label",
                "type": "optional<string>",
              },
              "requests~attach": {
                "docs": "Optional request attachment",
                "type": "optional<list<AttachDecorator>>",
              },
              "services": {
                "type": "optional<list<map<string, unknown>>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvitationRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "invi_msg_id": {
                "docs": "Invitation message identifier",
                "type": "optional<string>",
              },
              "invitation": {
                "type": "optional<InvitationRecordInvitation>",
              },
              "invitation_id": {
                "docs": "Invitation record identifier",
                "type": "optional<string>",
              },
              "invitation_url": {
                "docs": "Invitation message URL",
                "type": "optional<string>",
              },
              "oob_id": {
                "docs": "Out of band record identifier",
                "type": "optional<string>",
              },
              "state": {
                "docs": "Out of band message exchange state",
                "type": "optional<string>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InvitationRecordInvitation": {
            "docs": "Out of band invitation message",
            "type": "InvitationMessage",
          },
          "InvitationResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "invitation": {
                "type": "optional<ConnectionInvitation>",
              },
              "invitation_url": {
                "docs": "Invitation URL",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueCredentialModuleResponse": "map<string, unknown>",
          "IssuerCredRevRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "cred_ex_id": {
                "docs": "Credential exchange record identifier at credential issue",
                "type": "optional<string>",
              },
              "cred_ex_version": {
                "docs": "Credential exchange version",
                "type": "optional<string>",
              },
              "cred_rev_id": {
                "docs": "Credential revocation identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[1-9][0-9]*$",
                },
              },
              "record_id": {
                "docs": "Issuer credential revocation record identifier",
                "type": "optional<string>",
              },
              "rev_reg_id": {
                "docs": "Revocation registry identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                },
              },
              "state": {
                "docs": "Issue credential revocation record state",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssuerRevRegRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "error_msg": {
                "docs": "Error message",
                "type": "optional<string>",
              },
              "issuer_did": {
                "docs": "Issuer DID",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "max_cred_num": {
                "docs": "Maximum number of credentials for revocation registry",
                "type": "optional<integer>",
              },
              "pending_pub": {
                "docs": "Credential revocation identifier for credential revoked and pending publication to ledger",
                "type": "optional<list<string>>",
              },
              "record_id": {
                "docs": "Issuer revocation registry record identifier",
                "type": "optional<string>",
              },
              "revoc_def_type": {
                "docs": "Revocation registry type (specify CL_ACCUM)",
                "type": "optional<literal<"CL_ACCUM">>",
              },
              "revoc_reg_def": {
                "type": "optional<IssuerRevRegRecordRevocRegDef>",
              },
              "revoc_reg_entry": {
                "type": "optional<IssuerRevRegRecordRevocRegEntry>",
              },
              "revoc_reg_id": {
                "docs": "Revocation registry identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                },
              },
              "state": {
                "docs": "Issue revocation registry record state",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "Tag within issuer revocation registry identifier",
                "type": "optional<string>",
              },
              "tails_hash": {
                "docs": "Tails hash",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
              "tails_local_path": {
                "docs": "Local path to tails file",
                "type": "optional<string>",
              },
              "tails_public_uri": {
                "docs": "Public URI for tails file",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssuerRevRegRecordRevocRegDef": {
            "docs": "Revocation registry definition",
            "type": "IndyRevRegDef",
          },
          "IssuerRevRegRecordRevocRegEntry": {
            "docs": "Revocation registry entry",
            "type": "IndyRevRegEntry",
          },
          "Keylist": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of keylist records",
                "type": "optional<list<RouteRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeylistQuery": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "filter": {
                "docs": "Query dictionary object",
                "type": "optional<KeylistQueryFilter>",
              },
              "paginate": {
                "type": "optional<KeylistQueryPaginate>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeylistQueryFilter": {
            "docs": "Query dictionary object",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeylistQueryPaginate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "limit": {
                "docs": "Limit for keylist query",
                "type": "optional<integer>",
              },
              "offset": {
                "docs": "Offset value for query",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeylistUpdate": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "updates": {
                "docs": "List of update rules",
                "type": "optional<list<KeylistUpdateRule>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeylistUpdateRule": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "action": {
                "docs": "Action for specific key",
                "type": "KeylistUpdateRuleAction",
              },
              "recipient_key": {
                "docs": "Key to remove or add",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeylistUpdateRuleAction": {
            "docs": "Action for specific key",
            "enum": [
              "add",
              "remove",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LDProofVCDetail": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "credential": "LdProofVcDetailCredential",
              "options": "LdProofVcDetailOptions",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LDProofVCDetailOptions": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "challenge": {
                "docs": "A challenge to include in the proof. SHOULD be provided by the requesting party of the credential (=holder)",
                "type": "optional<string>",
              },
              "created": {
                "docs": "The date and time of the proof (with a maximum accuracy in seconds). Defaults to current system time",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "credentialStatus": {
                "type": "optional<LdProofVcDetailOptionsCredentialStatus>",
              },
              "domain": {
                "docs": "The intended domain of validity for the proof",
                "type": "optional<string>",
              },
              "proofPurpose": {
                "docs": "The proof purpose used for the proof. Should match proof purposes registered in the Linked Data Proofs Specification",
                "type": "optional<string>",
              },
              "proofType": {
                "docs": "The proof type used for the proof. Should match suites registered in the Linked Data Cryptographic Suite Registry",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LdProofVcDetailCredential": {
            "docs": "Detail of the JSON-LD Credential to be issued",
            "type": "Credential",
          },
          "LdProofVcDetailOptions": {
            "docs": "Options for specifying how the linked data proof is created.",
            "type": "LDProofVCDetailOptions",
          },
          "LdProofVcDetailOptionsCredentialStatus": {
            "docs": "The credential status mechanism to use for the credential. Omitting the property indicates the issued credential will not include a credential status",
            "type": "CredentialStatusOptions",
          },
          "LedgerConfigInstance": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "genesis_file": {
                "docs": "genesis_file",
                "type": "optional<string>",
              },
              "genesis_transactions": {
                "docs": "genesis_transactions",
                "type": "optional<string>",
              },
              "genesis_url": {
                "docs": "genesis_url",
                "type": "optional<string>",
              },
              "id": {
                "docs": "ledger_id",
                "type": "optional<string>",
              },
              "is_production": {
                "docs": "is_production",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LedgerConfigList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ledger_config_list": "list<LedgerConfigInstance>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LedgerModulesResult": "map<string, unknown>",
          "LinkedDataProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "challenge": {
                "docs": "Associates a challenge with a proof, for use with a proofPurpose such as authentication",
                "type": "optional<string>",
              },
              "created": {
                "docs": "The string value of an ISO8601 combined date and time string generated by the Signature Algorithm",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "domain": {
                "docs": "A string value specifying the restricted domain of the signature.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "\w+:(\/?\/?)[^\s]+",
                },
              },
              "jws": {
                "docs": "Associates a Detached Json Web Signature with a proof",
                "type": "optional<string>",
              },
              "nonce": {
                "docs": "The nonce",
                "type": "optional<string>",
              },
              "proofPurpose": {
                "docs": "Proof purpose",
                "type": "string",
              },
              "proofValue": {
                "docs": "The proof value of a proof",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Identifies the digital signature suite that was used to create the signature",
                "type": "string",
              },
              "verificationMethod": {
                "docs": "Information used for proof verification",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "\w+:(\/?\/?)[^\s]+",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MediationDeny": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "mediator_terms": {
                "type": "optional<list<string>>",
              },
              "recipient_terms": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MediationGrant": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "endpoint": {
                "docs": "endpoint on which messages destined for the recipient are received.",
                "type": "optional<string>",
              },
              "routing_keys": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MediationList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of mediation records",
                "type": "optional<list<MediationRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MediationRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "connection_id": "string",
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "endpoint": {
                "type": "optional<string>",
              },
              "mediation_id": {
                "type": "optional<string>",
              },
              "mediator_terms": {
                "type": "optional<list<string>>",
              },
              "recipient_terms": {
                "type": "optional<list<string>>",
              },
              "role": "string",
              "routing_keys": {
                "type": "optional<list<string>>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Menu": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "description": {
                "docs": "Introductory text for the menu",
                "type": "optional<string>",
              },
              "errormsg": {
                "docs": "An optional error message to display in menu header",
                "type": "optional<string>",
              },
              "options": {
                "docs": "List of menu options",
                "type": "list<MenuOption>",
              },
              "title": {
                "docs": "Menu title",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MenuForm": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "description": {
                "docs": "Additional descriptive text for menu form",
                "type": "optional<string>",
              },
              "params": {
                "docs": "List of form parameters",
                "type": "optional<list<MenuFormParam>>",
              },
              "submit-label": {
                "docs": "Alternative label for form submit button",
                "type": "optional<string>",
              },
              "title": {
                "docs": "Menu form title",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MenuFormParam": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "default": {
                "docs": "Default parameter value",
                "type": "optional<string>",
              },
              "description": {
                "docs": "Additional descriptive text for menu form parameter",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Menu parameter name",
                "type": "string",
              },
              "required": {
                "docs": "Whether parameter is required",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "Menu parameter title",
                "type": "string",
              },
              "type": {
                "docs": "Menu form parameter input type",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MenuJson": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "description": {
                "docs": "Introductory text for the menu",
                "type": "optional<string>",
              },
              "errormsg": {
                "docs": "Optional error message to display in menu header",
                "type": "optional<string>",
              },
              "options": {
                "docs": "List of menu options",
                "type": "list<MenuOption>",
              },
              "title": {
                "docs": "Menu title",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MenuOption": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "description": {
                "docs": "Additional descriptive text for menu option",
                "type": "optional<string>",
              },
              "disabled": {
                "docs": "Whether to show option as disabled",
                "type": "optional<boolean>",
              },
              "form": {
                "type": "optional<MenuForm>",
              },
              "name": {
                "docs": "Menu option name (unique identifier)",
                "type": "string",
              },
              "title": {
                "docs": "Menu option title",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MultitenantModuleResponse": "map<string, unknown>",
          "OobRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attach_thread_id": {
                "docs": "Connection record identifier",
                "type": "optional<string>",
              },
              "connection_id": {
                "docs": "Connection record identifier",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "invi_msg_id": {
                "docs": "Invitation message identifier",
                "type": "string",
              },
              "invitation": "InvitationRecordInvitation",
              "oob_id": {
                "docs": "Oob record identifier",
                "type": "string",
              },
              "our_recipient_key": {
                "docs": "Recipient key used for oob invitation",
                "type": "optional<string>",
              },
              "role": {
                "docs": "OOB Role",
                "type": "optional<OobRecordRole>",
              },
              "state": {
                "docs": "Out of band message exchange state",
                "type": "OobRecordState",
              },
              "their_service": {
                "type": "optional<ServiceDecorator>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OobRecordRole": {
            "docs": "OOB Role",
            "enum": [
              "sender",
              "receiver",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OobRecordState": {
            "docs": "Out of band message exchange state",
            "enum": [
              "initial",
              {
                "name": "PrepareResponse",
                "value": "prepare-response",
              },
              {
                "name": "AwaitResponse",
                "value": "await-response",
              },
              {
                "name": "ReuseNotAccepted",
                "value": "reuse-not-accepted",
              },
              {
                "name": "ReuseAccepted",
                "value": "reuse-accepted",
              },
              "done",
              "deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PingRequestResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "thread_id": {
                "docs": "Thread ID of the ping message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PresentationDefinition": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "format": {
                "type": "optional<ClaimFormat>",
              },
              "id": {
                "docs": "Unique Resource Identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                },
              },
              "input_descriptors": {
                "type": "optional<list<InputDescriptors>>",
              },
              "name": {
                "docs": "Human-friendly name that describes what the presentation definition pertains to",
                "type": "optional<string>",
              },
              "purpose": {
                "docs": "Describes the purpose for which the Presentation Definition's inputs are being requested",
                "type": "optional<string>",
              },
              "submission_requirements": {
                "type": "optional<list<SubmissionRequirements>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PresentationProposal": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "presentation_proposal": {
                "type": "IndyPresPreview",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PresentationRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "request_presentations~attach": {
                "type": "list<AttachDecorator>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProtocolDescriptor": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "pid": "string",
              "roles": {
                "docs": "List of roles",
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PublishRevocations": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "rrid2crid": {
                "docs": "Credential revocation ids by revocation registry id",
                "type": "optional<map<string, list<string>>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Queries": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "queries": {
                "type": "optional<list<QueryItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Query": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "type": "optional<string>",
              },
              "query": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "QueryItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "feature-type": {
                "docs": "feature type",
                "type": "QueryItemFeatureType",
              },
              "match": {
                "docs": "match",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "QueryItemFeatureType": {
            "docs": "feature type",
            "enum": [
              "protocol",
              {
                "name": "GoalCode",
                "value": "goal-code",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RawEncoded": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "encoded": {
                "docs": "Encoded value",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^-?[0-9]*$",
                },
              },
              "raw": {
                "docs": "Raw value",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ResolutionResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "did_document": {
                "docs": "DID Document",
                "type": "ResolutionResultDidDocument",
              },
              "metadata": {
                "docs": "Resolution metadata",
                "type": "ResolutionResultMetadata",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ResolutionResultDidDocument": {
            "docs": "DID Document",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ResolutionResultMetadata": {
            "docs": "Resolution metadata",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevRegIssuedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": {
                "docs": "Number of credentials issued against revocation registry",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevRegResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": {
                "type": "optional<IssuerRevRegRecord>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevRegWalletUpdatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "accum_calculated": {
                "docs": "Calculated accumulator for phantom revocations",
                "type": "optional<RevRegWalletUpdatedResultAccumCalculated>",
              },
              "accum_fixed": {
                "docs": "Applied ledger transaction to fix revocations",
                "type": "optional<RevRegWalletUpdatedResultAccumFixed>",
              },
              "rev_reg_delta": {
                "docs": "Indy revocation registry delta",
                "type": "optional<RevRegWalletUpdatedResultRevRegDelta>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevRegWalletUpdatedResultAccumCalculated": {
            "docs": "Calculated accumulator for phantom revocations",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevRegWalletUpdatedResultAccumFixed": {
            "docs": "Applied ledger transaction to fix revocations",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevRegWalletUpdatedResultRevRegDelta": {
            "docs": "Indy revocation registry delta",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevRegsCreated": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "rev_reg_ids": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevocationModuleResponse": "map<string, unknown>",
          "RouteRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "connection_id": {
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "recipient_key": "string",
              "record_id": {
                "type": "optional<string>",
              },
              "role": {
                "type": "optional<string>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "wallet_id": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Schema": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attrNames": {
                "docs": "Schema attribute names",
                "type": "optional<list<string>>",
              },
              "id": {
                "docs": "Schema identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
              "name": {
                "docs": "Schema name",
                "type": "optional<string>",
              },
              "seqNo": {
                "docs": "Schema sequence number",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 1,
                  "multipleOf": undefined,
                },
              },
              "ver": {
                "docs": "Node protocol version",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
              "version": {
                "docs": "Schema version",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SchemaGetResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "schema": {
                "type": "optional<Schema>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SchemaInputDescriptor": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "required": {
                "docs": "Required",
                "type": "optional<boolean>",
              },
              "uri": {
                "docs": "URI",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SchemaSendResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "schema": {
                "type": "optional<SchemaSendResultSchema>",
              },
              "schema_id": {
                "docs": "Schema identifier",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SchemaSendResultSchema": {
            "docs": "Schema definition",
            "type": "Schema",
          },
          "SchemasCreatedResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "schema_ids": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SchemasInputDescriptorFilter": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "oneof_filter": {
                "docs": "oneOf",
                "type": "optional<boolean>",
              },
              "uri_groups": {
                "type": "optional<list<list<SchemaInputDescriptor>>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SendMenuMenu": {
            "docs": "Menu to send to connection",
            "type": "MenuJson",
          },
          "ServiceDecorator": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "recipientKeys": {
                "docs": "List of recipient keys",
                "type": "list<string>",
              },
              "routingKeys": {
                "docs": "List of routing keys",
                "type": "optional<list<string>>",
              },
              "serviceEndpoint": {
                "docs": "Service endpoint at which to reach this agent",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SignResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "error": {
                "docs": "Error text",
                "type": "optional<string>",
              },
              "signed_doc": {
                "docs": "Signed document",
                "type": "optional<SignResponseSignedDoc>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SignResponseSignedDoc": {
            "docs": "Signed document",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SignatureOptions": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "challenge": {
                "type": "optional<string>",
              },
              "domain": {
                "type": "optional<string>",
              },
              "proofPurpose": "string",
              "type": {
                "type": "optional<string>",
              },
              "verificationMethod": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SignedDoc": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "proof": "SignedDocProof",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SignedDocProof": {
            "docs": "Linked data proof",
            "type": "SignatureOptions",
          },
          "SubmissionRequirements": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "Count Value",
                "type": "optional<integer>",
              },
              "from": {
                "docs": "From",
                "type": "optional<string>",
              },
              "from_nested": {
                "type": "optional<list<SubmissionRequirements>>",
              },
              "max": {
                "docs": "Max Value",
                "type": "optional<integer>",
              },
              "min": {
                "docs": "Min Value",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "Name",
                "type": "optional<string>",
              },
              "purpose": {
                "docs": "Purpose",
                "type": "optional<string>",
              },
              "rule": {
                "docs": "Selection",
                "type": "optional<rule>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TAAAcceptance": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "mechanism": {
                "type": "optional<string>",
              },
              "time": {
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TAAInfo": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "aml_record": {
                "type": "optional<AMLRecord>",
              },
              "taa_accepted": {
                "type": "optional<TAAAcceptance>",
              },
              "taa_record": {
                "type": "optional<TAARecord>",
              },
              "taa_required": {
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TAARecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "digest": {
                "type": "optional<string>",
              },
              "text": {
                "type": "optional<string>",
              },
              "version": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TAAResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "result": {
                "type": "optional<TAAInfo>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TailsDeleteResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionJobs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "transaction_my_job": {
                "docs": "My transaction related job",
                "type": "optional<TransactionJobsTransactionMyJob>",
              },
              "transaction_their_job": {
                "docs": "Their transaction related job",
                "type": "optional<TransactionJobsTransactionTheirJob>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionJobsTransactionMyJob": {
            "docs": "My transaction related job",
            "enum": [
              "TRANSACTION_AUTHOR",
              "TRANSACTION_ENDORSER",
              "reset",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionJobsTransactionTheirJob": {
            "docs": "Their transaction related job",
            "enum": [
              "TRANSACTION_AUTHOR",
              "TRANSACTION_ENDORSER",
              "reset",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of transaction records",
                "type": "optional<list<TransactionRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "_type": {
                "docs": "Transaction type",
                "type": "optional<string>",
              },
              "connection_id": {
                "docs": "The connection identifier for thie particular transaction record",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "endorser_write_txn": {
                "docs": "If True, Endorser will write the transaction after endorsing it",
                "type": "optional<boolean>",
              },
              "formats": {
                "type": "optional<list<map<string, string>>>",
              },
              "messages_attach": {
                "type": "optional<list<TransactionRecordMessagesAttachItem>>",
              },
              "meta_data": {
                "type": "optional<TransactionRecordMetaData>",
              },
              "signature_request": {
                "type": "optional<list<TransactionRecordSignatureRequestItem>>",
              },
              "signature_response": {
                "type": "optional<list<TransactionRecordSignatureResponseItem>>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "thread_id": {
                "docs": "Thread Identifier",
                "type": "optional<string>",
              },
              "timing": {
                "type": "optional<TransactionRecordTiming>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "transaction_id": {
                "docs": "Transaction identifier",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionRecordMessagesAttachItem": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionRecordMetaData": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionRecordSignatureRequestItem": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionRecordSignatureResponseItem": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TransactionRecordTiming": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TxnOrCredentialDefinitionSendResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sent": {
                "type": "optional<CredentialDefinitionSendResult>",
              },
              "txn": {
                "type": "optional<TxnOrCredentialDefinitionSendResultTxn>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TxnOrCredentialDefinitionSendResultTxn": {
            "docs": "Credential definition transaction to endorse",
            "type": "TransactionRecord",
          },
          "TxnOrPublishRevocationsResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sent": {
                "type": "optional<PublishRevocations>",
              },
              "txn": {
                "type": "optional<TxnOrPublishRevocationsResultTxn>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TxnOrPublishRevocationsResultTxn": {
            "docs": "Revocation registry revocations transaction to endorse",
            "type": "TransactionRecord",
          },
          "TxnOrRegisterLedgerNymResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "success": {
                "docs": "Success of nym registration operation",
                "type": "optional<boolean>",
              },
              "txn": {
                "type": "optional<TxnOrRegisterLedgerNymResponseTxn>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TxnOrRegisterLedgerNymResponseTxn": {
            "docs": "DID transaction to endorse",
            "type": "TransactionRecord",
          },
          "TxnOrRevRegResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sent": {
                "type": "optional<RevRegResult>",
              },
              "txn": {
                "type": "optional<TxnOrRevRegResultTxn>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TxnOrRevRegResultTxn": {
            "docs": "Revocation registry definition transaction to endorse",
            "type": "TransactionRecord",
          },
          "TxnOrSchemaSendResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sent": {
                "type": "optional<TxnOrSchemaSendResultSent>",
              },
              "txn": {
                "type": "optional<TxnOrSchemaSendResultTxn>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TxnOrSchemaSendResultSent": {
            "docs": "Content sent",
            "type": "SchemaSendResult",
          },
          "TxnOrSchemaSendResultTxn": {
            "docs": "Schema transaction to endorse",
            "type": "TransactionRecord",
          },
          "V10CredentialBoundOfferRequestCounterProposal": {
            "docs": "Optional counter-proposal",
            "type": "CredentialProposal",
          },
          "V10CredentialExchange": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "auto_issue": {
                "docs": "Issuer choice to issue to request in this credential exchange",
                "type": "optional<boolean>",
              },
              "auto_offer": {
                "docs": "Holder choice to accept offer in this credential exchange",
                "type": "optional<boolean>",
              },
              "auto_remove": {
                "docs": "Issuer choice to remove this credential exchange record when complete",
                "type": "optional<boolean>",
              },
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "credential": {
                "type": "optional<V10CredentialExchangeCredential>",
              },
              "credential_definition_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "credential_exchange_id": {
                "docs": "Credential exchange identifier",
                "type": "optional<string>",
              },
              "credential_id": {
                "docs": "Credential identifier",
                "type": "optional<string>",
              },
              "credential_offer": {
                "type": "optional<V10CredentialExchangeCredentialOffer>",
              },
              "credential_offer_dict": {
                "type": "optional<V10CredentialExchangeCredentialOfferDict>",
              },
              "credential_proposal_dict": {
                "type": "optional<V10CredentialExchangeCredentialProposalDict>",
              },
              "credential_request": {
                "type": "optional<V10CredentialExchangeCredentialRequest>",
              },
              "credential_request_metadata": {
                "docs": "(Indy) credential request metadata",
                "type": "optional<V10CredentialExchangeCredentialRequestMetadata>",
              },
              "error_msg": {
                "docs": "Error message",
                "type": "optional<string>",
              },
              "initiator": {
                "docs": "Issue-credential exchange initiator: self or external",
                "type": "optional<V10CredentialExchangeInitiator>",
              },
              "parent_thread_id": {
                "docs": "Parent thread identifier",
                "type": "optional<string>",
              },
              "raw_credential": {
                "type": "optional<V10CredentialExchangeRawCredential>",
              },
              "revoc_reg_id": {
                "docs": "Revocation registry identifier",
                "type": "optional<string>",
              },
              "revocation_id": {
                "docs": "Credential identifier within revocation registry",
                "type": "optional<string>",
              },
              "role": {
                "docs": "Issue-credential exchange role: holder or issuer",
                "type": "optional<V10CredentialExchangeRole>",
              },
              "schema_id": {
                "docs": "Schema identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
              "state": {
                "docs": "Issue-credential exchange state",
                "type": "optional<string>",
              },
              "thread_id": {
                "docs": "Thread identifier",
                "type": "optional<string>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10CredentialExchangeCredential": {
            "docs": "Credential as stored",
            "type": "IndyCredInfo",
          },
          "V10CredentialExchangeCredentialOffer": {
            "docs": "(Indy) credential offer",
            "type": "IndyCredAbstract",
          },
          "V10CredentialExchangeCredentialOfferDict": {
            "docs": "Credential offer message",
            "type": "CredentialOffer",
          },
          "V10CredentialExchangeCredentialProposalDict": {
            "docs": "Credential proposal message",
            "type": "CredentialProposal",
          },
          "V10CredentialExchangeCredentialRequest": {
            "docs": "(Indy) credential request",
            "type": "IndyCredRequest",
          },
          "V10CredentialExchangeCredentialRequestMetadata": {
            "docs": "(Indy) credential request metadata",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10CredentialExchangeInitiator": {
            "docs": "Issue-credential exchange initiator: self or external",
            "enum": [
              "self",
              "external",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10CredentialExchangeListResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "Aries#0036 v1.0 credential exchange records",
                "type": "optional<list<V10CredentialExchange>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10CredentialExchangeRawCredential": {
            "docs": "Credential as received, prior to storage in holder wallet",
            "type": "IndyCredential",
          },
          "V10CredentialExchangeRole": {
            "docs": "Issue-credential exchange role: holder or issuer",
            "enum": [
              "holder",
              "issuer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10DiscoveryExchangeListResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<list<V10DiscoveryExchangeListResultResultsInner>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10DiscoveryExchangeListResultResultsInner": {
            "docs": "Discover Features v1.0 exchange record",
            "type": "V10DiscoveryRecord",
          },
          "V10DiscoveryRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "disclose": {
                "type": "optional<V10DiscoveryRecordDisclose>",
              },
              "discovery_exchange_id": {
                "docs": "Credential exchange identifier",
                "type": "optional<string>",
              },
              "query_msg": {
                "type": "optional<V10DiscoveryRecordQueryMsg>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "thread_id": {
                "docs": "Thread identifier",
                "type": "optional<string>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10DiscoveryRecordDisclose": {
            "docs": "Disclose message",
            "type": "Disclose",
          },
          "V10DiscoveryRecordQueryMsg": {
            "docs": "Query message",
            "type": "Query",
          },
          "V10PresentProofModuleResponse": "map<string, unknown>",
          "V10PresentationExchange": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "auto_present": {
                "docs": "Prover choice to auto-present proof as verifier requests",
                "type": "optional<boolean>",
              },
              "auto_verify": {
                "docs": "Verifier choice to auto-verify proof presentation",
                "type": "optional<boolean>",
              },
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "error_msg": {
                "docs": "Error message",
                "type": "optional<string>",
              },
              "initiator": {
                "docs": "Present-proof exchange initiator: self or external",
                "type": "optional<V10PresentationExchangeInitiator>",
              },
              "presentation": {
                "type": "optional<V10PresentationExchangePresentation>",
              },
              "presentation_exchange_id": {
                "docs": "Presentation exchange identifier",
                "type": "optional<string>",
              },
              "presentation_proposal_dict": {
                "type": "optional<V10PresentationExchangePresentationProposalDict>",
              },
              "presentation_request": {
                "type": "optional<V10PresentationExchangePresentationRequest>",
              },
              "presentation_request_dict": {
                "type": "optional<V10PresentationExchangePresentationRequestDict>",
              },
              "role": {
                "docs": "Present-proof exchange role: prover or verifier",
                "type": "optional<V10PresentationExchangeRole>",
              },
              "state": {
                "docs": "Present-proof exchange state",
                "type": "optional<string>",
              },
              "thread_id": {
                "docs": "Thread identifier",
                "type": "optional<string>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "verified": {
                "docs": "Whether presentation is verified: true or false",
                "type": "optional<V10PresentationExchangeVerified>",
              },
              "verified_msgs": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10PresentationExchangeInitiator": {
            "docs": "Present-proof exchange initiator: self or external",
            "enum": [
              "self",
              "external",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10PresentationExchangeList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "Aries RFC 37 v1.0 presentation exchange records",
                "type": "optional<list<V10PresentationExchange>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10PresentationExchangePresentation": {
            "docs": "(Indy) presentation (also known as proof)",
            "type": "IndyProof",
          },
          "V10PresentationExchangePresentationProposalDict": {
            "docs": "Presentation proposal message",
            "type": "PresentationProposal",
          },
          "V10PresentationExchangePresentationRequest": {
            "docs": "(Indy) presentation request (also known as proof request)",
            "type": "IndyProofRequest",
          },
          "V10PresentationExchangePresentationRequestDict": {
            "docs": "Presentation request message",
            "type": "PresentationRequest",
          },
          "V10PresentationExchangeRole": {
            "docs": "Present-proof exchange role: prover or verifier",
            "enum": [
              "prover",
              "verifier",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V10PresentationExchangeVerified": {
            "docs": "Whether presentation is verified: true or false",
            "enum": [
              "true",
              "false",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredAttrSpec": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "mime-type": {
                "docs": "MIME type: omit for (null) default",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Attribute name",
                "type": "string",
              },
              "value": {
                "docs": "Attribute value: base64-encode if MIME type is present",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredBoundOfferRequestCounterPreview": {
            "docs": "Optional content for counter-proposal",
            "type": "V20CredPreview",
          },
          "V20CredBoundOfferRequestFilter": {
            "docs": "Credential specification criteria by format",
            "type": "V20CredFilter",
          },
          "V20CredExFree": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "auto_remove": {
                "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "type": "optional<boolean>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "connection_id": {
                "docs": "Connection identifier",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "credential_preview": {
                "type": "optional<V20CredPreview>",
              },
              "filter": "V20CredBoundOfferRequestFilter",
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "verification_method": {
                "docs": "For ld-proofs. Verification method for signing.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "auto_issue": {
                "docs": "Issuer choice to issue to request in this credential exchange",
                "type": "optional<boolean>",
              },
              "auto_offer": {
                "docs": "Holder choice to accept offer in this credential exchange",
                "type": "optional<boolean>",
              },
              "auto_remove": {
                "docs": "Issuer choice to remove this credential exchange record when complete",
                "type": "optional<boolean>",
              },
              "by_format": {
                "type": "optional<V20CredExRecordByFormat>",
              },
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "cred_ex_id": {
                "docs": "Credential exchange identifier",
                "type": "optional<string>",
              },
              "cred_issue": {
                "type": "optional<V20CredExRecordCredIssue>",
              },
              "cred_offer": {
                "type": "optional<V20CredExRecordCredOffer>",
              },
              "cred_preview": {
                "type": "optional<V20CredExRecordCredPreview>",
              },
              "cred_proposal": {
                "type": "optional<V20CredExRecordCredProposal>",
              },
              "cred_request": {
                "type": "optional<V20CredExRecordCredRequest>",
              },
              "error_msg": {
                "docs": "Error message",
                "type": "optional<string>",
              },
              "initiator": {
                "docs": "Issue-credential exchange initiator: self or external",
                "type": "optional<V20CredExRecordInitiator>",
              },
              "parent_thread_id": {
                "docs": "Parent thread identifier",
                "type": "optional<string>",
              },
              "role": {
                "docs": "Issue-credential exchange role: holder or issuer",
                "type": "optional<V20CredExRecordRole>",
              },
              "state": {
                "docs": "Issue-credential exchange state",
                "type": "optional<V20CredExRecordState>",
              },
              "thread_id": {
                "docs": "Thread identifier",
                "type": "optional<string>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordByFormat": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_issue": {
                "type": "optional<V20CredExRecordByFormatCredIssue>",
              },
              "cred_offer": {
                "type": "optional<V20CredExRecordByFormatCredOffer>",
              },
              "cred_proposal": {
                "type": "optional<V20CredExRecordByFormatCredProposal>",
              },
              "cred_request": {
                "type": "optional<V20CredExRecordByFormatCredRequest>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordByFormatCredIssue": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordByFormatCredOffer": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordByFormatCredProposal": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordByFormatCredRequest": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordCredIssue": {
            "docs": "Serialized credential issue message",
            "type": "V20CredIssue",
          },
          "V20CredExRecordCredOffer": {
            "docs": "Credential offer message",
            "type": "V20CredOffer",
          },
          "V20CredExRecordCredPreview": {
            "docs": "Credential preview from credential proposal",
            "type": "V20CredPreview",
          },
          "V20CredExRecordCredProposal": {
            "docs": "Credential proposal message",
            "type": "V20CredProposal",
          },
          "V20CredExRecordCredRequest": {
            "docs": "Serialized credential request message",
            "type": "V20CredRequest",
          },
          "V20CredExRecordDetail": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_ex_record": {
                "type": "optional<V20CredExRecordDetailCredExRecord>",
              },
              "indy": {
                "type": "optional<V20CredExRecordIndy>",
              },
              "ld_proof": {
                "type": "optional<V20CredExRecordLdProof>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordDetailCredExRecord": {
            "docs": "Credential exchange record",
            "type": "V20CredExRecord",
          },
          "V20CredExRecordIndy": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "cred_ex_id": {
                "docs": "Corresponding v2.0 credential exchange record identifier",
                "type": "optional<string>",
              },
              "cred_ex_indy_id": {
                "docs": "Record identifier",
                "type": "optional<string>",
              },
              "cred_id_stored": {
                "docs": "Credential identifier stored in wallet",
                "type": "optional<string>",
              },
              "cred_request_metadata": {
                "docs": "Credential request metadata for indy holder",
                "type": "optional<V20CredExRecordIndyCredRequestMetadata>",
              },
              "cred_rev_id": {
                "docs": "Credential revocation identifier within revocation registry",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[1-9][0-9]*$",
                },
              },
              "rev_reg_id": {
                "docs": "Revocation registry identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                },
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordIndyCredRequestMetadata": {
            "docs": "Credential request metadata for indy holder",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordInitiator": {
            "docs": "Issue-credential exchange initiator: self or external",
            "enum": [
              "self",
              "external",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordLdProof": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "cred_ex_id": {
                "docs": "Corresponding v2.0 credential exchange record identifier",
                "type": "optional<string>",
              },
              "cred_ex_ld_proof_id": {
                "docs": "Record identifier",
                "type": "optional<string>",
              },
              "cred_id_stored": {
                "docs": "Credential identifier stored in wallet",
                "type": "optional<string>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordListResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "Credential exchange records and corresponding detail records",
                "type": "optional<list<V20CredExRecordDetail>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordRole": {
            "docs": "Issue-credential exchange role: holder or issuer",
            "enum": [
              "issuer",
              "holder",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredExRecordState": {
            "docs": "Issue-credential exchange state",
            "enum": [
              {
                "name": "ProposalSent",
                "value": "proposal-sent",
              },
              {
                "name": "ProposalReceived",
                "value": "proposal-received",
              },
              {
                "name": "OfferSent",
                "value": "offer-sent",
              },
              {
                "name": "OfferReceived",
                "value": "offer-received",
              },
              {
                "name": "RequestSent",
                "value": "request-sent",
              },
              {
                "name": "RequestReceived",
                "value": "request-received",
              },
              {
                "name": "CredentialIssued",
                "value": "credential-issued",
              },
              {
                "name": "CredentialReceived",
                "value": "credential-received",
              },
              "done",
              {
                "name": "CredentialRevoked",
                "value": "credential-revoked",
              },
              "abandoned",
              "deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredFilter": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "indy": {
                "type": "optional<V20CredFilterIndy>",
              },
              "ld_proof": {
                "type": "optional<V20CredFilterLdProof>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredFilterIndy": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "cred_def_id": {
                "docs": "Credential definition identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                },
              },
              "issuer_did": {
                "docs": "Credential issuer DID",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "schema_id": {
                "docs": "Schema identifier",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                },
              },
              "schema_issuer_did": {
                "docs": "Schema issuer DID",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                },
              },
              "schema_name": {
                "docs": "Schema name",
                "type": "optional<string>",
              },
              "schema_version": {
                "docs": "Schema version",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^[0-9.]+$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredFilterLdProof": {
            "docs": "Credential filter for linked data proof",
            "type": "LDProofVCDetail",
          },
          "V20CredFormat": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attach_id": {
                "docs": "Attachment identifier",
                "type": "string",
              },
              "format": {
                "docs": "Attachment format specifier",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredIssue": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "credentials~attach": {
                "docs": "Credential attachments",
                "type": "list<AttachDecorator>",
              },
              "formats": {
                "docs": "Acceptable attachment formats",
                "type": "list<V20CredFormat>",
              },
              "replacement_id": {
                "docs": "Issuer-unique identifier to coordinate credential replacement",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredOffer": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "credential_preview": {
                "type": "optional<V20CredPreview>",
              },
              "formats": {
                "docs": "Acceptable credential formats",
                "type": "list<V20CredFormat>",
              },
              "offers~attach": {
                "docs": "Offer attachments",
                "type": "list<AttachDecorator>",
              },
              "replacement_id": {
                "docs": "Issuer-unique identifier to coordinate credential replacement",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredPreview": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@type": {
                "docs": "Message type identifier",
                "type": "optional<string>",
              },
              "attributes": "list<V20CredAttrSpec>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredProposal": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "credential_preview": {
                "type": "optional<V20CredProposalCredentialPreview>",
              },
              "filters~attach": {
                "docs": "Credential filter per acceptable format on corresponding identifier",
                "type": "list<AttachDecorator>",
              },
              "formats": {
                "docs": "Attachment formats",
                "type": "list<V20CredFormat>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredProposalCredentialPreview": {
            "docs": "Credential preview",
            "type": "V20CredPreview",
          },
          "V20CredRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "formats": {
                "docs": "Acceptable attachment formats",
                "type": "list<V20CredFormat>",
              },
              "requests~attach": {
                "docs": "Request attachments",
                "type": "list<AttachDecorator>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20CredRequestFreeFilter": {
            "docs": "Credential specification criteria by format",
            "type": "V20CredFilterLdProof",
          },
          "V20DiscoveryExchangeListResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<list<V20DiscoveryExchangeListResultResultsInner>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20DiscoveryExchangeListResultResultsInner": {
            "docs": "Discover Features v2.0 exchange record",
            "type": "V20DiscoveryRecord",
          },
          "V20DiscoveryExchangeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<V20DiscoveryExchangeListResultResultsInner>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20DiscoveryRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "disclosures": {
                "type": "optional<V20DiscoveryRecordDisclosures>",
              },
              "discovery_exchange_id": {
                "docs": "Credential exchange identifier",
                "type": "optional<string>",
              },
              "queries_msg": {
                "type": "optional<V20DiscoveryRecordQueriesMsg>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "thread_id": {
                "docs": "Thread identifier",
                "type": "optional<string>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20DiscoveryRecordDisclosures": {
            "docs": "Disclosures message",
            "type": "Disclosures",
          },
          "V20DiscoveryRecordQueriesMsg": {
            "docs": "Queries message",
            "type": "Queries",
          },
          "V20IssueCredentialModuleResponse": "map<string, unknown>",
          "V20Pres": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "formats": {
                "docs": "Acceptable attachment formats",
                "type": "list<V20PresFormat>",
              },
              "presentations~attach": {
                "type": "list<AttachDecorator>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "auto_present": {
                "docs": "Prover choice to auto-present proof as verifier requests",
                "type": "optional<boolean>",
              },
              "auto_verify": {
                "docs": "Verifier choice to auto-verify proof presentation",
                "type": "optional<boolean>",
              },
              "by_format": {
                "type": "optional<V20PresExRecordByFormat>",
              },
              "connection_id": {
                "docs": "Connection identifier",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "error_msg": {
                "docs": "Error message",
                "type": "optional<string>",
              },
              "initiator": {
                "docs": "Present-proof exchange initiator: self or external",
                "type": "optional<V20PresExRecordInitiator>",
              },
              "pres": {
                "type": "optional<V20PresExRecordPres>",
              },
              "pres_ex_id": {
                "docs": "Presentation exchange identifier",
                "type": "optional<string>",
              },
              "pres_proposal": {
                "type": "optional<V20PresExRecordPresProposal>",
              },
              "pres_request": {
                "type": "optional<V20PresExRecordPresRequest>",
              },
              "role": {
                "docs": "Present-proof exchange role: prover or verifier",
                "type": "optional<V20PresExRecordRole>",
              },
              "state": {
                "docs": "Present-proof exchange state",
                "type": "optional<V20PresExRecordState>",
              },
              "thread_id": {
                "docs": "Thread identifier",
                "type": "optional<string>",
              },
              "trace": {
                "docs": "Record trace information, based on agent configuration",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "verified": {
                "docs": "Whether presentation is verified: 'true' or 'false'",
                "type": "optional<V20PresExRecordVerified>",
              },
              "verified_msgs": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordByFormat": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "pres": {
                "type": "optional<pres>",
              },
              "pres_proposal": {
                "type": "optional<V20PresExRecordByFormatPresProposal>",
              },
              "pres_request": {
                "type": "optional<V20PresExRecordByFormatPresRequest>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordByFormatPresProposal": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordByFormatPresRequest": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordInitiator": {
            "docs": "Present-proof exchange initiator: self or external",
            "enum": [
              "self",
              "external",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "Presentation exchange records",
                "type": "optional<list<V20PresExRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordPres": {
            "docs": "Presentation message",
            "type": "V20Pres",
          },
          "V20PresExRecordPresProposal": {
            "docs": "Presentation proposal message",
            "type": "V20PresProposal",
          },
          "V20PresExRecordPresRequest": {
            "docs": "Presentation request message",
            "type": "V20PresRequest",
          },
          "V20PresExRecordRole": {
            "docs": "Present-proof exchange role: prover or verifier",
            "enum": [
              "prover",
              "verifier",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordState": {
            "docs": "Present-proof exchange state",
            "enum": [
              {
                "name": "ProposalSent",
                "value": "proposal-sent",
              },
              {
                "name": "ProposalReceived",
                "value": "proposal-received",
              },
              {
                "name": "RequestSent",
                "value": "request-sent",
              },
              {
                "name": "RequestReceived",
                "value": "request-received",
              },
              {
                "name": "PresentationSent",
                "value": "presentation-sent",
              },
              {
                "name": "PresentationReceived",
                "value": "presentation-received",
              },
              "done",
              "abandoned",
              "deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresExRecordVerified": {
            "docs": "Whether presentation is verified: 'true' or 'false'",
            "enum": [
              "true",
              "false",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresFormat": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attach_id": {
                "docs": "Attachment identifier",
                "type": "string",
              },
              "format": {
                "docs": "Attachment format specifier",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresProposal": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "formats": {
                "type": "list<V20PresFormat>",
              },
              "proposals~attach": {
                "docs": "Attachment per acceptable format on corresponding identifier",
                "type": "list<AttachDecorator>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresProposalByFormat": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "dif": {
                "type": "optional<V20PresProposalByFormatDif>",
              },
              "indy": {
                "type": "optional<V20PresProposalByFormatIndy>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresProposalByFormatDif": {
            "docs": "Presentation proposal for DIF",
            "type": "DIFProofProposal",
          },
          "V20PresProposalByFormatIndy": {
            "docs": "Presentation proposal for indy",
            "type": "IndyProofRequest",
          },
          "V20PresRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "@id": {
                "docs": "Message identifier",
                "type": "optional<string>",
              },
              "@type": {
                "docs": "Message type",
                "type": "optional<string>",
              },
              "comment": {
                "docs": "Human-readable comment",
                "type": "optional<string>",
              },
              "formats": {
                "type": "list<V20PresFormat>",
              },
              "request_presentations~attach": {
                "docs": "Attachment per acceptable format on corresponding identifier",
                "type": "list<AttachDecorator>",
              },
              "will_confirm": {
                "docs": "Whether verifier will send confirmation ack",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresRequestByFormat": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "dif": {
                "type": "optional<V20PresRequestByFormatDif>",
              },
              "indy": {
                "type": "optional<V20PresRequestByFormatIndy>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "V20PresRequestByFormatDif": {
            "docs": "Presentation request for DIF",
            "type": "DIFProofRequest",
          },
          "V20PresRequestByFormatIndy": {
            "docs": "Presentation request for indy",
            "type": "IndyProofRequest",
          },
          "V20PresSpecByFormatRequestDif": {
            "docs": "Optional Presentation specification for DIF, overrides the PresentionExchange record's PresRequest",
            "type": "DIFPresSpec",
          },
          "V20PresSpecByFormatRequestIndy": {
            "docs": "Presentation specification for indy",
            "type": "IndyPresSpec",
          },
          "V20PresentProofModuleResponse": "map<string, unknown>",
          "VCRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "contexts": {
                "type": "optional<list<string>>",
              },
              "cred_tags": {
                "type": "optional<map<string, string>>",
              },
              "cred_value": {
                "docs": "(JSON-serializable) credential value",
                "type": "optional<VcRecordCredValue>",
              },
              "expanded_types": {
                "type": "optional<list<string>>",
              },
              "given_id": {
                "docs": "Credential identifier",
                "type": "optional<string>",
              },
              "issuer_id": {
                "docs": "Issuer identifier",
                "type": "optional<string>",
              },
              "proof_types": {
                "type": "optional<list<string>>",
              },
              "record_id": {
                "docs": "Record identifier",
                "type": "optional<string>",
              },
              "schema_ids": {
                "type": "optional<list<string>>",
              },
              "subject_ids": {
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VCRecordList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "type": "optional<list<VCRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VcRecordCredValue": {
            "docs": "(JSON-serializable) credential value",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VerifyRequestDoc": {
            "docs": "Signed document",
            "type": "SignedDoc",
          },
          "VerifyResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "error": {
                "docs": "Error text",
                "type": "optional<string>",
              },
              "valid": "boolean",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WalletList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of wallet records",
                "type": "optional<list<WalletRecord>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WalletModuleResponse": "map<string, unknown>",
          "WalletRecord": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Time of record creation",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "key_management_mode": {
                "docs": "Mode regarding management of wallet key",
                "type": "WalletRecordKeyManagementMode",
              },
              "settings": {
                "docs": "Settings for this wallet.",
                "type": "optional<WalletRecordSettings>",
              },
              "state": {
                "docs": "Current record state",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Time of last record update",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": "^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$",
                },
              },
              "wallet_id": {
                "docs": "Wallet record ID",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WalletRecordKeyManagementMode": {
            "docs": "Mode regarding management of wallet key",
            "enum": [
              "managed",
              "unmanaged",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WalletRecordSettings": {
            "docs": "Settings for this wallet.",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WriteLedgerRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ledger_id": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "directive": {
            "docs": "Preference",
            "enum": [
              "required",
              "preferred",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "issuanceType": {
            "docs": "Issuance type",
            "enum": [
              "ISSUANCE_ON_DEMAND",
              "ISSUANCE_BY_DEFAULT",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "jwt": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ldp": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "metadata": {
            "docs": "Metadata dictionary",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "predicate": {
            "docs": "Preference",
            "enum": [
              "required",
              "preferred",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "pres": {
            "docs": undefined,
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "rule": {
            "docs": "Selection",
            "enum": [
              "all",
              "pick",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "signature": {
            "docs": "Credential signature",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "witness": {
            "docs": "Witness for revocation proof",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "service:
  auth: false
  base-path: ''
  endpoints:
    endorse-transaction:
      path: /transactions/{tran_id}/endorse
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        tran_id:
          type: string
          docs: Transaction identifier
      display-name: For Endorser to endorse a particular transaction record
      request:
        name: EndorseTransactionRequest
        query-parameters:
          endorser_did:
            type: optional<string>
            docs: Endorser DID
      response:
        docs: ''
        type: TransactionRecord
        status-code: 200
      examples:
        - path-parameters:
            tran_id: tran_id
          response:
            body:
              _type: '101'
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              endorser_write_txn: true
              formats:
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
              messages_attach:
                - {}
                - {}
              signature_request:
                - {}
                - {}
              signature_response:
                - {}
                - {}
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
types:
  AMLRecord:
    properties:
      aml:
        type: optional<map<string, string>>
      amlContext:
        type: optional<string>
      version:
        type: optional<string>
    source:
      openapi: ../openapi.yml
  ActionMenuFetchResult:
    properties:
      result:
        type: optional<ActionMenuFetchResultResult>
    source:
      openapi: ../openapi.yml
  ActionMenuModulesResult: map<string, unknown>
  AdminConfigConfig:
    docs: Configuration settings
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  AdminConfig:
    properties:
      config:
        type: optional<AdminConfigConfig>
        docs: Configuration settings
    source:
      openapi: ../openapi.yml
  AdminModules:
    properties:
      result:
        type: optional<list<string>>
        docs: List of admin modules
    source:
      openapi: ../openapi.yml
  AdminReset: map<string, unknown>
  AdminShutdown: map<string, unknown>
  AdminStatusConductor:
    docs: Conductor statistics
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  AdminStatusTiming:
    docs: Timing results
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  AdminStatus:
    properties:
      conductor:
        type: optional<AdminStatusConductor>
        docs: Conductor statistics
      label:
        type: optional<string>
        docs: Default label
      timing:
        type: optional<AdminStatusTiming>
        docs: Timing results
      version:
        type: optional<string>
        docs: Version code
    source:
      openapi: ../openapi.yml
  AdminStatusLiveliness:
    properties:
      alive:
        type: optional<boolean>
        docs: Liveliness status
    source:
      openapi: ../openapi.yml
  AdminStatusReadiness:
    properties:
      ready:
        type: optional<boolean>
        docs: Readiness status
    source:
      openapi: ../openapi.yml
  AttachDecorator:
    properties:
      '@id':
        type: optional<string>
        docs: Attachment identifier
      byte_count:
        type: optional<integer>
        docs: Byte count of data included by reference
      data:
        type: AttachDecoratorData
      description:
        type: optional<string>
        docs: Human-readable description of content
      filename:
        type: optional<string>
        docs: File name
      lastmod_time:
        type: optional<string>
        docs: Hint regarding last modification datetime, in ISO-8601 format
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      mime-type:
        type: optional<string>
        docs: MIME type
    source:
      openapi: ../openapi.yml
  AttachDecoratorData:
    properties:
      base64:
        type: optional<string>
        docs: Base64-encoded data
        validation:
          pattern: ^[a-zA-Z0-9+/]*={0,2}$
      json:
        type: optional<map<string, unknown>>
        docs: JSON-serialized data
      jws:
        type: optional<AttachDecoratorDataJws>
      links:
        type: optional<list<string>>
        docs: List of hypertext links to data
      sha256:
        type: optional<string>
        docs: SHA256 hash (binhex encoded) of content
        validation:
          pattern: ^[a-fA-F0-9+/]{64}$
    source:
      openapi: ../openapi.yml
  AttachDecoratorData1Jws:
    properties:
      header:
        type: AttachDecoratorDataJWSHeader
      protected:
        type: optional<string>
        docs: protected JWS header
        validation:
          pattern: ^[-_a-zA-Z0-9]*$
      signature:
        type: string
        docs: signature
        validation:
          pattern: ^[-_a-zA-Z0-9]*$
    source:
      openapi: ../openapi.yml
  AttachDecoratorDataJWS:
    properties:
      header:
        type: optional<AttachDecoratorDataJWSHeader>
      protected:
        type: optional<string>
        docs: protected JWS header
        validation:
          pattern: ^[-_a-zA-Z0-9]*$
      signature:
        type: optional<string>
        docs: signature
        validation:
          pattern: ^[-_a-zA-Z0-9]*$
      signatures:
        type: optional<list<AttachDecoratorData1Jws>>
        docs: List of signatures
    source:
      openapi: ../openapi.yml
  AttachDecoratorDataJWSHeader:
    properties:
      kid:
        type: string
        docs: Key identifier, in W3C did:key or DID URL format
        validation:
          pattern: >-
            ^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\?.*)?#.+)$
    source:
      openapi: ../openapi.yml
  AttachmentDefType:
    enum:
      - value: credential-offer
        name: CredentialOffer
      - value: present-proof
        name: PresentProof
    docs: Attachment type
    inline: true
    source:
      openapi: ../openapi.yml
  AttachmentDef:
    properties:
      id:
        type: optional<string>
        docs: Attachment identifier
      type:
        type: optional<AttachmentDefType>
        docs: Attachment type
    source:
      openapi: ../openapi.yml
  AttributeMimeTypesResult:
    properties:
      results:
        type: optional<map<string, optional<string>>>
    source:
      openapi: ../openapi.yml
  BasicMessageModuleResponse: map<string, unknown>
  jwt:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ClaimFormatJwtVc:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ClaimFormatJwtVp:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ldp:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ClaimFormatLdpVc:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ClaimFormatLdpVp:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ClaimFormat:
    properties:
      jwt:
        type: optional<jwt>
      jwt_vc:
        type: optional<ClaimFormatJwtVc>
      jwt_vp:
        type: optional<ClaimFormatJwtVp>
      ldp:
        type: optional<ldp>
      ldp_vc:
        type: optional<ClaimFormatLdpVc>
      ldp_vp:
        type: optional<ClaimFormatLdpVp>
    source:
      openapi: ../openapi.yml
  ConnRecordAccept:
    enum:
      - manual
      - auto
    docs: 'Connection acceptance: manual or auto'
    inline: true
    source:
      openapi: ../openapi.yml
  ConnRecordConnectionProtocol:
    enum:
      - value: connections/1.0
        name: Connections10
      - value: didexchange/1.0
        name: Didexchange10
    docs: Connection protocol used
    inline: true
    source:
      openapi: ../openapi.yml
  ConnRecordInvitationMode:
    enum:
      - once
      - multi
      - static
    docs: Invitation mode
    inline: true
    source:
      openapi: ../openapi.yml
  ConnRecordRoutingState:
    enum:
      - none
      - request
      - active
      - error
    docs: Routing state of connection
    inline: true
    source:
      openapi: ../openapi.yml
  ConnRecordTheirRole:
    enum:
      - invitee
      - requester
      - inviter
      - responder
    docs: Their role in the connection protocol
    inline: true
    source:
      openapi: ../openapi.yml
  ConnRecord:
    properties:
      accept:
        type: optional<ConnRecordAccept>
        docs: 'Connection acceptance: manual or auto'
      alias:
        type: optional<string>
        docs: Optional alias to apply to connection for later use
      connection_id:
        type: optional<string>
        docs: Connection identifier
      connection_protocol:
        type: optional<ConnRecordConnectionProtocol>
        docs: Connection protocol used
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      error_msg:
        type: optional<string>
        docs: Error message
      inbound_connection_id:
        type: optional<string>
        docs: Inbound routing connection id to use
      invitation_key:
        type: optional<string>
        docs: Public key for connection
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
      invitation_mode:
        type: optional<ConnRecordInvitationMode>
        docs: Invitation mode
      invitation_msg_id:
        type: optional<string>
        docs: ID of out-of-band invitation message
      my_did:
        type: optional<string>
        docs: Our DID for connection
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      request_id:
        type: optional<string>
        docs: Connection request identifier
      rfc23_state:
        type: optional<string>
        docs: State per RFC 23
      routing_state:
        type: optional<ConnRecordRoutingState>
        docs: Routing state of connection
      state:
        type: optional<string>
        docs: Current record state
      their_did:
        type: optional<string>
        docs: Their DID for connection
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      their_label:
        type: optional<string>
        docs: Their label for connection
      their_public_did:
        type: optional<string>
        docs: Other agent's public DID for connection
      their_role:
        type: optional<ConnRecordTheirRole>
        docs: Their role in the connection protocol
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  ConnectionInvitation:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      did:
        type: optional<string>
        docs: DID for connection invitation
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      imageUrl:
        type: optional<string>
        docs: Optional image URL for connection invitation
      label:
        type: optional<string>
        docs: Optional label for connection invitation
      recipientKeys:
        type: optional<list<string>>
        docs: List of recipient keys
      routingKeys:
        type: optional<list<string>>
        docs: List of routing keys
      serviceEndpoint:
        type: optional<string>
        docs: Service endpoint at which to reach this agent
    source:
      openapi: ../openapi.yml
  ConnectionList:
    properties:
      results:
        type: optional<list<ConnRecord>>
        docs: List of connection records
    source:
      openapi: ../openapi.yml
  ConnectionMetadataResults:
    docs: Dictionary of metadata associated with connection.
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ConnectionMetadata:
    properties:
      results:
        type: optional<ConnectionMetadataResults>
        docs: Dictionary of metadata associated with connection.
    source:
      openapi: ../openapi.yml
  ConnectionModuleResponse: map<string, unknown>
  ConnectionStaticResult:
    properties:
      my_did:
        type: string
        docs: Local DID
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      my_endpoint:
        type: string
        docs: My URL endpoint
        validation:
          pattern: >-
            ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
      my_verkey:
        type: string
        docs: My verification key
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
      record:
        type: ConnRecord
      their_did:
        type: string
        docs: Remote DID
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      their_verkey:
        type: string
        docs: Remote verification key
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
    source:
      openapi: ../openapi.yml
  ConstraintsStatusActive:
    enum:
      - required
      - allowed
      - disallowed
    inline: true
    source:
      openapi: ../openapi.yml
  ConstraintsStatusRevoked:
    enum:
      - required
      - allowed
      - disallowed
    inline: true
    source:
      openapi: ../openapi.yml
  ConstraintsStatusSuspended:
    enum:
      - required
      - allowed
      - disallowed
    inline: true
    source:
      openapi: ../openapi.yml
  ConstraintsSubjectIsIssuer:
    enum:
      - required
      - preferred
    docs: SubjectIsIssuer
    inline: true
    source:
      openapi: ../openapi.yml
  Constraints:
    properties:
      fields:
        type: optional<list<DIFField>>
      is_holder:
        type: optional<list<DIFHolder>>
      limit_disclosure:
        type: optional<string>
        docs: LimitDisclosure
      status_active:
        type: optional<ConstraintsStatusActive>
      status_revoked:
        type: optional<ConstraintsStatusRevoked>
      status_suspended:
        type: optional<ConstraintsStatusSuspended>
      subject_is_issuer:
        type: optional<ConstraintsSubjectIsIssuer>
        docs: SubjectIsIssuer
    source:
      openapi: ../openapi.yml
  CreateWalletResponseKeyManagementMode:
    enum:
      - managed
      - unmanaged
    docs: Mode regarding management of wallet key
    inline: true
    source:
      openapi: ../openapi.yml
  CreateWalletResponseSettings:
    docs: Settings for this wallet.
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CreateWalletResponse:
    properties:
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      key_management_mode:
        type: CreateWalletResponseKeyManagementMode
        docs: Mode regarding management of wallet key
      settings:
        type: optional<CreateWalletResponseSettings>
        docs: Settings for this wallet.
      state:
        type: optional<string>
        docs: Current record state
      token:
        type: optional<string>
        docs: Authorization token to authenticate wallet requests
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      wallet_id:
        type: string
        docs: Wallet record ID
    source:
      openapi: ../openapi.yml
  CreateWalletTokenResponse:
    properties:
      token:
        type: optional<string>
        docs: Authorization token to authenticate wallet requests
    source:
      openapi: ../openapi.yml
  CredAttrSpec:
    properties:
      mime-type:
        type: optional<string>
        docs: 'MIME type: omit for (null) default'
      name:
        type: string
        docs: Attribute name
      value:
        type: string
        docs: 'Attribute value: base64-encode if MIME type is present'
    source:
      openapi: ../openapi.yml
  CredDefValue:
    properties:
      primary:
        type: optional<CredDefValuePrimary>
      revocation:
        type: optional<CredDefValueRevocation>
    source:
      openapi: ../openapi.yml
  CredDefValuePrimary:
    properties:
      'n':
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      r:
        type: optional<Generated>
      rctxt:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      s:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      z:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
    source:
      openapi: ../openapi.yml
  CredDefValueRevocation:
    properties:
      g:
        type: optional<string>
      g_dash:
        type: optional<string>
      h:
        type: optional<string>
      h0:
        type: optional<string>
      h1:
        type: optional<string>
      h2:
        type: optional<string>
      h_cap:
        type: optional<string>
      htilde:
        type: optional<string>
      pk:
        type: optional<string>
      u:
        type: optional<string>
      'y':
        type: optional<string>
    source:
      openapi: ../openapi.yml
  CredInfoList:
    properties:
      results:
        type: optional<list<IndyCredInfo>>
    source:
      openapi: ../openapi.yml
  CredRevIndyRecordsResultRevRegDelta:
    docs: Indy revocation registry delta
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  CredRevIndyRecordsResult:
    properties:
      rev_reg_delta:
        type: optional<CredRevIndyRecordsResultRevRegDelta>
        docs: Indy revocation registry delta
    source:
      openapi: ../openapi.yml
  CredRevRecordDetailsResult:
    properties:
      results:
        type: optional<list<IssuerCredRevRecord>>
    source:
      openapi: ../openapi.yml
  CredRevRecordResult:
    properties:
      result:
        type: optional<IssuerCredRevRecord>
    source:
      openapi: ../openapi.yml
  CredRevokedResult:
    properties:
      revoked:
        type: optional<boolean>
        docs: Whether credential is revoked on the ledger
    source:
      openapi: ../openapi.yml
  Credential:
    properties:
      '@context':
        docs: The JSON-LD context of the credential
        type: list<map<string, unknown>>
      credentialSubject:
        type: map<string, unknown>
      expirationDate:
        type: optional<string>
        docs: The expiration date
        validation:
          pattern: >-
            ^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt
            ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$
      id:
        type: optional<string>
        validation:
          pattern: \w+:(\/?\/?)[^\s]+
      issuanceDate:
        type: string
        docs: The issuance date
        validation:
          pattern: >-
            ^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt
            ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$
      issuer:
        type: map<string, unknown>
        docs: >-
          The JSON-LD Verifiable Credential Issuer. Either string of object with
          id field.
      proof:
        type: optional<CredentialProof>
      type:
        docs: The JSON-LD type of the credential
        type: list<string>
    source:
      openapi: ../openapi.yml
  CredentialDefinition:
    properties:
      id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      schemaId:
        type: optional<string>
        docs: Schema identifier within credential definition identifier
      tag:
        type: optional<string>
        docs: Tag within credential definition identifier
      type:
        type: optional<map<string, unknown>>
        docs: 'Signature type: CL for Camenisch-Lysyanskaya'
      value:
        type: optional<CredentialDefinitionValue>
      ver:
        type: optional<string>
        docs: Node protocol version
        validation:
          pattern: ^[0-9.]+$
    source:
      openapi: ../openapi.yml
  CredentialDefinitionGetResult:
    properties:
      credential_definition:
        type: optional<CredentialDefinition>
    source:
      openapi: ../openapi.yml
  CredentialDefinitionSendResult:
    properties:
      credential_definition_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
    source:
      openapi: ../openapi.yml
  CredentialDefinitionsCreatedResult:
    properties:
      credential_definition_ids:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  CredentialOffer:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      credential_preview:
        type: optional<CredentialPreview>
      offers~attach:
        type: list<AttachDecorator>
    source:
      openapi: ../openapi.yml
  CredentialPreview:
    properties:
      '@type':
        type: optional<string>
        docs: Message type identifier
      attributes: list<CredAttrSpec>
    source:
      openapi: ../openapi.yml
  CredentialProposal:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      cred_def_id:
        type: optional<string>
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      credential_proposal:
        type: optional<CredentialPreview>
      issuer_did:
        type: optional<string>
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      schema_id:
        type: optional<string>
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
      schema_issuer_did:
        type: optional<string>
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      schema_name:
        type: optional<string>
      schema_version:
        type: optional<string>
        validation:
          pattern: ^[0-9.]+$
    source:
      openapi: ../openapi.yml
  CredentialStatusOptions:
    properties:
      type:
        type: string
        docs: >-
          Credential status method type to use for the credential. Should match
          status method registered in the Verifiable Credential Extension
          Registry
    source:
      openapi: ../openapi.yml
  DidKeyType:
    enum:
      - ed25519
      - bls12381g2
    docs: Key type associated with the DID
    inline: true
    source:
      openapi: ../openapi.yml
  DidPosture:
    enum:
      - public
      - posted
      - wallet_only
    docs: >-
      Whether DID is current public DID, posted to ledger but not current public
      DID, or local to the wallet
    inline: true
    source:
      openapi: ../openapi.yml
  DID:
    properties:
      did:
        type: optional<string>
        docs: DID of interest
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$
      key_type:
        type: optional<DidKeyType>
        docs: Key type associated with the DID
      method:
        type: optional<string>
        docs: Did method associated with the DID
      posture:
        type: optional<DidPosture>
        docs: >-
          Whether DID is current public DID, posted to ledger but not current
          public DID, or local to the wallet
      verkey:
        type: optional<string>
        docs: Public verification key
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
    source:
      openapi: ../openapi.yml
  DidCreateOptionsKeyType:
    enum:
      - ed25519
      - bls12381g2
    docs: >-
      Key type to use for the DID keypair. Validated with the chosen DID
      method's supported key types.
    inline: true
    source:
      openapi: ../openapi.yml
  DIDCreateOptions:
    properties:
      did:
        type: optional<string>
        docs: >-
          Specify final value of the did (including did:<method>: prefix)if the
          method supports or requires so.
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$
      key_type:
        type: DidCreateOptionsKeyType
        docs: >-
          Key type to use for the DID keypair. Validated with the chosen DID
          method's supported key types.
    source:
      openapi: ../openapi.yml
  DIDEndpoint:
    properties:
      did:
        type: string
        docs: DID of interest
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      endpoint:
        type: optional<string>
        docs: Endpoint to set (omit to delete)
        validation:
          pattern: >-
            ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
    source:
      openapi: ../openapi.yml
  DIDList:
    properties:
      results:
        type: optional<list<DID>>
        docs: DID list
    source:
      openapi: ../openapi.yml
  DIDResult:
    properties:
      result:
        type: optional<DID>
    source:
      openapi: ../openapi.yml
  predicate:
    enum:
      - required
      - preferred
    docs: Preference
    inline: true
    source:
      openapi: ../openapi.yml
  DIFField:
    properties:
      filter:
        type: optional<Filter>
      id:
        type: optional<string>
        docs: ID
      path:
        type: optional<list<string>>
      predicate:
        type: optional<predicate>
        docs: Preference
      purpose:
        type: optional<string>
        docs: Purpose
    source:
      openapi: ../openapi.yml
  directive:
    enum:
      - required
      - preferred
    docs: Preference
    inline: true
    source:
      openapi: ../openapi.yml
  DIFHolder:
    properties:
      directive:
        type: optional<directive>
        docs: Preference
      field_id:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  DIFOptions:
    properties:
      challenge:
        type: optional<string>
        docs: Challenge protect against replay attack
        validation:
          pattern: >-
            [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
      domain:
        type: optional<string>
        docs: Domain protect against replay attack
    source:
      openapi: ../openapi.yml
  DifPresSpecRecordIds:
    docs: Mapping of input_descriptor id to list of stored W3C credential record_id
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  DifPresSpecRevealDoc:
    docs: >-
      reveal doc [JSON-LD frame] dict used to derive the credential when
      selective disclosure is required
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  DIFPresSpec:
    properties:
      issuer_id:
        type: optional<string>
        docs: >-
          Issuer identifier to sign the presentation, if different from current
          public DID
      presentation_definition:
        type: optional<PresentationDefinition>
      record_ids:
        type: optional<DifPresSpecRecordIds>
        docs: >-
          Mapping of input_descriptor id to list of stored W3C credential
          record_id
      reveal_doc:
        type: optional<DifPresSpecRevealDoc>
        docs: >-
          reveal doc [JSON-LD frame] dict used to derive the credential when
          selective disclosure is required
    source:
      openapi: ../openapi.yml
  DIFProofProposal:
    properties:
      input_descriptors:
        type: optional<list<InputDescriptors>>
      options:
        type: optional<DIFOptions>
    source:
      openapi: ../openapi.yml
  DIFProofRequest:
    properties:
      options:
        type: optional<DIFOptions>
      presentation_definition:
        type: PresentationDefinition
    source:
      openapi: ../openapi.yml
  Disclose:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      protocols:
        docs: List of protocol descriptors
        type: list<ProtocolDescriptor>
    source:
      openapi: ../openapi.yml
  Disclosures:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      disclosures:
        docs: List of protocol or goal_code descriptors
        type: list<map<string, unknown>>
    source:
      openapi: ../openapi.yml
  DocCredential:
    docs: Credential to sign
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  Doc:
    properties:
      credential:
        type: DocCredential
        docs: Credential to sign
      options: DocOptions
    source:
      openapi: ../openapi.yml
  EndorserInfo:
    properties:
      endorser_did:
        type: string
        docs: Endorser DID
      endorser_name:
        type: optional<string>
        docs: Endorser Name
    source:
      openapi: ../openapi.yml
  EndpointsResult:
    properties:
      my_endpoint:
        type: optional<string>
        docs: My endpoint
        validation:
          pattern: >-
            ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
      their_endpoint:
        type: optional<string>
        docs: Their endpoint
        validation:
          pattern: >-
            ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
    source:
      openapi: ../openapi.yml
  Filter:
    properties:
      const:
        type: optional<map<string, unknown>>
        docs: Const
      enum:
        type: optional<list<map<string, unknown>>>
      exclusiveMaximum:
        type: optional<map<string, unknown>>
        docs: ExclusiveMaximum
      exclusiveMinimum:
        type: optional<map<string, unknown>>
        docs: ExclusiveMinimum
      format:
        type: optional<string>
        docs: Format
      maxLength:
        type: optional<integer>
        docs: Max Length
      maximum:
        type: optional<map<string, unknown>>
        docs: Maximum
      minLength:
        type: optional<integer>
        docs: Min Length
      minimum:
        type: optional<map<string, unknown>>
        docs: Minimum
      not:
        type: optional<boolean>
        docs: Not
      pattern:
        type: optional<string>
        docs: Pattern
      type:
        type: optional<string>
        docs: Type
    source:
      openapi: ../openapi.yml
  Generated:
    properties:
      master_secret:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      number:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      remainder:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
    source:
      openapi: ../openapi.yml
  GetDIDEndpointResponse:
    properties:
      endpoint:
        type: optional<string>
        docs: Full verification key
        validation:
          pattern: >-
            ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
    source:
      openapi: ../openapi.yml
  GetDIDVerkeyResponse:
    properties:
      verkey:
        type: optional<string>
        docs: Full verification key
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
    source:
      openapi: ../openapi.yml
  GetNymRoleResponseRole:
    enum:
      - STEWARD
      - TRUSTEE
      - ENDORSER
      - NETWORK_MONITOR
      - USER
      - ROLE_REMOVE
    docs: Ledger role
    inline: true
    source:
      openapi: ../openapi.yml
  GetNymRoleResponse:
    properties:
      role:
        type: optional<GetNymRoleResponseRole>
        docs: Ledger role
    source:
      openapi: ../openapi.yml
  HolderModuleResponse: map<string, unknown>
  IndyAttrValue:
    properties:
      encoded:
        type: string
        docs: Attribute encoded value
        validation:
          pattern: ^-?[0-9]*$
      raw:
        type: string
        docs: Attribute raw value
    source:
      openapi: ../openapi.yml
  IndyCredAbstract:
    properties:
      cred_def_id:
        type: string
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      key_correctness_proof: IndyCredAbstractKeyCorrectnessProof
      nonce:
        type: string
        docs: Nonce in credential abstract
        validation:
          pattern: ^[0-9]*$
      schema_id:
        type: string
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
    source:
      openapi: ../openapi.yml
  IndyCredInfo:
    properties:
      attrs:
        type: optional<map<string, string>>
        docs: Attribute names and value
      cred_def_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      cred_rev_id:
        type: optional<string>
        docs: Credential revocation identifier
        validation:
          pattern: ^[1-9][0-9]*$
      referent:
        type: optional<string>
        docs: Wallet referent
      rev_reg_id:
        type: optional<string>
        docs: Revocation registry identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      schema_id:
        type: optional<string>
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
    source:
      openapi: ../openapi.yml
  IndyCredPrecis:
    properties:
      cred_info:
        type: optional<IndyCredPrecisCredInfo>
      interval:
        type: optional<IndyCredPrecisInterval>
      presentation_referents:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  IndyCredRequestBlindedMs:
    docs: Blinded master secret
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  IndyCredRequestBlindedMsCorrectnessProof:
    docs: Blinded master secret correctness proof
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  IndyCredRequest:
    properties:
      blinded_ms:
        type: IndyCredRequestBlindedMs
        docs: Blinded master secret
      blinded_ms_correctness_proof:
        type: IndyCredRequestBlindedMsCorrectnessProof
        docs: Blinded master secret correctness proof
      cred_def_id:
        type: string
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      nonce:
        type: string
        docs: Nonce in credential request
        validation:
          pattern: ^[0-9]*$
      prover_did:
        type: string
        docs: Prover DID
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
    source:
      openapi: ../openapi.yml
  IndyCredentialRevReg:
    docs: Revocation registry state
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  signature:
    docs: Credential signature
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  IndyCredentialSignatureCorrectnessProof:
    docs: Credential signature correctness proof
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  witness:
    docs: Witness for revocation proof
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  IndyCredential:
    properties:
      cred_def_id:
        type: string
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      rev_reg:
        type: optional<IndyCredentialRevReg>
        docs: Revocation registry state
      rev_reg_id:
        type: optional<string>
        docs: Revocation registry identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      schema_id:
        type: string
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
      signature:
        type: signature
        docs: Credential signature
      signature_correctness_proof:
        type: IndyCredentialSignatureCorrectnessProof
        docs: Credential signature correctness proof
      values:
        type: map<string, IndyCredentialValuesValue>
        docs: Credential attributes
      witness:
        type: optional<witness>
        docs: Witness for revocation proof
    source:
      openapi: ../openapi.yml
  IndyEQProof:
    properties:
      a_prime:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      e:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      m:
        type: optional<map<string, string>>
      m2:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      revealed_attrs:
        type: optional<map<string, string>>
      v:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
    source:
      openapi: ../openapi.yml
  IndyGEProof:
    properties:
      alpha:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      mj:
        type: optional<string>
        validation:
          pattern: ^[0-9]*$
      predicate:
        type: optional<IndyGEProofPred>
      r:
        type: optional<map<string, string>>
      t:
        type: optional<map<string, string>>
      u:
        type: optional<map<string, string>>
    source:
      openapi: ../openapi.yml
  IndyGeProofPredPType:
    enum:
      - LT
      - LE
      - GE
      - GT
    docs: Predicate type
    inline: true
    source:
      openapi: ../openapi.yml
  IndyGEProofPred:
    properties:
      attr_name:
        type: optional<string>
        docs: Attribute name, indy-canonicalized
      p_type:
        type: optional<IndyGeProofPredPType>
        docs: Predicate type
      value:
        type: optional<integer>
        docs: Predicate threshold value
    source:
      openapi: ../openapi.yml
  IndyKeyCorrectnessProof:
    properties:
      c:
        type: string
        docs: c in key correctness proof
        validation:
          pattern: ^[0-9]*$
      xr_cap:
        docs: xr_cap in key correctness proof
        type: list<list<string>>
      xz_cap:
        type: string
        docs: xz_cap in key correctness proof
        validation:
          pattern: ^[0-9]*$
    source:
      openapi: ../openapi.yml
  IndyNonRevocProof:
    properties:
      c_list:
        type: optional<map<string, string>>
      x_list:
        type: optional<map<string, string>>
    source:
      openapi: ../openapi.yml
  IndyNonRevocationInterval:
    properties:
      from:
        type: optional<integer>
        docs: Earliest time of interest in non-revocation interval
        validation:
          min: 0
      to:
        type: optional<integer>
        docs: Latest time of interest in non-revocation interval
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  IndyPresAttrSpec:
    properties:
      cred_def_id:
        type: optional<string>
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      mime-type:
        type: optional<string>
        docs: MIME type (default null)
      name:
        type: string
        docs: Attribute name
      referent:
        type: optional<string>
        docs: Credential referent
      value:
        type: optional<string>
        docs: Attribute value
    source:
      openapi: ../openapi.yml
  IndyPresPredSpecPredicate:
    enum:
      - value: <
        name: LessThan
      - value: <=
        name: LessThanOrEqualTo
      - value: '>='
        name: GreaterThanOrEqualTo
      - value: '>'
        name: GreaterThan
    docs: Predicate type ('<', '<=', '>=', or '>')
    inline: true
    source:
      openapi: ../openapi.yml
  IndyPresPredSpec:
    properties:
      cred_def_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      name:
        type: string
        docs: Attribute name
      predicate:
        type: IndyPresPredSpecPredicate
        docs: Predicate type ('<', '<=', '>=', or '>')
      threshold:
        type: integer
        docs: Threshold value
    source:
      openapi: ../openapi.yml
  IndyPresPreview:
    properties:
      '@type':
        type: optional<string>
        docs: Message type identifier
      attributes: list<IndyPresAttrSpec>
      predicates: list<IndyPresPredSpec>
    source:
      openapi: ../openapi.yml
  IndyPresSpec:
    properties:
      requested_attributes:
        type: map<string, IndyRequestedCredsRequestedAttr>
        docs: >-
          Nested object mapping proof request attribute referents to
          requested-attribute specifiers
      requested_predicates:
        type: map<string, IndyRequestedCredsRequestedPred>
        docs: >-
          Nested object mapping proof request predicate referents to
          requested-predicate specifiers
      self_attested_attributes:
        type: map<string, string>
        docs: Self-attested attributes to build into proof
      trace:
        type: optional<boolean>
        docs: Whether to trace event (default false)
    source:
      openapi: ../openapi.yml
  IndyPrimaryProof:
    properties:
      eq_proof:
        type: optional<IndyPrimaryProofEqProof>
      ge_proofs:
        type: optional<list<IndyGEProof>>
        docs: Indy GE proofs
    source:
      openapi: ../openapi.yml
  IndyProof:
    properties:
      identifiers:
        type: optional<list<IndyProofIdentifier>>
        docs: Indy proof.identifiers content
      proof:
        type: optional<IndyProofProof>
      requested_proof:
        type: optional<IndyProofRequestedProof>
    source:
      openapi: ../openapi.yml
  IndyProofIdentifier:
    properties:
      cred_def_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      rev_reg_id:
        type: optional<string>
        docs: Revocation registry identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      schema_id:
        type: optional<string>
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
      timestamp:
        type: optional<integer>
        docs: Timestamp epoch
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  IndyProofProof:
    properties:
      aggregated_proof:
        type: optional<IndyProofProofAggregatedProof>
      proofs:
        type: optional<list<IndyProofProofProofsProof>>
        docs: Indy proof proofs
    source:
      openapi: ../openapi.yml
  IndyProofProofAggregatedProof:
    properties:
      c_hash:
        type: optional<string>
        docs: c_hash value
      c_list:
        type: optional<list<list<integer>>>
        docs: c_list value
    source:
      openapi: ../openapi.yml
  IndyProofProofProofsProof:
    properties:
      non_revoc_proof:
        type: optional<IndyProofProofProofsProofNonRevocProof>
      primary_proof:
        type: optional<IndyProofProofProofsProofPrimaryProof>
    source:
      openapi: ../openapi.yml
  IndyProofReqAttrSpec:
    properties:
      name:
        type: optional<string>
        docs: Attribute name
      names:
        type: optional<list<string>>
        docs: Attribute name group
      non_revoked:
        type: optional<IndyProofReqAttrSpecNonRevoked>
      restrictions:
        type: optional<list<map<string, string>>>
        docs: >-
          If present, credential must satisfy one of given restrictions: specify
          schema_id, schema_issuer_did, schema_name, schema_version, issuer_did,
          cred_def_id, and/or attr::<attribute-name>::value where
          <attribute-name> represents a credential attribute name
    source:
      openapi: ../openapi.yml
  IndyProofReqAttrSpecNonRevoked:
    properties:
      from:
        type: optional<integer>
        docs: Earliest time of interest in non-revocation interval
        validation:
          min: 0
      to:
        type: optional<integer>
        docs: Latest time of interest in non-revocation interval
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  IndyProofReqPredSpecPType:
    enum:
      - value: <
        name: LessThan
      - value: <=
        name: LessThanOrEqualTo
      - value: '>='
        name: GreaterThanOrEqualTo
      - value: '>'
        name: GreaterThan
    docs: Predicate type ('<', '<=', '>=', or '>')
    inline: true
    source:
      openapi: ../openapi.yml
  IndyProofReqPredSpec:
    properties:
      name:
        type: string
        docs: Attribute name
      non_revoked:
        type: optional<IndyProofReqPredSpecNonRevoked>
      p_type:
        type: IndyProofReqPredSpecPType
        docs: Predicate type ('<', '<=', '>=', or '>')
      p_value:
        type: integer
        docs: Threshold value
      restrictions:
        type: optional<list<map<string, string>>>
        docs: >-
          If present, credential must satisfy one of given restrictions: specify
          schema_id, schema_issuer_did, schema_name, schema_version, issuer_did,
          cred_def_id, and/or attr::<attribute-name>::value where
          <attribute-name> represents a credential attribute name
    source:
      openapi: ../openapi.yml
  IndyProofReqPredSpecNonRevoked:
    properties:
      from:
        type: optional<integer>
        docs: Earliest time of interest in non-revocation interval
        validation:
          min: 0
      to:
        type: optional<integer>
        docs: Latest time of interest in non-revocation interval
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  IndyProofRequest:
    properties:
      name:
        type: optional<string>
        docs: Proof request name
      non_revoked:
        type: optional<IndyProofRequestNonRevoked>
      nonce:
        type: optional<string>
        docs: Nonce
        validation:
          pattern: ^[1-9][0-9]*$
      requested_attributes:
        type: map<string, IndyProofReqAttrSpec>
        docs: Requested attribute specifications of proof request
      requested_predicates:
        type: map<string, IndyProofReqPredSpec>
        docs: Requested predicate specifications of proof request
      version:
        type: optional<string>
        docs: Proof request version
        validation:
          pattern: ^[0-9.]+$
    source:
      openapi: ../openapi.yml
  IndyProofRequestNonRevoked:
    properties:
      from:
        type: optional<integer>
        docs: Earliest time of interest in non-revocation interval
        validation:
          min: 0
      to:
        type: optional<integer>
        docs: Latest time of interest in non-revocation interval
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  IndyProofRequestedProofSelfAttestedAttrs:
    docs: Proof requested proof self-attested attributes
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  IndyProofRequestedProofUnrevealedAttrs:
    docs: Unrevealed attributes
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  IndyProofRequestedProof:
    properties:
      predicates:
        type: optional<map<string, IndyProofRequestedProofPredicate>>
        docs: Proof requested proof predicates.
      revealed_attr_groups:
        type: >-
          optional<map<string,
          optional<IndyProofRequestedProofRevealedAttrGroup>>>
        docs: Proof requested proof revealed attribute groups
      revealed_attrs:
        type: optional<map<string, optional<IndyProofRequestedProofRevealedAttr>>>
        docs: Proof requested proof revealed attributes
      self_attested_attrs:
        type: optional<IndyProofRequestedProofSelfAttestedAttrs>
        docs: Proof requested proof self-attested attributes
      unrevealed_attrs:
        type: optional<IndyProofRequestedProofUnrevealedAttrs>
        docs: Unrevealed attributes
    source:
      openapi: ../openapi.yml
  IndyProofRequestedProofPredicate:
    properties:
      sub_proof_index:
        type: optional<integer>
        docs: Sub-proof index
    source:
      openapi: ../openapi.yml
  IndyProofRequestedProofRevealedAttr:
    properties:
      encoded:
        type: optional<string>
        docs: Encoded value
        validation:
          pattern: ^-?[0-9]*$
      raw:
        type: optional<string>
        docs: Raw value
      sub_proof_index:
        type: optional<integer>
        docs: Sub-proof index
    source:
      openapi: ../openapi.yml
  IndyProofRequestedProofRevealedAttrGroup:
    properties:
      sub_proof_index:
        type: optional<integer>
        docs: Sub-proof index
      values:
        type: optional<map<string, RawEncoded>>
        docs: Indy proof requested proof revealed attr groups group value
    source:
      openapi: ../openapi.yml
  IndyRequestedCredsRequestedAttr:
    properties:
      cred_id:
        type: string
        docs: Wallet credential identifier (typically but not necessarily a UUID)
      revealed:
        type: optional<boolean>
        docs: Whether to reveal attribute in proof (default true)
    source:
      openapi: ../openapi.yml
  IndyRequestedCredsRequestedPred:
    properties:
      cred_id:
        type: string
        docs: Wallet credential identifier (typically but not necessarily a UUID)
      timestamp:
        type: optional<integer>
        docs: Epoch timestamp of interest for non-revocation proof
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  IndyRevRegDef:
    properties:
      credDefId:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      id:
        type: optional<string>
        docs: Indy revocation registry identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      revocDefType:
        type: optional<literal<"CL_ACCUM">>
        docs: Revocation registry type (specify CL_ACCUM)
      tag:
        type: optional<string>
        docs: Revocation registry tag
      value:
        type: optional<IndyRevRegDefValue>
      ver:
        type: optional<string>
        docs: Version of revocation registry definition
        validation:
          pattern: ^[0-9.]+$
    source:
      openapi: ../openapi.yml
  issuanceType:
    enum:
      - ISSUANCE_ON_DEMAND
      - ISSUANCE_BY_DEFAULT
    docs: Issuance type
    inline: true
    source:
      openapi: ../openapi.yml
  IndyRevRegDefValue:
    properties:
      issuanceType:
        type: optional<issuanceType>
        docs: Issuance type
      maxCredNum:
        type: optional<integer>
        docs: Maximum number of credentials; registry size
        validation:
          min: 1
      publicKeys:
        type: optional<IndyRevRegDefValuePublicKeys>
      tailsHash:
        type: optional<string>
        docs: Tails hash value
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
      tailsLocation:
        type: optional<string>
        docs: Tails file location
    source:
      openapi: ../openapi.yml
  IndyRevRegDefValuePublicKeys:
    properties:
      accumKey:
        type: optional<IndyRevRegDefValuePublicKeysAccumKey>
    source:
      openapi: ../openapi.yml
  IndyRevRegDefValuePublicKeysAccumKey:
    properties:
      z:
        type: optional<string>
        docs: Value for z
    source:
      openapi: ../openapi.yml
  IndyRevRegEntry:
    properties:
      value:
        type: optional<IndyRevRegEntryValue>
      ver:
        type: optional<string>
        docs: Version of revocation registry entry
        validation:
          pattern: ^[0-9.]+$
    source:
      openapi: ../openapi.yml
  IndyRevRegEntryValue:
    properties:
      accum:
        type: optional<string>
        docs: Accumulator value
      prevAccum:
        type: optional<string>
        docs: Previous accumulator value
      revoked:
        type: optional<list<integer>>
        docs: Revoked credential revocation identifiers
    source:
      openapi: ../openapi.yml
  metadata:
    docs: Metadata dictionary
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  InputDescriptors:
    properties:
      constraints:
        type: optional<Constraints>
      group:
        type: optional<list<string>>
      id:
        type: optional<string>
        docs: ID
      metadata:
        type: optional<metadata>
        docs: Metadata dictionary
      name:
        type: optional<string>
        docs: Name
      purpose:
        type: optional<string>
        docs: Purpose
      schema:
        type: optional<InputDescriptorsSchema>
    source:
      openapi: ../openapi.yml
  IntroModuleResponse: map<string, unknown>
  InvitationMessage:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      accept:
        type: optional<list<string>>
        docs: List of mime type in order of preference
      handshake_protocols:
        type: optional<list<string>>
      imageUrl:
        type: optional<string>
        docs: Optional image URL for out-of-band invitation
      label:
        type: optional<string>
        docs: Optional label
      requests~attach:
        type: optional<list<AttachDecorator>>
        docs: Optional request attachment
      services:
        type: optional<list<map<string, unknown>>>
    source:
      openapi: ../openapi.yml
  InvitationRecord:
    properties:
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      invi_msg_id:
        type: optional<string>
        docs: Invitation message identifier
      invitation:
        type: optional<InvitationRecordInvitation>
      invitation_id:
        type: optional<string>
        docs: Invitation record identifier
      invitation_url:
        type: optional<string>
        docs: Invitation message URL
      oob_id:
        type: optional<string>
        docs: Out of band record identifier
      state:
        type: optional<string>
        docs: Out of band message exchange state
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  InvitationResult:
    properties:
      connection_id:
        type: optional<string>
        docs: Connection identifier
      invitation:
        type: optional<ConnectionInvitation>
      invitation_url:
        type: optional<string>
        docs: Invitation URL
    source:
      openapi: ../openapi.yml
  IssueCredentialModuleResponse: map<string, unknown>
  IssuerCredRevRecord:
    properties:
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      cred_def_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      cred_ex_id:
        type: optional<string>
        docs: Credential exchange record identifier at credential issue
      cred_ex_version:
        type: optional<string>
        docs: Credential exchange version
      cred_rev_id:
        type: optional<string>
        docs: Credential revocation identifier
        validation:
          pattern: ^[1-9][0-9]*$
      record_id:
        type: optional<string>
        docs: Issuer credential revocation record identifier
      rev_reg_id:
        type: optional<string>
        docs: Revocation registry identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      state:
        type: optional<string>
        docs: Issue credential revocation record state
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  IssuerRevRegRecord:
    properties:
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      cred_def_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      error_msg:
        type: optional<string>
        docs: Error message
      issuer_did:
        type: optional<string>
        docs: Issuer DID
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      max_cred_num:
        type: optional<integer>
        docs: Maximum number of credentials for revocation registry
      pending_pub:
        type: optional<list<string>>
        docs: >-
          Credential revocation identifier for credential revoked and pending
          publication to ledger
      record_id:
        type: optional<string>
        docs: Issuer revocation registry record identifier
      revoc_def_type:
        type: optional<literal<"CL_ACCUM">>
        docs: Revocation registry type (specify CL_ACCUM)
      revoc_reg_def:
        type: optional<IssuerRevRegRecordRevocRegDef>
      revoc_reg_entry:
        type: optional<IssuerRevRegRecordRevocRegEntry>
      revoc_reg_id:
        type: optional<string>
        docs: Revocation registry identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      state:
        type: optional<string>
        docs: Issue revocation registry record state
      tag:
        type: optional<string>
        docs: Tag within issuer revocation registry identifier
      tails_hash:
        type: optional<string>
        docs: Tails hash
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
      tails_local_path:
        type: optional<string>
        docs: Local path to tails file
      tails_public_uri:
        type: optional<string>
        docs: Public URI for tails file
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  Keylist:
    properties:
      results:
        type: optional<list<RouteRecord>>
        docs: List of keylist records
    source:
      openapi: ../openapi.yml
  KeylistQueryFilter:
    docs: Query dictionary object
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  KeylistQuery:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      filter:
        type: optional<KeylistQueryFilter>
        docs: Query dictionary object
      paginate:
        type: optional<KeylistQueryPaginate>
    source:
      openapi: ../openapi.yml
  KeylistQueryPaginate:
    properties:
      limit:
        type: optional<integer>
        docs: Limit for keylist query
      offset:
        type: optional<integer>
        docs: Offset value for query
    source:
      openapi: ../openapi.yml
  KeylistUpdate:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      updates:
        type: optional<list<KeylistUpdateRule>>
        docs: List of update rules
    source:
      openapi: ../openapi.yml
  KeylistUpdateRuleAction:
    enum:
      - add
      - remove
    docs: Action for specific key
    inline: true
    source:
      openapi: ../openapi.yml
  KeylistUpdateRule:
    properties:
      action:
        type: KeylistUpdateRuleAction
        docs: Action for specific key
      recipient_key:
        type: string
        docs: Key to remove or add
        validation:
          pattern: >-
            ^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
    source:
      openapi: ../openapi.yml
  LDProofVCDetail:
    properties:
      credential: LdProofVcDetailCredential
      options: LdProofVcDetailOptions
    source:
      openapi: ../openapi.yml
  LDProofVCDetailOptions:
    properties:
      challenge:
        type: optional<string>
        docs: >-
          A challenge to include in the proof. SHOULD be provided by the
          requesting party of the credential (=holder)
      created:
        type: optional<string>
        docs: >-
          The date and time of the proof (with a maximum accuracy in seconds).
          Defaults to current system time
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      credentialStatus:
        type: optional<LdProofVcDetailOptionsCredentialStatus>
      domain:
        type: optional<string>
        docs: The intended domain of validity for the proof
      proofPurpose:
        type: optional<string>
        docs: >-
          The proof purpose used for the proof. Should match proof purposes
          registered in the Linked Data Proofs Specification
      proofType:
        type: string
        docs: >-
          The proof type used for the proof. Should match suites registered in
          the Linked Data Cryptographic Suite Registry
    source:
      openapi: ../openapi.yml
  LedgerConfigInstance:
    properties:
      genesis_file:
        type: optional<string>
        docs: genesis_file
      genesis_transactions:
        type: optional<string>
        docs: genesis_transactions
      genesis_url:
        type: optional<string>
        docs: genesis_url
      id:
        type: optional<string>
        docs: ledger_id
      is_production:
        type: optional<boolean>
        docs: is_production
    source:
      openapi: ../openapi.yml
  LedgerConfigList:
    properties:
      ledger_config_list: list<LedgerConfigInstance>
    source:
      openapi: ../openapi.yml
  LedgerModulesResult: map<string, unknown>
  LinkedDataProof:
    properties:
      challenge:
        type: optional<string>
        docs: >-
          Associates a challenge with a proof, for use with a proofPurpose such
          as authentication
      created:
        type: string
        docs: >-
          The string value of an ISO8601 combined date and time string generated
          by the Signature Algorithm
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      domain:
        type: optional<string>
        docs: A string value specifying the restricted domain of the signature.
        validation:
          pattern: \w+:(\/?\/?)[^\s]+
      jws:
        type: optional<string>
        docs: Associates a Detached Json Web Signature with a proof
      nonce:
        type: optional<string>
        docs: The nonce
      proofPurpose:
        type: string
        docs: Proof purpose
      proofValue:
        type: optional<string>
        docs: The proof value of a proof
      type:
        type: string
        docs: >-
          Identifies the digital signature suite that was used to create the
          signature
      verificationMethod:
        type: string
        docs: Information used for proof verification
        validation:
          pattern: \w+:(\/?\/?)[^\s]+
    source:
      openapi: ../openapi.yml
  MediationDeny:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      mediator_terms:
        type: optional<list<string>>
      recipient_terms:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  MediationGrant:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      endpoint:
        type: optional<string>
        docs: endpoint on which messages destined for the recipient are received.
      routing_keys:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  MediationList:
    properties:
      results:
        type: optional<list<MediationRecord>>
        docs: List of mediation records
    source:
      openapi: ../openapi.yml
  MediationRecord:
    properties:
      connection_id: string
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      endpoint:
        type: optional<string>
      mediation_id:
        type: optional<string>
      mediator_terms:
        type: optional<list<string>>
      recipient_terms:
        type: optional<list<string>>
      role: string
      routing_keys:
        type: optional<list<string>>
      state:
        type: optional<string>
        docs: Current record state
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  Menu:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      description:
        type: optional<string>
        docs: Introductory text for the menu
      errormsg:
        type: optional<string>
        docs: An optional error message to display in menu header
      options:
        docs: List of menu options
        type: list<MenuOption>
      title:
        type: optional<string>
        docs: Menu title
    source:
      openapi: ../openapi.yml
  MenuForm:
    properties:
      description:
        type: optional<string>
        docs: Additional descriptive text for menu form
      params:
        type: optional<list<MenuFormParam>>
        docs: List of form parameters
      submit-label:
        type: optional<string>
        docs: Alternative label for form submit button
      title:
        type: optional<string>
        docs: Menu form title
    source:
      openapi: ../openapi.yml
  MenuFormParam:
    properties:
      default:
        type: optional<string>
        docs: Default parameter value
      description:
        type: optional<string>
        docs: Additional descriptive text for menu form parameter
      name:
        type: string
        docs: Menu parameter name
      required:
        type: optional<boolean>
        docs: Whether parameter is required
      title:
        type: string
        docs: Menu parameter title
      type:
        type: optional<string>
        docs: Menu form parameter input type
    source:
      openapi: ../openapi.yml
  MenuJson:
    properties:
      description:
        type: optional<string>
        docs: Introductory text for the menu
      errormsg:
        type: optional<string>
        docs: Optional error message to display in menu header
      options:
        docs: List of menu options
        type: list<MenuOption>
      title:
        type: optional<string>
        docs: Menu title
    source:
      openapi: ../openapi.yml
  MenuOption:
    properties:
      description:
        type: optional<string>
        docs: Additional descriptive text for menu option
      disabled:
        type: optional<boolean>
        docs: Whether to show option as disabled
      form:
        type: optional<MenuForm>
      name:
        type: string
        docs: Menu option name (unique identifier)
      title:
        type: string
        docs: Menu option title
    source:
      openapi: ../openapi.yml
  MultitenantModuleResponse: map<string, unknown>
  OobRecordRole:
    enum:
      - sender
      - receiver
    docs: OOB Role
    inline: true
    source:
      openapi: ../openapi.yml
  OobRecordState:
    enum:
      - initial
      - value: prepare-response
        name: PrepareResponse
      - value: await-response
        name: AwaitResponse
      - value: reuse-not-accepted
        name: ReuseNotAccepted
      - value: reuse-accepted
        name: ReuseAccepted
      - done
      - deleted
    docs: Out of band message exchange state
    inline: true
    source:
      openapi: ../openapi.yml
  OobRecord:
    properties:
      attach_thread_id:
        type: optional<string>
        docs: Connection record identifier
      connection_id:
        type: optional<string>
        docs: Connection record identifier
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      invi_msg_id:
        type: string
        docs: Invitation message identifier
      invitation: InvitationRecordInvitation
      oob_id:
        type: string
        docs: Oob record identifier
      our_recipient_key:
        type: optional<string>
        docs: Recipient key used for oob invitation
      role:
        type: optional<OobRecordRole>
        docs: OOB Role
      state:
        type: OobRecordState
        docs: Out of band message exchange state
      their_service:
        type: optional<ServiceDecorator>
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  PingRequestResponse:
    properties:
      thread_id:
        type: optional<string>
        docs: Thread ID of the ping message
    source:
      openapi: ../openapi.yml
  PresentationDefinition:
    properties:
      format:
        type: optional<ClaimFormat>
      id:
        type: optional<string>
        docs: Unique Resource Identifier
        validation:
          pattern: >-
            [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
      input_descriptors:
        type: optional<list<InputDescriptors>>
      name:
        type: optional<string>
        docs: >-
          Human-friendly name that describes what the presentation definition
          pertains to
      purpose:
        type: optional<string>
        docs: >-
          Describes the purpose for which the Presentation Definition's inputs
          are being requested
      submission_requirements:
        type: optional<list<SubmissionRequirements>>
    source:
      openapi: ../openapi.yml
  PresentationProposal:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      presentation_proposal:
        type: IndyPresPreview
    source:
      openapi: ../openapi.yml
  PresentationRequest:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      request_presentations~attach:
        type: list<AttachDecorator>
    source:
      openapi: ../openapi.yml
  ProtocolDescriptor:
    properties:
      pid: string
      roles:
        type: optional<list<string>>
        docs: List of roles
    source:
      openapi: ../openapi.yml
  PublishRevocations:
    properties:
      rrid2crid:
        type: optional<map<string, list<string>>>
        docs: Credential revocation ids by revocation registry id
    source:
      openapi: ../openapi.yml
  Queries:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      queries:
        type: optional<list<QueryItem>>
    source:
      openapi: ../openapi.yml
  Query:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
      query: string
    source:
      openapi: ../openapi.yml
  QueryItemFeatureType:
    enum:
      - protocol
      - value: goal-code
        name: GoalCode
    docs: feature type
    inline: true
    source:
      openapi: ../openapi.yml
  QueryItem:
    properties:
      feature-type:
        type: QueryItemFeatureType
        docs: feature type
      match:
        type: string
        docs: match
    source:
      openapi: ../openapi.yml
  RawEncoded:
    properties:
      encoded:
        type: optional<string>
        docs: Encoded value
        validation:
          pattern: ^-?[0-9]*$
      raw:
        type: optional<string>
        docs: Raw value
    source:
      openapi: ../openapi.yml
  ResolutionResultDidDocument:
    docs: DID Document
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ResolutionResultMetadata:
    docs: Resolution metadata
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ResolutionResult:
    properties:
      did_document:
        type: ResolutionResultDidDocument
        docs: DID Document
      metadata:
        type: ResolutionResultMetadata
        docs: Resolution metadata
    source:
      openapi: ../openapi.yml
  RevRegIssuedResult:
    properties:
      result:
        type: optional<integer>
        docs: Number of credentials issued against revocation registry
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  RevRegResult:
    properties:
      result:
        type: optional<IssuerRevRegRecord>
    source:
      openapi: ../openapi.yml
  RevRegWalletUpdatedResultAccumCalculated:
    docs: Calculated accumulator for phantom revocations
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  RevRegWalletUpdatedResultAccumFixed:
    docs: Applied ledger transaction to fix revocations
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  RevRegWalletUpdatedResultRevRegDelta:
    docs: Indy revocation registry delta
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  RevRegWalletUpdatedResult:
    properties:
      accum_calculated:
        type: optional<RevRegWalletUpdatedResultAccumCalculated>
        docs: Calculated accumulator for phantom revocations
      accum_fixed:
        type: optional<RevRegWalletUpdatedResultAccumFixed>
        docs: Applied ledger transaction to fix revocations
      rev_reg_delta:
        type: optional<RevRegWalletUpdatedResultRevRegDelta>
        docs: Indy revocation registry delta
    source:
      openapi: ../openapi.yml
  RevRegsCreated:
    properties:
      rev_reg_ids:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  RevocationModuleResponse: map<string, unknown>
  RouteRecord:
    properties:
      connection_id:
        type: optional<string>
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      recipient_key: string
      record_id:
        type: optional<string>
      role:
        type: optional<string>
      state:
        type: optional<string>
        docs: Current record state
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      wallet_id:
        type: optional<string>
    source:
      openapi: ../openapi.yml
  Schema:
    properties:
      attrNames:
        type: optional<list<string>>
        docs: Schema attribute names
      id:
        type: optional<string>
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
      name:
        type: optional<string>
        docs: Schema name
      seqNo:
        type: optional<integer>
        docs: Schema sequence number
        validation:
          min: 1
      ver:
        type: optional<string>
        docs: Node protocol version
        validation:
          pattern: ^[0-9.]+$
      version:
        type: optional<string>
        docs: Schema version
        validation:
          pattern: ^[0-9.]+$
    source:
      openapi: ../openapi.yml
  SchemaGetResult:
    properties:
      schema:
        type: optional<Schema>
    source:
      openapi: ../openapi.yml
  SchemaInputDescriptor:
    properties:
      required:
        type: optional<boolean>
        docs: Required
      uri:
        type: optional<string>
        docs: URI
    source:
      openapi: ../openapi.yml
  SchemaSendResult:
    properties:
      schema:
        type: optional<SchemaSendResultSchema>
      schema_id:
        type: string
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
    source:
      openapi: ../openapi.yml
  SchemasCreatedResult:
    properties:
      schema_ids:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  SchemasInputDescriptorFilter:
    properties:
      oneof_filter:
        type: optional<boolean>
        docs: oneOf
      uri_groups:
        type: optional<list<list<SchemaInputDescriptor>>>
    source:
      openapi: ../openapi.yml
  ServiceDecorator:
    properties:
      recipientKeys:
        docs: List of recipient keys
        type: list<string>
      routingKeys:
        type: optional<list<string>>
        docs: List of routing keys
      serviceEndpoint:
        type: string
        docs: Service endpoint at which to reach this agent
    source:
      openapi: ../openapi.yml
  SignResponseSignedDoc:
    docs: Signed document
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  SignResponse:
    properties:
      error:
        type: optional<string>
        docs: Error text
      signed_doc:
        type: optional<SignResponseSignedDoc>
        docs: Signed document
    source:
      openapi: ../openapi.yml
  SignatureOptions:
    properties:
      challenge:
        type: optional<string>
      domain:
        type: optional<string>
      proofPurpose: string
      type:
        type: optional<string>
      verificationMethod: string
    source:
      openapi: ../openapi.yml
  SignedDoc:
    properties:
      proof: SignedDocProof
    source:
      openapi: ../openapi.yml
  rule:
    enum:
      - all
      - pick
    docs: Selection
    inline: true
    source:
      openapi: ../openapi.yml
  SubmissionRequirements:
    properties:
      count:
        type: optional<integer>
        docs: Count Value
      from:
        type: optional<string>
        docs: From
      from_nested:
        type: optional<list<SubmissionRequirements>>
      max:
        type: optional<integer>
        docs: Max Value
      min:
        type: optional<integer>
        docs: Min Value
      name:
        type: optional<string>
        docs: Name
      purpose:
        type: optional<string>
        docs: Purpose
      rule:
        type: optional<rule>
        docs: Selection
    source:
      openapi: ../openapi.yml
  TAAAcceptance:
    properties:
      mechanism:
        type: optional<string>
      time:
        type: optional<integer>
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  TAAInfo:
    properties:
      aml_record:
        type: optional<AMLRecord>
      taa_accepted:
        type: optional<TAAAcceptance>
      taa_record:
        type: optional<TAARecord>
      taa_required:
        type: optional<boolean>
    source:
      openapi: ../openapi.yml
  TAARecord:
    properties:
      digest:
        type: optional<string>
      text:
        type: optional<string>
      version:
        type: optional<string>
    source:
      openapi: ../openapi.yml
  TAAResult:
    properties:
      result:
        type: optional<TAAInfo>
    source:
      openapi: ../openapi.yml
  TailsDeleteResponse:
    properties:
      message:
        type: optional<string>
    source:
      openapi: ../openapi.yml
  TransactionJobsTransactionMyJob:
    enum:
      - TRANSACTION_AUTHOR
      - TRANSACTION_ENDORSER
      - reset
    docs: My transaction related job
    inline: true
    source:
      openapi: ../openapi.yml
  TransactionJobsTransactionTheirJob:
    enum:
      - TRANSACTION_AUTHOR
      - TRANSACTION_ENDORSER
      - reset
    docs: Their transaction related job
    inline: true
    source:
      openapi: ../openapi.yml
  TransactionJobs:
    properties:
      transaction_my_job:
        type: optional<TransactionJobsTransactionMyJob>
        docs: My transaction related job
      transaction_their_job:
        type: optional<TransactionJobsTransactionTheirJob>
        docs: Their transaction related job
    source:
      openapi: ../openapi.yml
  TransactionList:
    properties:
      results:
        type: optional<list<TransactionRecord>>
        docs: List of transaction records
    source:
      openapi: ../openapi.yml
  TransactionRecordMessagesAttachItem:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransactionRecordMetaData:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransactionRecordSignatureRequestItem:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransactionRecordSignatureResponseItem:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransactionRecordTiming:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  TransactionRecord:
    properties:
      _type:
        type: optional<string>
        docs: Transaction type
      connection_id:
        type: optional<string>
        docs: The connection identifier for thie particular transaction record
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      endorser_write_txn:
        type: optional<boolean>
        docs: If True, Endorser will write the transaction after endorsing it
      formats:
        type: optional<list<map<string, string>>>
      messages_attach:
        type: optional<list<TransactionRecordMessagesAttachItem>>
      meta_data:
        type: optional<TransactionRecordMetaData>
      signature_request:
        type: optional<list<TransactionRecordSignatureRequestItem>>
      signature_response:
        type: optional<list<TransactionRecordSignatureResponseItem>>
      state:
        type: optional<string>
        docs: Current record state
      thread_id:
        type: optional<string>
        docs: Thread Identifier
      timing:
        type: optional<TransactionRecordTiming>
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      transaction_id:
        type: optional<string>
        docs: Transaction identifier
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  TxnOrCredentialDefinitionSendResult:
    properties:
      sent:
        type: optional<CredentialDefinitionSendResult>
      txn:
        type: optional<TxnOrCredentialDefinitionSendResultTxn>
    source:
      openapi: ../openapi.yml
  TxnOrPublishRevocationsResult:
    properties:
      sent:
        type: optional<PublishRevocations>
      txn:
        type: optional<TxnOrPublishRevocationsResultTxn>
    source:
      openapi: ../openapi.yml
  TxnOrRegisterLedgerNymResponse:
    properties:
      success:
        type: optional<boolean>
        docs: Success of nym registration operation
      txn:
        type: optional<TxnOrRegisterLedgerNymResponseTxn>
    source:
      openapi: ../openapi.yml
  TxnOrRevRegResult:
    properties:
      sent:
        type: optional<RevRegResult>
      txn:
        type: optional<TxnOrRevRegResultTxn>
    source:
      openapi: ../openapi.yml
  TxnOrSchemaSendResult:
    properties:
      sent:
        type: optional<TxnOrSchemaSendResultSent>
      txn:
        type: optional<TxnOrSchemaSendResultTxn>
    source:
      openapi: ../openapi.yml
  V10CredentialExchangeCredentialRequestMetadata:
    docs: (Indy) credential request metadata
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V10CredentialExchangeInitiator:
    enum:
      - self
      - external
    docs: 'Issue-credential exchange initiator: self or external'
    inline: true
    source:
      openapi: ../openapi.yml
  V10CredentialExchangeRole:
    enum:
      - holder
      - issuer
    docs: 'Issue-credential exchange role: holder or issuer'
    inline: true
    source:
      openapi: ../openapi.yml
  V10CredentialExchange:
    properties:
      auto_issue:
        type: optional<boolean>
        docs: Issuer choice to issue to request in this credential exchange
      auto_offer:
        type: optional<boolean>
        docs: Holder choice to accept offer in this credential exchange
      auto_remove:
        type: optional<boolean>
        docs: Issuer choice to remove this credential exchange record when complete
      connection_id:
        type: optional<string>
        docs: Connection identifier
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      credential:
        type: optional<V10CredentialExchangeCredential>
      credential_definition_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      credential_exchange_id:
        type: optional<string>
        docs: Credential exchange identifier
      credential_id:
        type: optional<string>
        docs: Credential identifier
      credential_offer:
        type: optional<V10CredentialExchangeCredentialOffer>
      credential_offer_dict:
        type: optional<V10CredentialExchangeCredentialOfferDict>
      credential_proposal_dict:
        type: optional<V10CredentialExchangeCredentialProposalDict>
      credential_request:
        type: optional<V10CredentialExchangeCredentialRequest>
      credential_request_metadata:
        type: optional<V10CredentialExchangeCredentialRequestMetadata>
        docs: (Indy) credential request metadata
      error_msg:
        type: optional<string>
        docs: Error message
      initiator:
        type: optional<V10CredentialExchangeInitiator>
        docs: 'Issue-credential exchange initiator: self or external'
      parent_thread_id:
        type: optional<string>
        docs: Parent thread identifier
      raw_credential:
        type: optional<V10CredentialExchangeRawCredential>
      revoc_reg_id:
        type: optional<string>
        docs: Revocation registry identifier
      revocation_id:
        type: optional<string>
        docs: Credential identifier within revocation registry
      role:
        type: optional<V10CredentialExchangeRole>
        docs: 'Issue-credential exchange role: holder or issuer'
      schema_id:
        type: optional<string>
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
      state:
        type: optional<string>
        docs: Issue-credential exchange state
      thread_id:
        type: optional<string>
        docs: Thread identifier
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  V10CredentialExchangeListResult:
    properties:
      results:
        type: optional<list<V10CredentialExchange>>
        docs: Aries#0036 v1.0 credential exchange records
    source:
      openapi: ../openapi.yml
  V10DiscoveryExchangeListResult:
    properties:
      results:
        type: optional<list<V10DiscoveryExchangeListResultResultsInner>>
    source:
      openapi: ../openapi.yml
  V10DiscoveryRecord:
    properties:
      connection_id:
        type: optional<string>
        docs: Connection identifier
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      disclose:
        type: optional<V10DiscoveryRecordDisclose>
      discovery_exchange_id:
        type: optional<string>
        docs: Credential exchange identifier
      query_msg:
        type: optional<V10DiscoveryRecordQueryMsg>
      state:
        type: optional<string>
        docs: Current record state
      thread_id:
        type: optional<string>
        docs: Thread identifier
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  V10PresentProofModuleResponse: map<string, unknown>
  V10PresentationExchangeInitiator:
    enum:
      - self
      - external
    docs: 'Present-proof exchange initiator: self or external'
    inline: true
    source:
      openapi: ../openapi.yml
  V10PresentationExchangeRole:
    enum:
      - prover
      - verifier
    docs: 'Present-proof exchange role: prover or verifier'
    inline: true
    source:
      openapi: ../openapi.yml
  V10PresentationExchangeVerified:
    enum:
      - 'true'
      - 'false'
    docs: 'Whether presentation is verified: true or false'
    inline: true
    source:
      openapi: ../openapi.yml
  V10PresentationExchange:
    properties:
      auto_present:
        type: optional<boolean>
        docs: Prover choice to auto-present proof as verifier requests
      auto_verify:
        type: optional<boolean>
        docs: Verifier choice to auto-verify proof presentation
      connection_id:
        type: optional<string>
        docs: Connection identifier
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      error_msg:
        type: optional<string>
        docs: Error message
      initiator:
        type: optional<V10PresentationExchangeInitiator>
        docs: 'Present-proof exchange initiator: self or external'
      presentation:
        type: optional<V10PresentationExchangePresentation>
      presentation_exchange_id:
        type: optional<string>
        docs: Presentation exchange identifier
      presentation_proposal_dict:
        type: optional<V10PresentationExchangePresentationProposalDict>
      presentation_request:
        type: optional<V10PresentationExchangePresentationRequest>
      presentation_request_dict:
        type: optional<V10PresentationExchangePresentationRequestDict>
      role:
        type: optional<V10PresentationExchangeRole>
        docs: 'Present-proof exchange role: prover or verifier'
      state:
        type: optional<string>
        docs: Present-proof exchange state
      thread_id:
        type: optional<string>
        docs: Thread identifier
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      verified:
        type: optional<V10PresentationExchangeVerified>
        docs: 'Whether presentation is verified: true or false'
      verified_msgs:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  V10PresentationExchangeList:
    properties:
      results:
        type: optional<list<V10PresentationExchange>>
        docs: Aries RFC 37 v1.0 presentation exchange records
    source:
      openapi: ../openapi.yml
  V20CredAttrSpec:
    properties:
      mime-type:
        type: optional<string>
        docs: 'MIME type: omit for (null) default'
      name:
        type: string
        docs: Attribute name
      value:
        type: string
        docs: 'Attribute value: base64-encode if MIME type is present'
    source:
      openapi: ../openapi.yml
  V20CredExFree:
    properties:
      auto_remove:
        type: optional<boolean>
        docs: >-
          Whether to remove the credential exchange record on completion
          (overrides --preserve-exchange-records configuration setting)
      comment:
        type: optional<string>
        docs: Human-readable comment
      connection_id:
        type: string
        docs: Connection identifier
        validation:
          format: uuid
      credential_preview:
        type: optional<V20CredPreview>
      filter: V20CredBoundOfferRequestFilter
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      verification_method:
        type: optional<string>
        docs: For ld-proofs. Verification method for signing.
    source:
      openapi: ../openapi.yml
  V20CredExRecordInitiator:
    enum:
      - self
      - external
    docs: 'Issue-credential exchange initiator: self or external'
    inline: true
    source:
      openapi: ../openapi.yml
  V20CredExRecordRole:
    enum:
      - issuer
      - holder
    docs: 'Issue-credential exchange role: holder or issuer'
    inline: true
    source:
      openapi: ../openapi.yml
  V20CredExRecordState:
    enum:
      - value: proposal-sent
        name: ProposalSent
      - value: proposal-received
        name: ProposalReceived
      - value: offer-sent
        name: OfferSent
      - value: offer-received
        name: OfferReceived
      - value: request-sent
        name: RequestSent
      - value: request-received
        name: RequestReceived
      - value: credential-issued
        name: CredentialIssued
      - value: credential-received
        name: CredentialReceived
      - done
      - value: credential-revoked
        name: CredentialRevoked
      - abandoned
      - deleted
    docs: Issue-credential exchange state
    inline: true
    source:
      openapi: ../openapi.yml
  V20CredExRecord:
    properties:
      auto_issue:
        type: optional<boolean>
        docs: Issuer choice to issue to request in this credential exchange
      auto_offer:
        type: optional<boolean>
        docs: Holder choice to accept offer in this credential exchange
      auto_remove:
        type: optional<boolean>
        docs: Issuer choice to remove this credential exchange record when complete
      by_format:
        type: optional<V20CredExRecordByFormat>
      connection_id:
        type: optional<string>
        docs: Connection identifier
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      cred_ex_id:
        type: optional<string>
        docs: Credential exchange identifier
      cred_issue:
        type: optional<V20CredExRecordCredIssue>
      cred_offer:
        type: optional<V20CredExRecordCredOffer>
      cred_preview:
        type: optional<V20CredExRecordCredPreview>
      cred_proposal:
        type: optional<V20CredExRecordCredProposal>
      cred_request:
        type: optional<V20CredExRecordCredRequest>
      error_msg:
        type: optional<string>
        docs: Error message
      initiator:
        type: optional<V20CredExRecordInitiator>
        docs: 'Issue-credential exchange initiator: self or external'
      parent_thread_id:
        type: optional<string>
        docs: Parent thread identifier
      role:
        type: optional<V20CredExRecordRole>
        docs: 'Issue-credential exchange role: holder or issuer'
      state:
        type: optional<V20CredExRecordState>
        docs: Issue-credential exchange state
      thread_id:
        type: optional<string>
        docs: Thread identifier
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  V20CredExRecordByFormatCredIssue:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20CredExRecordByFormatCredOffer:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20CredExRecordByFormatCredProposal:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20CredExRecordByFormatCredRequest:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20CredExRecordByFormat:
    properties:
      cred_issue:
        type: optional<V20CredExRecordByFormatCredIssue>
      cred_offer:
        type: optional<V20CredExRecordByFormatCredOffer>
      cred_proposal:
        type: optional<V20CredExRecordByFormatCredProposal>
      cred_request:
        type: optional<V20CredExRecordByFormatCredRequest>
    source:
      openapi: ../openapi.yml
  V20CredExRecordDetail:
    properties:
      cred_ex_record:
        type: optional<V20CredExRecordDetailCredExRecord>
      indy:
        type: optional<V20CredExRecordIndy>
      ld_proof:
        type: optional<V20CredExRecordLdProof>
    source:
      openapi: ../openapi.yml
  V20CredExRecordIndyCredRequestMetadata:
    docs: Credential request metadata for indy holder
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20CredExRecordIndy:
    properties:
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      cred_ex_id:
        type: optional<string>
        docs: Corresponding v2.0 credential exchange record identifier
      cred_ex_indy_id:
        type: optional<string>
        docs: Record identifier
      cred_id_stored:
        type: optional<string>
        docs: Credential identifier stored in wallet
      cred_request_metadata:
        type: optional<V20CredExRecordIndyCredRequestMetadata>
        docs: Credential request metadata for indy holder
      cred_rev_id:
        type: optional<string>
        docs: Credential revocation identifier within revocation registry
        validation:
          pattern: ^[1-9][0-9]*$
      rev_reg_id:
        type: optional<string>
        docs: Revocation registry identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      state:
        type: optional<string>
        docs: Current record state
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  V20CredExRecordLdProof:
    properties:
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      cred_ex_id:
        type: optional<string>
        docs: Corresponding v2.0 credential exchange record identifier
      cred_ex_ld_proof_id:
        type: optional<string>
        docs: Record identifier
      cred_id_stored:
        type: optional<string>
        docs: Credential identifier stored in wallet
      state:
        type: optional<string>
        docs: Current record state
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  V20CredExRecordListResult:
    properties:
      results:
        type: optional<list<V20CredExRecordDetail>>
        docs: Credential exchange records and corresponding detail records
    source:
      openapi: ../openapi.yml
  V20CredFilter:
    properties:
      indy:
        type: optional<V20CredFilterIndy>
      ld_proof:
        type: optional<V20CredFilterLdProof>
    source:
      openapi: ../openapi.yml
  V20CredFilterIndy:
    properties:
      cred_def_id:
        type: optional<string>
        docs: Credential definition identifier
        validation:
          pattern: >-
            ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
      issuer_did:
        type: optional<string>
        docs: Credential issuer DID
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      schema_id:
        type: optional<string>
        docs: Schema identifier
        validation:
          pattern: >-
            ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
      schema_issuer_did:
        type: optional<string>
        docs: Schema issuer DID
        validation:
          pattern: >-
            ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      schema_name:
        type: optional<string>
        docs: Schema name
      schema_version:
        type: optional<string>
        docs: Schema version
        validation:
          pattern: ^[0-9.]+$
    source:
      openapi: ../openapi.yml
  V20CredFilterLdProof:
    type: LDProofVCDetail
    docs: Credential filter for linked data proof
  V20CredFormat:
    properties:
      attach_id:
        type: string
        docs: Attachment identifier
      format:
        type: string
        docs: Attachment format specifier
    source:
      openapi: ../openapi.yml
  V20CredIssue:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      credentials~attach:
        docs: Credential attachments
        type: list<AttachDecorator>
      formats:
        docs: Acceptable attachment formats
        type: list<V20CredFormat>
      replacement_id:
        type: optional<string>
        docs: Issuer-unique identifier to coordinate credential replacement
    source:
      openapi: ../openapi.yml
  V20CredOffer:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      credential_preview:
        type: optional<V20CredPreview>
      formats:
        docs: Acceptable credential formats
        type: list<V20CredFormat>
      offers~attach:
        docs: Offer attachments
        type: list<AttachDecorator>
      replacement_id:
        type: optional<string>
        docs: Issuer-unique identifier to coordinate credential replacement
    source:
      openapi: ../openapi.yml
  V20CredPreview:
    properties:
      '@type':
        type: optional<string>
        docs: Message type identifier
      attributes: list<V20CredAttrSpec>
    source:
      openapi: ../openapi.yml
  V20CredProposal:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      credential_preview:
        type: optional<V20CredProposalCredentialPreview>
      filters~attach:
        docs: Credential filter per acceptable format on corresponding identifier
        type: list<AttachDecorator>
      formats:
        docs: Attachment formats
        type: list<V20CredFormat>
    source:
      openapi: ../openapi.yml
  V20CredRequest:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      formats:
        docs: Acceptable attachment formats
        type: list<V20CredFormat>
      requests~attach:
        docs: Request attachments
        type: list<AttachDecorator>
    source:
      openapi: ../openapi.yml
  V20DiscoveryExchangeListResult:
    properties:
      results:
        type: optional<list<V20DiscoveryExchangeListResultResultsInner>>
    source:
      openapi: ../openapi.yml
  V20DiscoveryExchangeResult:
    properties:
      results:
        type: optional<V20DiscoveryExchangeListResultResultsInner>
    source:
      openapi: ../openapi.yml
  V20DiscoveryRecord:
    properties:
      connection_id:
        type: optional<string>
        docs: Connection identifier
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      disclosures:
        type: optional<V20DiscoveryRecordDisclosures>
      discovery_exchange_id:
        type: optional<string>
        docs: Credential exchange identifier
      queries_msg:
        type: optional<V20DiscoveryRecordQueriesMsg>
      state:
        type: optional<string>
        docs: Current record state
      thread_id:
        type: optional<string>
        docs: Thread identifier
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
    source:
      openapi: ../openapi.yml
  V20IssueCredentialModuleResponse: map<string, unknown>
  V20Pres:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      formats:
        docs: Acceptable attachment formats
        type: list<V20PresFormat>
      presentations~attach:
        type: list<AttachDecorator>
    source:
      openapi: ../openapi.yml
  V20PresExRecordInitiator:
    enum:
      - self
      - external
    docs: 'Present-proof exchange initiator: self or external'
    inline: true
    source:
      openapi: ../openapi.yml
  V20PresExRecordRole:
    enum:
      - prover
      - verifier
    docs: 'Present-proof exchange role: prover or verifier'
    inline: true
    source:
      openapi: ../openapi.yml
  V20PresExRecordState:
    enum:
      - value: proposal-sent
        name: ProposalSent
      - value: proposal-received
        name: ProposalReceived
      - value: request-sent
        name: RequestSent
      - value: request-received
        name: RequestReceived
      - value: presentation-sent
        name: PresentationSent
      - value: presentation-received
        name: PresentationReceived
      - done
      - abandoned
      - deleted
    docs: Present-proof exchange state
    inline: true
    source:
      openapi: ../openapi.yml
  V20PresExRecordVerified:
    enum:
      - 'true'
      - 'false'
    docs: 'Whether presentation is verified: ''true'' or ''false'''
    inline: true
    source:
      openapi: ../openapi.yml
  V20PresExRecord:
    properties:
      auto_present:
        type: optional<boolean>
        docs: Prover choice to auto-present proof as verifier requests
      auto_verify:
        type: optional<boolean>
        docs: Verifier choice to auto-verify proof presentation
      by_format:
        type: optional<V20PresExRecordByFormat>
      connection_id:
        type: optional<string>
        docs: Connection identifier
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      error_msg:
        type: optional<string>
        docs: Error message
      initiator:
        type: optional<V20PresExRecordInitiator>
        docs: 'Present-proof exchange initiator: self or external'
      pres:
        type: optional<V20PresExRecordPres>
      pres_ex_id:
        type: optional<string>
        docs: Presentation exchange identifier
      pres_proposal:
        type: optional<V20PresExRecordPresProposal>
      pres_request:
        type: optional<V20PresExRecordPresRequest>
      role:
        type: optional<V20PresExRecordRole>
        docs: 'Present-proof exchange role: prover or verifier'
      state:
        type: optional<V20PresExRecordState>
        docs: Present-proof exchange state
      thread_id:
        type: optional<string>
        docs: Thread identifier
      trace:
        type: optional<boolean>
        docs: Record trace information, based on agent configuration
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      verified:
        type: optional<V20PresExRecordVerified>
        docs: 'Whether presentation is verified: ''true'' or ''false'''
      verified_msgs:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  pres:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20PresExRecordByFormatPresProposal:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20PresExRecordByFormatPresRequest:
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  V20PresExRecordByFormat:
    properties:
      pres:
        type: optional<pres>
      pres_proposal:
        type: optional<V20PresExRecordByFormatPresProposal>
      pres_request:
        type: optional<V20PresExRecordByFormatPresRequest>
    source:
      openapi: ../openapi.yml
  V20PresExRecordList:
    properties:
      results:
        type: optional<list<V20PresExRecord>>
        docs: Presentation exchange records
    source:
      openapi: ../openapi.yml
  V20PresFormat:
    properties:
      attach_id:
        type: string
        docs: Attachment identifier
      format:
        type: string
        docs: Attachment format specifier
    source:
      openapi: ../openapi.yml
  V20PresProposal:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      formats:
        type: list<V20PresFormat>
      proposals~attach:
        docs: Attachment per acceptable format on corresponding identifier
        type: list<AttachDecorator>
    source:
      openapi: ../openapi.yml
  V20PresProposalByFormat:
    properties:
      dif:
        type: optional<V20PresProposalByFormatDif>
      indy:
        type: optional<V20PresProposalByFormatIndy>
    source:
      openapi: ../openapi.yml
  V20PresRequest:
    properties:
      '@id':
        type: optional<string>
        docs: Message identifier
      '@type':
        type: optional<string>
        docs: Message type
      comment:
        type: optional<string>
        docs: Human-readable comment
      formats:
        type: list<V20PresFormat>
      request_presentations~attach:
        docs: Attachment per acceptable format on corresponding identifier
        type: list<AttachDecorator>
      will_confirm:
        type: optional<boolean>
        docs: Whether verifier will send confirmation ack
    source:
      openapi: ../openapi.yml
  V20PresRequestByFormat:
    properties:
      dif:
        type: optional<V20PresRequestByFormatDif>
      indy:
        type: optional<V20PresRequestByFormatIndy>
    source:
      openapi: ../openapi.yml
  V20PresentProofModuleResponse: map<string, unknown>
  VcRecordCredValue:
    docs: (JSON-serializable) credential value
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  VCRecord:
    properties:
      contexts:
        type: optional<list<string>>
      cred_tags:
        type: optional<map<string, string>>
      cred_value:
        type: optional<VcRecordCredValue>
        docs: (JSON-serializable) credential value
      expanded_types:
        type: optional<list<string>>
      given_id:
        type: optional<string>
        docs: Credential identifier
      issuer_id:
        type: optional<string>
        docs: Issuer identifier
      proof_types:
        type: optional<list<string>>
      record_id:
        type: optional<string>
        docs: Record identifier
      schema_ids:
        type: optional<list<string>>
      subject_ids:
        type: optional<list<string>>
    source:
      openapi: ../openapi.yml
  VCRecordList:
    properties:
      results:
        type: optional<list<VCRecord>>
    source:
      openapi: ../openapi.yml
  VerifyResponse:
    properties:
      error:
        type: optional<string>
        docs: Error text
      valid: boolean
    source:
      openapi: ../openapi.yml
  WalletList:
    properties:
      results:
        type: optional<list<WalletRecord>>
        docs: List of wallet records
    source:
      openapi: ../openapi.yml
  WalletModuleResponse: map<string, unknown>
  WalletRecordKeyManagementMode:
    enum:
      - managed
      - unmanaged
    docs: Mode regarding management of wallet key
    inline: true
    source:
      openapi: ../openapi.yml
  WalletRecordSettings:
    docs: Settings for this wallet.
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  WalletRecord:
    properties:
      created_at:
        type: optional<string>
        docs: Time of record creation
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      key_management_mode:
        type: WalletRecordKeyManagementMode
        docs: Mode regarding management of wallet key
      settings:
        type: optional<WalletRecordSettings>
        docs: Settings for this wallet.
      state:
        type: optional<string>
        docs: Current record state
      updated_at:
        type: optional<string>
        docs: Time of last record update
        validation:
          pattern: >-
            ^\d{4}-\d\d-\d\d[T
            ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
      wallet_id:
        type: string
        docs: Wallet record ID
    source:
      openapi: ../openapi.yml
  WriteLedgerRequest:
    properties:
      ledger_id:
        type: optional<string>
    source:
      openapi: ../openapi.yml
  ActionMenuFetchResultResult:
    type: Menu
    docs: Action menu
  AttachDecoratorDataJws:
    type: AttachDecoratorDataJWS
    docs: Detached Java Web Signature
  CredentialProof:
    type: LinkedDataProof
    docs: The proof of the credential
  CredentialDefinitionValue:
    type: CredDefValue
    docs: Credential definition primary and revocation values
  DidCreateOptions:
    type: DIDCreateOptions
    docs: To define a key type and/or a did depending on chosen DID method.
  DidxRequestDidDocAttach:
    type: AttachDecorator
    docs: As signed attachment, DID Doc associated with DID
  DocOptions:
    type: SignatureOptions
    docs: Signature options
  IndyCredAbstractKeyCorrectnessProof:
    type: IndyKeyCorrectnessProof
    docs: Key correctness proof
  IndyCredPrecisCredInfo:
    type: IndyCredInfo
    docs: Credential info
  IndyCredPrecisInterval:
    type: IndyNonRevocationInterval
    docs: Non-revocation interval from presentation request
  IndyCredentialValuesValue:
    type: IndyAttrValue
    docs: Attribute value
  IndyPrimaryProofEqProof:
    type: optional<IndyEQProof>
    docs: Indy equality proof
  IndyProofProofProofsProofNonRevocProof:
    type: optional<IndyNonRevocProof>
    docs: Indy non-revocation proof
  IndyProofProofProofsProofPrimaryProof:
    type: IndyPrimaryProof
    docs: Indy primary proof
  InputDescriptorsSchema:
    type: SchemasInputDescriptorFilter
    docs: Accepts a list of schema or a dict containing filters like oneof_filter.
  InvitationRecordInvitation:
    type: InvitationMessage
    docs: Out of band invitation message
  IssuerRevRegRecordRevocRegDef:
    type: IndyRevRegDef
    docs: Revocation registry definition
  IssuerRevRegRecordRevocRegEntry:
    type: IndyRevRegEntry
    docs: Revocation registry entry
  LdProofVcDetailCredential:
    type: Credential
    docs: Detail of the JSON-LD Credential to be issued
  LdProofVcDetailOptions:
    type: LDProofVCDetailOptions
    docs: Options for specifying how the linked data proof is created.
  LdProofVcDetailOptionsCredentialStatus:
    type: CredentialStatusOptions
    docs: >-
      The credential status mechanism to use for the credential. Omitting the
      property indicates the issued credential will not include a credential
      status
  SchemaSendResultSchema:
    type: Schema
    docs: Schema definition
  SendMenuMenu:
    type: MenuJson
    docs: Menu to send to connection
  SignedDocProof:
    type: SignatureOptions
    docs: Linked data proof
  TxnOrCredentialDefinitionSendResultTxn:
    type: TransactionRecord
    docs: Credential definition transaction to endorse
  TxnOrPublishRevocationsResultTxn:
    type: TransactionRecord
    docs: Revocation registry revocations transaction to endorse
  TxnOrRegisterLedgerNymResponseTxn:
    type: TransactionRecord
    docs: DID transaction to endorse
  TxnOrRevRegResultTxn:
    type: TransactionRecord
    docs: Revocation registry definition transaction to endorse
  TxnOrSchemaSendResultSent:
    type: SchemaSendResult
    docs: Content sent
  TxnOrSchemaSendResultTxn:
    type: TransactionRecord
    docs: Schema transaction to endorse
  V10CredentialBoundOfferRequestCounterProposal:
    type: CredentialProposal
    docs: Optional counter-proposal
  V10CredentialExchangeCredential:
    type: IndyCredInfo
    docs: Credential as stored
  V10CredentialExchangeCredentialOffer:
    type: IndyCredAbstract
    docs: (Indy) credential offer
  V10CredentialExchangeCredentialOfferDict:
    type: CredentialOffer
    docs: Credential offer message
  V10CredentialExchangeCredentialProposalDict:
    type: CredentialProposal
    docs: Credential proposal message
  V10CredentialExchangeCredentialRequest:
    type: IndyCredRequest
    docs: (Indy) credential request
  V10CredentialExchangeRawCredential:
    type: IndyCredential
    docs: Credential as received, prior to storage in holder wallet
  V10DiscoveryExchangeListResultResultsInner:
    type: V10DiscoveryRecord
    docs: Discover Features v1.0 exchange record
  V10DiscoveryRecordDisclose:
    type: Disclose
    docs: Disclose message
  V10DiscoveryRecordQueryMsg:
    type: Query
    docs: Query message
  V10PresentationExchangePresentation:
    type: IndyProof
    docs: (Indy) presentation (also known as proof)
  V10PresentationExchangePresentationProposalDict:
    type: PresentationProposal
    docs: Presentation proposal message
  V10PresentationExchangePresentationRequest:
    type: IndyProofRequest
    docs: (Indy) presentation request (also known as proof request)
  V10PresentationExchangePresentationRequestDict:
    type: PresentationRequest
    docs: Presentation request message
  V20CredBoundOfferRequestCounterPreview:
    type: V20CredPreview
    docs: Optional content for counter-proposal
  V20CredBoundOfferRequestFilter:
    type: V20CredFilter
    docs: Credential specification criteria by format
  V20CredExRecordCredIssue:
    type: V20CredIssue
    docs: Serialized credential issue message
  V20CredExRecordCredOffer:
    type: V20CredOffer
    docs: Credential offer message
  V20CredExRecordCredPreview:
    type: V20CredPreview
    docs: Credential preview from credential proposal
  V20CredExRecordCredProposal:
    type: V20CredProposal
    docs: Credential proposal message
  V20CredExRecordCredRequest:
    type: V20CredRequest
    docs: Serialized credential request message
  V20CredExRecordDetailCredExRecord:
    type: V20CredExRecord
    docs: Credential exchange record
  V20CredProposalCredentialPreview:
    type: V20CredPreview
    docs: Credential preview
  V20CredRequestFreeFilter:
    type: V20CredFilterLdProof
    docs: Credential specification criteria by format
  V20DiscoveryExchangeListResultResultsInner:
    type: V20DiscoveryRecord
    docs: Discover Features v2.0 exchange record
  V20DiscoveryRecordDisclosures:
    type: Disclosures
    docs: Disclosures message
  V20DiscoveryRecordQueriesMsg:
    type: Queries
    docs: Queries message
  V20PresExRecordPres:
    type: V20Pres
    docs: Presentation message
  V20PresExRecordPresProposal:
    type: V20PresProposal
    docs: Presentation proposal message
  V20PresExRecordPresRequest:
    type: V20PresRequest
    docs: Presentation request message
  V20PresProposalByFormatDif:
    type: DIFProofProposal
    docs: Presentation proposal for DIF
  V20PresProposalByFormatIndy:
    type: IndyProofRequest
    docs: Presentation proposal for indy
  V20PresRequestByFormatDif:
    type: DIFProofRequest
    docs: Presentation request for DIF
  V20PresRequestByFormatIndy:
    type: IndyProofRequest
    docs: Presentation request for indy
  V20PresSpecByFormatRequestDif:
    type: DIFPresSpec
    docs: >-
      Optional Presentation specification for DIF, overrides the
      PresentionExchange record's PresRequest
  V20PresSpecByFormatRequestIndy:
    type: IndyPresSpec
    docs: Presentation specification for indy
  VerifyRequestDoc:
    type: SignedDoc
    docs: Signed document
",
    },
    "actionMenu.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Menu interaction over connection",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "action-menu",
          "endpoints": {
            "close_menu_by_conn_id": {
              "auth": true,
              "display-name": "Close the active menu associated with a connection",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/action-menu/{conn_id}/close",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ActionMenuModulesResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "fetch_menu_by_conn_id": {
              "auth": true,
              "display-name": "Fetch the active menu",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/action-menu/{conn_id}/fetch",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ActionMenuFetchResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "perform_action_by_conn_id": {
              "auth": true,
              "display-name": "Perform an action associated with the active menu",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "request": {
                    "name": "Query",
                    "params": {
                      "key": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    },
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/action-menu/{conn_id}/perform",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "name": {
                      "docs": "Menu option name",
                      "type": "optional<string>",
                    },
                    "params": {
                      "docs": "Input parameter values",
                      "type": "optional<map<string, string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "PerformRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ActionMenuModulesResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "request_menu_by_conn_id": {
              "auth": true,
              "display-name": "Request the active menu",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/action-menu/{conn_id}/request",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ActionMenuModulesResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_menu_to_conn_id": {
              "auth": true,
              "display-name": "Send an action menu to a connection",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "request": {
                    "menu": {
                      "options": [
                        {
                          "name": "window_prefs",
                          "title": "Window Preferences",
                        },
                      ],
                    },
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/action-menu/{conn_id}/send-menu",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "menu": "root.SendMenuMenu",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SendMenu",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ActionMenuModulesResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    close_menu_by_conn_id:
      path: /action-menu/{conn_id}/close
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Close the active menu associated with a connection
      response:
        docs: ''
        type: root.ActionMenuModulesResult
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              key: value
    fetch_menu_by_conn_id:
      path: /action-menu/{conn_id}/fetch
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Fetch the active menu
      response:
        docs: ''
        type: root.ActionMenuFetchResult
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body: {}
    perform_action_by_conn_id:
      path: /action-menu/{conn_id}/perform
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Perform an action associated with the active menu
      request:
        name: PerformRequest
        body:
          properties:
            name:
              type: optional<string>
              docs: Menu option name
            params:
              type: optional<map<string, string>>
              docs: Input parameter values
        content-type: application/json
      response:
        docs: ''
        type: root.ActionMenuModulesResult
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          request:
            name: Query
            params:
              key: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          response:
            body:
              key: value
    request_menu_by_conn_id:
      path: /action-menu/{conn_id}/request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Request the active menu
      response:
        docs: ''
        type: root.ActionMenuModulesResult
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              key: value
    send_menu_to_conn_id:
      path: /action-menu/{conn_id}/send-menu
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Send an action menu to a connection
      request:
        name: SendMenu
        body:
          properties:
            menu: root.SendMenuMenu
        content-type: application/json
      response:
        docs: ''
        type: root.ActionMenuModulesResult
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          request:
            menu:
              options:
                - name: window_prefs
                  title: Window Preferences
          response:
            body:
              key: value
  source:
    openapi: ../openapi.yml
  display-name: action-menu
docs: Menu interaction over connection
",
    },
    "basicmessage.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Simple messaging",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "basicmessage",
          "endpoints": {
            "send_message": {
              "auth": true,
              "display-name": "Send a basic message to a connection",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "request": {
                    "content": "Hello",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/{conn_id}/send-message",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "content": {
                      "docs": "Message content",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SendMessage",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.BasicMessageModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    send_message:
      path: /connections/{conn_id}/send-message
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Send a basic message to a connection
      request:
        name: SendMessage
        body:
          properties:
            content:
              type: optional<string>
              docs: Message content
        content-type: application/json
      response:
        docs: ''
        type: root.BasicMessageModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          request:
            content: Hello
          response:
            body:
              key: value
  source:
    openapi: ../openapi.yml
  display-name: basicmessage
docs: Simple messaging
",
    },
    "connection.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Connection management",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "connection",
          "endpoints": {
            "accept_connection_invitation": {
              "auth": true,
              "display-name": "Accept a stored connection invitation",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/{conn_id}/accept-invitation",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "AcceptConnectionInvitationRequest",
                "query-parameters": {
                  "mediation_id": {
                    "docs": "Identifier for active mediation record to be used",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    },
                  },
                  "my_endpoint": {
                    "docs": "My URL endpoint",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    },
                  },
                  "my_label": {
                    "docs": "Label for connection",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "accept_connection_request": {
              "auth": true,
              "display-name": "Accept a stored connection request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/{conn_id}/accept-request",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "AcceptConnectionRequestRequest",
                "query-parameters": {
                  "my_endpoint": {
                    "docs": "My URL endpoint",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create_connection_invitation": {
              "auth": true,
              "display-name": "Create a new connection invitation",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "mediation_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "my_label": "Bob",
                    "recipient_keys": [
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    ],
                    "routing_keys": [
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    ],
                    "service_endpoint": "http://192.168.56.102:8020",
                  },
                  "response": {
                    "body": {
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation": {
                        "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                        "did": "WgWxqztrNooG92RXvxSTWv",
                        "imageUrl": "http://192.168.56.101/img/logo.jpg",
                        "label": "Bob",
                        "recipientKeys": [
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        ],
                        "routingKeys": [
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        ],
                        "serviceEndpoint": "http://192.168.56.101:8020",
                      },
                      "invitation_url": "http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/create-invitation",
              "request": {
                "body": {
                  "properties": {
                    "mediation_id": {
                      "docs": "Identifier for active mediation record to be used",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                      },
                    },
                    "metadata": {
                      "docs": "Optional metadata to attach to the connection created with the invitation",
                      "type": "optional<CreateInvitationRequestMetadata>",
                    },
                    "my_label": {
                      "docs": "Optional label for connection invitation",
                      "type": "optional<string>",
                    },
                    "recipient_keys": {
                      "docs": "List of recipient keys",
                      "type": "optional<list<string>>",
                    },
                    "routing_keys": {
                      "docs": "List of routing keys",
                      "type": "optional<list<string>>",
                    },
                    "service_endpoint": {
                      "docs": "Connection endpoint",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateInvitationRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "alias": {
                    "docs": "Alias",
                    "type": "optional<string>",
                  },
                  "auto_accept": {
                    "docs": "Auto-accept connection (defaults to configuration)",
                    "type": "optional<boolean>",
                  },
                  "multi_use": {
                    "docs": "Create invitation for multiple use (default false)",
                    "type": "optional<boolean>",
                  },
                  "public": {
                    "docs": "Create invitation from public DID (default false)",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.InvitationResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create_static_connection": {
              "auth": true,
              "display-name": "Create a new static connection",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "alias": "alias",
                    "my_did": "WgWxqztrNooG92RXvxSTWv",
                    "my_seed": "my_seed",
                    "their_did": "WgWxqztrNooG92RXvxSTWv",
                    "their_endpoint": "https://myhost:8021",
                    "their_label": "their_label",
                    "their_seed": "their_seed",
                    "their_verkey": "their_verkey",
                  },
                  "response": {
                    "body": {
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "my_endpoint": "https://myhost:8021",
                      "my_verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "record": {
                        "accept": "auto",
                        "alias": "Bob, providing quotes",
                        "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "connection_protocol": "connections/1.0",
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "error_msg": "No DIDDoc provided; cannot connect to public DID",
                        "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "invitation_mode": "once",
                        "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "my_did": "WgWxqztrNooG92RXvxSTWv",
                        "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "rfc23_state": "invitation-sent",
                        "routing_state": "active",
                        "state": "active",
                        "their_did": "WgWxqztrNooG92RXvxSTWv",
                        "their_label": "Bob",
                        "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                        "their_role": "requester",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/create-static",
              "request": {
                "body": {
                  "properties": {
                    "alias": {
                      "docs": "Alias to assign to this connection",
                      "type": "optional<string>",
                    },
                    "my_did": {
                      "docs": "Local DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "my_seed": {
                      "docs": "Seed to use for the local DID",
                      "type": "optional<string>",
                    },
                    "their_did": {
                      "docs": "Remote DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "their_endpoint": {
                      "docs": "URL endpoint for other party",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                      },
                    },
                    "their_label": {
                      "docs": "Other party's label for this connection",
                      "type": "optional<string>",
                    },
                    "their_seed": {
                      "docs": "Seed to use for the remote DID",
                      "type": "optional<string>",
                    },
                    "their_verkey": {
                      "docs": "Remote verification key",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ConnectionStaticRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnectionStaticResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_connection_record": {
              "auth": true,
              "display-name": "Remove an existing connection record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/connections/{conn_id}",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnectionModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_connection_endpoint": {
              "auth": true,
              "display-name": "Fetch connection remote endpoint",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "my_endpoint": "https://myhost:8021",
                      "their_endpoint": "https://myhost:8021",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/connections/{conn_id}/endpoints",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.EndpointsResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_connection_metadata": {
              "auth": true,
              "display-name": "Fetch connection metadata",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/connections/{conn_id}/metadata",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetConnectionMetadataRequest",
                "query-parameters": {
                  "key": {
                    "docs": "Key to retrieve.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnectionMetadata",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_connection_record": {
              "auth": true,
              "display-name": "Fetch a single connection record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/connections/{conn_id}",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_matching_connections": {
              "auth": true,
              "display-name": "Query agent-to-agent connections",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "accept": "auto",
                          "alias": "Bob, providing quotes",
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "connection_protocol": "connections/1.0",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "error_msg": "No DIDDoc provided; cannot connect to public DID",
                          "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                          "invitation_mode": "once",
                          "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "my_did": "WgWxqztrNooG92RXvxSTWv",
                          "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "rfc23_state": "invitation-sent",
                          "routing_state": "active",
                          "state": "active",
                          "their_did": "WgWxqztrNooG92RXvxSTWv",
                          "their_label": "Bob",
                          "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                          "their_role": "requester",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                        {
                          "accept": "auto",
                          "alias": "Bob, providing quotes",
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "connection_protocol": "connections/1.0",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "error_msg": "No DIDDoc provided; cannot connect to public DID",
                          "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                          "invitation_mode": "once",
                          "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "my_did": "WgWxqztrNooG92RXvxSTWv",
                          "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "rfc23_state": "invitation-sent",
                          "routing_state": "active",
                          "state": "active",
                          "their_did": "WgWxqztrNooG92RXvxSTWv",
                          "their_label": "Bob",
                          "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                          "their_role": "requester",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/connections",
              "request": {
                "name": "GetMatchingConnectionsRequest",
                "query-parameters": {
                  "alias": {
                    "docs": "Alias",
                    "type": "optional<string>",
                  },
                  "connection_protocol": {
                    "docs": "Connection protocol used",
                    "type": "optional<GetMatchingConnectionsRequestConnectionProtocol>",
                  },
                  "invitation_key": {
                    "docs": "invitation key",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    },
                  },
                  "invitation_msg_id": {
                    "docs": "Identifier of the associated Invitation Mesage",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "my_did": {
                    "docs": "My DID",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "state": {
                    "docs": "Connection state",
                    "type": "optional<GetMatchingConnectionsRequestState>",
                  },
                  "their_did": {
                    "docs": "Their DID",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "their_public_did": {
                    "docs": "Their Public DID",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "their_role": {
                    "docs": "Their role in the connection protocol",
                    "type": "optional<GetMatchingConnectionsRequestTheirRole>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnectionList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "receive_connection_invitation": {
              "auth": true,
              "display-name": "Receive a new connection invitation",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "did": "WgWxqztrNooG92RXvxSTWv",
                    "imageUrl": "http://192.168.56.101/img/logo.jpg",
                    "label": "Bob",
                    "recipientKeys": [
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    ],
                    "routingKeys": [
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    ],
                    "serviceEndpoint": "http://192.168.56.101:8020",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/receive-invitation",
              "request": {
                "body": {
                  "properties": {
                    "@id": {
                      "docs": "Message identifier",
                      "type": "optional<string>",
                    },
                    "did": {
                      "docs": "DID for connection invitation",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "imageUrl": {
                      "docs": "Optional image URL for connection invitation",
                      "type": "optional<string>",
                    },
                    "label": {
                      "docs": "Optional label for connection invitation",
                      "type": "optional<string>",
                    },
                    "recipientKeys": {
                      "docs": "List of recipient keys",
                      "type": "optional<list<string>>",
                    },
                    "routingKeys": {
                      "docs": "List of routing keys",
                      "type": "optional<list<string>>",
                    },
                    "serviceEndpoint": {
                      "docs": "Service endpoint at which to reach this agent",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ReceiveInvitationRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "alias": {
                    "docs": "Alias",
                    "type": "optional<string>",
                  },
                  "auto_accept": {
                    "docs": "Auto-accept connection (defaults to configuration)",
                    "type": "optional<boolean>",
                  },
                  "mediation_id": {
                    "docs": "Identifier for active mediation record to be used",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_connection_metadata": {
              "auth": true,
              "display-name": "Set connection metadata",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "request": {
                    "metadata": {},
                  },
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/{conn_id}/metadata",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "metadata": {
                      "docs": "Dictionary of metadata to set for connection.",
                      "type": "ConnectionMetadataSetRequestMetadata",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ConnectionMetadataSetRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnectionMetadata",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_inbound_connection": {
              "auth": true,
              "display-name": "Assign another connection as the inbound connection",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                    "ref_id": "ref_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/{conn_id}/establish-inbound/{ref_id}",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
                "ref_id": {
                  "docs": "Inbound connection identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnectionModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ConnectionMetadataSetRequestMetadata": {
            "docs": "Dictionary of metadata to set for connection.",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateInvitationRequestMetadata": {
            "docs": "Optional metadata to attach to the connection created with the invitation",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingConnectionsRequestConnectionProtocol": {
            "enum": [
              {
                "name": "Connections10",
                "value": "connections/1.0",
              },
              {
                "name": "Didexchange10",
                "value": "didexchange/1.0",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingConnectionsRequestState": {
            "enum": [
              "start",
              "error",
              "response",
              "request",
              "abandoned",
              "init",
              "invitation",
              "active",
              "completed",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingConnectionsRequestTheirRole": {
            "enum": [
              "invitee",
              "requester",
              "inviter",
              "responder",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetMatchingConnectionsRequestConnectionProtocol:
    enum:
      - value: connections/1.0
        name: Connections10
      - value: didexchange/1.0
        name: Didexchange10
    source:
      openapi: ../openapi.yml
  GetMatchingConnectionsRequestState:
    enum:
      - start
      - error
      - response
      - request
      - abandoned
      - init
      - invitation
      - active
      - completed
    source:
      openapi: ../openapi.yml
  GetMatchingConnectionsRequestTheirRole:
    enum:
      - invitee
      - requester
      - inviter
      - responder
    source:
      openapi: ../openapi.yml
  CreateInvitationRequestMetadata:
    docs: Optional metadata to attach to the connection created with the invitation
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  ConnectionMetadataSetRequestMetadata:
    docs: Dictionary of metadata to set for connection.
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_matching_connections:
      path: /connections
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Query agent-to-agent connections
      request:
        name: GetMatchingConnectionsRequest
        query-parameters:
          alias:
            type: optional<string>
            docs: Alias
          connection_protocol:
            type: optional<GetMatchingConnectionsRequestConnectionProtocol>
            docs: Connection protocol used
          invitation_key:
            type: optional<string>
            docs: invitation key
            validation:
              pattern: >-
                ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          invitation_msg_id:
            type: optional<string>
            docs: Identifier of the associated Invitation Mesage
            validation:
              format: uuid
          my_did:
            type: optional<string>
            docs: My DID
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          state:
            type: optional<GetMatchingConnectionsRequestState>
            docs: Connection state
          their_did:
            type: optional<string>
            docs: Their DID
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          their_public_did:
            type: optional<string>
            docs: Their Public DID
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          their_role:
            type: optional<GetMatchingConnectionsRequestTheirRole>
            docs: Their role in the connection protocol
      response:
        docs: ''
        type: root.ConnectionList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - accept: auto
                  alias: Bob, providing quotes
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  connection_protocol: connections/1.0
                  created_at: '2021-12-31 23:59:59+00:00'
                  error_msg: No DIDDoc provided; cannot connect to public DID
                  inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                  invitation_mode: once
                  invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  my_did: WgWxqztrNooG92RXvxSTWv
                  request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  rfc23_state: invitation-sent
                  routing_state: active
                  state: active
                  their_did: WgWxqztrNooG92RXvxSTWv
                  their_label: Bob
                  their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
                  their_role: requester
                  updated_at: '2021-12-31 23:59:59+00:00'
                - accept: auto
                  alias: Bob, providing quotes
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  connection_protocol: connections/1.0
                  created_at: '2021-12-31 23:59:59+00:00'
                  error_msg: No DIDDoc provided; cannot connect to public DID
                  inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                  invitation_mode: once
                  invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  my_did: WgWxqztrNooG92RXvxSTWv
                  request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  rfc23_state: invitation-sent
                  routing_state: active
                  state: active
                  their_did: WgWxqztrNooG92RXvxSTWv
                  their_label: Bob
                  their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
                  their_role: requester
                  updated_at: '2021-12-31 23:59:59+00:00'
    create_connection_invitation:
      path: /connections/create-invitation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a new connection invitation
      request:
        name: CreateInvitationRequest
        query-parameters:
          alias:
            type: optional<string>
            docs: Alias
          auto_accept:
            type: optional<boolean>
            docs: Auto-accept connection (defaults to configuration)
          multi_use:
            type: optional<boolean>
            docs: Create invitation for multiple use (default false)
          public:
            type: optional<boolean>
            docs: Create invitation from public DID (default false)
        body:
          properties:
            mediation_id:
              type: optional<string>
              docs: Identifier for active mediation record to be used
              validation:
                pattern: >-
                  [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
            metadata:
              type: optional<CreateInvitationRequestMetadata>
              docs: >-
                Optional metadata to attach to the connection created with the
                invitation
            my_label:
              type: optional<string>
              docs: Optional label for connection invitation
            recipient_keys:
              type: optional<list<string>>
              docs: List of recipient keys
            routing_keys:
              type: optional<list<string>>
              docs: List of routing keys
            service_endpoint:
              type: optional<string>
              docs: Connection endpoint
        content-type: application/json
      response:
        docs: ''
        type: root.InvitationResult
        status-code: 200
      examples:
        - request:
            mediation_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            my_label: Bob
            recipient_keys:
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
            routing_keys:
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
            service_endpoint: http://192.168.56.102:8020
          response:
            body:
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation:
                '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                '@type': https://didcomm.org/my-family/1.0/my-message-type
                did: WgWxqztrNooG92RXvxSTWv
                imageUrl: http://192.168.56.101/img/logo.jpg
                label: Bob
                recipientKeys:
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                routingKeys:
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                serviceEndpoint: http://192.168.56.101:8020
              invitation_url: http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==
    create_static_connection:
      path: /connections/create-static
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a new static connection
      request:
        name: ConnectionStaticRequest
        body:
          properties:
            alias:
              type: optional<string>
              docs: Alias to assign to this connection
            my_did:
              type: optional<string>
              docs: Local DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            my_seed:
              type: optional<string>
              docs: Seed to use for the local DID
            their_did:
              type: optional<string>
              docs: Remote DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            their_endpoint:
              type: optional<string>
              docs: URL endpoint for other party
              validation:
                pattern: >-
                  ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
            their_label:
              type: optional<string>
              docs: Other party's label for this connection
            their_seed:
              type: optional<string>
              docs: Seed to use for the remote DID
            their_verkey:
              type: optional<string>
              docs: Remote verification key
        content-type: application/json
      response:
        docs: ''
        type: root.ConnectionStaticResult
        status-code: 200
      examples:
        - request:
            alias: alias
            my_did: WgWxqztrNooG92RXvxSTWv
            my_seed: my_seed
            their_did: WgWxqztrNooG92RXvxSTWv
            their_endpoint: https://myhost:8021
            their_label: their_label
            their_seed: their_seed
            their_verkey: their_verkey
          response:
            body:
              my_did: WgWxqztrNooG92RXvxSTWv
              my_endpoint: https://myhost:8021
              my_verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              record:
                accept: auto
                alias: Bob, providing quotes
                connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                connection_protocol: connections/1.0
                created_at: '2021-12-31 23:59:59+00:00'
                error_msg: No DIDDoc provided; cannot connect to public DID
                inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                invitation_mode: once
                invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                my_did: WgWxqztrNooG92RXvxSTWv
                request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                rfc23_state: invitation-sent
                routing_state: active
                state: active
                their_did: WgWxqztrNooG92RXvxSTWv
                their_label: Bob
                their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
                their_role: requester
                updated_at: '2021-12-31 23:59:59+00:00'
              their_did: WgWxqztrNooG92RXvxSTWv
              their_verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    receive_connection_invitation:
      path: /connections/receive-invitation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Receive a new connection invitation
      request:
        name: ReceiveInvitationRequest
        query-parameters:
          alias:
            type: optional<string>
            docs: Alias
          auto_accept:
            type: optional<boolean>
            docs: Auto-accept connection (defaults to configuration)
          mediation_id:
            type: optional<string>
            docs: Identifier for active mediation record to be used
            validation:
              pattern: >-
                [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
        body:
          properties:
            '@id':
              type: optional<string>
              docs: Message identifier
            did:
              type: optional<string>
              docs: DID for connection invitation
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            imageUrl:
              type: optional<string>
              docs: Optional image URL for connection invitation
            label:
              type: optional<string>
              docs: Optional label for connection invitation
            recipientKeys:
              type: optional<list<string>>
              docs: List of recipient keys
            routingKeys:
              type: optional<list<string>>
              docs: List of routing keys
            serviceEndpoint:
              type: optional<string>
              docs: Service endpoint at which to reach this agent
        content-type: application/json
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - request:
            '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
            did: WgWxqztrNooG92RXvxSTWv
            imageUrl: http://192.168.56.101/img/logo.jpg
            label: Bob
            recipientKeys:
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
            routingKeys:
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
            serviceEndpoint: http://192.168.56.101:8020
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
    get_connection_record:
      path: /connections/{conn_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Fetch a single connection record
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
    delete_connection_record:
      path: /connections/{conn_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Remove an existing connection record
      response:
        docs: ''
        type: root.ConnectionModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              key: value
    accept_connection_invitation:
      path: /connections/{conn_id}/accept-invitation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Accept a stored connection invitation
      request:
        name: AcceptConnectionInvitationRequest
        query-parameters:
          mediation_id:
            type: optional<string>
            docs: Identifier for active mediation record to be used
            validation:
              pattern: >-
                [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          my_endpoint:
            type: optional<string>
            docs: My URL endpoint
            validation:
              pattern: >-
                ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          my_label:
            type: optional<string>
            docs: Label for connection
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
    accept_connection_request:
      path: /connections/{conn_id}/accept-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Accept a stored connection request
      request:
        name: AcceptConnectionRequestRequest
        query-parameters:
          my_endpoint:
            type: optional<string>
            docs: My URL endpoint
            validation:
              pattern: >-
                ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
    get_connection_endpoint:
      path: /connections/{conn_id}/endpoints
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Fetch connection remote endpoint
      response:
        docs: ''
        type: root.EndpointsResult
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              my_endpoint: https://myhost:8021
              their_endpoint: https://myhost:8021
    set_inbound_connection:
      path: /connections/{conn_id}/establish-inbound/{ref_id}
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
        ref_id:
          type: string
          docs: Inbound connection identifier
      display-name: Assign another connection as the inbound connection
      response:
        docs: ''
        type: root.ConnectionModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
            ref_id: ref_id
          response:
            body:
              key: value
    get_connection_metadata:
      path: /connections/{conn_id}/metadata
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Fetch connection metadata
      request:
        name: GetConnectionMetadataRequest
        query-parameters:
          key:
            type: optional<string>
            docs: Key to retrieve.
      response:
        docs: ''
        type: root.ConnectionMetadata
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body: {}
    set_connection_metadata:
      path: /connections/{conn_id}/metadata
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Set connection metadata
      request:
        name: ConnectionMetadataSetRequest
        body:
          properties:
            metadata:
              type: ConnectionMetadataSetRequestMetadata
              docs: Dictionary of metadata to set for connection.
        content-type: application/json
      response:
        docs: ''
        type: root.ConnectionMetadata
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          request:
            metadata: {}
          response:
            body: {}
  source:
    openapi: ../openapi.yml
  display-name: connection
docs: Connection management
",
    },
    "credentialDefinition.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Credential definition operations",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "credential-definition",
          "endpoints": {
            "get_created_cred_defs": {
              "auth": true,
              "display-name": "Search for matching credential definitions that agent originated",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "credential_definition_ids": [
                        "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/credential-definitions/created",
              "request": {
                "name": "GetCreatedCredDefsRequest",
                "query-parameters": {
                  "cred_def_id": {
                    "docs": "Credential definition id",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                    },
                  },
                  "issuer_did": {
                    "docs": "Issuer DID",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "schema_id": {
                    "docs": "Schema identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                    },
                  },
                  "schema_issuer_did": {
                    "docs": "Schema issuer DID",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "schema_name": {
                    "docs": "Schema name",
                    "type": "optional<string>",
                  },
                  "schema_version": {
                    "docs": "Schema version",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9.]+$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredentialDefinitionsCreatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_credential_definition": {
              "auth": true,
              "display-name": "Gets a credential definition from the ledger",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_def_id": "cred_def_id",
                  },
                  "response": {
                    "body": {
                      "credential_definition": {
                        "id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "schemaId": "20",
                        "tag": "tag",
                        "type": {
                          "key": "value",
                        },
                        "ver": "1.0",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/credential-definitions/{cred_def_id}",
              "path-parameters": {
                "cred_def_id": {
                  "docs": "Credential definition identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredentialDefinitionGetResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish_credential_definition": {
              "auth": true,
              "display-name": "Sends a credential definition to the ledger",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "revocation_registry_size": 1000,
                    "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "support_revocation": true,
                    "tag": "default",
                  },
                  "response": {
                    "body": {
                      "sent": {
                        "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/credential-definitions",
              "request": {
                "body": {
                  "properties": {
                    "revocation_registry_size": {
                      "docs": "Revocation registry size",
                      "type": "optional<integer>",
                      "validation": {
                        "exclusiveMax": undefined,
                        "exclusiveMin": undefined,
                        "max": 32768,
                        "min": 4,
                        "multipleOf": undefined,
                      },
                    },
                    "schema_id": {
                      "docs": "Schema identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                      },
                    },
                    "support_revocation": {
                      "docs": "Revocation supported flag",
                      "type": "optional<boolean>",
                    },
                    "tag": {
                      "docs": "Credential definition identifier tag",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CredentialDefinitionSendRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                  "create_transaction_for_endorser": {
                    "docs": "Create Transaction For Endorser's signature",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TxnOrCredentialDefinitionSendResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "write_credential_definition": {
              "auth": true,
              "display-name": "Writes a credential definition non-secret record to the wallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_def_id": "cred_def_id",
                  },
                  "response": {
                    "body": {
                      "credential_definition": {
                        "id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "schemaId": "20",
                        "tag": "tag",
                        "type": {
                          "key": "value",
                        },
                        "ver": "1.0",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/credential-definitions/{cred_def_id}/write_record",
              "path-parameters": {
                "cred_def_id": {
                  "docs": "Credential definition identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredentialDefinitionGetResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    publish_credential_definition:
      path: /credential-definitions
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Sends a credential definition to the ledger
      request:
        name: CredentialDefinitionSendRequest
        query-parameters:
          conn_id:
            type: optional<string>
            docs: Connection identifier
          create_transaction_for_endorser:
            type: optional<boolean>
            docs: Create Transaction For Endorser's signature
        body:
          properties:
            revocation_registry_size:
              type: optional<integer>
              docs: Revocation registry size
              validation:
                min: 4
                max: 32768
            schema_id:
              type: optional<string>
              docs: Schema identifier
              validation:
                pattern: >-
                  ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
            support_revocation:
              type: optional<boolean>
              docs: Revocation supported flag
            tag:
              type: optional<string>
              docs: Credential definition identifier tag
        content-type: application/json
      response:
        docs: ''
        type: root.TxnOrCredentialDefinitionSendResult
        status-code: 200
      examples:
        - request:
            revocation_registry_size: 1000
            schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
            support_revocation: true
            tag: default
          response:
            body:
              sent:
                credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    get_created_cred_defs:
      path: /credential-definitions/created
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Search for matching credential definitions that agent originated
      request:
        name: GetCreatedCredDefsRequest
        query-parameters:
          cred_def_id:
            type: optional<string>
            docs: Credential definition id
            validation:
              pattern: >-
                ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          issuer_did:
            type: optional<string>
            docs: Issuer DID
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          schema_id:
            type: optional<string>
            docs: Schema identifier
            validation:
              pattern: >-
                ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          schema_issuer_did:
            type: optional<string>
            docs: Schema issuer DID
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          schema_name:
            type: optional<string>
            docs: Schema name
          schema_version:
            type: optional<string>
            docs: Schema version
            validation:
              pattern: ^[0-9.]+$
      response:
        docs: ''
        type: root.CredentialDefinitionsCreatedResult
        status-code: 200
      examples:
        - response:
            body:
              credential_definition_ids:
                - WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                - WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    get_credential_definition:
      path: /credential-definitions/{cred_def_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_def_id:
          type: string
          docs: Credential definition identifier
      display-name: Gets a credential definition from the ledger
      response:
        docs: ''
        type: root.CredentialDefinitionGetResult
        status-code: 200
      examples:
        - path-parameters:
            cred_def_id: cred_def_id
          response:
            body:
              credential_definition:
                id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                schemaId: '20'
                tag: tag
                type:
                  key: value
                ver: '1.0'
    write_credential_definition:
      path: /credential-definitions/{cred_def_id}/write_record
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_def_id:
          type: string
          docs: Credential definition identifier
      display-name: Writes a credential definition non-secret record to the wallet
      response:
        docs: ''
        type: root.CredentialDefinitionGetResult
        status-code: 200
      examples:
        - path-parameters:
            cred_def_id: cred_def_id
          response:
            body:
              credential_definition:
                id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                schemaId: '20'
                tag: tag
                type:
                  key: value
                ver: '1.0'
  source:
    openapi: ../openapi.yml
  display-name: credential-definition
docs: Credential definition operations
",
    },
    "credentials.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Holder credential management",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "credentials",
          "endpoints": {
            "delete_credential_record": {
              "auth": true,
              "display-name": "Remove credential from wallet by id",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/credential/{credential_id}",
              "path-parameters": {
                "credential_id": {
                  "docs": "Credential identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.HolderModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_w3c_credential": {
              "auth": true,
              "display-name": "Remove W3C credential from wallet by id",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/credential/w3c/{credential_id}",
              "path-parameters": {
                "credential_id": {
                  "docs": "Credential identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.HolderModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_credential_mime_types": {
              "auth": true,
              "display-name": "Get attribute MIME types from wallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "results": {
                        "key": "results",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/credential/mime-types/{credential_id}",
              "path-parameters": {
                "credential_id": {
                  "docs": "Credential identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AttributeMimeTypesResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_credential_record": {
              "auth": true,
              "display-name": "Fetch credential from wallet by id",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "attrs": {
                        "key": "alice",
                      },
                      "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "cred_rev_id": "12345",
                      "referent": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/credential/{credential_id}",
              "path-parameters": {
                "credential_id": {
                  "docs": "Credential identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.IndyCredInfo",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_credentials": {
              "auth": true,
              "display-name": "Fetch credentials from wallet",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "attrs": {
                            "key": "alice",
                          },
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "cred_rev_id": "12345",
                          "referent": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                          "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        },
                        {
                          "attrs": {
                            "key": "alice",
                          },
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "cred_rev_id": "12345",
                          "referent": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                          "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/credentials",
              "request": {
                "name": "GetCredentialsRequest",
                "query-parameters": {
                  "count": {
                    "docs": "Maximum number to retrieve",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[1-9][0-9]*$",
                    },
                  },
                  "start": {
                    "docs": "Start index",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9]*$",
                    },
                  },
                  "wql": {
                    "docs": "(JSON) WQL query",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^{.*}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredInfoList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_revocation_status": {
              "auth": true,
              "display-name": "Query credential revocation status by id",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "revoked": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/credential/revoked/{credential_id}",
              "path-parameters": {
                "credential_id": {
                  "docs": "Credential identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetRevocationStatusRequest",
                "query-parameters": {
                  "from": {
                    "docs": "Earliest epoch of revocation status interval of interest",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9]*$",
                    },
                  },
                  "to": {
                    "docs": "Latest epoch of revocation status interval of interest",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9]*$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredRevokedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_w3c_credential": {
              "auth": true,
              "display-name": "Fetch W3C credential from wallet by id",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "contexts": [
                        "https://myhost:8021",
                        "https://myhost:8021",
                      ],
                      "cred_tags": {
                        "key": "cred_tags",
                      },
                      "expanded_types": [
                        "https://w3id.org/citizenship#PermanentResidentCard",
                        "https://w3id.org/citizenship#PermanentResidentCard",
                      ],
                      "given_id": "http://example.edu/credentials/3732",
                      "issuer_id": "https://example.edu/issuers/14",
                      "proof_types": [
                        "Ed25519Signature2018",
                        "Ed25519Signature2018",
                      ],
                      "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "schema_ids": [
                        "https://example.org/examples/degree.json",
                        "https://example.org/examples/degree.json",
                      ],
                      "subject_ids": [
                        "did:example:ebfeb1f712ebc6f1c276e12ec21",
                        "did:example:ebfeb1f712ebc6f1c276e12ec21",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/credential/w3c/{credential_id}",
              "path-parameters": {
                "credential_id": {
                  "docs": "Credential identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.VCRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_w3c_credentials": {
              "auth": true,
              "display-name": "Fetch W3C credentials from wallet",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "contexts": [
                      "https://myhost:8021",
                      "https://myhost:8021",
                    ],
                    "given_id": "given_id",
                    "issuer_id": "issuer_id",
                    "max_results": 0,
                    "proof_types": [
                      "Ed25519Signature2018",
                      "Ed25519Signature2018",
                    ],
                    "schema_ids": [
                      "https://myhost:8021",
                      "https://myhost:8021",
                    ],
                    "subject_ids": [
                      "subject_ids",
                      "subject_ids",
                    ],
                    "tag_query": {
                      "key": "tag_query",
                    },
                    "types": [
                      "https://myhost:8021",
                      "https://myhost:8021",
                    ],
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "contexts": [
                            "https://myhost:8021",
                            "https://myhost:8021",
                          ],
                          "cred_tags": {
                            "key": "cred_tags",
                          },
                          "expanded_types": [
                            "https://w3id.org/citizenship#PermanentResidentCard",
                            "https://w3id.org/citizenship#PermanentResidentCard",
                          ],
                          "given_id": "http://example.edu/credentials/3732",
                          "issuer_id": "https://example.edu/issuers/14",
                          "proof_types": [
                            "Ed25519Signature2018",
                            "Ed25519Signature2018",
                          ],
                          "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "schema_ids": [
                            "https://example.org/examples/degree.json",
                            "https://example.org/examples/degree.json",
                          ],
                          "subject_ids": [
                            "did:example:ebfeb1f712ebc6f1c276e12ec21",
                            "did:example:ebfeb1f712ebc6f1c276e12ec21",
                          ],
                        },
                        {
                          "contexts": [
                            "https://myhost:8021",
                            "https://myhost:8021",
                          ],
                          "cred_tags": {
                            "key": "cred_tags",
                          },
                          "expanded_types": [
                            "https://w3id.org/citizenship#PermanentResidentCard",
                            "https://w3id.org/citizenship#PermanentResidentCard",
                          ],
                          "given_id": "http://example.edu/credentials/3732",
                          "issuer_id": "https://example.edu/issuers/14",
                          "proof_types": [
                            "Ed25519Signature2018",
                            "Ed25519Signature2018",
                          ],
                          "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "schema_ids": [
                            "https://example.org/examples/degree.json",
                            "https://example.org/examples/degree.json",
                          ],
                          "subject_ids": [
                            "did:example:ebfeb1f712ebc6f1c276e12ec21",
                            "did:example:ebfeb1f712ebc6f1c276e12ec21",
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/credentials/w3c",
              "request": {
                "body": {
                  "properties": {
                    "contexts": {
                      "type": "optional<list<string>>",
                    },
                    "given_id": {
                      "docs": "Given credential id to match",
                      "type": "optional<string>",
                    },
                    "issuer_id": {
                      "docs": "Credential issuer identifier to match",
                      "type": "optional<string>",
                    },
                    "max_results": {
                      "docs": "Maximum number of results to return",
                      "type": "optional<integer>",
                    },
                    "proof_types": {
                      "type": "optional<list<string>>",
                    },
                    "schema_ids": {
                      "docs": "Schema identifiers, all of which to match",
                      "type": "optional<list<string>>",
                    },
                    "subject_ids": {
                      "docs": "Subject identifiers, all of which to match",
                      "type": "optional<list<string>>",
                    },
                    "tag_query": {
                      "docs": "Tag filter",
                      "type": "optional<map<string, string>>",
                    },
                    "types": {
                      "type": "optional<list<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "W3CCredentialsListRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "count": {
                    "docs": "Maximum number to retrieve",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[1-9][0-9]*$",
                    },
                  },
                  "start": {
                    "docs": "Start index",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9]*$",
                    },
                  },
                  "wql": {
                    "docs": "(JSON) WQL query",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^{.*}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.VCRecordList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_credential_mime_types:
      path: /credential/mime-types/{credential_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        credential_id:
          type: string
          docs: Credential identifier
      display-name: Get attribute MIME types from wallet
      response:
        docs: ''
        type: root.AttributeMimeTypesResult
        status-code: 200
      examples:
        - path-parameters:
            credential_id: credential_id
          response:
            body:
              results:
                key: results
    get_revocation_status:
      path: /credential/revoked/{credential_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        credential_id:
          type: string
          docs: Credential identifier
      display-name: Query credential revocation status by id
      request:
        name: GetRevocationStatusRequest
        query-parameters:
          from:
            type: optional<string>
            docs: Earliest epoch of revocation status interval of interest
            validation:
              pattern: ^[0-9]*$
          to:
            type: optional<string>
            docs: Latest epoch of revocation status interval of interest
            validation:
              pattern: ^[0-9]*$
      response:
        docs: ''
        type: root.CredRevokedResult
        status-code: 200
      examples:
        - path-parameters:
            credential_id: credential_id
          response:
            body:
              revoked: true
    get_w3c_credential:
      path: /credential/w3c/{credential_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        credential_id:
          type: string
          docs: Credential identifier
      display-name: Fetch W3C credential from wallet by id
      response:
        docs: ''
        type: root.VCRecord
        status-code: 200
      examples:
        - path-parameters:
            credential_id: credential_id
          response:
            body:
              contexts:
                - https://myhost:8021
                - https://myhost:8021
              cred_tags:
                key: cred_tags
              expanded_types:
                - https://w3id.org/citizenship#PermanentResidentCard
                - https://w3id.org/citizenship#PermanentResidentCard
              given_id: http://example.edu/credentials/3732
              issuer_id: https://example.edu/issuers/14
              proof_types:
                - Ed25519Signature2018
                - Ed25519Signature2018
              record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              schema_ids:
                - https://example.org/examples/degree.json
                - https://example.org/examples/degree.json
              subject_ids:
                - did:example:ebfeb1f712ebc6f1c276e12ec21
                - did:example:ebfeb1f712ebc6f1c276e12ec21
    delete_w3c_credential:
      path: /credential/w3c/{credential_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        credential_id:
          type: string
          docs: Credential identifier
      display-name: Remove W3C credential from wallet by id
      response:
        docs: ''
        type: root.HolderModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            credential_id: credential_id
          response:
            body:
              key: value
    get_credential_record:
      path: /credential/{credential_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        credential_id:
          type: string
          docs: Credential identifier
      display-name: Fetch credential from wallet by id
      response:
        docs: ''
        type: root.IndyCredInfo
        status-code: 200
      examples:
        - path-parameters:
            credential_id: credential_id
          response:
            body:
              attrs:
                key: alice
              cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              cred_rev_id: '12345'
              referent: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rev_reg_id: >-
                WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    delete_credential_record:
      path: /credential/{credential_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        credential_id:
          type: string
          docs: Credential identifier
      display-name: Remove credential from wallet by id
      response:
        docs: ''
        type: root.HolderModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            credential_id: credential_id
          response:
            body:
              key: value
    get_credentials:
      path: /credentials
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch credentials from wallet
      request:
        name: GetCredentialsRequest
        query-parameters:
          count:
            type: optional<string>
            docs: Maximum number to retrieve
            validation:
              pattern: ^[1-9][0-9]*$
          start:
            type: optional<string>
            docs: Start index
            validation:
              pattern: ^[0-9]*$
          wql:
            type: optional<string>
            docs: (JSON) WQL query
            validation:
              pattern: ^{.*}$
      response:
        docs: ''
        type: root.CredInfoList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - attrs:
                    key: alice
                  cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  cred_rev_id: '12345'
                  referent: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  rev_reg_id: >-
                    WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                  schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
                - attrs:
                    key: alice
                  cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  cred_rev_id: '12345'
                  referent: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  rev_reg_id: >-
                    WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                  schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    get_w3c_credentials:
      path: /credentials/w3c
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch W3C credentials from wallet
      request:
        name: W3CCredentialsListRequest
        query-parameters:
          count:
            type: optional<string>
            docs: Maximum number to retrieve
            validation:
              pattern: ^[1-9][0-9]*$
          start:
            type: optional<string>
            docs: Start index
            validation:
              pattern: ^[0-9]*$
          wql:
            type: optional<string>
            docs: (JSON) WQL query
            validation:
              pattern: ^{.*}$
        body:
          properties:
            contexts:
              type: optional<list<string>>
            given_id:
              type: optional<string>
              docs: Given credential id to match
            issuer_id:
              type: optional<string>
              docs: Credential issuer identifier to match
            max_results:
              type: optional<integer>
              docs: Maximum number of results to return
            proof_types:
              type: optional<list<string>>
            schema_ids:
              type: optional<list<string>>
              docs: Schema identifiers, all of which to match
            subject_ids:
              type: optional<list<string>>
              docs: Subject identifiers, all of which to match
            tag_query:
              type: optional<map<string, string>>
              docs: Tag filter
            types:
              type: optional<list<string>>
        content-type: application/json
      response:
        docs: ''
        type: root.VCRecordList
        status-code: 200
      examples:
        - request:
            contexts:
              - https://myhost:8021
              - https://myhost:8021
            given_id: given_id
            issuer_id: issuer_id
            max_results: 0
            proof_types:
              - Ed25519Signature2018
              - Ed25519Signature2018
            schema_ids:
              - https://myhost:8021
              - https://myhost:8021
            subject_ids:
              - subject_ids
              - subject_ids
            tag_query:
              key: tag_query
            types:
              - https://myhost:8021
              - https://myhost:8021
          response:
            body:
              results:
                - contexts:
                    - https://myhost:8021
                    - https://myhost:8021
                  cred_tags:
                    key: cred_tags
                  expanded_types:
                    - https://w3id.org/citizenship#PermanentResidentCard
                    - https://w3id.org/citizenship#PermanentResidentCard
                  given_id: http://example.edu/credentials/3732
                  issuer_id: https://example.edu/issuers/14
                  proof_types:
                    - Ed25519Signature2018
                    - Ed25519Signature2018
                  record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  schema_ids:
                    - https://example.org/examples/degree.json
                    - https://example.org/examples/degree.json
                  subject_ids:
                    - did:example:ebfeb1f712ebc6f1c276e12ec21
                    - did:example:ebfeb1f712ebc6f1c276e12ec21
                - contexts:
                    - https://myhost:8021
                    - https://myhost:8021
                  cred_tags:
                    key: cred_tags
                  expanded_types:
                    - https://w3id.org/citizenship#PermanentResidentCard
                    - https://w3id.org/citizenship#PermanentResidentCard
                  given_id: http://example.edu/credentials/3732
                  issuer_id: https://example.edu/issuers/14
                  proof_types:
                    - Ed25519Signature2018
                    - Ed25519Signature2018
                  record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  schema_ids:
                    - https://example.org/examples/degree.json
                    - https://example.org/examples/degree.json
                  subject_ids:
                    - did:example:ebfeb1f712ebc6f1c276e12ec21
                    - did:example:ebfeb1f712ebc6f1c276e12ec21
  source:
    openapi: ../openapi.yml
  display-name: credentials
docs: Holder credential management
",
    },
    "didExchange.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Connection management via DID exchange",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "did-exchange",
          "endpoints": {
            "accept_didex_invitation": {
              "auth": true,
              "display-name": "Accept a stored connection invitation",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/didexchange/{conn_id}/accept-invitation",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "AcceptDidexInvitationRequest",
                "query-parameters": {
                  "my_endpoint": {
                    "docs": "My URL endpoint",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    },
                  },
                  "my_label": {
                    "docs": "Label for connection request",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "accept_didex_request": {
              "auth": true,
              "display-name": "Accept a stored connection request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/didexchange/{conn_id}/accept-request",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "AcceptDidexRequestRequest",
                "query-parameters": {
                  "mediation_id": {
                    "docs": "Identifier for active mediation record to be used",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    },
                  },
                  "my_endpoint": {
                    "docs": "My URL endpoint",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create_didex_request": {
              "auth": true,
              "display-name": "Create and send a request against public DID's implicit invitation",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "their_public_did": "their_public_did",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/didexchange/create-request",
              "request": {
                "name": "CreateDidexRequestRequest",
                "query-parameters": {
                  "alias": {
                    "docs": "Alias for connection",
                    "type": "optional<string>",
                  },
                  "mediation_id": {
                    "docs": "Identifier for active mediation record to be used",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    },
                  },
                  "my_endpoint": {
                    "docs": "My URL endpoint",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    },
                  },
                  "my_label": {
                    "docs": "Label for connection request",
                    "type": "optional<string>",
                  },
                  "their_public_did": {
                    "docs": "Qualified public DID to which to request connection",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$",
                    },
                  },
                  "use_public_did": {
                    "docs": "Use public DID for this connection",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "receive_didex_request": {
              "auth": true,
              "display-name": "Receive request against public DID's implicit invitation",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "did": "WgWxqztrNooG92RXvxSTWv",
                    "label": "Request to connect with Bob",
                  },
                  "response": {
                    "body": {
                      "accept": "auto",
                      "alias": "Bob, providing quotes",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_protocol": "connections/1.0",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "No DIDDoc provided; cannot connect to public DID",
                      "inbound_connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_key": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "invitation_mode": "once",
                      "invitation_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "my_did": "WgWxqztrNooG92RXvxSTWv",
                      "request_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "rfc23_state": "invitation-sent",
                      "routing_state": "active",
                      "state": "active",
                      "their_did": "WgWxqztrNooG92RXvxSTWv",
                      "their_label": "Bob",
                      "their_public_did": "2cpBmR3FqGKWi5EyUbpRY8",
                      "their_role": "requester",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/didexchange/receive-request",
              "request": {
                "body": {
                  "properties": {
                    "@id": {
                      "docs": "Message identifier",
                      "type": "optional<string>",
                    },
                    "did": {
                      "docs": "DID of exchange",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "did_doc~attach": {
                      "type": "optional<root.DidxRequestDidDocAttach>",
                    },
                    "label": {
                      "docs": "Label for DID exchange request",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "DIDXRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "alias": {
                    "docs": "Alias for connection",
                    "type": "optional<string>",
                  },
                  "auto_accept": {
                    "docs": "Auto-accept connection (defaults to configuration)",
                    "type": "optional<boolean>",
                  },
                  "mediation_id": {
                    "docs": "Identifier for active mediation record to be used",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    },
                  },
                  "my_endpoint": {
                    "docs": "My URL endpoint",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ConnRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_didex_request:
      path: /didexchange/create-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create and send a request against public DID's implicit invitation
      request:
        name: CreateDidexRequestRequest
        query-parameters:
          their_public_did:
            type: string
            docs: Qualified public DID to which to request connection
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$
          alias:
            type: optional<string>
            docs: Alias for connection
          mediation_id:
            type: optional<string>
            docs: Identifier for active mediation record to be used
            validation:
              pattern: >-
                [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          my_endpoint:
            type: optional<string>
            docs: My URL endpoint
            validation:
              pattern: >-
                ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          my_label:
            type: optional<string>
            docs: Label for connection request
          use_public_did:
            type: optional<boolean>
            docs: Use public DID for this connection
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - query-parameters:
            their_public_did: their_public_did
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
    receive_didex_request:
      path: /didexchange/receive-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Receive request against public DID's implicit invitation
      request:
        name: DIDXRequest
        query-parameters:
          alias:
            type: optional<string>
            docs: Alias for connection
          auto_accept:
            type: optional<boolean>
            docs: Auto-accept connection (defaults to configuration)
          mediation_id:
            type: optional<string>
            docs: Identifier for active mediation record to be used
            validation:
              pattern: >-
                [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          my_endpoint:
            type: optional<string>
            docs: My URL endpoint
            validation:
              pattern: >-
                ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
        body:
          properties:
            '@id':
              type: optional<string>
              docs: Message identifier
            did:
              type: optional<string>
              docs: DID of exchange
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            did_doc~attach:
              type: optional<root.DidxRequestDidDocAttach>
            label:
              type: string
              docs: Label for DID exchange request
        content-type: application/json
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - request:
            '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
            did: WgWxqztrNooG92RXvxSTWv
            label: Request to connect with Bob
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
    accept_didex_invitation:
      path: /didexchange/{conn_id}/accept-invitation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Accept a stored connection invitation
      request:
        name: AcceptDidexInvitationRequest
        query-parameters:
          my_endpoint:
            type: optional<string>
            docs: My URL endpoint
            validation:
              pattern: >-
                ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          my_label:
            type: optional<string>
            docs: Label for connection request
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
    accept_didex_request:
      path: /didexchange/{conn_id}/accept-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Accept a stored connection request
      request:
        name: AcceptDidexRequestRequest
        query-parameters:
          mediation_id:
            type: optional<string>
            docs: Identifier for active mediation record to be used
            validation:
              pattern: >-
                [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          my_endpoint:
            type: optional<string>
            docs: My URL endpoint
            validation:
              pattern: >-
                ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
      response:
        docs: ''
        type: root.ConnRecord
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              accept: auto
              alias: Bob, providing quotes
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_protocol: connections/1.0
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: No DIDDoc provided; cannot connect to public DID
              inbound_connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_key: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
              invitation_mode: once
              invitation_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              my_did: WgWxqztrNooG92RXvxSTWv
              request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              rfc23_state: invitation-sent
              routing_state: active
              state: active
              their_did: WgWxqztrNooG92RXvxSTWv
              their_label: Bob
              their_public_did: 2cpBmR3FqGKWi5EyUbpRY8
              their_role: requester
              updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: did-exchange
docs: Connection management via DID exchange
",
    },
    "discoverFeatures.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Feature discovery",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "discover-features",
          "endpoints": {
            "get_v10_feature_records": {
              "auth": true,
              "display-name": "Discover Features records",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "discovery_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "state": "active",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                        {
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "discovery_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "state": "active",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/discover-features/records",
              "request": {
                "name": "GetV10FeatureRecordsRequest",
                "query-parameters": {
                  "connection_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10DiscoveryExchangeListResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_v10_features_query": {
              "auth": true,
              "display-name": "Query supported features",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "discovery_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/discover-features/query",
              "request": {
                "name": "GetV10FeaturesQueryRequest",
                "query-parameters": {
                  "comment": {
                    "docs": "Comment",
                    "type": "optional<string>",
                  },
                  "connection_id": {
                    "docs": "Connection identifier, if none specified, then the query will provide features for this agent.",
                    "type": "optional<string>",
                  },
                  "query": {
                    "docs": "Protocol feature query",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10DiscoveryRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_v10_features_query:
      path: /discover-features/query
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Query supported features
      request:
        name: GetV10FeaturesQueryRequest
        query-parameters:
          comment:
            type: optional<string>
            docs: Comment
          connection_id:
            type: optional<string>
            docs: >-
              Connection identifier, if none specified, then the query will
              provide features for this agent.
          query:
            type: optional<string>
            docs: Protocol feature query
      response:
        docs: ''
        type: root.V10DiscoveryRecord
        status-code: 200
      examples:
        - response:
            body:
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              discovery_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    get_v10_feature_records:
      path: /discover-features/records
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Discover Features records
      request:
        name: GetV10FeatureRecordsRequest
        query-parameters:
          connection_id:
            type: optional<string>
            docs: Connection identifier
      response:
        docs: ''
        type: root.V10DiscoveryExchangeListResult
        status-code: 200
      examples:
        - response:
            body:
              results:
                - connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  discovery_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  state: active
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
                - connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  discovery_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  state: active
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: discover-features
docs: Feature discovery
",
    },
    "discoverFeaturesV20.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Feature discovery v2",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "discover-features v2.0",
          "endpoints": {
            "get_v20_feature_records": {
              "auth": true,
              "display-name": "Discover Features v2.0 records",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "disclosures": {
                            "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                            "disclosures": [
                              {
                                "key": "value",
                              },
                            ],
                          },
                          "discovery_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "queries_msg": {
                            "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                          },
                          "state": "active",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                        {
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "disclosures": {
                            "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                            "disclosures": [
                              {
                                "key": "value",
                              },
                            ],
                          },
                          "discovery_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "queries_msg": {
                            "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                          },
                          "state": "active",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/discover-features-2.0/records",
              "request": {
                "name": "GetV20FeatureRecordsRequest",
                "query-parameters": {
                  "connection_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20DiscoveryExchangeListResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_v20_features_queries": {
              "auth": true,
              "display-name": "Query supported features",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/discover-features-2.0/queries",
              "request": {
                "name": "GetV20FeaturesQueriesRequest",
                "query-parameters": {
                  "connection_id": {
                    "docs": "Connection identifier, if none specified, then the query will provide features for this agent.",
                    "type": "optional<string>",
                  },
                  "query_goal_code": {
                    "docs": "Goal-code feature-type query",
                    "type": "optional<string>",
                  },
                  "query_protocol": {
                    "docs": "Protocol feature-type query",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20DiscoveryExchangeResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_v20_features_queries:
      path: /discover-features-2.0/queries
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Query supported features
      request:
        name: GetV20FeaturesQueriesRequest
        query-parameters:
          connection_id:
            type: optional<string>
            docs: >-
              Connection identifier, if none specified, then the query will
              provide features for this agent.
          query_goal_code:
            type: optional<string>
            docs: Goal-code feature-type query
          query_protocol:
            type: optional<string>
            docs: Protocol feature-type query
      response:
        docs: ''
        type: root.V20DiscoveryExchangeResult
        status-code: 200
      examples:
        - response:
            body: {}
    get_v20_feature_records:
      path: /discover-features-2.0/records
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Discover Features v2.0 records
      request:
        name: GetV20FeatureRecordsRequest
        query-parameters:
          connection_id:
            type: optional<string>
            docs: Connection identifier
      response:
        docs: ''
        type: root.V20DiscoveryExchangeListResult
        status-code: 200
      examples:
        - response:
            body:
              results:
                - connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  disclosures:
                    '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    '@type': https://didcomm.org/my-family/1.0/my-message-type
                    disclosures:
                      - key: value
                  discovery_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  queries_msg:
                    '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    '@type': https://didcomm.org/my-family/1.0/my-message-type
                  state: active
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
                - connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  disclosures:
                    '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    '@type': https://didcomm.org/my-family/1.0/my-message-type
                    disclosures:
                      - key: value
                  discovery_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  queries_msg:
                    '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    '@type': https://didcomm.org/my-family/1.0/my-message-type
                  state: active
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: discover-features v2.0
docs: Feature discovery v2
",
    },
    "endorseTransaction.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Endorse a Transaction",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "endorse-transaction",
          "endpoints": {
            "cancel_transaction_request": {
              "auth": true,
              "display-name": "For Author to cancel a particular transaction request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "tran_id": "tran_id",
                  },
                  "response": {
                    "body": {
                      "_type": "101",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endorser_write_txn": true,
                      "formats": [
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                      ],
                      "messages_attach": [
                        {},
                        {},
                      ],
                      "signature_request": [
                        {},
                        {},
                      ],
                      "signature_response": [
                        {},
                        {},
                      ],
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transactions/{tran_id}/cancel",
              "path-parameters": {
                "tran_id": {
                  "docs": "Transaction identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create_transaction_request": {
              "auth": true,
              "display-name": "For author to send a transaction request",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "tran_id": "tran_id",
                  },
                  "request": {
                    "expires_time": "2021-03-29T05:22:19Z",
                  },
                  "response": {
                    "body": {
                      "_type": "101",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endorser_write_txn": true,
                      "formats": [
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                      ],
                      "messages_attach": [
                        {},
                        {},
                      ],
                      "signature_request": [
                        {},
                        {},
                      ],
                      "signature_response": [
                        {},
                        {},
                      ],
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transactions/create-request",
              "request": {
                "body": {
                  "properties": {
                    "expires_time": {
                      "docs": "Expiry Date",
                      "type": "datetime",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "Date",
                "path-parameters": undefined,
                "query-parameters": {
                  "endorser_write_txn": {
                    "docs": "Endorser will write the transaction after endorsing it",
                    "type": "optional<boolean>",
                  },
                  "tran_id": {
                    "docs": "Transaction identifier",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_transaction_list": {
              "auth": true,
              "display-name": "Query transactions",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "_type": "101",
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "endorser_write_txn": true,
                          "formats": [
                            {
                              "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "format": "dif/endorse-transaction/request@v1.0",
                            },
                            {
                              "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "format": "dif/endorse-transaction/request@v1.0",
                            },
                          ],
                          "messages_attach": [
                            {},
                            {},
                          ],
                          "signature_request": [
                            {},
                            {},
                          ],
                          "signature_response": [
                            {},
                            {},
                          ],
                          "state": "active",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                        {
                          "_type": "101",
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "endorser_write_txn": true,
                          "formats": [
                            {
                              "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "format": "dif/endorse-transaction/request@v1.0",
                            },
                            {
                              "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "format": "dif/endorse-transaction/request@v1.0",
                            },
                          ],
                          "messages_attach": [
                            {},
                            {},
                          ],
                          "signature_request": [
                            {},
                            {},
                          ],
                          "signature_response": [
                            {},
                            {},
                          ],
                          "state": "active",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transactions",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_transaction_record": {
              "auth": true,
              "display-name": "Fetch a single transaction record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "tran_id": "tran_id",
                  },
                  "response": {
                    "body": {
                      "_type": "101",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endorser_write_txn": true,
                      "formats": [
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                      ],
                      "messages_attach": [
                        {},
                        {},
                      ],
                      "signature_request": [
                        {},
                        {},
                      ],
                      "signature_response": [
                        {},
                        {},
                      ],
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transactions/{tran_id}",
              "path-parameters": {
                "tran_id": {
                  "docs": "Transaction identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish_endorsed_transaction": {
              "auth": true,
              "display-name": "For Author / Endorser to write an endorsed transaction to the ledger",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "tran_id": "tran_id",
                  },
                  "response": {
                    "body": {
                      "_type": "101",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endorser_write_txn": true,
                      "formats": [
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                      ],
                      "messages_attach": [
                        {},
                        {},
                      ],
                      "signature_request": [
                        {},
                        {},
                      ],
                      "signature_response": [
                        {},
                        {},
                      ],
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transactions/{tran_id}/write",
              "path-parameters": {
                "tran_id": {
                  "docs": "Transaction identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "refuse_transaction": {
              "auth": true,
              "display-name": "For Endorser to refuse a particular transaction record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "tran_id": "tran_id",
                  },
                  "response": {
                    "body": {
                      "_type": "101",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endorser_write_txn": true,
                      "formats": [
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                      ],
                      "messages_attach": [
                        {},
                        {},
                      ],
                      "signature_request": [
                        {},
                        {},
                      ],
                      "signature_response": [
                        {},
                        {},
                      ],
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transactions/{tran_id}/refuse",
              "path-parameters": {
                "tran_id": {
                  "docs": "Transaction identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "resend_transaction_request": {
              "auth": true,
              "display-name": "For Author to resend a particular transaction request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "tran_id": "tran_id",
                  },
                  "response": {
                    "body": {
                      "_type": "101",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endorser_write_txn": true,
                      "formats": [
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                        {
                          "attach_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "format": "dif/endorse-transaction/request@v1.0",
                        },
                      ],
                      "messages_attach": [
                        {},
                        {},
                      ],
                      "signature_request": [
                        {},
                        {},
                      ],
                      "signature_response": [
                        {},
                        {},
                      ],
                      "state": "active",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "transaction_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transaction/{tran_id}/resend",
              "path-parameters": {
                "tran_id": {
                  "docs": "Transaction identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_endorser_info_for_conn_id": {
              "auth": true,
              "display-name": "Set Endorser Info",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "query-parameters": {
                    "endorser_did": "endorser_did",
                  },
                  "response": {
                    "body": {
                      "endorser_did": "endorser_did",
                      "endorser_name": "endorser_name",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transactions/{conn_id}/set-endorser-info",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "SetEndorserInfoForConnIdRequest",
                "query-parameters": {
                  "endorser_did": {
                    "docs": "Endorser DID",
                    "type": "string",
                  },
                  "endorser_name": {
                    "docs": "Endorser Name",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.EndorserInfo",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_endorser_role_for_conn_id": {
              "auth": true,
              "display-name": "Set transaction jobs",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "response": {
                    "body": {
                      "transaction_my_job": "TRANSACTION_AUTHOR",
                      "transaction_their_job": "TRANSACTION_AUTHOR",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/transactions/{conn_id}/set-endorser-role",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "SetEndorserRoleForConnIdRequest",
                "query-parameters": {
                  "transaction_my_job": {
                    "docs": "Transaction related jobs",
                    "type": "optional<SetEndorserRoleForConnIdRequestTransactionMyJob>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TransactionJobs",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "SetEndorserRoleForConnIdRequestTransactionMyJob": {
            "enum": [
              "TRANSACTION_AUTHOR",
              "TRANSACTION_ENDORSER",
              "reset",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    resend_transaction_request:
      path: /transaction/{tran_id}/resend
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        tran_id:
          type: string
          docs: Transaction identifier
      display-name: For Author to resend a particular transaction request
      response:
        docs: ''
        type: root.TransactionRecord
        status-code: 200
      examples:
        - path-parameters:
            tran_id: tran_id
          response:
            body:
              _type: '101'
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              endorser_write_txn: true
              formats:
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
              messages_attach:
                - {}
                - {}
              signature_request:
                - {}
                - {}
              signature_response:
                - {}
                - {}
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              updated_at: '2021-12-31 23:59:59+00:00'
    get_transaction_list:
      path: /transactions
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Query transactions
      response:
        docs: ''
        type: root.TransactionList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - _type: '101'
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  endorser_write_txn: true
                  formats:
                    - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      format: dif/endorse-transaction/request@v1.0
                    - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      format: dif/endorse-transaction/request@v1.0
                  messages_attach:
                    - {}
                    - {}
                  signature_request:
                    - {}
                    - {}
                  signature_response:
                    - {}
                    - {}
                  state: active
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  updated_at: '2021-12-31 23:59:59+00:00'
                - _type: '101'
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  endorser_write_txn: true
                  formats:
                    - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      format: dif/endorse-transaction/request@v1.0
                    - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      format: dif/endorse-transaction/request@v1.0
                  messages_attach:
                    - {}
                    - {}
                  signature_request:
                    - {}
                    - {}
                  signature_response:
                    - {}
                    - {}
                  state: active
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  updated_at: '2021-12-31 23:59:59+00:00'
    create_transaction_request:
      path: /transactions/create-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: For author to send a transaction request
      request:
        name: Date
        query-parameters:
          tran_id:
            type: string
            docs: Transaction identifier
          endorser_write_txn:
            type: optional<boolean>
            docs: Endorser will write the transaction after endorsing it
        body:
          properties:
            expires_time:
              type: datetime
              docs: Expiry Date
        content-type: application/json
      response:
        docs: ''
        type: root.TransactionRecord
        status-code: 200
      examples:
        - query-parameters:
            tran_id: tran_id
          request:
            expires_time: '2021-03-29T05:22:19Z'
          response:
            body:
              _type: '101'
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              endorser_write_txn: true
              formats:
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
              messages_attach:
                - {}
                - {}
              signature_request:
                - {}
                - {}
              signature_response:
                - {}
                - {}
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              updated_at: '2021-12-31 23:59:59+00:00'
    set_endorser_info_for_conn_id:
      path: /transactions/{conn_id}/set-endorser-info
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Set Endorser Info
      request:
        name: SetEndorserInfoForConnIdRequest
        query-parameters:
          endorser_did:
            type: string
            docs: Endorser DID
          endorser_name:
            type: optional<string>
            docs: Endorser Name
      response:
        docs: ''
        type: root.EndorserInfo
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          query-parameters:
            endorser_did: endorser_did
          response:
            body:
              endorser_did: endorser_did
              endorser_name: endorser_name
    set_endorser_role_for_conn_id:
      path: /transactions/{conn_id}/set-endorser-role
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Set transaction jobs
      request:
        name: SetEndorserRoleForConnIdRequest
        query-parameters:
          transaction_my_job:
            type: optional<SetEndorserRoleForConnIdRequestTransactionMyJob>
            docs: Transaction related jobs
      response:
        docs: ''
        type: root.TransactionJobs
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          response:
            body:
              transaction_my_job: TRANSACTION_AUTHOR
              transaction_their_job: TRANSACTION_AUTHOR
    get_transaction_record:
      path: /transactions/{tran_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        tran_id:
          type: string
          docs: Transaction identifier
      display-name: Fetch a single transaction record
      response:
        docs: ''
        type: root.TransactionRecord
        status-code: 200
      examples:
        - path-parameters:
            tran_id: tran_id
          response:
            body:
              _type: '101'
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              endorser_write_txn: true
              formats:
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
              messages_attach:
                - {}
                - {}
              signature_request:
                - {}
                - {}
              signature_response:
                - {}
                - {}
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              updated_at: '2021-12-31 23:59:59+00:00'
    cancel_transaction_request:
      path: /transactions/{tran_id}/cancel
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        tran_id:
          type: string
          docs: Transaction identifier
      display-name: For Author to cancel a particular transaction request
      response:
        docs: ''
        type: root.TransactionRecord
        status-code: 200
      examples:
        - path-parameters:
            tran_id: tran_id
          response:
            body:
              _type: '101'
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              endorser_write_txn: true
              formats:
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
              messages_attach:
                - {}
                - {}
              signature_request:
                - {}
                - {}
              signature_response:
                - {}
                - {}
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              updated_at: '2021-12-31 23:59:59+00:00'
    refuse_transaction:
      path: /transactions/{tran_id}/refuse
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        tran_id:
          type: string
          docs: Transaction identifier
      display-name: For Endorser to refuse a particular transaction record
      response:
        docs: ''
        type: root.TransactionRecord
        status-code: 200
      examples:
        - path-parameters:
            tran_id: tran_id
          response:
            body:
              _type: '101'
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              endorser_write_txn: true
              formats:
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
              messages_attach:
                - {}
                - {}
              signature_request:
                - {}
                - {}
              signature_response:
                - {}
                - {}
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              updated_at: '2021-12-31 23:59:59+00:00'
    publish_endorsed_transaction:
      path: /transactions/{tran_id}/write
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        tran_id:
          type: string
          docs: Transaction identifier
      display-name: For Author / Endorser to write an endorsed transaction to the ledger
      response:
        docs: ''
        type: root.TransactionRecord
        status-code: 200
      examples:
        - path-parameters:
            tran_id: tran_id
          response:
            body:
              _type: '101'
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              endorser_write_txn: true
              formats:
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
                - attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  format: dif/endorse-transaction/request@v1.0
              messages_attach:
                - {}
                - {}
              signature_request:
                - {}
                - {}
              signature_response:
                - {}
                - {}
              state: active
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              transaction_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: endorse-transaction
docs: Endorse a Transaction
types:
  SetEndorserRoleForConnIdRequestTransactionMyJob:
    enum:
      - TRANSACTION_AUTHOR
      - TRANSACTION_ENDORSER
      - reset
    source:
      openapi: ../openapi.yml
",
    },
    "introduction.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Introduction of known parties",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "introduction",
          "endpoints": {
            "start_connection_introduction": {
              "auth": true,
              "display-name": "Start an introduction between two connections",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "query-parameters": {
                    "target_connection_id": "target_connection_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/{conn_id}/start-introduction",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "StartConnectionIntroductionRequest",
                "query-parameters": {
                  "message": {
                    "docs": "Message",
                    "type": "optional<string>",
                  },
                  "target_connection_id": {
                    "docs": "Target connection identifier",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.IntroModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    start_connection_introduction:
      path: /connections/{conn_id}/start-introduction
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Start an introduction between two connections
      request:
        name: StartConnectionIntroductionRequest
        query-parameters:
          target_connection_id:
            type: string
            docs: Target connection identifier
          message:
            type: optional<string>
            docs: Message
      response:
        docs: ''
        type: root.IntroModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          query-parameters:
            target_connection_id: target_connection_id
          response:
            body:
              key: value
  source:
    openapi: ../openapi.yml
  display-name: introduction
docs: Introduction of known parties
",
    },
    "issueCredentialV10.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Credential issue v1.0",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "issue-credential v1.0",
          "endpoints": {
            "create_credential_record": {
              "auth": true,
              "display-name": "Create a credential record without sending (generally for use with Out-Of-Band)",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_remove": true,
                    "comment": "comment",
                    "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "credential_proposal": {
                      "@type": "issue-credential/1.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                    "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "schema_issuer_did": "WgWxqztrNooG92RXvxSTWv",
                    "schema_name": "preferences",
                    "schema_version": "1.0",
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/create",
              "request": {
                "body": {
                  "properties": {
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "cred_def_id": {
                      "docs": "Credential definition identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                      },
                    },
                    "credential_proposal": {
                      "type": "root.CredentialPreview",
                    },
                    "issuer_did": {
                      "docs": "Credential issuer DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "schema_id": {
                      "docs": "Schema identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                      },
                    },
                    "schema_issuer_did": {
                      "docs": "Schema issuer DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "schema_name": {
                      "docs": "Schema name",
                      "type": "optional<string>",
                    },
                    "schema_version": {
                      "docs": "Schema version",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[0-9.]+$",
                      },
                    },
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialCreate",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create_free_credential_offer": {
              "auth": true,
              "display-name": "Create a credential offer, independent of any proposal or connection",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_issue": true,
                    "auto_remove": true,
                    "comment": "comment",
                    "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "credential_preview": {
                      "@type": "issue-credential/1.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/create-offer",
              "request": {
                "body": {
                  "properties": {
                    "auto_issue": {
                      "docs": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                      "type": "optional<boolean>",
                    },
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "cred_def_id": {
                      "docs": "Credential definition identifier",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                      },
                    },
                    "credential_preview": {
                      "type": "root.CredentialPreview",
                    },
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialConnFreeOfferRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_cred_ex_record": {
              "auth": true,
              "display-name": "Remove an existing credential exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/issue-credential/records/{cred_ex_id}",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.IssueCredentialModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_cred_ex_record": {
              "auth": true,
              "display-name": "Fetch a single credential exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issue-credential/records/{cred_ex_id}",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_matching_cred_ex_records": {
              "auth": true,
              "display-name": "Fetch all credential exchange records",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "auto_issue": false,
                          "auto_offer": false,
                          "auto_remove": false,
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "error_msg": "Credential definition identifier is not set in proposal",
                          "initiator": "self",
                          "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "revoc_reg_id": "revoc_reg_id",
                          "revocation_id": "revocation_id",
                          "role": "issuer",
                          "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                          "state": "credential_acked",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                        {
                          "auto_issue": false,
                          "auto_offer": false,
                          "auto_remove": false,
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "error_msg": "Credential definition identifier is not set in proposal",
                          "initiator": "self",
                          "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "revoc_reg_id": "revoc_reg_id",
                          "revocation_id": "revocation_id",
                          "role": "issuer",
                          "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                          "state": "credential_acked",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issue-credential/records",
              "request": {
                "name": "GetMatchingCredExRecordsRequest",
                "query-parameters": {
                  "connection_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "role": {
                    "docs": "Role assigned in credential exchange",
                    "type": "optional<GetMatchingCredExRecordsRequestRole>",
                  },
                  "state": {
                    "docs": "Credential exchange state",
                    "type": "optional<GetMatchingCredExRecordsRequestState>",
                  },
                  "thread_id": {
                    "docs": "Thread identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchangeListResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "issue_credential_to_holder": {
              "auth": true,
              "display-name": "Send holder a credential",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {
                    "comment": "comment",
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/records/{cred_ex_id}/issue",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialIssueRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "report_cred_ex_problem": {
              "auth": true,
              "display-name": "Send a problem report for credential exchange",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {
                    "description": "description",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/records/{cred_ex_id}/problem-report",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "description": "string",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialProblemReportRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.IssueCredentialModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_credential_offer": {
              "auth": true,
              "display-name": "Send holder a credential offer in reference to a proposal with preview",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/records/{cred_ex_id}/send-offer",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "counter_proposal": {
                      "type": "optional<root.V10CredentialBoundOfferRequestCounterProposal>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialBoundOfferRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_credential_request": {
              "auth": true,
              "display-name": "Send issuer a credential request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/records/{cred_ex_id}/send-request",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_credential": {
              "auth": true,
              "display-name": "Send holder a credential, automating entire flow",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_remove": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "credential_proposal": {
                      "@type": "issue-credential/1.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                    "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "schema_issuer_did": "WgWxqztrNooG92RXvxSTWv",
                    "schema_name": "preferences",
                    "schema_version": "1.0",
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/send",
              "request": {
                "body": {
                  "properties": {
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "cred_def_id": {
                      "docs": "Credential definition identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                      },
                    },
                    "credential_proposal": {
                      "type": "root.CredentialPreview",
                    },
                    "issuer_did": {
                      "docs": "Credential issuer DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "schema_id": {
                      "docs": "Schema identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                      },
                    },
                    "schema_issuer_did": {
                      "docs": "Schema issuer DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "schema_name": {
                      "docs": "Schema name",
                      "type": "optional<string>",
                    },
                    "schema_version": {
                      "docs": "Schema version",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[0-9.]+$",
                      },
                    },
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialProposalRequestMand",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_credential_offer": {
              "auth": true,
              "display-name": "Send holder a credential offer, independent of any proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_issue": true,
                    "auto_remove": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "credential_preview": {
                      "@type": "issue-credential/1.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/send-offer",
              "request": {
                "body": {
                  "properties": {
                    "auto_issue": {
                      "docs": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                      "type": "optional<boolean>",
                    },
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "cred_def_id": {
                      "docs": "Credential definition identifier",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                      },
                    },
                    "credential_preview": {
                      "type": "root.CredentialPreview",
                    },
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialFreeOfferRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_credential_proposal": {
              "auth": true,
              "display-name": "Send issuer a credential proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_remove": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "credential_proposal": {
                      "@type": "issue-credential/1.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                    "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "schema_issuer_did": "WgWxqztrNooG92RXvxSTWv",
                    "schema_name": "preferences",
                    "schema_version": "1.0",
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/send-proposal",
              "request": {
                "body": {
                  "properties": {
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "cred_def_id": {
                      "docs": "Credential definition identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                      },
                    },
                    "credential_proposal": {
                      "type": "optional<root.CredentialPreview>",
                    },
                    "issuer_did": {
                      "docs": "Credential issuer DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "schema_id": {
                      "docs": "Schema identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                      },
                    },
                    "schema_issuer_did": {
                      "docs": "Schema issuer DID",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "schema_name": {
                      "docs": "Schema name",
                      "type": "optional<string>",
                    },
                    "schema_version": {
                      "docs": "Schema version",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[0-9.]+$",
                      },
                    },
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialProposalRequestOpt",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "store_received_credential": {
              "auth": true,
              "display-name": "Store a received credential",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "credential_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "credential_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "Credential definition identifier is not set in proposal",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "revoc_reg_id": "revoc_reg_id",
                      "revocation_id": "revocation_id",
                      "role": "issuer",
                      "schema_id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      "state": "credential_acked",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential/records/{cred_ex_id}/store",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "credential_id": {
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10CredentialStoreRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10CredentialExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetMatchingCredExRecordsRequestRole": {
            "enum": [
              "issuer",
              "holder",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingCredExRecordsRequestState": {
            "enum": [
              "proposal_sent",
              "proposal_received",
              "offer_sent",
              "offer_received",
              "request_sent",
              "request_received",
              "credential_issued",
              "credential_received",
              "credential_acked",
              "credential_revoked",
              "abandoned",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_credential_record:
      path: /issue-credential/create
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: >-
        Create a credential record without sending (generally for use with
        Out-Of-Band)
      request:
        name: V10CredentialCreate
        body:
          properties:
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            cred_def_id:
              type: optional<string>
              docs: Credential definition identifier
              validation:
                pattern: >-
                  ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            credential_proposal:
              type: root.CredentialPreview
            issuer_did:
              type: optional<string>
              docs: Credential issuer DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            schema_id:
              type: optional<string>
              docs: Schema identifier
              validation:
                pattern: >-
                  ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
            schema_issuer_did:
              type: optional<string>
              docs: Schema issuer DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            schema_name:
              type: optional<string>
              docs: Schema name
            schema_version:
              type: optional<string>
              docs: Schema version
              validation:
                pattern: ^[0-9.]+$
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - request:
            auto_remove: true
            comment: comment
            cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
            credential_proposal:
              '@type': issue-credential/1.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            issuer_did: WgWxqztrNooG92RXvxSTWv
            schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
            schema_issuer_did: WgWxqztrNooG92RXvxSTWv
            schema_name: preferences
            schema_version: '1.0'
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    create_free_credential_offer:
      path: /issue-credential/create-offer
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a credential offer, independent of any proposal or connection
      request:
        name: V10CredentialConnFreeOfferRequest
        body:
          properties:
            auto_issue:
              type: optional<boolean>
              docs: >-
                Whether to respond automatically to credential requests,
                creating and issuing requested credentials
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            cred_def_id:
              type: string
              docs: Credential definition identifier
              validation:
                pattern: >-
                  ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            credential_preview:
              type: root.CredentialPreview
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - request:
            auto_issue: true
            auto_remove: true
            comment: comment
            cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
            credential_preview:
              '@type': issue-credential/1.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    get_matching_cred_ex_records:
      path: /issue-credential/records
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch all credential exchange records
      request:
        name: GetMatchingCredExRecordsRequest
        query-parameters:
          connection_id:
            type: optional<string>
            docs: Connection identifier
            validation:
              format: uuid
          role:
            type: optional<GetMatchingCredExRecordsRequestRole>
            docs: Role assigned in credential exchange
          state:
            type: optional<GetMatchingCredExRecordsRequestState>
            docs: Credential exchange state
          thread_id:
            type: optional<string>
            docs: Thread identifier
            validation:
              format: uuid
      response:
        docs: ''
        type: root.V10CredentialExchangeListResult
        status-code: 200
      examples:
        - response:
            body:
              results:
                - auto_issue: false
                  auto_offer: false
                  auto_remove: false
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  error_msg: Credential definition identifier is not set in proposal
                  initiator: self
                  parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  revoc_reg_id: revoc_reg_id
                  revocation_id: revocation_id
                  role: issuer
                  schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
                  state: credential_acked
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
                - auto_issue: false
                  auto_offer: false
                  auto_remove: false
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  error_msg: Credential definition identifier is not set in proposal
                  initiator: self
                  parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  revoc_reg_id: revoc_reg_id
                  revocation_id: revocation_id
                  role: issuer
                  schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
                  state: credential_acked
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
    get_cred_ex_record:
      path: /issue-credential/records/{cred_ex_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Fetch a single credential exchange record
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    delete_cred_ex_record:
      path: /issue-credential/records/{cred_ex_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Remove an existing credential exchange record
      response:
        docs: ''
        type: root.IssueCredentialModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          response:
            body:
              key: value
    issue_credential_to_holder:
      path: /issue-credential/records/{cred_ex_id}/issue
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send holder a credential
      request:
        name: V10CredentialIssueRequest
        body:
          properties:
            comment:
              type: optional<string>
              docs: Human-readable comment
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request:
            comment: comment
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    report_cred_ex_problem:
      path: /issue-credential/records/{cred_ex_id}/problem-report
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send a problem report for credential exchange
      request:
        name: V10CredentialProblemReportRequest
        body:
          properties:
            description: string
        content-type: application/json
      response:
        docs: ''
        type: root.IssueCredentialModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request:
            description: description
          response:
            body:
              key: value
    send_credential_offer:
      path: /issue-credential/records/{cred_ex_id}/send-offer
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send holder a credential offer in reference to a proposal with preview
      request:
        name: V10CredentialBoundOfferRequest
        body:
          properties:
            counter_proposal:
              type: optional<root.V10CredentialBoundOfferRequestCounterProposal>
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request: {}
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_credential_request:
      path: /issue-credential/records/{cred_ex_id}/send-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send issuer a credential request
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    store_received_credential:
      path: /issue-credential/records/{cred_ex_id}/store
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Store a received credential
      request:
        name: V10CredentialStoreRequest
        body:
          properties:
            credential_id:
              type: optional<string>
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request:
            credential_id: credential_id
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_free_credential:
      path: /issue-credential/send
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Send holder a credential, automating entire flow
      request:
        name: V10CredentialProposalRequestMand
        body:
          properties:
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            cred_def_id:
              type: optional<string>
              docs: Credential definition identifier
              validation:
                pattern: >-
                  ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            credential_proposal:
              type: root.CredentialPreview
            issuer_did:
              type: optional<string>
              docs: Credential issuer DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            schema_id:
              type: optional<string>
              docs: Schema identifier
              validation:
                pattern: >-
                  ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
            schema_issuer_did:
              type: optional<string>
              docs: Schema issuer DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            schema_name:
              type: optional<string>
              docs: Schema name
            schema_version:
              type: optional<string>
              docs: Schema version
              validation:
                pattern: ^[0-9.]+$
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - request:
            auto_remove: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
            credential_proposal:
              '@type': issue-credential/1.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            issuer_did: WgWxqztrNooG92RXvxSTWv
            schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
            schema_issuer_did: WgWxqztrNooG92RXvxSTWv
            schema_name: preferences
            schema_version: '1.0'
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_free_credential_offer:
      path: /issue-credential/send-offer
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Send holder a credential offer, independent of any proposal
      request:
        name: V10CredentialFreeOfferRequest
        body:
          properties:
            auto_issue:
              type: optional<boolean>
              docs: >-
                Whether to respond automatically to credential requests,
                creating and issuing requested credentials
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            cred_def_id:
              type: string
              docs: Credential definition identifier
              validation:
                pattern: >-
                  ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            credential_preview:
              type: root.CredentialPreview
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - request:
            auto_issue: true
            auto_remove: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
            credential_preview:
              '@type': issue-credential/1.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_free_credential_proposal:
      path: /issue-credential/send-proposal
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Send issuer a credential proposal
      request:
        name: V10CredentialProposalRequestOpt
        body:
          properties:
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            cred_def_id:
              type: optional<string>
              docs: Credential definition identifier
              validation:
                pattern: >-
                  ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            credential_proposal:
              type: optional<root.CredentialPreview>
            issuer_did:
              type: optional<string>
              docs: Credential issuer DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            schema_id:
              type: optional<string>
              docs: Schema identifier
              validation:
                pattern: >-
                  ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
            schema_issuer_did:
              type: optional<string>
              docs: Schema issuer DID
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            schema_name:
              type: optional<string>
              docs: Schema name
            schema_version:
              type: optional<string>
              docs: Schema version
              validation:
                pattern: ^[0-9.]+$
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V10CredentialExchange
        status-code: 200
      examples:
        - request:
            auto_remove: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
            credential_proposal:
              '@type': issue-credential/1.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            issuer_did: WgWxqztrNooG92RXvxSTWv
            schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
            schema_issuer_did: WgWxqztrNooG92RXvxSTWv
            schema_name: preferences
            schema_version: '1.0'
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              credential_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              credential_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: Credential definition identifier is not set in proposal
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              revoc_reg_id: revoc_reg_id
              revocation_id: revocation_id
              role: issuer
              schema_id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
              state: credential_acked
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: issue-credential v1.0
docs: Credential issue v1.0
types:
  GetMatchingCredExRecordsRequestRole:
    enum:
      - issuer
      - holder
    source:
      openapi: ../openapi.yml
  GetMatchingCredExRecordsRequestState:
    enum:
      - proposal_sent
      - proposal_received
      - offer_sent
      - offer_received
      - request_sent
      - request_received
      - credential_issued
      - credential_received
      - credential_acked
      - credential_revoked
      - abandoned
    source:
      openapi: ../openapi.yml
",
    },
    "issueCredentialV20.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Credential issue v2.0",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "issue-credential v2.0",
          "endpoints": {
            "create_credential_record": {
              "auth": true,
              "display-name": "Create a credential record without sending (generally for use with Out-Of-Band)",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_remove": true,
                    "comment": "comment",
                    "credential_preview": {
                      "@type": "issue-credential/2.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "filter": {},
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/create",
              "request": {
                "body": {
                  "properties": {
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "credential_preview": {
                      "type": "optional<root.V20CredPreview>",
                    },
                    "filter": "root.V20CredBoundOfferRequestFilter",
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20IssueCredSchemaCore",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create_free_credential_offer": {
              "auth": true,
              "display-name": "Create a credential offer, independent of any proposal or connection",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_issue": true,
                    "auto_remove": true,
                    "comment": "comment",
                    "credential_preview": {
                      "@type": "issue-credential/2.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "filter": {},
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/create-offer",
              "request": {
                "body": {
                  "properties": {
                    "auto_issue": {
                      "docs": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                      "type": "optional<boolean>",
                    },
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "credential_preview": {
                      "type": "optional<root.V20CredPreview>",
                    },
                    "filter": "root.V20CredBoundOfferRequestFilter",
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredOfferConnFreeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_cred_ex_record": {
              "auth": true,
              "display-name": "Remove an existing credential exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records/{cred_ex_id}",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20IssueCredentialModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_cred_ex_record": {
              "auth": true,
              "display-name": "Fetch a single credential exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "response": {
                    "body": {
                      "indy": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_ex_indy_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_rev_id": "12345",
                        "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                      "ld_proof": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_ex_ld_proof_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "state": "active",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records/{cred_ex_id}",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecordDetail",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_matching_cred_ex_records-v2": {
              "auth": true,
              "display-name": "Fetch all credential exchange records",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "indy": {
                            "created_at": "2021-12-31 23:59:59+00:00",
                            "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_ex_indy_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_rev_id": "12345",
                            "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                            "state": "active",
                            "updated_at": "2021-12-31 23:59:59+00:00",
                          },
                          "ld_proof": {
                            "created_at": "2021-12-31 23:59:59+00:00",
                            "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_ex_ld_proof_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "state": "active",
                            "updated_at": "2021-12-31 23:59:59+00:00",
                          },
                        },
                        {
                          "indy": {
                            "created_at": "2021-12-31 23:59:59+00:00",
                            "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_ex_indy_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_rev_id": "12345",
                            "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                            "state": "active",
                            "updated_at": "2021-12-31 23:59:59+00:00",
                          },
                          "ld_proof": {
                            "created_at": "2021-12-31 23:59:59+00:00",
                            "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_ex_ld_proof_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "state": "active",
                            "updated_at": "2021-12-31 23:59:59+00:00",
                          },
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records",
              "request": {
                "name": "GetMatchingCredExRecordsV2Request",
                "query-parameters": {
                  "connection_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "role": {
                    "docs": "Role assigned in credential exchange",
                    "type": "optional<GetMatchingCredExRecordsV2RequestRole>",
                  },
                  "state": {
                    "docs": "Credential exchange state",
                    "type": "optional<GetMatchingCredExRecordsV2RequestState>",
                  },
                  "thread_id": {
                    "docs": "Thread identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecordListResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "issue_credential_to_holder": {
              "auth": true,
              "display-name": "Send holder a credential",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {
                    "comment": "comment",
                  },
                  "response": {
                    "body": {
                      "indy": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_ex_indy_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_rev_id": "12345",
                        "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                      "ld_proof": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_ex_ld_proof_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "state": "active",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records/{cred_ex_id}/issue",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredIssueRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecordDetail",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "report_cred_ex_problem": {
              "auth": true,
              "display-name": "Send a problem report for credential exchange",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {
                    "description": "description",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records/{cred_ex_id}/problem-report",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "description": "string",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredIssueProblemReportRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20IssueCredentialModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_credential_offer": {
              "auth": true,
              "display-name": "Send holder a credential offer in reference to a proposal with preview",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records/{cred_ex_id}/send-offer",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "counter_preview": {
                      "type": "optional<root.V20CredBoundOfferRequestCounterPreview>",
                    },
                    "filter": {
                      "type": "optional<root.V20CredBoundOfferRequestFilter>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredBoundOfferRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_credential_request": {
              "auth": true,
              "display-name": "Send issuer a credential request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {
                    "holder_did": "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records/{cred_ex_id}/send-request",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "holder_did": {
                      "docs": "Holder DID to substitute for the credentialSubject.id",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_credential": {
              "auth": true,
              "display-name": "Send holder a credential, automating entire flow",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_remove": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "credential_preview": {
                      "@type": "issue-credential/2.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "filter": {},
                    "trace": true,
                    "verification_method": "verification_method",
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/send",
              "request": {
                "body": {
                  "type": "root.V20CredExFree",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_credential_offer": {
              "auth": true,
              "display-name": "Send holder a credential offer, independent of any proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_issue": true,
                    "auto_remove": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "credential_preview": {
                      "@type": "issue-credential/2.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "filter": {},
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/send-offer",
              "request": {
                "body": {
                  "properties": {
                    "auto_issue": {
                      "docs": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                      "type": "optional<boolean>",
                    },
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "credential_preview": {
                      "type": "optional<root.V20CredPreview>",
                    },
                    "filter": "root.V20CredBoundOfferRequestFilter",
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredOfferRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_credential_proposal": {
              "auth": true,
              "display-name": "Send issuer a credential proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_remove": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "credential_preview": {
                      "@type": "issue-credential/2.0/credential-preview",
                      "attributes": [
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                        {
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "value": "martini",
                        },
                      ],
                    },
                    "filter": {},
                    "trace": true,
                    "verification_method": "verification_method",
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/send-proposal",
              "request": {
                "body": {
                  "type": "root.V20CredExFree",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_credential_request": {
              "auth": true,
              "display-name": "Send issuer a credential request not bound to an existing thread. Indy credentials cannot start at a request",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_remove": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "filter": {
                      "ld_proof": {
                        "credential": {
                          "@context": [
                            {
                              "key": "value",
                            },
                            {
                              "key": "value",
                            },
                          ],
                          "credentialSubject": {
                            "key": "value",
                          },
                          "issuanceDate": "2010-01-01 19:23:24+00:00",
                          "issuer": {
                            "key": "value",
                          },
                          "type": [
                            "VerifiableCredential",
                            "AlumniCredential",
                          ],
                        },
                        "options": {
                          "proofType": "Ed25519Signature2018",
                        },
                      },
                    },
                    "holder_did": "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_issue": false,
                      "auto_offer": false,
                      "auto_remove": false,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "error_msg": "The front fell off",
                      "initiator": "self",
                      "parent_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "issuer",
                      "state": "done",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/send-request",
              "request": {
                "body": {
                  "properties": {
                    "auto_remove": {
                      "docs": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "filter": "root.V20CredRequestFreeFilter",
                    "holder_did": {
                      "docs": "Holder DID to substitute for the credentialSubject.id",
                      "type": "optional<string>",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredRequestFree",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "store_received_credential": {
              "auth": true,
              "display-name": "Store a received credential",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_ex_id": "cred_ex_id",
                  },
                  "request": {
                    "credential_id": "credential_id",
                  },
                  "response": {
                    "body": {
                      "indy": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_ex_indy_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_rev_id": "12345",
                        "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                      "ld_proof": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_ex_ld_proof_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_id_stored": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "state": "active",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/issue-credential-2.0/records/{cred_ex_id}/store",
              "path-parameters": {
                "cred_ex_id": {
                  "docs": "Credential exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "credential_id": {
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20CredStoreRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20CredExRecordDetail",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetMatchingCredExRecordsV2RequestRole": {
            "enum": [
              "issuer",
              "holder",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingCredExRecordsV2RequestState": {
            "enum": [
              {
                "name": "ProposalSent",
                "value": "proposal-sent",
              },
              {
                "name": "ProposalReceived",
                "value": "proposal-received",
              },
              {
                "name": "OfferSent",
                "value": "offer-sent",
              },
              {
                "name": "OfferReceived",
                "value": "offer-received",
              },
              {
                "name": "RequestSent",
                "value": "request-sent",
              },
              {
                "name": "RequestReceived",
                "value": "request-received",
              },
              {
                "name": "CredentialIssued",
                "value": "credential-issued",
              },
              {
                "name": "CredentialReceived",
                "value": "credential-received",
              },
              "done",
              {
                "name": "CredentialRevoked",
                "value": "credential-revoked",
              },
              "abandoned",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_credential_record:
      path: /issue-credential-2.0/create
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: >-
        Create a credential record without sending (generally for use with
        Out-Of-Band)
      request:
        name: V20IssueCredSchemaCore
        body:
          properties:
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            credential_preview:
              type: optional<root.V20CredPreview>
            filter: root.V20CredBoundOfferRequestFilter
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - request:
            auto_remove: true
            comment: comment
            credential_preview:
              '@type': issue-credential/2.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            filter: {}
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    create_free_credential_offer:
      path: /issue-credential-2.0/create-offer
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a credential offer, independent of any proposal or connection
      request:
        name: V20CredOfferConnFreeRequest
        body:
          properties:
            auto_issue:
              type: optional<boolean>
              docs: >-
                Whether to respond automatically to credential requests,
                creating and issuing requested credentials
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            credential_preview:
              type: optional<root.V20CredPreview>
            filter: root.V20CredBoundOfferRequestFilter
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - request:
            auto_issue: true
            auto_remove: true
            comment: comment
            credential_preview:
              '@type': issue-credential/2.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            filter: {}
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    get_matching_cred_ex_records-v2:
      path: /issue-credential-2.0/records
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch all credential exchange records
      request:
        name: GetMatchingCredExRecordsV2Request
        query-parameters:
          connection_id:
            type: optional<string>
            docs: Connection identifier
            validation:
              format: uuid
          role:
            type: optional<GetMatchingCredExRecordsV2RequestRole>
            docs: Role assigned in credential exchange
          state:
            type: optional<GetMatchingCredExRecordsV2RequestState>
            docs: Credential exchange state
          thread_id:
            type: optional<string>
            docs: Thread identifier
            validation:
              format: uuid
      response:
        docs: ''
        type: root.V20CredExRecordListResult
        status-code: 200
      examples:
        - response:
            body:
              results:
                - indy:
                    created_at: '2021-12-31 23:59:59+00:00'
                    cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_ex_indy_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_rev_id: '12345'
                    rev_reg_id: >-
                      WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                    state: active
                    updated_at: '2021-12-31 23:59:59+00:00'
                  ld_proof:
                    created_at: '2021-12-31 23:59:59+00:00'
                    cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_ex_ld_proof_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    state: active
                    updated_at: '2021-12-31 23:59:59+00:00'
                - indy:
                    created_at: '2021-12-31 23:59:59+00:00'
                    cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_ex_indy_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_rev_id: '12345'
                    rev_reg_id: >-
                      WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                    state: active
                    updated_at: '2021-12-31 23:59:59+00:00'
                  ld_proof:
                    created_at: '2021-12-31 23:59:59+00:00'
                    cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_ex_ld_proof_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    state: active
                    updated_at: '2021-12-31 23:59:59+00:00'
    get_cred_ex_record:
      path: /issue-credential-2.0/records/{cred_ex_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Fetch a single credential exchange record
      response:
        docs: ''
        type: root.V20CredExRecordDetail
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          response:
            body:
              indy:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_ex_indy_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_rev_id: '12345'
                rev_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                updated_at: '2021-12-31 23:59:59+00:00'
              ld_proof:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_ex_ld_proof_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                state: active
                updated_at: '2021-12-31 23:59:59+00:00'
    delete_cred_ex_record:
      path: /issue-credential-2.0/records/{cred_ex_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Remove an existing credential exchange record
      response:
        docs: ''
        type: root.V20IssueCredentialModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          response:
            body:
              key: value
    issue_credential_to_holder:
      path: /issue-credential-2.0/records/{cred_ex_id}/issue
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send holder a credential
      request:
        name: V20CredIssueRequest
        body:
          properties:
            comment:
              type: optional<string>
              docs: Human-readable comment
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecordDetail
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request:
            comment: comment
          response:
            body:
              indy:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_ex_indy_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_rev_id: '12345'
                rev_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                updated_at: '2021-12-31 23:59:59+00:00'
              ld_proof:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_ex_ld_proof_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                state: active
                updated_at: '2021-12-31 23:59:59+00:00'
    report_cred_ex_problem:
      path: /issue-credential-2.0/records/{cred_ex_id}/problem-report
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send a problem report for credential exchange
      request:
        name: V20CredIssueProblemReportRequest
        body:
          properties:
            description: string
        content-type: application/json
      response:
        docs: ''
        type: root.V20IssueCredentialModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request:
            description: description
          response:
            body:
              key: value
    send_credential_offer:
      path: /issue-credential-2.0/records/{cred_ex_id}/send-offer
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send holder a credential offer in reference to a proposal with preview
      request:
        name: V20CredBoundOfferRequest
        body:
          properties:
            counter_preview:
              type: optional<root.V20CredBoundOfferRequestCounterPreview>
            filter:
              type: optional<root.V20CredBoundOfferRequestFilter>
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request: {}
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_credential_request:
      path: /issue-credential-2.0/records/{cred_ex_id}/send-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Send issuer a credential request
      request:
        name: V20CredRequestRequest
        body:
          properties:
            holder_did:
              type: optional<string>
              docs: Holder DID to substitute for the credentialSubject.id
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request:
            holder_did: did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    store_received_credential:
      path: /issue-credential-2.0/records/{cred_ex_id}/store
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_ex_id:
          type: string
          docs: Credential exchange identifier
      display-name: Store a received credential
      request:
        name: V20CredStoreRequest
        body:
          properties:
            credential_id:
              type: optional<string>
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecordDetail
        status-code: 200
      examples:
        - path-parameters:
            cred_ex_id: cred_ex_id
          request:
            credential_id: credential_id
          response:
            body:
              indy:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_ex_indy_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_rev_id: '12345'
                rev_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                updated_at: '2021-12-31 23:59:59+00:00'
              ld_proof:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_ex_ld_proof_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_id_stored: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                state: active
                updated_at: '2021-12-31 23:59:59+00:00'
    send_free_credential:
      path: /issue-credential-2.0/send
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Send holder a credential, automating entire flow
      request:
        body:
          type: root.V20CredExFree
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - request:
            auto_remove: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            credential_preview:
              '@type': issue-credential/2.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            filter: {}
            trace: true
            verification_method: verification_method
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_free_credential_offer:
      path: /issue-credential-2.0/send-offer
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Send holder a credential offer, independent of any proposal
      request:
        name: V20CredOfferRequest
        body:
          properties:
            auto_issue:
              type: optional<boolean>
              docs: >-
                Whether to respond automatically to credential requests,
                creating and issuing requested credentials
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            credential_preview:
              type: optional<root.V20CredPreview>
            filter: root.V20CredBoundOfferRequestFilter
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - request:
            auto_issue: true
            auto_remove: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            credential_preview:
              '@type': issue-credential/2.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            filter: {}
            trace: true
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_free_credential_proposal:
      path: /issue-credential-2.0/send-proposal
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Send issuer a credential proposal
      request:
        body:
          type: root.V20CredExFree
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - request:
            auto_remove: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            credential_preview:
              '@type': issue-credential/2.0/credential-preview
              attributes:
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
                - mime-type: image/jpeg
                  name: favourite_drink
                  value: martini
            filter: {}
            trace: true
            verification_method: verification_method
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    send_free_credential_request:
      path: /issue-credential-2.0/send-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: >-
        Send issuer a credential request not bound to an existing thread. Indy
        credentials cannot start at a request
      request:
        name: V20CredRequestFree
        body:
          properties:
            auto_remove:
              type: optional<boolean>
              docs: >-
                Whether to remove the credential exchange record on completion
                (overrides --preserve-exchange-records configuration setting)
            comment:
              type: optional<string>
              docs: Human-readable comment
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            filter: root.V20CredRequestFreeFilter
            holder_did:
              type: optional<string>
              docs: Holder DID to substitute for the credentialSubject.id
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V20CredExRecord
        status-code: 200
      examples:
        - request:
            auto_remove: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            filter:
              ld_proof:
                credential:
                  '@context':
                    - key: value
                    - key: value
                  credentialSubject:
                    key: value
                  issuanceDate: '2010-01-01 19:23:24+00:00'
                  issuer:
                    key: value
                  type:
                    - VerifiableCredential
                    - AlumniCredential
                options:
                  proofType: Ed25519Signature2018
            holder_did: did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs
            trace: false
          response:
            body:
              auto_issue: false
              auto_offer: false
              auto_remove: false
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              error_msg: The front fell off
              initiator: self
              parent_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: issuer
              state: done
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: issue-credential v2.0
docs: Credential issue v2.0
types:
  GetMatchingCredExRecordsV2RequestRole:
    enum:
      - issuer
      - holder
    source:
      openapi: ../openapi.yml
  GetMatchingCredExRecordsV2RequestState:
    enum:
      - value: proposal-sent
        name: ProposalSent
      - value: proposal-received
        name: ProposalReceived
      - value: offer-sent
        name: OfferSent
      - value: offer-received
        name: OfferReceived
      - value: request-sent
        name: RequestSent
      - value: request-received
        name: RequestReceived
      - value: credential-issued
        name: CredentialIssued
      - value: credential-received
        name: CredentialReceived
      - done
      - value: credential-revoked
        name: CredentialRevoked
      - abandoned
    source:
      openapi: ../openapi.yml
",
    },
    "jsonld.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Sign and verify json-ld data",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "jsonld",
          "endpoints": {
            "sign": {
              "auth": true,
              "display-name": "Sign a JSON-LD structure and return it",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "doc": {
                      "credential": {},
                      "options": {
                        "proofPurpose": "proofPurpose",
                        "verificationMethod": "verificationMethod",
                      },
                    },
                    "verkey": "verkey",
                  },
                  "response": {
                    "body": {
                      "error": "error",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/jsonld/sign",
              "request": {
                "body": {
                  "properties": {
                    "doc": {
                      "type": "root.Doc",
                    },
                    "verkey": {
                      "docs": "Verkey to use for signing",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SignRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.SignResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "verify": {
              "auth": true,
              "display-name": "Verify a JSON-LD structure.",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "doc": {
                      "proof": {
                        "proofPurpose": "proofPurpose",
                        "verificationMethod": "verificationMethod",
                      },
                    },
                    "verkey": "verkey",
                  },
                  "response": {
                    "body": {
                      "error": "error",
                      "valid": true,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/jsonld/verify",
              "request": {
                "body": {
                  "properties": {
                    "doc": "root.VerifyRequestDoc",
                    "verkey": {
                      "docs": "Verkey to use for doc verification",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "VerifyRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.VerifyResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    sign:
      path: /jsonld/sign
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Sign a JSON-LD structure and return it
      request:
        name: SignRequest
        body:
          properties:
            doc:
              type: root.Doc
            verkey:
              type: string
              docs: Verkey to use for signing
        content-type: application/json
      response:
        docs: ''
        type: root.SignResponse
        status-code: 200
      examples:
        - request:
            doc:
              credential: {}
              options:
                proofPurpose: proofPurpose
                verificationMethod: verificationMethod
            verkey: verkey
          response:
            body:
              error: error
    verify:
      path: /jsonld/verify
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Verify a JSON-LD structure.
      request:
        name: VerifyRequest
        body:
          properties:
            doc: root.VerifyRequestDoc
            verkey:
              type: optional<string>
              docs: Verkey to use for doc verification
        content-type: application/json
      response:
        docs: ''
        type: root.VerifyResponse
        status-code: 200
      examples:
        - request:
            doc:
              proof:
                proofPurpose: proofPurpose
                verificationMethod: verificationMethod
            verkey: verkey
          response:
            body:
              error: error
              valid: true
  source:
    openapi: ../openapi.yml
  display-name: jsonld
docs: Sign and verify json-ld data
",
    },
    "ledger.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Interaction with ledger",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "ledger",
          "endpoints": {
            "accept_taa": {
              "auth": true,
              "display-name": "Accept the transaction author agreement",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "mechanism": "mechanism",
                    "text": "text",
                    "version": "version",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/ledger/taa/accept",
              "request": {
                "body": {
                  "properties": {
                    "mechanism": {
                      "type": "optional<string>",
                    },
                    "text": {
                      "type": "optional<string>",
                    },
                    "version": {
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TAAAccept",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.LedgerModulesResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_did_nym_role": {
              "auth": true,
              "display-name": "Get the role from the NYM registration of a public DID.",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "did": "did",
                  },
                  "response": {
                    "body": {
                      "role": "ENDORSER",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ledger/get-nym-role",
              "request": {
                "name": "GetDidNymRoleRequest",
                "query-parameters": {
                  "did": {
                    "docs": "DID of interest",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.GetNymRoleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_did_verkey": {
              "auth": true,
              "display-name": "Get the verkey for a DID from the ledger.",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "did": "did",
                  },
                  "response": {
                    "body": {
                      "verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ledger/did-verkey",
              "request": {
                "name": "GetDidVerkeyRequest",
                "query-parameters": {
                  "did": {
                    "docs": "DID of interest",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.GetDIDVerkeyResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_multiple_ledger_config": {
              "auth": true,
              "display-name": "Fetch the multiple ledger configuration currently in use",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "ledger_config_list": [
                        {
                          "genesis_file": "genesis_file",
                          "genesis_transactions": "genesis_transactions",
                          "genesis_url": "genesis_url",
                          "id": "id",
                          "is_production": true,
                        },
                        {
                          "genesis_file": "genesis_file",
                          "genesis_transactions": "genesis_transactions",
                          "genesis_url": "genesis_url",
                          "id": "id",
                          "is_production": true,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ledger/multiple/config",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.LedgerConfigList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_published_did_endpoint": {
              "auth": true,
              "display-name": "Get the endpoint for a DID from the ledger.",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "did": "did",
                  },
                  "response": {
                    "body": {
                      "endpoint": "https://myhost:8021",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ledger/did-endpoint",
              "request": {
                "name": "GetPublishedDidEndpointRequest",
                "query-parameters": {
                  "did": {
                    "docs": "DID of interest",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "endpoint_type": {
                    "docs": "Endpoint type of interest (default 'Endpoint')",
                    "type": "optional<GetPublishedDidEndpointRequestEndpointType>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.GetDIDEndpointResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_taa": {
              "auth": true,
              "display-name": "Fetch the current transaction author agreement, if any",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "result": {
                        "aml_record": {
                          "aml": {
                            "key": "aml",
                          },
                          "amlContext": "amlContext",
                          "version": "version",
                        },
                        "taa_accepted": {
                          "mechanism": "mechanism",
                          "time": 1640995199,
                        },
                        "taa_record": {
                          "digest": "digest",
                          "text": "text",
                          "version": "version",
                        },
                        "taa_required": true,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ledger/taa",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TAAResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_write_ledger": {
              "auth": true,
              "display-name": "Fetch the current write ledger",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "ledger_id": "ledger_id",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ledger/multiple/get-write-ledger",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.WriteLedgerRequest",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "register_nym": {
              "auth": true,
              "display-name": "Send a NYM registration to the ledger.",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "did": "did",
                    "verkey": "verkey",
                  },
                  "response": {
                    "body": {
                      "success": true,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/ledger/register-nym",
              "request": {
                "name": "RegisterNymRequest",
                "query-parameters": {
                  "alias": {
                    "docs": "Alias",
                    "type": "optional<string>",
                  },
                  "conn_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                  "create_transaction_for_endorser": {
                    "docs": "Create Transaction For Endorser's signature",
                    "type": "optional<boolean>",
                  },
                  "did": {
                    "docs": "DID to register",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "role": {
                    "docs": "Role",
                    "type": "optional<RegisterNymRequestRole>",
                  },
                  "verkey": {
                    "docs": "Verification key",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TxnOrRegisterLedgerNymResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "rotate_public_did_keypair": {
              "auth": true,
              "display-name": "Rotate key pair for public DID.",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/ledger/rotate-public-did-keypair",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.LedgerModulesResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetPublishedDidEndpointRequestEndpointType": {
            "enum": [
              "Endpoint",
              "Profile",
              "LinkedDomains",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterNymRequestRole": {
            "enum": [
              "STEWARD",
              "TRUSTEE",
              "ENDORSER",
              "NETWORK_MONITOR",
              "reset",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetPublishedDidEndpointRequestEndpointType:
    enum:
      - Endpoint
      - Profile
      - LinkedDomains
    source:
      openapi: ../openapi.yml
  RegisterNymRequestRole:
    enum:
      - STEWARD
      - TRUSTEE
      - ENDORSER
      - NETWORK_MONITOR
      - reset
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_published_did_endpoint:
      path: /ledger/did-endpoint
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Get the endpoint for a DID from the ledger.
      request:
        name: GetPublishedDidEndpointRequest
        query-parameters:
          did:
            type: string
            docs: DID of interest
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          endpoint_type:
            type: optional<GetPublishedDidEndpointRequestEndpointType>
            docs: Endpoint type of interest (default 'Endpoint')
      response:
        docs: ''
        type: root.GetDIDEndpointResponse
        status-code: 200
      examples:
        - query-parameters:
            did: did
          response:
            body:
              endpoint: https://myhost:8021
    get_did_verkey:
      path: /ledger/did-verkey
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Get the verkey for a DID from the ledger.
      request:
        name: GetDidVerkeyRequest
        query-parameters:
          did:
            type: string
            docs: DID of interest
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      response:
        docs: ''
        type: root.GetDIDVerkeyResponse
        status-code: 200
      examples:
        - query-parameters:
            did: did
          response:
            body:
              verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    get_did_nym_role:
      path: /ledger/get-nym-role
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Get the role from the NYM registration of a public DID.
      request:
        name: GetDidNymRoleRequest
        query-parameters:
          did:
            type: string
            docs: DID of interest
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      response:
        docs: ''
        type: root.GetNymRoleResponse
        status-code: 200
      examples:
        - query-parameters:
            did: did
          response:
            body:
              role: ENDORSER
    get_multiple_ledger_config:
      path: /ledger/multiple/config
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch the multiple ledger configuration currently in use
      response:
        docs: ''
        type: root.LedgerConfigList
        status-code: 200
      examples:
        - response:
            body:
              ledger_config_list:
                - genesis_file: genesis_file
                  genesis_transactions: genesis_transactions
                  genesis_url: genesis_url
                  id: id
                  is_production: true
                - genesis_file: genesis_file
                  genesis_transactions: genesis_transactions
                  genesis_url: genesis_url
                  id: id
                  is_production: true
    get_write_ledger:
      path: /ledger/multiple/get-write-ledger
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch the current write ledger
      response:
        docs: ''
        type: root.WriteLedgerRequest
        status-code: 200
      examples:
        - response:
            body:
              ledger_id: ledger_id
    register_nym:
      path: /ledger/register-nym
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Send a NYM registration to the ledger.
      request:
        name: RegisterNymRequest
        query-parameters:
          did:
            type: string
            docs: DID to register
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          verkey:
            type: string
            docs: Verification key
            validation:
              pattern: >-
                ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          alias:
            type: optional<string>
            docs: Alias
          conn_id:
            type: optional<string>
            docs: Connection identifier
          create_transaction_for_endorser:
            type: optional<boolean>
            docs: Create Transaction For Endorser's signature
          role:
            type: optional<RegisterNymRequestRole>
            docs: Role
      response:
        docs: ''
        type: root.TxnOrRegisterLedgerNymResponse
        status-code: 200
      examples:
        - query-parameters:
            did: did
            verkey: verkey
          response:
            body:
              success: true
    rotate_public_did_keypair:
      path: /ledger/rotate-public-did-keypair
      method: PATCH
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Rotate key pair for public DID.
      response:
        docs: ''
        type: root.LedgerModulesResult
        status-code: 200
      examples:
        - response:
            body:
              key: value
    get_taa:
      path: /ledger/taa
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch the current transaction author agreement, if any
      response:
        docs: ''
        type: root.TAAResult
        status-code: 200
      examples:
        - response:
            body:
              result:
                aml_record:
                  aml:
                    key: aml
                  amlContext: amlContext
                  version: version
                taa_accepted:
                  mechanism: mechanism
                  time: 1640995199
                taa_record:
                  digest: digest
                  text: text
                  version: version
                taa_required: true
    accept_taa:
      path: /ledger/taa/accept
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Accept the transaction author agreement
      request:
        name: TAAAccept
        body:
          properties:
            mechanism:
              type: optional<string>
            text:
              type: optional<string>
            version:
              type: optional<string>
        content-type: application/json
      response:
        docs: ''
        type: root.LedgerModulesResult
        status-code: 200
      examples:
        - request:
            mechanism: mechanism
            text: text
            version: version
          response:
            body:
              key: value
  source:
    openapi: ../openapi.yml
  display-name: ledger
docs: Interaction with ledger
",
    },
    "mediation.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Mediation management",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "mediation",
          "endpoints": {
            "clear_default_mediator": {
              "auth": true,
              "display-name": "Clear default mediator",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "connection_id": "connection_id",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endpoint": "endpoint",
                      "mediation_id": "mediation_id",
                      "mediator_terms": [
                        "mediator_terms",
                        "mediator_terms",
                      ],
                      "recipient_terms": [
                        "recipient_terms",
                        "recipient_terms",
                      ],
                      "role": "role",
                      "routing_keys": [
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      ],
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/mediation/default-mediator",
              "response": {
                "docs": "",
                "status-code": 201,
                "type": "root.MediationRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_mediation_record": {
              "auth": true,
              "display-name": "Delete mediation request by ID",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "mediation_id": "mediation_id",
                  },
                  "response": {
                    "body": {
                      "connection_id": "connection_id",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endpoint": "endpoint",
                      "mediation_id": "mediation_id",
                      "mediator_terms": [
                        "mediator_terms",
                        "mediator_terms",
                      ],
                      "recipient_terms": [
                        "recipient_terms",
                        "recipient_terms",
                      ],
                      "role": "role",
                      "routing_keys": [
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      ],
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/mediation/requests/{mediation_id}",
              "path-parameters": {
                "mediation_id": {
                  "docs": "Mediation record identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.MediationRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deny_mediation_request": {
              "auth": true,
              "display-name": "Deny a stored mediation request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "mediation_id": "mediation_id",
                  },
                  "request": {
                    "mediator_terms": [
                      "mediator_terms",
                      "mediator_terms",
                    ],
                    "recipient_terms": [
                      "recipient_terms",
                      "recipient_terms",
                    ],
                  },
                  "response": {
                    "body": {
                      "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                      "mediator_terms": [
                        "mediator_terms",
                        "mediator_terms",
                      ],
                      "recipient_terms": [
                        "recipient_terms",
                        "recipient_terms",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/mediation/requests/{mediation_id}/deny",
              "path-parameters": {
                "mediation_id": {
                  "docs": "Mediation record identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "mediator_terms": {
                      "docs": "List of mediator rules for recipient",
                      "type": "optional<list<string>>",
                    },
                    "recipient_terms": {
                      "docs": "List of recipient rules for mediation",
                      "type": "optional<list<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AdminMediationDeny",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 201,
                "type": "root.MediationDeny",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_default_mediator": {
              "auth": true,
              "display-name": "Get default mediator",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "connection_id": "connection_id",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endpoint": "endpoint",
                      "mediation_id": "mediation_id",
                      "mediator_terms": [
                        "mediator_terms",
                        "mediator_terms",
                      ],
                      "recipient_terms": [
                        "recipient_terms",
                        "recipient_terms",
                      ],
                      "role": "role",
                      "routing_keys": [
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      ],
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/mediation/default-mediator",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.MediationRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_keylists": {
              "auth": true,
              "display-name": "Retrieve keylists by connection or role",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "connection_id": "connection_id",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "recipient_key": "recipient_key",
                          "record_id": "record_id",
                          "role": "role",
                          "state": "active",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "wallet_id": "wallet_id",
                        },
                        {
                          "connection_id": "connection_id",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "recipient_key": "recipient_key",
                          "record_id": "record_id",
                          "role": "role",
                          "state": "active",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "wallet_id": "wallet_id",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/mediation/keylists",
              "request": {
                "name": "GetKeylistsRequest",
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier (optional)",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "role": {
                    "default": "server",
                    "docs": "Filer on role, 'client' for keys         mediated by other agents, 'server' for keys         mediated by this agent",
                    "type": "optional<GetKeylistsRequestRole>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.Keylist",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_matching_mediation_records": {
              "auth": true,
              "display-name": "Query mediation requests, returns list of all mediation records",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "connection_id": "connection_id",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "endpoint": "endpoint",
                          "mediation_id": "mediation_id",
                          "mediator_terms": [
                            "mediator_terms",
                            "mediator_terms",
                          ],
                          "recipient_terms": [
                            "recipient_terms",
                            "recipient_terms",
                          ],
                          "role": "role",
                          "routing_keys": [
                            "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                          ],
                          "state": "active",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                        {
                          "connection_id": "connection_id",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "endpoint": "endpoint",
                          "mediation_id": "mediation_id",
                          "mediator_terms": [
                            "mediator_terms",
                            "mediator_terms",
                          ],
                          "recipient_terms": [
                            "recipient_terms",
                            "recipient_terms",
                          ],
                          "role": "role",
                          "routing_keys": [
                            "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                          ],
                          "state": "active",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/mediation/requests",
              "request": {
                "name": "GetMatchingMediationRecordsRequest",
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier (optional)",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "mediator_terms": {
                    "allow-multiple": true,
                    "docs": "List of mediator rules for recipient",
                    "type": "optional<string>",
                  },
                  "recipient_terms": {
                    "allow-multiple": true,
                    "docs": "List of recipient rules for mediation",
                    "type": "optional<string>",
                  },
                  "state": {
                    "docs": "Mediation state (optional)",
                    "type": "optional<GetMatchingMediationRecordsRequestState>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.MediationList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_mediation_record": {
              "auth": true,
              "display-name": "Retrieve mediation request record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "mediation_id": "mediation_id",
                  },
                  "response": {
                    "body": {
                      "connection_id": "connection_id",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endpoint": "endpoint",
                      "mediation_id": "mediation_id",
                      "mediator_terms": [
                        "mediator_terms",
                        "mediator_terms",
                      ],
                      "recipient_terms": [
                        "recipient_terms",
                        "recipient_terms",
                      ],
                      "role": "role",
                      "routing_keys": [
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      ],
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/mediation/requests/{mediation_id}",
              "path-parameters": {
                "mediation_id": {
                  "docs": "Mediation record identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.MediationRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "grant_mediation_request": {
              "auth": true,
              "display-name": "Grant received mediation",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "mediation_id": "mediation_id",
                  },
                  "response": {
                    "body": {
                      "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                      "endpoint": "http://192.168.56.102:8020/",
                      "routing_keys": [
                        "routing_keys",
                        "routing_keys",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/mediation/requests/{mediation_id}/grant",
              "path-parameters": {
                "mediation_id": {
                  "docs": "Mediation record identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 201,
                "type": "root.MediationGrant",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "request_mediation_for_connection": {
              "auth": true,
              "display-name": "Request mediation from connection",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "request": {
                    "mediator_terms": [
                      "mediator_terms",
                      "mediator_terms",
                    ],
                    "recipient_terms": [
                      "recipient_terms",
                      "recipient_terms",
                    ],
                  },
                  "response": {
                    "body": {
                      "connection_id": "connection_id",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endpoint": "endpoint",
                      "mediation_id": "mediation_id",
                      "mediator_terms": [
                        "mediator_terms",
                        "mediator_terms",
                      ],
                      "recipient_terms": [
                        "recipient_terms",
                        "recipient_terms",
                      ],
                      "role": "role",
                      "routing_keys": [
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      ],
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/mediation/request/{conn_id}",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "mediator_terms": {
                      "docs": "List of mediator rules for recipient",
                      "type": "optional<list<string>>",
                    },
                    "recipient_terms": {
                      "docs": "List of recipient rules for mediation",
                      "type": "optional<list<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "MediationCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 201,
                "type": "root.MediationRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_keylist_query_to_mediator": {
              "auth": true,
              "display-name": "Send keylist query to mediator",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "mediation_id": "mediation_id",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/mediation/keylists/{mediation_id}/send-keylist-query",
              "path-parameters": {
                "mediation_id": {
                  "docs": "Mediation record identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "filter": {
                      "docs": "Filter for keylist query",
                      "type": "optional<KeylistQueryFilterRequestFilter>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "KeylistQueryFilterRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "paginate_limit": {
                    "default": -1,
                    "docs": "limit number of results",
                    "type": "optional<integer>",
                  },
                  "paginate_offset": {
                    "default": 0,
                    "docs": "offset to use in pagination",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 201,
                "type": "root.KeylistQuery",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_keylist_update_to_mediator": {
              "auth": true,
              "display-name": "Send keylist update to mediator",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "mediation_id": "mediation_id",
                  },
                  "request": {
                    "updates": [
                      {
                        "action": "add",
                        "recipient_key": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      },
                      {
                        "action": "add",
                        "recipient_key": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                      "updates": [
                        {
                          "action": "add",
                          "recipient_key": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        },
                        {
                          "action": "add",
                          "recipient_key": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/mediation/keylists/{mediation_id}/send-keylist-update",
              "path-parameters": {
                "mediation_id": {
                  "docs": "Mediation record identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "updates": {
                      "type": "optional<list<root.KeylistUpdateRule>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "KeylistUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 201,
                "type": "root.KeylistUpdate",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_default_mediator": {
              "auth": true,
              "display-name": "Set default mediator",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "mediation_id": "mediation_id",
                  },
                  "response": {
                    "body": {
                      "connection_id": "connection_id",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "endpoint": "endpoint",
                      "mediation_id": "mediation_id",
                      "mediator_terms": [
                        "mediator_terms",
                        "mediator_terms",
                      ],
                      "recipient_terms": [
                        "recipient_terms",
                        "recipient_terms",
                      ],
                      "role": "role",
                      "routing_keys": [
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                      ],
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/mediation/{mediation_id}/default-mediator",
              "path-parameters": {
                "mediation_id": {
                  "docs": "Mediation record identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 201,
                "type": "root.MediationRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update_keylist_for_conn_id": {
              "auth": true,
              "display-name": "Update keylist for a connection",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "request": {
                    "mediation_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  },
                  "response": {
                    "body": {
                      "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                      "updates": [
                        {
                          "action": "add",
                          "recipient_key": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        },
                        {
                          "action": "add",
                          "recipient_key": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/mediation/update-keylist/{conn_id}",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "mediation_id": {
                      "docs": "Mediation record identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "MediationIdMatchInfo",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.KeylistUpdate",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetKeylistsRequestRole": {
            "default": "server",
            "enum": [
              "client",
              "server",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingMediationRecordsRequestState": {
            "enum": [
              "request",
              "granted",
              "denied",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "KeylistQueryFilterRequestFilter": {
            "docs": "Filter for keylist query",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_default_mediator:
      path: /mediation/default-mediator
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Get default mediator
      response:
        docs: ''
        type: root.MediationRecord
        status-code: 200
      examples:
        - response:
            body:
              connection_id: connection_id
              created_at: '2021-12-31 23:59:59+00:00'
              endpoint: endpoint
              mediation_id: mediation_id
              mediator_terms:
                - mediator_terms
                - mediator_terms
              recipient_terms:
                - recipient_terms
                - recipient_terms
              role: role
              routing_keys:
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
    clear_default_mediator:
      path: /mediation/default-mediator
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Clear default mediator
      response:
        docs: ''
        type: root.MediationRecord
        status-code: 201
      examples:
        - response:
            body:
              connection_id: connection_id
              created_at: '2021-12-31 23:59:59+00:00'
              endpoint: endpoint
              mediation_id: mediation_id
              mediator_terms:
                - mediator_terms
                - mediator_terms
              recipient_terms:
                - recipient_terms
                - recipient_terms
              role: role
              routing_keys:
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
    get_keylists:
      path: /mediation/keylists
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Retrieve keylists by connection or role
      request:
        name: GetKeylistsRequest
        query-parameters:
          conn_id:
            type: optional<string>
            docs: Connection identifier (optional)
            validation:
              format: uuid
          role:
            type: optional<GetKeylistsRequestRole>
            default: server
            docs: >-
              Filer on role, 'client' for keys         mediated by other agents,
              'server' for keys         mediated by this agent
      response:
        docs: ''
        type: root.Keylist
        status-code: 200
      examples:
        - response:
            body:
              results:
                - connection_id: connection_id
                  created_at: '2021-12-31 23:59:59+00:00'
                  recipient_key: recipient_key
                  record_id: record_id
                  role: role
                  state: active
                  updated_at: '2021-12-31 23:59:59+00:00'
                  wallet_id: wallet_id
                - connection_id: connection_id
                  created_at: '2021-12-31 23:59:59+00:00'
                  recipient_key: recipient_key
                  record_id: record_id
                  role: role
                  state: active
                  updated_at: '2021-12-31 23:59:59+00:00'
                  wallet_id: wallet_id
    send_keylist_query_to_mediator:
      path: /mediation/keylists/{mediation_id}/send-keylist-query
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        mediation_id:
          type: string
          docs: Mediation record identifier
      display-name: Send keylist query to mediator
      request:
        name: KeylistQueryFilterRequest
        query-parameters:
          paginate_limit:
            type: optional<integer>
            default: -1
            docs: limit number of results
          paginate_offset:
            type: optional<integer>
            default: 0
            docs: offset to use in pagination
        body:
          properties:
            filter:
              type: optional<KeylistQueryFilterRequestFilter>
              docs: Filter for keylist query
        content-type: application/json
      response:
        docs: ''
        type: root.KeylistQuery
        status-code: 201
      examples:
        - path-parameters:
            mediation_id: mediation_id
          request: {}
          response:
            body:
              '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
              '@type': https://didcomm.org/my-family/1.0/my-message-type
    send_keylist_update_to_mediator:
      path: /mediation/keylists/{mediation_id}/send-keylist-update
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        mediation_id:
          type: string
          docs: Mediation record identifier
      display-name: Send keylist update to mediator
      request:
        name: KeylistUpdateRequest
        body:
          properties:
            updates:
              type: optional<list<root.KeylistUpdateRule>>
        content-type: application/json
      response:
        docs: ''
        type: root.KeylistUpdate
        status-code: 201
      examples:
        - path-parameters:
            mediation_id: mediation_id
          request:
            updates:
              - action: add
                recipient_key: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
              - action: add
                recipient_key: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
          response:
            body:
              '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
              '@type': https://didcomm.org/my-family/1.0/my-message-type
              updates:
                - action: add
                  recipient_key: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - action: add
                  recipient_key: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
    request_mediation_for_connection:
      path: /mediation/request/{conn_id}
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Request mediation from connection
      request:
        name: MediationCreateRequest
        body:
          properties:
            mediator_terms:
              type: optional<list<string>>
              docs: List of mediator rules for recipient
            recipient_terms:
              type: optional<list<string>>
              docs: List of recipient rules for mediation
        content-type: application/json
      response:
        docs: ''
        type: root.MediationRecord
        status-code: 201
      examples:
        - path-parameters:
            conn_id: conn_id
          request:
            mediator_terms:
              - mediator_terms
              - mediator_terms
            recipient_terms:
              - recipient_terms
              - recipient_terms
          response:
            body:
              connection_id: connection_id
              created_at: '2021-12-31 23:59:59+00:00'
              endpoint: endpoint
              mediation_id: mediation_id
              mediator_terms:
                - mediator_terms
                - mediator_terms
              recipient_terms:
                - recipient_terms
                - recipient_terms
              role: role
              routing_keys:
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
    get_matching_mediation_records:
      path: /mediation/requests
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Query mediation requests, returns list of all mediation records
      request:
        name: GetMatchingMediationRecordsRequest
        query-parameters:
          conn_id:
            type: optional<string>
            docs: Connection identifier (optional)
            validation:
              format: uuid
          mediator_terms:
            type: optional<string>
            allow-multiple: true
            docs: List of mediator rules for recipient
          recipient_terms:
            type: optional<string>
            allow-multiple: true
            docs: List of recipient rules for mediation
          state:
            type: optional<GetMatchingMediationRecordsRequestState>
            docs: Mediation state (optional)
      response:
        docs: ''
        type: root.MediationList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - connection_id: connection_id
                  created_at: '2021-12-31 23:59:59+00:00'
                  endpoint: endpoint
                  mediation_id: mediation_id
                  mediator_terms:
                    - mediator_terms
                    - mediator_terms
                  recipient_terms:
                    - recipient_terms
                    - recipient_terms
                  role: role
                  routing_keys:
                    - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                    - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                  state: active
                  updated_at: '2021-12-31 23:59:59+00:00'
                - connection_id: connection_id
                  created_at: '2021-12-31 23:59:59+00:00'
                  endpoint: endpoint
                  mediation_id: mediation_id
                  mediator_terms:
                    - mediator_terms
                    - mediator_terms
                  recipient_terms:
                    - recipient_terms
                    - recipient_terms
                  role: role
                  routing_keys:
                    - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                    - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                  state: active
                  updated_at: '2021-12-31 23:59:59+00:00'
    get_mediation_record:
      path: /mediation/requests/{mediation_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        mediation_id:
          type: string
          docs: Mediation record identifier
      display-name: Retrieve mediation request record
      response:
        docs: ''
        type: root.MediationRecord
        status-code: 200
      examples:
        - path-parameters:
            mediation_id: mediation_id
          response:
            body:
              connection_id: connection_id
              created_at: '2021-12-31 23:59:59+00:00'
              endpoint: endpoint
              mediation_id: mediation_id
              mediator_terms:
                - mediator_terms
                - mediator_terms
              recipient_terms:
                - recipient_terms
                - recipient_terms
              role: role
              routing_keys:
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
    delete_mediation_record:
      path: /mediation/requests/{mediation_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        mediation_id:
          type: string
          docs: Mediation record identifier
      display-name: Delete mediation request by ID
      response:
        docs: ''
        type: root.MediationRecord
        status-code: 200
      examples:
        - path-parameters:
            mediation_id: mediation_id
          response:
            body:
              connection_id: connection_id
              created_at: '2021-12-31 23:59:59+00:00'
              endpoint: endpoint
              mediation_id: mediation_id
              mediator_terms:
                - mediator_terms
                - mediator_terms
              recipient_terms:
                - recipient_terms
                - recipient_terms
              role: role
              routing_keys:
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
    deny_mediation_request:
      path: /mediation/requests/{mediation_id}/deny
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        mediation_id:
          type: string
          docs: Mediation record identifier
      display-name: Deny a stored mediation request
      request:
        name: AdminMediationDeny
        body:
          properties:
            mediator_terms:
              type: optional<list<string>>
              docs: List of mediator rules for recipient
            recipient_terms:
              type: optional<list<string>>
              docs: List of recipient rules for mediation
        content-type: application/json
      response:
        docs: ''
        type: root.MediationDeny
        status-code: 201
      examples:
        - path-parameters:
            mediation_id: mediation_id
          request:
            mediator_terms:
              - mediator_terms
              - mediator_terms
            recipient_terms:
              - recipient_terms
              - recipient_terms
          response:
            body:
              '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
              '@type': https://didcomm.org/my-family/1.0/my-message-type
              mediator_terms:
                - mediator_terms
                - mediator_terms
              recipient_terms:
                - recipient_terms
                - recipient_terms
    grant_mediation_request:
      path: /mediation/requests/{mediation_id}/grant
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        mediation_id:
          type: string
          docs: Mediation record identifier
      display-name: Grant received mediation
      response:
        docs: ''
        type: root.MediationGrant
        status-code: 201
      examples:
        - path-parameters:
            mediation_id: mediation_id
          response:
            body:
              '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
              '@type': https://didcomm.org/my-family/1.0/my-message-type
              endpoint: http://192.168.56.102:8020/
              routing_keys:
                - routing_keys
                - routing_keys
    update_keylist_for_conn_id:
      path: /mediation/update-keylist/{conn_id}
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Update keylist for a connection
      request:
        name: MediationIdMatchInfo
        body:
          properties:
            mediation_id:
              type: optional<string>
              docs: Mediation record identifier
              validation:
                format: uuid
        content-type: application/json
      response:
        docs: ''
        type: root.KeylistUpdate
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          request:
            mediation_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          response:
            body:
              '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
              '@type': https://didcomm.org/my-family/1.0/my-message-type
              updates:
                - action: add
                  recipient_key: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - action: add
                  recipient_key: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
    set_default_mediator:
      path: /mediation/{mediation_id}/default-mediator
      method: PUT
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        mediation_id:
          type: string
          docs: Mediation record identifier
      display-name: Set default mediator
      response:
        docs: ''
        type: root.MediationRecord
        status-code: 201
      examples:
        - path-parameters:
            mediation_id: mediation_id
          response:
            body:
              connection_id: connection_id
              created_at: '2021-12-31 23:59:59+00:00'
              endpoint: endpoint
              mediation_id: mediation_id
              mediator_terms:
                - mediator_terms
                - mediator_terms
              recipient_terms:
                - recipient_terms
                - recipient_terms
              role: role
              routing_keys:
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: mediation
docs: Mediation management
types:
  GetKeylistsRequestRole:
    enum:
      - client
      - server
    default: server
    source:
      openapi: ../openapi.yml
  KeylistQueryFilterRequestFilter:
    docs: Filter for keylist query
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
  GetMatchingMediationRecordsRequestState:
    enum:
      - request
      - granted
      - denied
    source:
      openapi: ../openapi.yml
",
    },
    "multitenancy.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Multitenant wallet management",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "multitenancy",
          "endpoints": {
            "create_wallet": {
              "auth": true,
              "display-name": "Create a subwallet",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "image_url": "https://aries.ca/images/sample.png",
                    "key_management_mode": "managed",
                    "label": "Alice",
                    "wallet_dispatch_type": "default",
                    "wallet_key": "MySecretKey123",
                    "wallet_key_derivation": "RAW",
                    "wallet_name": "MyNewWallet",
                    "wallet_type": "indy",
                    "wallet_webhook_urls": [
                      "http://localhost:8022/webhooks",
                      "http://localhost:8022/webhooks",
                    ],
                  },
                  "response": {
                    "body": {
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "key_management_mode": "managed",
                      "state": "active",
                      "token": "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "wallet_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/multitenancy/wallet",
              "request": {
                "body": {
                  "properties": {
                    "image_url": {
                      "docs": "Image url for this wallet. This image url is publicized            (self-attested) to other agents as part of forming a connection.",
                      "type": "optional<string>",
                    },
                    "key_management_mode": {
                      "docs": "Key management method to use for this wallet.",
                      "type": "optional<literal<"managed">>",
                    },
                    "label": {
                      "docs": "Label for this wallet. This label is publicized            (self-attested) to other agents as part of forming a connection.",
                      "type": "optional<string>",
                    },
                    "wallet_dispatch_type": {
                      "docs": "Webhook target dispatch type for this wallet.             default - Dispatch only to webhooks associated with this wallet.             base - Dispatch only to webhooks associated with the base wallet.             both - Dispatch to both webhook targets.",
                      "type": "optional<CreateWalletRequestWalletDispatchType>",
                    },
                    "wallet_key": {
                      "docs": "Master key used for key derivation.",
                      "type": "optional<string>",
                    },
                    "wallet_key_derivation": {
                      "docs": "Key derivation",
                      "type": "optional<CreateWalletRequestWalletKeyDerivation>",
                    },
                    "wallet_name": {
                      "docs": "Wallet name",
                      "type": "optional<string>",
                    },
                    "wallet_type": {
                      "docs": "Type of the wallet to create",
                      "type": "optional<CreateWalletRequestWalletType>",
                    },
                    "wallet_webhook_urls": {
                      "docs": "List of Webhook URLs associated with this subwallet",
                      "type": "optional<list<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateWalletRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CreateWalletResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_wallet": {
              "auth": true,
              "display-name": "Remove a subwallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "wallet_id": "wallet_id",
                  },
                  "request": {
                    "wallet_key": "MySecretKey123",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/multitenancy/wallet/{wallet_id}/remove",
              "path-parameters": {
                "wallet_id": {
                  "docs": "Subwallet identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "wallet_key": {
                      "docs": "Master key used for key derivation. Only required for             unmanaged wallets.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RemoveWalletRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.MultitenantModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_auth_token": {
              "auth": true,
              "display-name": "Get auth token for a subwallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "wallet_id": "wallet_id",
                  },
                  "request": {
                    "wallet_key": "MySecretKey123",
                  },
                  "response": {
                    "body": {
                      "token": "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/multitenancy/wallet/{wallet_id}/token",
              "path-parameters": {
                "wallet_id": "string",
              },
              "request": {
                "body": {
                  "properties": {
                    "wallet_key": {
                      "docs": "Master key used for key derivation. Only required for             unamanged wallets.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateWalletTokenRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CreateWalletTokenResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_matching_wallets": {
              "auth": true,
              "display-name": "Query subwallets",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "key_management_mode": "managed",
                          "state": "active",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "wallet_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        },
                        {
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "key_management_mode": "managed",
                          "state": "active",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "wallet_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/multitenancy/wallets",
              "request": {
                "name": "GetMatchingWalletsRequest",
                "query-parameters": {
                  "wallet_name": {
                    "docs": "Wallet name",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.WalletList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_wallet_record": {
              "auth": true,
              "display-name": "Get a single subwallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "wallet_id": "wallet_id",
                  },
                  "response": {
                    "body": {
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "key_management_mode": "managed",
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "wallet_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/multitenancy/wallet/{wallet_id}",
              "path-parameters": {
                "wallet_id": {
                  "docs": "Subwallet identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.WalletRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update_wallet": {
              "auth": true,
              "display-name": "Update a subwallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "wallet_id": "wallet_id",
                  },
                  "request": {
                    "image_url": "https://aries.ca/images/sample.png",
                    "label": "Alice",
                    "wallet_dispatch_type": "default",
                    "wallet_webhook_urls": [
                      "http://localhost:8022/webhooks",
                      "http://localhost:8022/webhooks",
                    ],
                  },
                  "response": {
                    "body": {
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "key_management_mode": "managed",
                      "state": "active",
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "wallet_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/multitenancy/wallet/{wallet_id}",
              "path-parameters": {
                "wallet_id": {
                  "docs": "Subwallet identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "image_url": {
                      "docs": "Image url for this wallet. This image url is publicized            (self-attested) to other agents as part of forming a connection.",
                      "type": "optional<string>",
                    },
                    "label": {
                      "docs": "Label for this wallet. This label is publicized            (self-attested) to other agents as part of forming a connection.",
                      "type": "optional<string>",
                    },
                    "wallet_dispatch_type": {
                      "docs": "Webhook target dispatch type for this wallet.             default - Dispatch only to webhooks associated with this wallet.             base - Dispatch only to webhooks associated with the base wallet.             both - Dispatch to both webhook targets.",
                      "type": "optional<UpdateWalletRequestWalletDispatchType>",
                    },
                    "wallet_webhook_urls": {
                      "docs": "List of Webhook URLs associated with this subwallet",
                      "type": "optional<list<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateWalletRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.WalletRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateWalletRequestWalletDispatchType": {
            "docs": "Webhook target dispatch type for this wallet.             default - Dispatch only to webhooks associated with this wallet.             base - Dispatch only to webhooks associated with the base wallet.             both - Dispatch to both webhook targets.",
            "enum": [
              "default",
              "both",
              "base",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWalletRequestWalletKeyDerivation": {
            "docs": "Key derivation",
            "enum": [
              "ARGON2I_MOD",
              "ARGON2I_INT",
              "RAW",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWalletRequestWalletType": {
            "docs": "Type of the wallet to create",
            "enum": [
              "askar",
              "in_memory",
              "indy",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateWalletRequestWalletDispatchType": {
            "docs": "Webhook target dispatch type for this wallet.             default - Dispatch only to webhooks associated with this wallet.             base - Dispatch only to webhooks associated with the base wallet.             both - Dispatch to both webhook targets.",
            "enum": [
              "default",
              "both",
              "base",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  CreateWalletRequestWalletDispatchType:
    enum:
      - default
      - both
      - base
    docs: >-
      Webhook target dispatch type for this wallet.             default -
      Dispatch only to webhooks associated with this wallet.             base -
      Dispatch only to webhooks associated with the base wallet.            
      both - Dispatch to both webhook targets.
    inline: true
    source:
      openapi: ../openapi.yml
  CreateWalletRequestWalletKeyDerivation:
    enum:
      - ARGON2I_MOD
      - ARGON2I_INT
      - RAW
    docs: Key derivation
    inline: true
    source:
      openapi: ../openapi.yml
  CreateWalletRequestWalletType:
    enum:
      - askar
      - in_memory
      - indy
    docs: Type of the wallet to create
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateWalletRequestWalletDispatchType:
    enum:
      - default
      - both
      - base
    docs: >-
      Webhook target dispatch type for this wallet.             default -
      Dispatch only to webhooks associated with this wallet.             base -
      Dispatch only to webhooks associated with the base wallet.            
      both - Dispatch to both webhook targets.
    inline: true
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_wallet:
      path: /multitenancy/wallet
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a subwallet
      request:
        name: CreateWalletRequest
        body:
          properties:
            image_url:
              type: optional<string>
              docs: >-
                Image url for this wallet. This image url is
                publicized            (self-attested) to other agents as part of
                forming a connection.
            key_management_mode:
              type: optional<literal<"managed">>
              docs: Key management method to use for this wallet.
            label:
              type: optional<string>
              docs: >-
                Label for this wallet. This label is publicized           
                (self-attested) to other agents as part of forming a connection.
            wallet_dispatch_type:
              type: optional<CreateWalletRequestWalletDispatchType>
              docs: >-
                Webhook target dispatch type for this wallet.            
                default - Dispatch only to webhooks associated with this
                wallet.             base - Dispatch only to webhooks associated
                with the base wallet.             both - Dispatch to both
                webhook targets.
            wallet_key:
              type: optional<string>
              docs: Master key used for key derivation.
            wallet_key_derivation:
              type: optional<CreateWalletRequestWalletKeyDerivation>
              docs: Key derivation
            wallet_name:
              type: optional<string>
              docs: Wallet name
            wallet_type:
              type: optional<CreateWalletRequestWalletType>
              docs: Type of the wallet to create
            wallet_webhook_urls:
              type: optional<list<string>>
              docs: List of Webhook URLs associated with this subwallet
        content-type: application/json
      response:
        docs: ''
        type: root.CreateWalletResponse
        status-code: 200
      examples:
        - request:
            image_url: https://aries.ca/images/sample.png
            key_management_mode: managed
            label: Alice
            wallet_dispatch_type: default
            wallet_key: MySecretKey123
            wallet_key_derivation: RAW
            wallet_name: MyNewWallet
            wallet_type: indy
            wallet_webhook_urls:
              - http://localhost:8022/webhooks
              - http://localhost:8022/webhooks
          response:
            body:
              created_at: '2021-12-31 23:59:59+00:00'
              key_management_mode: managed
              state: active
              token: >-
                eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
              updated_at: '2021-12-31 23:59:59+00:00'
              wallet_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    get_wallet_record:
      path: /multitenancy/wallet/{wallet_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        wallet_id:
          type: string
          docs: Subwallet identifier
      display-name: Get a single subwallet
      response:
        docs: ''
        type: root.WalletRecord
        status-code: 200
      examples:
        - path-parameters:
            wallet_id: wallet_id
          response:
            body:
              created_at: '2021-12-31 23:59:59+00:00'
              key_management_mode: managed
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
              wallet_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    update_wallet:
      path: /multitenancy/wallet/{wallet_id}
      method: PUT
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        wallet_id:
          type: string
          docs: Subwallet identifier
      display-name: Update a subwallet
      request:
        name: UpdateWalletRequest
        body:
          properties:
            image_url:
              type: optional<string>
              docs: >-
                Image url for this wallet. This image url is
                publicized            (self-attested) to other agents as part of
                forming a connection.
            label:
              type: optional<string>
              docs: >-
                Label for this wallet. This label is publicized           
                (self-attested) to other agents as part of forming a connection.
            wallet_dispatch_type:
              type: optional<UpdateWalletRequestWalletDispatchType>
              docs: >-
                Webhook target dispatch type for this wallet.            
                default - Dispatch only to webhooks associated with this
                wallet.             base - Dispatch only to webhooks associated
                with the base wallet.             both - Dispatch to both
                webhook targets.
            wallet_webhook_urls:
              type: optional<list<string>>
              docs: List of Webhook URLs associated with this subwallet
        content-type: application/json
      response:
        docs: ''
        type: root.WalletRecord
        status-code: 200
      examples:
        - path-parameters:
            wallet_id: wallet_id
          request:
            image_url: https://aries.ca/images/sample.png
            label: Alice
            wallet_dispatch_type: default
            wallet_webhook_urls:
              - http://localhost:8022/webhooks
              - http://localhost:8022/webhooks
          response:
            body:
              created_at: '2021-12-31 23:59:59+00:00'
              key_management_mode: managed
              state: active
              updated_at: '2021-12-31 23:59:59+00:00'
              wallet_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    delete_wallet:
      path: /multitenancy/wallet/{wallet_id}/remove
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        wallet_id:
          type: string
          docs: Subwallet identifier
      display-name: Remove a subwallet
      request:
        name: RemoveWalletRequest
        body:
          properties:
            wallet_key:
              type: optional<string>
              docs: >-
                Master key used for key derivation. Only required
                for             unmanaged wallets.
        content-type: application/json
      response:
        docs: ''
        type: root.MultitenantModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            wallet_id: wallet_id
          request:
            wallet_key: MySecretKey123
          response:
            body:
              key: value
    get_auth_token:
      path: /multitenancy/wallet/{wallet_id}/token
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        wallet_id: string
      display-name: Get auth token for a subwallet
      request:
        name: CreateWalletTokenRequest
        body:
          properties:
            wallet_key:
              type: optional<string>
              docs: >-
                Master key used for key derivation. Only required
                for             unamanged wallets.
        content-type: application/json
      response:
        docs: ''
        type: root.CreateWalletTokenResponse
        status-code: 200
      examples:
        - path-parameters:
            wallet_id: wallet_id
          request:
            wallet_key: MySecretKey123
          response:
            body:
              token: >-
                eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
    get_matching_wallets:
      path: /multitenancy/wallets
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Query subwallets
      request:
        name: GetMatchingWalletsRequest
        query-parameters:
          wallet_name:
            type: optional<string>
            docs: Wallet name
      response:
        docs: ''
        type: root.WalletList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - created_at: '2021-12-31 23:59:59+00:00'
                  key_management_mode: managed
                  state: active
                  updated_at: '2021-12-31 23:59:59+00:00'
                  wallet_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - created_at: '2021-12-31 23:59:59+00:00'
                  key_management_mode: managed
                  state: active
                  updated_at: '2021-12-31 23:59:59+00:00'
                  wallet_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
  source:
    openapi: ../openapi.yml
  display-name: multitenancy
docs: Multitenant wallet management
",
    },
    "outOfBand.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Out-of-band connections",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "out-of-band",
          "endpoints": {
            "create_oob_invitation": {
              "auth": true,
              "display-name": "Create a new connection invitation",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "accept": [
                      "didcomm/aip1",
                      "didcomm/aip2;env=rfc19",
                    ],
                    "alias": "Barry",
                    "attachments": [
                      {
                        "id": "attachment-0",
                        "type": "present-proof",
                      },
                      {
                        "id": "attachment-0",
                        "type": "present-proof",
                      },
                    ],
                    "handshake_protocols": [
                      "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                      "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                    ],
                    "mediation_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "my_label": "Invitation to Barry",
                    "protocol_version": "1.1",
                    "use_public_did": false,
                  },
                  "response": {
                    "body": {
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "invi_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation_url": "https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=",
                      "oob_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "state": "await_response",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/out-of-band/create-invitation",
              "request": {
                "body": {
                  "properties": {
                    "accept": {
                      "docs": "List of mime type in order of preference that should be use in responding to the message",
                      "type": "optional<list<string>>",
                    },
                    "alias": {
                      "docs": "Alias for connection",
                      "type": "optional<string>",
                    },
                    "attachments": {
                      "docs": "Optional invitation attachments",
                      "type": "optional<list<root.AttachmentDef>>",
                    },
                    "handshake_protocols": {
                      "type": "optional<list<string>>",
                    },
                    "mediation_id": {
                      "docs": "Identifier for active mediation record to be used",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                      },
                    },
                    "metadata": {
                      "docs": "Optional metadata to attach to the connection created with the invitation",
                      "type": "optional<InvitationCreateRequestMetadata>",
                    },
                    "my_label": {
                      "docs": "Label for connection invitation",
                      "type": "optional<string>",
                    },
                    "protocol_version": {
                      "docs": "OOB protocol version",
                      "type": "optional<string>",
                    },
                    "use_public_did": {
                      "docs": "Whether to use public DID in invitation",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InvitationCreateRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "auto_accept": {
                    "docs": "Auto-accept connection (defaults to configuration)",
                    "type": "optional<boolean>",
                  },
                  "multi_use": {
                    "docs": "Create invitation for multiple use (default false)",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.InvitationRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "receive_oob_invitation": {
              "auth": true,
              "display-name": "Receive a new connection invitation",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                    "accept": [
                      "didcomm/aip1",
                      "didcomm/aip2;env=rfc19",
                    ],
                    "handshake_protocols": [
                      "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                      "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                    ],
                    "imageUrl": "http://192.168.56.101/img/logo.jpg",
                    "label": "Bob",
                    "requests~attach": [
                      {
                        "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "byte_count": 1234,
                        "data": {
                          "base64": "ey4uLn0=",
                          "json": {
                            "key": "value",
                          },
                          "links": [
                            "https://link.to/data",
                            "https://link.to/data",
                          ],
                          "sha256": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                        },
                        "description": "view from doorway, facing east, with lights off",
                        "filename": "IMG1092348.png",
                        "lastmod_time": "2021-12-31 23:59:59+00:00",
                        "mime-type": "image/png",
                      },
                      {
                        "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "byte_count": 1234,
                        "data": {
                          "base64": "ey4uLn0=",
                          "json": {
                            "key": "value",
                          },
                          "links": [
                            "https://link.to/data",
                            "https://link.to/data",
                          ],
                          "sha256": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                        },
                        "description": "view from doorway, facing east, with lights off",
                        "filename": "IMG1092348.png",
                        "lastmod_time": "2021-12-31 23:59:59+00:00",
                        "mime-type": "image/png",
                      },
                    ],
                    "services": [
                      {
                        "did": "WgWxqztrNooG92RXvxSTWv",
                        "id": "string",
                        "recipientKeys": [
                          "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        ],
                        "routingKeys": [
                          "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        ],
                        "serviceEndpoint": "http://192.168.56.101:8020",
                        "type": "string",
                      },
                      {
                        "key": "value",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "attach_thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "invi_msg_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "invitation": {
                        "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "@type": "https://didcomm.org/my-family/1.0/my-message-type",
                        "accept": [
                          "didcomm/aip1",
                          "didcomm/aip2;env=rfc19",
                        ],
                        "handshake_protocols": [
                          "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                          "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                        ],
                        "imageUrl": "http://192.168.56.101/img/logo.jpg",
                        "label": "Bob",
                        "requests~attach": [
                          {
                            "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "byte_count": 1234,
                            "data": {
                              "base64": "ey4uLn0=",
                              "json": {
                                "key": "value",
                              },
                              "links": [
                                "https://link.to/data",
                                "https://link.to/data",
                              ],
                              "sha256": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                            },
                            "description": "view from doorway, facing east, with lights off",
                            "filename": "IMG1092348.png",
                            "lastmod_time": "2021-12-31 23:59:59+00:00",
                            "mime-type": "image/png",
                          },
                          {
                            "@id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "byte_count": 1234,
                            "data": {
                              "base64": "ey4uLn0=",
                              "json": {
                                "key": "value",
                              },
                              "links": [
                                "https://link.to/data",
                                "https://link.to/data",
                              ],
                              "sha256": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                            },
                            "description": "view from doorway, facing east, with lights off",
                            "filename": "IMG1092348.png",
                            "lastmod_time": "2021-12-31 23:59:59+00:00",
                            "mime-type": "image/png",
                          },
                        ],
                        "services": [
                          {
                            "did": "WgWxqztrNooG92RXvxSTWv",
                            "id": "string",
                            "recipientKeys": [
                              "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            ],
                            "routingKeys": [
                              "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            ],
                            "serviceEndpoint": "http://192.168.56.101:8020",
                            "type": "string",
                          },
                          {
                            "key": "value",
                          },
                        ],
                      },
                      "oob_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "our_recipient_key": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "receiver",
                      "state": "await-response",
                      "their_service": {
                        "recipientKeys": [
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        ],
                        "routingKeys": [
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                          "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        ],
                        "serviceEndpoint": "http://192.168.56.101:8020",
                      },
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/out-of-band/receive-invitation",
              "request": {
                "body": {
                  "type": "root.InvitationMessage",
                },
                "content-type": "application/json",
                "name": "ReceiveOobInvitationRequest",
                "query-parameters": {
                  "alias": {
                    "docs": "Alias for connection",
                    "type": "optional<string>",
                  },
                  "auto_accept": {
                    "docs": "Auto-accept connection (defaults to configuration)",
                    "type": "optional<boolean>",
                  },
                  "mediation_id": {
                    "docs": "Identifier for active mediation record to be used",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    },
                  },
                  "use_existing_connection": {
                    "docs": "Use an existing connection, if possible",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.OobRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "InvitationCreateRequestMetadata": {
            "docs": "Optional metadata to attach to the connection created with the invitation",
            "inline": true,
            "properties": {},
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  InvitationCreateRequestMetadata:
    docs: Optional metadata to attach to the connection created with the invitation
    properties: {}
    source:
      openapi: ../openapi.yml
    inline: true
service:
  auth: false
  base-path: ''
  endpoints:
    create_oob_invitation:
      path: /out-of-band/create-invitation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a new connection invitation
      request:
        name: InvitationCreateRequest
        query-parameters:
          auto_accept:
            type: optional<boolean>
            docs: Auto-accept connection (defaults to configuration)
          multi_use:
            type: optional<boolean>
            docs: Create invitation for multiple use (default false)
        body:
          properties:
            accept:
              type: optional<list<string>>
              docs: >-
                List of mime type in order of preference that should be use in
                responding to the message
            alias:
              type: optional<string>
              docs: Alias for connection
            attachments:
              type: optional<list<root.AttachmentDef>>
              docs: Optional invitation attachments
            handshake_protocols:
              type: optional<list<string>>
            mediation_id:
              type: optional<string>
              docs: Identifier for active mediation record to be used
              validation:
                pattern: >-
                  [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
            metadata:
              type: optional<InvitationCreateRequestMetadata>
              docs: >-
                Optional metadata to attach to the connection created with the
                invitation
            my_label:
              type: optional<string>
              docs: Label for connection invitation
            protocol_version:
              type: optional<string>
              docs: OOB protocol version
            use_public_did:
              type: optional<boolean>
              docs: Whether to use public DID in invitation
        content-type: application/json
      response:
        docs: ''
        type: root.InvitationRecord
        status-code: 200
      examples:
        - request:
            accept:
              - didcomm/aip1
              - didcomm/aip2;env=rfc19
            alias: Barry
            attachments:
              - id: attachment-0
                type: present-proof
              - id: attachment-0
                type: present-proof
            handshake_protocols:
              - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
              - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
            mediation_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            my_label: Invitation to Barry
            protocol_version: '1.1'
            use_public_did: false
          response:
            body:
              created_at: '2021-12-31 23:59:59+00:00'
              invi_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation_url: >-
                https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=
              oob_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              state: await_response
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
    receive_oob_invitation:
      path: /out-of-band/receive-invitation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Receive a new connection invitation
      request:
        body:
          type: root.InvitationMessage
        query-parameters:
          alias:
            type: optional<string>
            docs: Alias for connection
          auto_accept:
            type: optional<boolean>
            docs: Auto-accept connection (defaults to configuration)
          mediation_id:
            type: optional<string>
            docs: Identifier for active mediation record to be used
            validation:
              pattern: >-
                [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          use_existing_connection:
            type: optional<boolean>
            docs: Use an existing connection, if possible
        name: ReceiveOobInvitationRequest
        content-type: application/json
      response:
        docs: ''
        type: root.OobRecord
        status-code: 200
      examples:
        - request:
            '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
            '@type': https://didcomm.org/my-family/1.0/my-message-type
            accept:
              - didcomm/aip1
              - didcomm/aip2;env=rfc19
            handshake_protocols:
              - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
              - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
            imageUrl: http://192.168.56.101/img/logo.jpg
            label: Bob
            requests~attach:
              - '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                byte_count: 1234
                data:
                  base64: ey4uLn0=
                  json:
                    key: value
                  links:
                    - https://link.to/data
                    - https://link.to/data
                  sha256: >-
                    617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb
                description: view from doorway, facing east, with lights off
                filename: IMG1092348.png
                lastmod_time: '2021-12-31 23:59:59+00:00'
                mime-type: image/png
              - '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                byte_count: 1234
                data:
                  base64: ey4uLn0=
                  json:
                    key: value
                  links:
                    - https://link.to/data
                    - https://link.to/data
                  sha256: >-
                    617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb
                description: view from doorway, facing east, with lights off
                filename: IMG1092348.png
                lastmod_time: '2021-12-31 23:59:59+00:00'
                mime-type: image/png
            services:
              - did: WgWxqztrNooG92RXvxSTWv
                id: string
                recipientKeys:
                  - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                routingKeys:
                  - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                serviceEndpoint: http://192.168.56.101:8020
                type: string
              - key: value
          response:
            body:
              attach_thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              invi_msg_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              invitation:
                '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                '@type': https://didcomm.org/my-family/1.0/my-message-type
                accept:
                  - didcomm/aip1
                  - didcomm/aip2;env=rfc19
                handshake_protocols:
                  - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
                  - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
                imageUrl: http://192.168.56.101/img/logo.jpg
                label: Bob
                requests~attach:
                  - '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    byte_count: 1234
                    data:
                      base64: ey4uLn0=
                      json:
                        key: value
                      links:
                        - https://link.to/data
                        - https://link.to/data
                      sha256: >-
                        617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb
                    description: view from doorway, facing east, with lights off
                    filename: IMG1092348.png
                    lastmod_time: '2021-12-31 23:59:59+00:00'
                    mime-type: image/png
                  - '@id': 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    byte_count: 1234
                    data:
                      base64: ey4uLn0=
                      json:
                        key: value
                      links:
                        - https://link.to/data
                        - https://link.to/data
                      sha256: >-
                        617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb
                    description: view from doorway, facing east, with lights off
                    filename: IMG1092348.png
                    lastmod_time: '2021-12-31 23:59:59+00:00'
                    mime-type: image/png
                services:
                  - did: WgWxqztrNooG92RXvxSTWv
                    id: string
                    recipientKeys:
                      - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                    routingKeys:
                      - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
                    serviceEndpoint: http://192.168.56.101:8020
                    type: string
                  - key: value
              oob_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              our_recipient_key: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: receiver
              state: await-response
              their_service:
                recipientKeys:
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                routingKeys:
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                  - H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                serviceEndpoint: http://192.168.56.101:8020
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
  source:
    openapi: ../openapi.yml
  display-name: out-of-band
docs: Out-of-band connections
",
    },
    "presentProofV10.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Proof presentation v1.0",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "present-proof v1.0",
          "endpoints": {
            "create_free_proof_request": {
              "auth": true,
              "display-name": "Creates a presentation request not bound to any proposal or connection",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_verify": false,
                    "comment": "comment",
                    "proof_request": {
                      "name": "Proof request",
                      "nonce": "1",
                      "requested_attributes": {
                        "key": {
                          "name": "favouriteDrink",
                          "names": [
                            "age",
                            "age",
                          ],
                          "restrictions": [
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                          ],
                        },
                      },
                      "requested_predicates": {
                        "key": {
                          "name": "index",
                          "p_type": ">=",
                          "p_value": 0,
                          "restrictions": [
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                          ],
                        },
                      },
                      "version": "1.0",
                    },
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "verified",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof/create-request",
              "request": {
                "body": {
                  "properties": {
                    "auto_verify": {
                      "docs": "Verifier choice to auto-verify proof presentation",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "type": "optional<string>",
                    },
                    "proof_request": {
                      "type": "root.IndyProofRequest",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10PresentationCreateRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_pres_ex_record": {
              "auth": true,
              "display-name": "Remove an existing presentation exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/present-proof/records/{pres_ex_id}",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentProofModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_matching_pres_ex_records": {
              "auth": true,
              "display-name": "Fetch all present-proof exchange records",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "auto_present": false,
                          "auto_verify": true,
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "error_msg": "Invalid structure",
                          "initiator": "self",
                          "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "role": "prover",
                          "state": "verified",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "verified": "true",
                          "verified_msgs": [
                            "verified_msgs",
                            "verified_msgs",
                          ],
                        },
                        {
                          "auto_present": false,
                          "auto_verify": true,
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "error_msg": "Invalid structure",
                          "initiator": "self",
                          "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "role": "prover",
                          "state": "verified",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "verified": "true",
                          "verified_msgs": [
                            "verified_msgs",
                            "verified_msgs",
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/present-proof/records",
              "request": {
                "name": "GetMatchingPresExRecordsRequest",
                "query-parameters": {
                  "connection_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "role": {
                    "docs": "Role assigned in presentation exchange",
                    "type": "optional<GetMatchingPresExRecordsRequestRole>",
                  },
                  "state": {
                    "docs": "Presentation exchange state",
                    "type": "optional<GetMatchingPresExRecordsRequestState>",
                  },
                  "thread_id": {
                    "docs": "Thread identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchangeList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_pres_ex_credentials": {
              "auth": true,
              "display-name": "Fetch credentials for a presentation request from wallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": [
                      {
                        "presentation_referents": [
                          "1_age_uuid",
                          "1_age_uuid",
                        ],
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/present-proof/records/{pres_ex_id}/credentials",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetPresExCredentialsRequest",
                "query-parameters": {
                  "count": {
                    "docs": "Maximum number to retrieve",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[1-9][0-9]*$",
                    },
                  },
                  "extra_query": {
                    "docs": "(JSON) object mapping referents to extra WQL queries",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^{\s*".*?"\s*:\s*{.*?}\s*(,\s*".*?"\s*:\s*{.*?}\s*)*\s*}$",
                    },
                  },
                  "referent": {
                    "docs": "Proof request referents of interest, comma-separated",
                    "type": "optional<string>",
                  },
                  "start": {
                    "docs": "Start index",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9]*$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "list<root.IndyCredPrecis>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_pres_ex_record": {
              "auth": true,
              "display-name": "Fetch a single presentation exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "verified",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/present-proof/records/{pres_ex_id}",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "report_pres_ex_problem": {
              "auth": true,
              "display-name": "Send a problem report for presentation exchange",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "request": {
                    "description": "description",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof/records/{pres_ex_id}/problem-report",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "description": "string",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10PresentationProblemReportRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentProofModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_presentation_request": {
              "auth": true,
              "display-name": "Sends a free presentation request not bound to any proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_verify": false,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "proof_request": {
                      "name": "Proof request",
                      "nonce": "1",
                      "requested_attributes": {
                        "key": {
                          "name": "favouriteDrink",
                          "names": [
                            "age",
                            "age",
                          ],
                          "restrictions": [
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                          ],
                        },
                      },
                      "requested_predicates": {
                        "key": {
                          "name": "index",
                          "p_type": ">=",
                          "p_value": 0,
                          "restrictions": [
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                            {
                              "key": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            },
                          ],
                        },
                      },
                      "version": "1.0",
                    },
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "verified",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof/send-request",
              "request": {
                "body": {
                  "properties": {
                    "auto_verify": {
                      "docs": "Verifier choice to auto-verify proof presentation",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "proof_request": {
                      "type": "root.IndyProofRequest",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10PresentationSendRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_presentation_proposal": {
              "auth": true,
              "display-name": "Sends a presentation proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_present": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "presentation_proposal": {
                      "@type": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview",
                      "attributes": [
                        {
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "referent": "0",
                          "value": "martini",
                        },
                        {
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "mime-type": "image/jpeg",
                          "name": "favourite_drink",
                          "referent": "0",
                          "value": "martini",
                        },
                      ],
                      "predicates": [
                        {
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "name": "high_score",
                          "predicate": ">=",
                          "threshold": 0,
                        },
                        {
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "name": "high_score",
                          "predicate": ">=",
                          "threshold": 0,
                        },
                      ],
                    },
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "verified",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof/send-proposal",
              "request": {
                "body": {
                  "properties": {
                    "auto_present": {
                      "docs": "Whether to respond automatically to presentation requests, building and presenting requested proof",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "presentation_proposal": {
                      "type": "root.IndyPresPreview",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10PresentationProposalRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_proof_presentation": {
              "auth": true,
              "display-name": "Sends a proof presentation",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "request": {
                    "requested_attributes": {
                      "key": {
                        "cred_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "revealed": true,
                      },
                    },
                    "requested_predicates": {
                      "key": {
                        "cred_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "timestamp": 1640995199,
                      },
                    },
                    "self_attested_attributes": {
                      "key": "self_attested_value",
                    },
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "verified",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof/records/{pres_ex_id}/send-presentation",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "type": "root.IndyPresSpec",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_proof_presentation_request": {
              "auth": true,
              "display-name": "Sends a presentation request in reference to a proposal",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "request": {
                    "auto_verify": false,
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "verified",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof/records/{pres_ex_id}/send-request",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "auto_verify": {
                      "docs": "Verifier choice to auto-verify proof presentation",
                      "type": "optional<boolean>",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V10PresentationSendRequestToProposal",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "verify_received_presentation": {
              "auth": true,
              "display-name": "Verify a received presentation",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "presentation_exchange_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "verified",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof/records/{pres_ex_id}/verify-presentation",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V10PresentationExchange",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetMatchingPresExRecordsRequestRole": {
            "enum": [
              "prover",
              "verifier",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingPresExRecordsRequestState": {
            "enum": [
              "proposal_sent",
              "proposal_received",
              "request_sent",
              "request_received",
              "presentation_sent",
              "presentation_received",
              "verified",
              "presentation_acked",
              "abandoned",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_free_proof_request:
      path: /present-proof/create-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Creates a presentation request not bound to any proposal or connection
      request:
        name: V10PresentationCreateRequestRequest
        body:
          properties:
            auto_verify:
              type: optional<boolean>
              docs: Verifier choice to auto-verify proof presentation
            comment:
              type: optional<string>
            proof_request:
              type: root.IndyProofRequest
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V10PresentationExchange
        status-code: 200
      examples:
        - request:
            auto_verify: false
            comment: comment
            proof_request:
              name: Proof request
              nonce: '1'
              requested_attributes:
                key:
                  name: favouriteDrink
                  names:
                    - age
                    - age
                  restrictions:
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              requested_predicates:
                key:
                  name: index
                  p_type: '>='
                  p_value: 0
                  restrictions:
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              version: '1.0'
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: verified
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    get_matching_pres_ex_records:
      path: /present-proof/records
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch all present-proof exchange records
      request:
        name: GetMatchingPresExRecordsRequest
        query-parameters:
          connection_id:
            type: optional<string>
            docs: Connection identifier
            validation:
              format: uuid
          role:
            type: optional<GetMatchingPresExRecordsRequestRole>
            docs: Role assigned in presentation exchange
          state:
            type: optional<GetMatchingPresExRecordsRequestState>
            docs: Presentation exchange state
          thread_id:
            type: optional<string>
            docs: Thread identifier
            validation:
              format: uuid
      response:
        docs: ''
        type: root.V10PresentationExchangeList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - auto_present: false
                  auto_verify: true
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  error_msg: Invalid structure
                  initiator: self
                  presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  role: prover
                  state: verified
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
                  verified: 'true'
                  verified_msgs:
                    - verified_msgs
                    - verified_msgs
                - auto_present: false
                  auto_verify: true
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  error_msg: Invalid structure
                  initiator: self
                  presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  role: prover
                  state: verified
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
                  verified: 'true'
                  verified_msgs:
                    - verified_msgs
                    - verified_msgs
    get_pres_ex_record:
      path: /present-proof/records/{pres_ex_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Fetch a single presentation exchange record
      response:
        docs: ''
        type: root.V10PresentationExchange
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: verified
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    delete_pres_ex_record:
      path: /present-proof/records/{pres_ex_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Remove an existing presentation exchange record
      response:
        docs: ''
        type: root.V10PresentProofModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              key: value
    get_pres_ex_credentials:
      path: /present-proof/records/{pres_ex_id}/credentials
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Fetch credentials for a presentation request from wallet
      request:
        name: GetPresExCredentialsRequest
        query-parameters:
          count:
            type: optional<string>
            docs: Maximum number to retrieve
            validation:
              pattern: ^[1-9][0-9]*$
          extra_query:
            type: optional<string>
            docs: (JSON) object mapping referents to extra WQL queries
            validation:
              pattern: ^{\s*".*?"\s*:\s*{.*?}\s*(,\s*".*?"\s*:\s*{.*?}\s*)*\s*}$
          referent:
            type: optional<string>
            docs: Proof request referents of interest, comma-separated
          start:
            type: optional<string>
            docs: Start index
            validation:
              pattern: ^[0-9]*$
      response:
        docs: ''
        type: list<root.IndyCredPrecis>
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              - presentation_referents:
                  - 1_age_uuid
                  - 1_age_uuid
    report_pres_ex_problem:
      path: /present-proof/records/{pres_ex_id}/problem-report
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Send a problem report for presentation exchange
      request:
        name: V10PresentationProblemReportRequest
        body:
          properties:
            description: string
        content-type: application/json
      response:
        docs: ''
        type: root.V10PresentProofModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          request:
            description: description
          response:
            body:
              key: value
    send_proof_presentation:
      path: /present-proof/records/{pres_ex_id}/send-presentation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Sends a proof presentation
      request:
        body:
          type: root.IndyPresSpec
        content-type: application/json
      response:
        docs: ''
        type: root.V10PresentationExchange
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          request:
            requested_attributes:
              key:
                cred_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                revealed: true
            requested_predicates:
              key:
                cred_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                timestamp: 1640995199
            self_attested_attributes:
              key: self_attested_value
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: verified
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    send_proof_presentation_request:
      path: /present-proof/records/{pres_ex_id}/send-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Sends a presentation request in reference to a proposal
      request:
        name: V10PresentationSendRequestToProposal
        body:
          properties:
            auto_verify:
              type: optional<boolean>
              docs: Verifier choice to auto-verify proof presentation
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V10PresentationExchange
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          request:
            auto_verify: false
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: verified
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    verify_received_presentation:
      path: /present-proof/records/{pres_ex_id}/verify-presentation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Verify a received presentation
      response:
        docs: ''
        type: root.V10PresentationExchange
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: verified
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    send_presentation_proposal:
      path: /present-proof/send-proposal
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Sends a presentation proposal
      request:
        name: V10PresentationProposalRequest
        body:
          properties:
            auto_present:
              type: optional<boolean>
              docs: >-
                Whether to respond automatically to presentation requests,
                building and presenting requested proof
            comment:
              type: optional<string>
              docs: Human-readable comment
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            presentation_proposal:
              type: root.IndyPresPreview
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V10PresentationExchange
        status-code: 200
      examples:
        - request:
            auto_present: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            presentation_proposal:
              '@type': >-
                did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview
              attributes:
                - cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  mime-type: image/jpeg
                  name: favourite_drink
                  referent: '0'
                  value: martini
                - cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  mime-type: image/jpeg
                  name: favourite_drink
                  referent: '0'
                  value: martini
              predicates:
                - cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  name: high_score
                  predicate: '>='
                  threshold: 0
                - cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  name: high_score
                  predicate: '>='
                  threshold: 0
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: verified
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    send_free_presentation_request:
      path: /present-proof/send-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Sends a free presentation request not bound to any proposal
      request:
        name: V10PresentationSendRequestRequest
        body:
          properties:
            auto_verify:
              type: optional<boolean>
              docs: Verifier choice to auto-verify proof presentation
            comment:
              type: optional<string>
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            proof_request:
              type: root.IndyProofRequest
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V10PresentationExchange
        status-code: 200
      examples:
        - request:
            auto_verify: false
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            proof_request:
              name: Proof request
              nonce: '1'
              requested_attributes:
                key:
                  name: favouriteDrink
                  names:
                    - age
                    - age
                  restrictions:
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              requested_predicates:
                key:
                  name: index
                  p_type: '>='
                  p_value: 0
                  restrictions:
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                    - key: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
              version: '1.0'
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              presentation_exchange_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: verified
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
  source:
    openapi: ../openapi.yml
  display-name: present-proof v1.0
docs: Proof presentation v1.0
types:
  GetMatchingPresExRecordsRequestRole:
    enum:
      - prover
      - verifier
    source:
      openapi: ../openapi.yml
  GetMatchingPresExRecordsRequestState:
    enum:
      - proposal_sent
      - proposal_received
      - request_sent
      - request_received
      - presentation_sent
      - presentation_received
      - verified
      - presentation_acked
      - abandoned
    source:
      openapi: ../openapi.yml
",
    },
    "presentProofV20.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Proof presentation v2.0",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "present-proof v2.0",
          "endpoints": {
            "create_proof_request": {
              "auth": true,
              "display-name": "Creates a presentation request not bound to any proposal or connection",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_verify": false,
                    "comment": "comment",
                    "presentation_request": {},
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "proposal-sent",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof-2.0/create-request",
              "request": {
                "body": {
                  "properties": {
                    "auto_verify": {
                      "docs": "Verifier choice to auto-verify proof presentation",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "type": "optional<string>",
                    },
                    "presentation_request": {
                      "type": "root.V20PresRequestByFormat",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20PresCreateRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_pres_ex_record": {
              "auth": true,
              "display-name": "Remove an existing presentation exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/present-proof-2.0/records/{pres_ex_id}",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresentProofModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_matching_pres_ex_records-v2": {
              "auth": true,
              "display-name": "Fetch all present-proof exchange records",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "auto_present": false,
                          "auto_verify": true,
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "error_msg": "Invalid structure",
                          "initiator": "self",
                          "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "role": "prover",
                          "state": "proposal-sent",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "verified": "true",
                          "verified_msgs": [
                            "verified_msgs",
                            "verified_msgs",
                          ],
                        },
                        {
                          "auto_present": false,
                          "auto_verify": true,
                          "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "error_msg": "Invalid structure",
                          "initiator": "self",
                          "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "role": "prover",
                          "state": "proposal-sent",
                          "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "trace": true,
                          "updated_at": "2021-12-31 23:59:59+00:00",
                          "verified": "true",
                          "verified_msgs": [
                            "verified_msgs",
                            "verified_msgs",
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/present-proof-2.0/records",
              "request": {
                "name": "GetMatchingPresExRecordsV2Request",
                "query-parameters": {
                  "connection_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "role": {
                    "docs": "Role assigned in presentation exchange",
                    "type": "optional<GetMatchingPresExRecordsV2RequestRole>",
                  },
                  "state": {
                    "docs": "Presentation exchange state",
                    "type": "optional<GetMatchingPresExRecordsV2RequestState>",
                  },
                  "thread_id": {
                    "docs": "Thread identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecordList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_pres_ex_credentials-v2": {
              "auth": true,
              "display-name": "Fetch credentials from wallet for presentation request",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": [
                      {
                        "presentation_referents": [
                          "1_age_uuid",
                          "1_age_uuid",
                        ],
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/present-proof-2.0/records/{pres_ex_id}/credentials",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetPresExCredentialsV2Request",
                "query-parameters": {
                  "count": {
                    "docs": "Maximum number to retrieve",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[1-9][0-9]*$",
                    },
                  },
                  "extra_query": {
                    "docs": "(JSON) object mapping referents to extra WQL queries",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^{\s*".*?"\s*:\s*{.*?}\s*(,\s*".*?"\s*:\s*{.*?}\s*)*\s*}$",
                    },
                  },
                  "referent": {
                    "docs": "Proof request referents of interest, comma-separated",
                    "type": "optional<string>",
                  },
                  "start": {
                    "docs": "Start index",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9]*$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "list<root.IndyCredPrecis>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_pres_ex_record": {
              "auth": true,
              "display-name": "Fetch a single presentation exchange record",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "proposal-sent",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/present-proof-2.0/records/{pres_ex_id}",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "report_pres_ex_problem": {
              "auth": true,
              "display-name": "Send a problem report for presentation exchange",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "request": {
                    "description": "description",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof-2.0/records/{pres_ex_id}/problem-report",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "description": "string",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20PresProblemReportRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresentProofModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_free_presentation_request": {
              "auth": true,
              "display-name": "Sends a free presentation request not bound to any proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_verify": false,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "presentation_request": {},
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "proposal-sent",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof-2.0/send-request",
              "request": {
                "body": {
                  "properties": {
                    "auto_verify": {
                      "docs": "Verifier choice to auto-verify proof presentation",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "presentation_request": {
                      "type": "root.V20PresRequestByFormat",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20PresSendRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_presentation_proposal": {
              "auth": true,
              "display-name": "Sends a presentation proposal",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "auto_present": true,
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "presentation_proposal": {},
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "proposal-sent",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof-2.0/send-proposal",
              "request": {
                "body": {
                  "properties": {
                    "auto_present": {
                      "docs": "Whether to respond automatically to presentation requests, building and presenting requested proof",
                      "type": "optional<boolean>",
                    },
                    "comment": {
                      "docs": "Human-readable comment",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection identifier",
                      "type": "string",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "presentation_proposal": {
                      "type": "root.V20PresProposalByFormat",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20PresProposalRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_proof_presentation": {
              "auth": true,
              "display-name": "Sends a proof presentation",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "request": {
                    "trace": true,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "proposal-sent",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof-2.0/records/{pres_ex_id}/send-presentation",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "dif": {
                      "type": "optional<root.V20PresSpecByFormatRequestDif>",
                    },
                    "indy": {
                      "type": "optional<root.V20PresSpecByFormatRequestIndy>",
                    },
                    "trace": {
                      "docs": "Record trace information, based on agent configuration",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20PresSpecByFormatRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "send_proof_presentation_request": {
              "auth": true,
              "display-name": "Sends a presentation request in reference to a proposal",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "request": {
                    "auto_verify": false,
                    "trace": false,
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "proposal-sent",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof-2.0/records/{pres_ex_id}/send-request",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "auto_verify": {
                      "docs": "Verifier choice to auto-verify proof presentation",
                      "type": "optional<boolean>",
                    },
                    "trace": {
                      "docs": "Whether to trace event (default false)",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "V20PresentationSendRequestToProposal",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "verify_received_presentation": {
              "auth": true,
              "display-name": "Verify a received presentation",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "pres_ex_id": "pres_ex_id",
                  },
                  "response": {
                    "body": {
                      "auto_present": false,
                      "auto_verify": true,
                      "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "created_at": "2021-12-31 23:59:59+00:00",
                      "error_msg": "Invalid structure",
                      "initiator": "self",
                      "pres_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "role": "prover",
                      "state": "proposal-sent",
                      "thread_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "trace": true,
                      "updated_at": "2021-12-31 23:59:59+00:00",
                      "verified": "true",
                      "verified_msgs": [
                        "verified_msgs",
                        "verified_msgs",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/present-proof-2.0/records/{pres_ex_id}/verify-presentation",
              "path-parameters": {
                "pres_ex_id": {
                  "docs": "Presentation exchange identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.V20PresExRecord",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetMatchingPresExRecordsV2RequestRole": {
            "enum": [
              "prover",
              "verifier",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMatchingPresExRecordsV2RequestState": {
            "enum": [
              {
                "name": "ProposalSent",
                "value": "proposal-sent",
              },
              {
                "name": "ProposalReceived",
                "value": "proposal-received",
              },
              {
                "name": "RequestSent",
                "value": "request-sent",
              },
              {
                "name": "RequestReceived",
                "value": "request-received",
              },
              {
                "name": "PresentationSent",
                "value": "presentation-sent",
              },
              {
                "name": "PresentationReceived",
                "value": "presentation-received",
              },
              "done",
              "abandoned",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_proof_request:
      path: /present-proof-2.0/create-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Creates a presentation request not bound to any proposal or connection
      request:
        name: V20PresCreateRequestRequest
        body:
          properties:
            auto_verify:
              type: optional<boolean>
              docs: Verifier choice to auto-verify proof presentation
            comment:
              type: optional<string>
            presentation_request:
              type: root.V20PresRequestByFormat
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V20PresExRecord
        status-code: 200
      examples:
        - request:
            auto_verify: false
            comment: comment
            presentation_request: {}
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: proposal-sent
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    get_matching_pres_ex_records-v2:
      path: /present-proof-2.0/records
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch all present-proof exchange records
      request:
        name: GetMatchingPresExRecordsV2Request
        query-parameters:
          connection_id:
            type: optional<string>
            docs: Connection identifier
            validation:
              format: uuid
          role:
            type: optional<GetMatchingPresExRecordsV2RequestRole>
            docs: Role assigned in presentation exchange
          state:
            type: optional<GetMatchingPresExRecordsV2RequestState>
            docs: Presentation exchange state
          thread_id:
            type: optional<string>
            docs: Thread identifier
            validation:
              format: uuid
      response:
        docs: ''
        type: root.V20PresExRecordList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - auto_present: false
                  auto_verify: true
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  error_msg: Invalid structure
                  initiator: self
                  pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  role: prover
                  state: proposal-sent
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
                  verified: 'true'
                  verified_msgs:
                    - verified_msgs
                    - verified_msgs
                - auto_present: false
                  auto_verify: true
                  connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  created_at: '2021-12-31 23:59:59+00:00'
                  error_msg: Invalid structure
                  initiator: self
                  pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  role: prover
                  state: proposal-sent
                  thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  trace: true
                  updated_at: '2021-12-31 23:59:59+00:00'
                  verified: 'true'
                  verified_msgs:
                    - verified_msgs
                    - verified_msgs
    get_pres_ex_record:
      path: /present-proof-2.0/records/{pres_ex_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Fetch a single presentation exchange record
      response:
        docs: ''
        type: root.V20PresExRecord
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: proposal-sent
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    delete_pres_ex_record:
      path: /present-proof-2.0/records/{pres_ex_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Remove an existing presentation exchange record
      response:
        docs: ''
        type: root.V20PresentProofModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              key: value
    get_pres_ex_credentials-v2:
      path: /present-proof-2.0/records/{pres_ex_id}/credentials
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Fetch credentials from wallet for presentation request
      request:
        name: GetPresExCredentialsV2Request
        query-parameters:
          count:
            type: optional<string>
            docs: Maximum number to retrieve
            validation:
              pattern: ^[1-9][0-9]*$
          extra_query:
            type: optional<string>
            docs: (JSON) object mapping referents to extra WQL queries
            validation:
              pattern: ^{\s*".*?"\s*:\s*{.*?}\s*(,\s*".*?"\s*:\s*{.*?}\s*)*\s*}$
          referent:
            type: optional<string>
            docs: Proof request referents of interest, comma-separated
          start:
            type: optional<string>
            docs: Start index
            validation:
              pattern: ^[0-9]*$
      response:
        docs: ''
        type: list<root.IndyCredPrecis>
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              - presentation_referents:
                  - 1_age_uuid
                  - 1_age_uuid
    report_pres_ex_problem:
      path: /present-proof-2.0/records/{pres_ex_id}/problem-report
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Send a problem report for presentation exchange
      request:
        name: V20PresProblemReportRequest
        body:
          properties:
            description: string
        content-type: application/json
      response:
        docs: ''
        type: root.V20PresentProofModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          request:
            description: description
          response:
            body:
              key: value
    send_proof_presentation:
      path: /present-proof-2.0/records/{pres_ex_id}/send-presentation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Sends a proof presentation
      request:
        name: V20PresSpecByFormatRequest
        body:
          properties:
            dif:
              type: optional<root.V20PresSpecByFormatRequestDif>
            indy:
              type: optional<root.V20PresSpecByFormatRequestIndy>
            trace:
              type: optional<boolean>
              docs: Record trace information, based on agent configuration
        content-type: application/json
      response:
        docs: ''
        type: root.V20PresExRecord
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          request:
            trace: true
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: proposal-sent
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    send_proof_presentation_request:
      path: /present-proof-2.0/records/{pres_ex_id}/send-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Sends a presentation request in reference to a proposal
      request:
        name: V20PresentationSendRequestToProposal
        body:
          properties:
            auto_verify:
              type: optional<boolean>
              docs: Verifier choice to auto-verify proof presentation
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V20PresExRecord
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          request:
            auto_verify: false
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: proposal-sent
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    verify_received_presentation:
      path: /present-proof-2.0/records/{pres_ex_id}/verify-presentation
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        pres_ex_id:
          type: string
          docs: Presentation exchange identifier
      display-name: Verify a received presentation
      response:
        docs: ''
        type: root.V20PresExRecord
        status-code: 200
      examples:
        - path-parameters:
            pres_ex_id: pres_ex_id
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: proposal-sent
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    send_presentation_proposal:
      path: /present-proof-2.0/send-proposal
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Sends a presentation proposal
      request:
        name: V20PresProposalRequest
        body:
          properties:
            auto_present:
              type: optional<boolean>
              docs: >-
                Whether to respond automatically to presentation requests,
                building and presenting requested proof
            comment:
              type: optional<string>
              docs: Human-readable comment
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            presentation_proposal:
              type: root.V20PresProposalByFormat
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V20PresExRecord
        status-code: 200
      examples:
        - request:
            auto_present: true
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            presentation_proposal: {}
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: proposal-sent
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
    send_free_presentation_request:
      path: /present-proof-2.0/send-request
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Sends a free presentation request not bound to any proposal
      request:
        name: V20PresSendRequestRequest
        body:
          properties:
            auto_verify:
              type: optional<boolean>
              docs: Verifier choice to auto-verify proof presentation
            comment:
              type: optional<string>
            connection_id:
              type: string
              docs: Connection identifier
              validation:
                format: uuid
            presentation_request:
              type: root.V20PresRequestByFormat
            trace:
              type: optional<boolean>
              docs: Whether to trace event (default false)
        content-type: application/json
      response:
        docs: ''
        type: root.V20PresExRecord
        status-code: 200
      examples:
        - request:
            auto_verify: false
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            presentation_request: {}
            trace: false
          response:
            body:
              auto_present: false
              auto_verify: true
              connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              created_at: '2021-12-31 23:59:59+00:00'
              error_msg: Invalid structure
              initiator: self
              pres_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              role: prover
              state: proposal-sent
              thread_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              trace: true
              updated_at: '2021-12-31 23:59:59+00:00'
              verified: 'true'
              verified_msgs:
                - verified_msgs
                - verified_msgs
  source:
    openapi: ../openapi.yml
  display-name: present-proof v2.0
docs: Proof presentation v2.0
types:
  GetMatchingPresExRecordsV2RequestRole:
    enum:
      - prover
      - verifier
    source:
      openapi: ../openapi.yml
  GetMatchingPresExRecordsV2RequestState:
    enum:
      - value: proposal-sent
        name: ProposalSent
      - value: proposal-received
        name: ProposalReceived
      - value: request-sent
        name: RequestSent
      - value: request-received
        name: RequestReceived
      - value: presentation-sent
        name: PresentationSent
      - value: presentation-received
        name: PresentationReceived
      - done
      - abandoned
    source:
      openapi: ../openapi.yml
",
    },
    "resolver.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "did resolver interface.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "resolver",
          "endpoints": {
            "get_did_document": {
              "auth": true,
              "display-name": "Retrieve doc for requested did",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "did": "did",
                  },
                  "response": {
                    "body": {
                      "did_document": {},
                      "metadata": {},
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/resolver/resolve/{did}",
              "path-parameters": {
                "did": {
                  "docs": "DID",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.ResolutionResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_did_document:
      path: /resolver/resolve/{did}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        did:
          type: string
          docs: DID
      display-name: Retrieve doc for requested did
      response:
        docs: ''
        type: root.ResolutionResult
        status-code: 200
      examples:
        - path-parameters:
            did: did
          response:
            body:
              did_document: {}
              metadata: {}
  source:
    openapi: ../openapi.yml
  display-name: resolver
docs: did resolver interface.
",
    },
    "revocation.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Revocation registry management",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "revocation",
          "endpoints": {
            "clear_pending_revocations": {
              "auth": true,
              "display-name": "Clear pending revocations",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "purge": {
                      "key": [
                        "12345",
                        "12345",
                      ],
                    },
                  },
                  "response": {
                    "body": {
                      "rrid2crid": {
                        "key": [
                          "12345",
                          "12345",
                        ],
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/revocation/clear-pending-revocations",
              "request": {
                "body": {
                  "properties": {
                    "purge": {
                      "docs": "Credential revocation ids by revocation registry id: omit for all, specify null or empty list for all pending per revocation registry",
                      "type": "optional<map<string, list<string>>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ClearPendingRevocationsRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.PublishRevocations",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create_revocation_registry": {
              "auth": true,
              "display-name": "Creates a new revocation registry",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "credential_definition_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "max_cred_num": 1000,
                  },
                  "response": {
                    "body": {
                      "result": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "error_msg": "Revocation registry undefined",
                        "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                        "max_cred_num": 1000,
                        "pending_pub": [
                          "23",
                          "23",
                        ],
                        "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "revoc_def_type": "CL_ACCUM",
                        "revoc_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "tag": "tag",
                        "tails_hash": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "tails_local_path": "tails_local_path",
                        "tails_public_uri": "tails_public_uri",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/revocation/create-registry",
              "request": {
                "body": {
                  "properties": {
                    "credential_definition_id": {
                      "docs": "Credential definition identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                      },
                    },
                    "max_cred_num": {
                      "docs": "Revocation registry size",
                      "type": "optional<integer>",
                      "validation": {
                        "exclusiveMax": undefined,
                        "exclusiveMin": undefined,
                        "max": 32768,
                        "min": 4,
                        "multipleOf": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RevRegCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete_tails_file": {
              "auth": true,
              "display-name": "Delete the tail files",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "message": "message",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/revocation/registry/delete-tails-file",
              "request": {
                "name": "DeleteTailsFileRequest",
                "query-parameters": {
                  "cred_def_id": {
                    "docs": "Credential definition identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                    },
                  },
                  "rev_reg_id": {
                    "docs": "Revocation registry identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TailsDeleteResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "download_tails_file": {
              "auth": true,
              "display-name": "Download tails file",
              "docs": undefined,
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/tails-file",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "tails file",
                "status-code": 200,
                "type": "file",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "download_tails_file_sparse": {
              "auth": true,
              "display-name": "Download tails file",
              "docs": undefined,
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/tails-file-less-deets",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "tails file",
                "status-code": 200,
                "type": "file",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_active_registry_for_cred_def_id": {
              "auth": true,
              "display-name": "Get current active revocation registry by credential definition id",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "cred_def_id": "cred_def_id",
                  },
                  "response": {
                    "body": {
                      "result": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "error_msg": "Revocation registry undefined",
                        "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                        "max_cred_num": 1000,
                        "pending_pub": [
                          "23",
                          "23",
                        ],
                        "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "revoc_def_type": "CL_ACCUM",
                        "revoc_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "tag": "tag",
                        "tails_hash": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "tails_local_path": "tails_local_path",
                        "tails_public_uri": "tails_public_uri",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/active-registry/{cred_def_id}",
              "path-parameters": {
                "cred_def_id": {
                  "docs": "Credential definition identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_created_registries": {
              "auth": true,
              "display-name": "Search for matching revocation registries that current agent created",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "rev_reg_ids": [
                        "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/registries/created",
              "request": {
                "name": "GetCreatedRegistriesRequest",
                "query-parameters": {
                  "cred_def_id": {
                    "docs": "Credential definition identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                    },
                  },
                  "state": {
                    "docs": "Revocation registry state",
                    "type": "optional<GetCreatedRegistriesRequestState>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegsCreated",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_credential_revocation_record": {
              "auth": true,
              "display-name": "Get credential revocation status",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "result": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "cred_ex_version": "cred_ex_version",
                        "cred_rev_id": "12345",
                        "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "issued",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/credential-record",
              "request": {
                "name": "GetCredentialRevocationRecordRequest",
                "query-parameters": {
                  "cred_ex_id": {
                    "docs": "Credential exchange identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    },
                  },
                  "cred_rev_id": {
                    "docs": "Credential revocation identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[1-9][0-9]*$",
                    },
                  },
                  "rev_reg_id": {
                    "docs": "Revocation registry identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredRevRecordResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_issued_credential_details": {
              "auth": true,
              "display-name": "Get details of credentials issued against revocation registry",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "cred_ex_version": "cred_ex_version",
                          "cred_rev_id": "12345",
                          "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                          "state": "issued",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                        {
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "cred_ex_version": "cred_ex_version",
                          "cred_rev_id": "12345",
                          "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                          "state": "issued",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/issued/details",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredRevRecordDetailsResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_issued_credentials_count": {
              "auth": true,
              "display-name": "Get number of credentials issued against revocation registry",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "response": {
                    "body": {
                      "result": 0,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/issued",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegIssuedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_published_credential_details": {
              "auth": true,
              "display-name": "Get details of revoked credentials from ledger",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/issued/indy_recs",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.CredRevIndyRecordsResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_revocation_registry": {
              "auth": true,
              "display-name": "Get revocation registry by revocation registry id",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "response": {
                    "body": {
                      "result": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "error_msg": "Revocation registry undefined",
                        "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                        "max_cred_num": 1000,
                        "pending_pub": [
                          "23",
                          "23",
                        ],
                        "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "revoc_def_type": "CL_ACCUM",
                        "revoc_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "tag": "tag",
                        "tails_hash": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "tails_local_path": "tails_local_path",
                        "tails_public_uri": "tails_public_uri",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish_revocation_registry_definition": {
              "auth": true,
              "display-name": "Send revocation registry definition to ledger",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "response": {
                    "body": {
                      "sent": {
                        "result": {
                          "created_at": "2021-12-31 23:59:59+00:00",
                          "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                          "error_msg": "Revocation registry undefined",
                          "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                          "max_cred_num": 1000,
                          "pending_pub": [
                            "23",
                            "23",
                          ],
                          "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "revoc_def_type": "CL_ACCUM",
                          "revoc_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                          "state": "active",
                          "tag": "tag",
                          "tails_hash": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                          "tails_local_path": "tails_local_path",
                          "tails_public_uri": "tails_public_uri",
                          "updated_at": "2021-12-31 23:59:59+00:00",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/definition",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "PublishRevocationRegistryDefinitionRequest",
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                  "create_transaction_for_endorser": {
                    "docs": "Create Transaction For Endorser's signature",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TxnOrRevRegResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish_revocation_registry_entry": {
              "auth": true,
              "display-name": "Send revocation registry entry to ledger",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "response": {
                    "body": {
                      "result": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "error_msg": "Revocation registry undefined",
                        "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                        "max_cred_num": 1000,
                        "pending_pub": [
                          "23",
                          "23",
                        ],
                        "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "revoc_def_type": "CL_ACCUM",
                        "revoc_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "tag": "tag",
                        "tails_hash": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "tails_local_path": "tails_local_path",
                        "tails_public_uri": "tails_public_uri",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/entry",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "PublishRevocationRegistryEntryRequest",
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                  "create_transaction_for_endorser": {
                    "docs": "Create Transaction For Endorser's signature",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish_revocations": {
              "auth": true,
              "display-name": "Publish pending revocations to ledger",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "rrid2crid": {
                      "key": [
                        "12345",
                        "12345",
                      ],
                    },
                  },
                  "response": {
                    "body": {
                      "sent": {
                        "rrid2crid": {
                          "key": [
                            "12345",
                            "12345",
                          ],
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/revocation/publish-revocations",
              "request": {
                "body": {
                  "type": "root.PublishRevocations",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TxnOrPublishRevocationsResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "revoke_issued_credential": {
              "auth": true,
              "display-name": "Revoke an issued credential",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "comment": "comment",
                    "connection_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "cred_ex_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "cred_rev_id": "12345",
                    "notify": true,
                    "notify_version": "v1_0",
                    "publish": true,
                    "rev_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                    "thread_id": "thread_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/revocation/revoke",
              "request": {
                "body": {
                  "properties": {
                    "comment": {
                      "docs": "Optional comment to include in revocation notification",
                      "type": "optional<string>",
                    },
                    "connection_id": {
                      "docs": "Connection ID to which the revocation notification will be sent; required if notify is true",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                      },
                    },
                    "cred_ex_id": {
                      "docs": "Credential exchange identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                      },
                    },
                    "cred_rev_id": {
                      "docs": "Credential revocation identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[1-9][0-9]*$",
                      },
                    },
                    "notify": {
                      "docs": "Send a notification to the credential recipient",
                      "type": "optional<boolean>",
                    },
                    "notify_version": {
                      "docs": "Specify which version of the revocation notification should be sent",
                      "type": "optional<RevokeRequestNotifyVersion>",
                    },
                    "publish": {
                      "docs": "(True) publish revocation to ledger immediately, or (default, False) mark it pending",
                      "type": "optional<boolean>",
                    },
                    "rev_reg_id": {
                      "docs": "Revocation registry identifier",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                      },
                    },
                    "thread_id": {
                      "docs": "Thread ID of the credential exchange message thread resulting in the credential now being revoked; required if notify is true",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RevokeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevocationModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_revocation_registry_state": {
              "auth": true,
              "display-name": "Set revocation registry state manually",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "query-parameters": {
                    "state": "init",
                  },
                  "response": {
                    "body": {
                      "result": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "error_msg": "Revocation registry undefined",
                        "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                        "max_cred_num": 1000,
                        "pending_pub": [
                          "23",
                          "23",
                        ],
                        "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "revoc_def_type": "CL_ACCUM",
                        "revoc_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "tag": "tag",
                        "tails_hash": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "tails_local_path": "tails_local_path",
                        "tails_public_uri": "tails_public_uri",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/set-state",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "SetRevocationRegistryStateRequest",
                "query-parameters": {
                  "state": {
                    "docs": "Revocation registry state to set",
                    "type": "SetRevocationRegistryStateRequestState",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update_revocation_entry_state": {
              "auth": true,
              "display-name": "Fix revocation state in wallet and return number of updated entries",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "query-parameters": {
                    "apply_ledger_update": true,
                  },
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/fix-revocation-entry-state",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "request": {
                "name": "UpdateRevocationEntryStateRequest",
                "query-parameters": {
                  "apply_ledger_update": {
                    "docs": "Apply updated accumulator transaction to ledger",
                    "type": "boolean",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegWalletUpdatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update_revocation_registry": {
              "auth": true,
              "display-name": "Update revocation registry with new public URI to its tails file",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "request": {
                    "tails_public_uri": "http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file",
                  },
                  "response": {
                    "body": {
                      "result": {
                        "created_at": "2021-12-31 23:59:59+00:00",
                        "cred_def_id": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "error_msg": "Revocation registry undefined",
                        "issuer_did": "WgWxqztrNooG92RXvxSTWv",
                        "max_cred_num": 1000,
                        "pending_pub": [
                          "23",
                          "23",
                        ],
                        "record_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "revoc_def_type": "CL_ACCUM",
                        "revoc_reg_id": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "state": "active",
                        "tag": "tag",
                        "tails_hash": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "tails_local_path": "tails_local_path",
                        "tails_public_uri": "tails_public_uri",
                        "updated_at": "2021-12-31 23:59:59+00:00",
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "tails_public_uri": {
                      "docs": "Public URI to the tails file",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RevRegUpdateTailsFileUri",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevRegResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upload_tails_file": {
              "auth": true,
              "display-name": "Upload local tails file to server",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "rev_reg_id": "rev_reg_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/revocation/registry/{rev_reg_id}/tails-file",
              "path-parameters": {
                "rev_reg_id": {
                  "docs": "Revocation Registry identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.RevocationModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetCreatedRegistriesRequestState": {
            "enum": [
              "init",
              "generated",
              "posted",
              "active",
              "full",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RevokeRequestNotifyVersion": {
            "docs": "Specify which version of the revocation notification should be sent",
            "enum": [
              "v1_0",
              "v2_0",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SetRevocationRegistryStateRequestState": {
            "enum": [
              "init",
              "generated",
              "posted",
              "active",
              "full",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_active_registry_for_cred_def_id:
      path: /revocation/active-registry/{cred_def_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        cred_def_id:
          type: string
          docs: Credential definition identifier
      display-name: Get current active revocation registry by credential definition id
      response:
        docs: ''
        type: root.RevRegResult
        status-code: 200
      examples:
        - path-parameters:
            cred_def_id: cred_def_id
          response:
            body:
              result:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                error_msg: Revocation registry undefined
                issuer_did: WgWxqztrNooG92RXvxSTWv
                max_cred_num: 1000
                pending_pub:
                  - '23'
                  - '23'
                record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                revoc_def_type: CL_ACCUM
                revoc_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                tag: tag
                tails_hash: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                tails_local_path: tails_local_path
                tails_public_uri: tails_public_uri
                updated_at: '2021-12-31 23:59:59+00:00'
    clear_pending_revocations:
      path: /revocation/clear-pending-revocations
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Clear pending revocations
      request:
        name: ClearPendingRevocationsRequest
        body:
          properties:
            purge:
              type: optional<map<string, list<string>>>
              docs: >-
                Credential revocation ids by revocation registry id: omit for
                all, specify null or empty list for all pending per revocation
                registry
        content-type: application/json
      response:
        docs: ''
        type: root.PublishRevocations
        status-code: 200
      examples:
        - request:
            purge:
              key:
                - '12345'
                - '12345'
          response:
            body:
              rrid2crid:
                key:
                  - '12345'
                  - '12345'
    create_revocation_registry:
      path: /revocation/create-registry
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Creates a new revocation registry
      request:
        name: RevRegCreateRequest
        body:
          properties:
            credential_definition_id:
              type: optional<string>
              docs: Credential definition identifier
              validation:
                pattern: >-
                  ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            max_cred_num:
              type: optional<integer>
              docs: Revocation registry size
              validation:
                min: 4
                max: 32768
        content-type: application/json
      response:
        docs: ''
        type: root.RevRegResult
        status-code: 200
      examples:
        - request:
            credential_definition_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
            max_cred_num: 1000
          response:
            body:
              result:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                error_msg: Revocation registry undefined
                issuer_did: WgWxqztrNooG92RXvxSTWv
                max_cred_num: 1000
                pending_pub:
                  - '23'
                  - '23'
                record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                revoc_def_type: CL_ACCUM
                revoc_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                tag: tag
                tails_hash: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                tails_local_path: tails_local_path
                tails_public_uri: tails_public_uri
                updated_at: '2021-12-31 23:59:59+00:00'
    get_credential_revocation_record:
      path: /revocation/credential-record
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Get credential revocation status
      request:
        name: GetCredentialRevocationRecordRequest
        query-parameters:
          cred_ex_id:
            type: optional<string>
            docs: Credential exchange identifier
            validation:
              pattern: >-
                [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
          cred_rev_id:
            type: optional<string>
            docs: Credential revocation identifier
            validation:
              pattern: ^[1-9][0-9]*$
          rev_reg_id:
            type: optional<string>
            docs: Revocation registry identifier
            validation:
              pattern: >-
                ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      response:
        docs: ''
        type: root.CredRevRecordResult
        status-code: 200
      examples:
        - response:
            body:
              result:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                cred_ex_version: cred_ex_version
                cred_rev_id: '12345'
                record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                rev_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: issued
                updated_at: '2021-12-31 23:59:59+00:00'
    publish_revocations:
      path: /revocation/publish-revocations
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Publish pending revocations to ledger
      request:
        body:
          type: root.PublishRevocations
        content-type: application/json
      response:
        docs: ''
        type: root.TxnOrPublishRevocationsResult
        status-code: 200
      examples:
        - request:
            rrid2crid:
              key:
                - '12345'
                - '12345'
          response:
            body:
              sent:
                rrid2crid:
                  key:
                    - '12345'
                    - '12345'
    get_created_registries:
      path: /revocation/registries/created
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Search for matching revocation registries that current agent created
      request:
        name: GetCreatedRegistriesRequest
        query-parameters:
          cred_def_id:
            type: optional<string>
            docs: Credential definition identifier
            validation:
              pattern: >-
                ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          state:
            type: optional<GetCreatedRegistriesRequestState>
            docs: Revocation registry state
      response:
        docs: ''
        type: root.RevRegsCreated
        status-code: 200
      examples:
        - response:
            body:
              rev_reg_ids:
                - >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                - >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
    delete_tails_file:
      path: /revocation/registry/delete-tails-file
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Delete the tail files
      request:
        name: DeleteTailsFileRequest
        query-parameters:
          cred_def_id:
            type: optional<string>
            docs: Credential definition identifier
            validation:
              pattern: >-
                ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          rev_reg_id:
            type: optional<string>
            docs: Revocation registry identifier
            validation:
              pattern: >-
                ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
      response:
        docs: ''
        type: root.TailsDeleteResponse
        status-code: 200
      examples:
        - response:
            body:
              message: message
    get_revocation_registry:
      path: /revocation/registry/{rev_reg_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Get revocation registry by revocation registry id
      response:
        docs: ''
        type: root.RevRegResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          response:
            body:
              result:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                error_msg: Revocation registry undefined
                issuer_did: WgWxqztrNooG92RXvxSTWv
                max_cred_num: 1000
                pending_pub:
                  - '23'
                  - '23'
                record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                revoc_def_type: CL_ACCUM
                revoc_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                tag: tag
                tails_hash: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                tails_local_path: tails_local_path
                tails_public_uri: tails_public_uri
                updated_at: '2021-12-31 23:59:59+00:00'
    update_revocation_registry:
      path: /revocation/registry/{rev_reg_id}
      method: PATCH
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Update revocation registry with new public URI to its tails file
      request:
        name: RevRegUpdateTailsFileUri
        body:
          properties:
            tails_public_uri:
              type: string
              docs: Public URI to the tails file
        content-type: application/json
      response:
        docs: ''
        type: root.RevRegResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          request:
            tails_public_uri: >-
              http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file
          response:
            body:
              result:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                error_msg: Revocation registry undefined
                issuer_did: WgWxqztrNooG92RXvxSTWv
                max_cred_num: 1000
                pending_pub:
                  - '23'
                  - '23'
                record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                revoc_def_type: CL_ACCUM
                revoc_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                tag: tag
                tails_hash: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                tails_local_path: tails_local_path
                tails_public_uri: tails_public_uri
                updated_at: '2021-12-31 23:59:59+00:00'
    publish_revocation_registry_definition:
      path: /revocation/registry/{rev_reg_id}/definition
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Send revocation registry definition to ledger
      request:
        name: PublishRevocationRegistryDefinitionRequest
        query-parameters:
          conn_id:
            type: optional<string>
            docs: Connection identifier
          create_transaction_for_endorser:
            type: optional<boolean>
            docs: Create Transaction For Endorser's signature
      response:
        docs: ''
        type: root.TxnOrRevRegResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          response:
            body:
              sent:
                result:
                  created_at: '2021-12-31 23:59:59+00:00'
                  cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  error_msg: Revocation registry undefined
                  issuer_did: WgWxqztrNooG92RXvxSTWv
                  max_cred_num: 1000
                  pending_pub:
                    - '23'
                    - '23'
                  record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  revoc_def_type: CL_ACCUM
                  revoc_reg_id: >-
                    WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                  state: active
                  tag: tag
                  tails_hash: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                  tails_local_path: tails_local_path
                  tails_public_uri: tails_public_uri
                  updated_at: '2021-12-31 23:59:59+00:00'
    publish_revocation_registry_entry:
      path: /revocation/registry/{rev_reg_id}/entry
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Send revocation registry entry to ledger
      request:
        name: PublishRevocationRegistryEntryRequest
        query-parameters:
          conn_id:
            type: optional<string>
            docs: Connection identifier
          create_transaction_for_endorser:
            type: optional<boolean>
            docs: Create Transaction For Endorser's signature
      response:
        docs: ''
        type: root.RevRegResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          response:
            body:
              result:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                error_msg: Revocation registry undefined
                issuer_did: WgWxqztrNooG92RXvxSTWv
                max_cred_num: 1000
                pending_pub:
                  - '23'
                  - '23'
                record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                revoc_def_type: CL_ACCUM
                revoc_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                tag: tag
                tails_hash: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                tails_local_path: tails_local_path
                tails_public_uri: tails_public_uri
                updated_at: '2021-12-31 23:59:59+00:00'
    update_revocation_entry_state:
      path: /revocation/registry/{rev_reg_id}/fix-revocation-entry-state
      method: PUT
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Fix revocation state in wallet and return number of updated entries
      request:
        name: UpdateRevocationEntryStateRequest
        query-parameters:
          apply_ledger_update:
            type: boolean
            docs: Apply updated accumulator transaction to ledger
      response:
        docs: ''
        type: root.RevRegWalletUpdatedResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          query-parameters:
            apply_ledger_update: true
          response:
            body: {}
    get_issued_credentials_count:
      path: /revocation/registry/{rev_reg_id}/issued
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Get number of credentials issued against revocation registry
      response:
        docs: ''
        type: root.RevRegIssuedResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          response:
            body:
              result: 0
    get_issued_credential_details:
      path: /revocation/registry/{rev_reg_id}/issued/details
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Get details of credentials issued against revocation registry
      response:
        docs: ''
        type: root.CredRevRecordDetailsResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          response:
            body:
              results:
                - created_at: '2021-12-31 23:59:59+00:00'
                  cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  cred_ex_version: cred_ex_version
                  cred_rev_id: '12345'
                  record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  rev_reg_id: >-
                    WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                  state: issued
                  updated_at: '2021-12-31 23:59:59+00:00'
                - created_at: '2021-12-31 23:59:59+00:00'
                  cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                  cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  cred_ex_version: cred_ex_version
                  cred_rev_id: '12345'
                  record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  rev_reg_id: >-
                    WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                  state: issued
                  updated_at: '2021-12-31 23:59:59+00:00'
    get_published_credential_details:
      path: /revocation/registry/{rev_reg_id}/issued/indy_recs
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Get details of revoked credentials from ledger
      response:
        docs: ''
        type: root.CredRevIndyRecordsResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          response:
            body: {}
    set_revocation_registry_state:
      path: /revocation/registry/{rev_reg_id}/set-state
      method: PATCH
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Set revocation registry state manually
      request:
        name: SetRevocationRegistryStateRequest
        query-parameters:
          state:
            type: SetRevocationRegistryStateRequestState
            docs: Revocation registry state to set
      response:
        docs: ''
        type: root.RevRegResult
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          query-parameters:
            state: init
          response:
            body:
              result:
                created_at: '2021-12-31 23:59:59+00:00'
                cred_def_id: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
                error_msg: Revocation registry undefined
                issuer_did: WgWxqztrNooG92RXvxSTWv
                max_cred_num: 1000
                pending_pub:
                  - '23'
                  - '23'
                record_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                revoc_def_type: CL_ACCUM
                revoc_reg_id: >-
                  WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
                state: active
                tag: tag
                tails_hash: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                tails_local_path: tails_local_path
                tails_public_uri: tails_public_uri
                updated_at: '2021-12-31 23:59:59+00:00'
    download_tails_file_sparse:
      path: /revocation/registry/{rev_reg_id}/tails-file-less-deets
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Download tails file
      response:
        docs: tails file
        type: file
        status-code: 200
    download_tails_file:
      path: /revocation/registry/{rev_reg_id}/tails-file
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Download tails file
      response:
        docs: tails file
        type: file
        status-code: 200
    upload_tails_file:
      path: /revocation/registry/{rev_reg_id}/tails-file
      method: PUT
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        rev_reg_id:
          type: string
          docs: Revocation Registry identifier
      display-name: Upload local tails file to server
      response:
        docs: ''
        type: root.RevocationModuleResponse
        status-code: 200
      examples:
        - path-parameters:
            rev_reg_id: rev_reg_id
          response:
            body:
              key: value
    revoke_issued_credential:
      path: /revocation/revoke
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Revoke an issued credential
      request:
        name: RevokeRequest
        body:
          properties:
            comment:
              type: optional<string>
              docs: Optional comment to include in revocation notification
            connection_id:
              type: optional<string>
              docs: >-
                Connection ID to which the revocation notification will be sent;
                required if notify is true
              validation:
                pattern: >-
                  [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
            cred_ex_id:
              type: optional<string>
              docs: Credential exchange identifier
              validation:
                pattern: >-
                  [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
            cred_rev_id:
              type: optional<string>
              docs: Credential revocation identifier
              validation:
                pattern: ^[1-9][0-9]*$
            notify:
              type: optional<boolean>
              docs: Send a notification to the credential recipient
            notify_version:
              type: optional<RevokeRequestNotifyVersion>
              docs: >-
                Specify which version of the revocation notification should be
                sent
            publish:
              type: optional<boolean>
              docs: >-
                (True) publish revocation to ledger immediately, or (default,
                False) mark it pending
            rev_reg_id:
              type: optional<string>
              docs: Revocation registry identifier
              validation:
                pattern: >-
                  ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
            thread_id:
              type: optional<string>
              docs: >-
                Thread ID of the credential exchange message thread resulting in
                the credential now being revoked; required if notify is true
        content-type: application/json
      response:
        docs: ''
        type: root.RevocationModuleResponse
        status-code: 200
      examples:
        - request:
            comment: comment
            connection_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            cred_ex_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            cred_rev_id: '12345'
            notify: true
            notify_version: v1_0
            publish: true
            rev_reg_id: >-
              WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
            thread_id: thread_id
          response:
            body:
              key: value
  source:
    openapi: ../openapi.yml
  display-name: revocation
docs: Revocation registry management
types:
  GetCreatedRegistriesRequestState:
    enum:
      - init
      - generated
      - posted
      - active
      - full
    source:
      openapi: ../openapi.yml
  SetRevocationRegistryStateRequestState:
    enum:
      - init
      - generated
      - posted
      - active
      - full
    source:
      openapi: ../openapi.yml
  RevokeRequestNotifyVersion:
    enum:
      - v1_0
      - v2_0
    docs: Specify which version of the revocation notification should be sent
    inline: true
    source:
      openapi: ../openapi.yml
",
    },
    "schema.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Schema operations",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "schema",
          "endpoints": {
            "get_matching_created_schemas": {
              "auth": true,
              "display-name": "Search for matching schema that agent originated",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "schema_ids": [
                        "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/schemas/created",
              "request": {
                "name": "GetMatchingCreatedSchemasRequest",
                "query-parameters": {
                  "schema_id": {
                    "docs": "Schema identifier",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                    },
                  },
                  "schema_issuer_did": {
                    "docs": "Schema issuer DID",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "schema_name": {
                    "docs": "Schema name",
                    "type": "optional<string>",
                  },
                  "schema_version": {
                    "docs": "Schema version",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[0-9.]+$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.SchemasCreatedResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_schema": {
              "auth": true,
              "display-name": "Gets a schema from the ledger",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "schema_id": "schema_id",
                  },
                  "response": {
                    "body": {
                      "schema": {
                        "attrNames": [
                          "score",
                          "score",
                        ],
                        "id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        "name": "schema_name",
                        "seqNo": 10,
                        "ver": "1.0",
                        "version": "1.0",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/schemas/{schema_id}",
              "path-parameters": {
                "schema_id": {
                  "docs": "Schema identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.SchemaGetResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish_schema": {
              "auth": true,
              "display-name": "Sends a schema to the ledger",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "attributes": [
                      "score",
                      "score",
                    ],
                    "schema_name": "prefs",
                    "schema_version": "1.0",
                  },
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/schemas",
              "request": {
                "body": {
                  "properties": {
                    "attributes": {
                      "docs": "List of schema attributes",
                      "type": "list<string>",
                    },
                    "schema_name": {
                      "docs": "Schema name",
                      "type": "string",
                    },
                    "schema_version": {
                      "docs": "Schema version",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[0-9.]+$",
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SchemaSendRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                  "create_transaction_for_endorser": {
                    "docs": "Create Transaction For Endorser's signature",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.TxnOrSchemaSendResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "write_schema_record_to_wallet": {
              "auth": true,
              "display-name": "Writes a schema non-secret record to the wallet",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "schema_id": "schema_id",
                  },
                  "response": {
                    "body": {
                      "schema": {
                        "attrNames": [
                          "score",
                          "score",
                        ],
                        "id": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        "name": "schema_name",
                        "seqNo": 10,
                        "ver": "1.0",
                        "version": "1.0",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/schemas/{schema_id}/write_record",
              "path-parameters": {
                "schema_id": {
                  "docs": "Schema identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.SchemaGetResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    publish_schema:
      path: /schemas
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Sends a schema to the ledger
      request:
        name: SchemaSendRequest
        query-parameters:
          conn_id:
            type: optional<string>
            docs: Connection identifier
          create_transaction_for_endorser:
            type: optional<boolean>
            docs: Create Transaction For Endorser's signature
        body:
          properties:
            attributes:
              docs: List of schema attributes
              type: list<string>
            schema_name:
              type: string
              docs: Schema name
            schema_version:
              type: string
              docs: Schema version
              validation:
                pattern: ^[0-9.]+$
        content-type: application/json
      response:
        docs: ''
        type: root.TxnOrSchemaSendResult
        status-code: 200
      examples:
        - request:
            attributes:
              - score
              - score
            schema_name: prefs
            schema_version: '1.0'
          response:
            body: {}
    get_matching_created_schemas:
      path: /schemas/created
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Search for matching schema that agent originated
      request:
        name: GetMatchingCreatedSchemasRequest
        query-parameters:
          schema_id:
            type: optional<string>
            docs: Schema identifier
            validation:
              pattern: >-
                ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          schema_issuer_did:
            type: optional<string>
            docs: Schema issuer DID
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          schema_name:
            type: optional<string>
            docs: Schema name
          schema_version:
            type: optional<string>
            docs: Schema version
            validation:
              pattern: ^[0-9.]+$
      response:
        docs: ''
        type: root.SchemasCreatedResult
        status-code: 200
      examples:
        - response:
            body:
              schema_ids:
                - WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
                - WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    get_schema:
      path: /schemas/{schema_id}
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        schema_id:
          type: string
          docs: Schema identifier
      display-name: Gets a schema from the ledger
      response:
        docs: ''
        type: root.SchemaGetResult
        status-code: 200
      examples:
        - path-parameters:
            schema_id: schema_id
          response:
            body:
              schema:
                attrNames:
                  - score
                  - score
                id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
                name: schema_name
                seqNo: 10
                ver: '1.0'
                version: '1.0'
    write_schema_record_to_wallet:
      path: /schemas/{schema_id}/write_record
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        schema_id:
          type: string
          docs: Schema identifier
      display-name: Writes a schema non-secret record to the wallet
      response:
        docs: ''
        type: root.SchemaGetResult
        status-code: 200
      examples:
        - path-parameters:
            schema_id: schema_id
          response:
            body:
              schema:
                attrNames:
                  - score
                  - score
                id: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
                name: schema_name
                seqNo: 10
                ver: '1.0'
                version: '1.0'
  source:
    openapi: ../openapi.yml
  display-name: schema
docs: Schema operations
",
    },
    "server.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get_config": {
              "auth": true,
              "display-name": "Fetch the server configuration",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {},
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/status/config",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AdminConfig",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_liveliness": {
              "auth": true,
              "display-name": "Liveliness check",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "alive": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/status/live",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AdminStatusLiveliness",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_loaded_plugins": {
              "auth": true,
              "display-name": "Fetch the list of loaded plugins",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "result": [
                        "result",
                        "result",
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/plugins",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AdminModules",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_readiness": {
              "auth": true,
              "display-name": "Readiness check",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "ready": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/status/ready",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AdminStatusReadiness",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_status": {
              "auth": true,
              "display-name": "Fetch the server status",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "label": "label",
                      "version": "version",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/status",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AdminStatus",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "reset_statistics": {
              "auth": true,
              "display-name": "Reset statistics",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/status/reset",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AdminReset",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "shutdown_server": {
              "auth": true,
              "display-name": "Shut down server",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/shutdown",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.AdminShutdown",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_loaded_plugins:
      path: /plugins
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch the list of loaded plugins
      response:
        docs: ''
        type: root.AdminModules
        status-code: 200
      examples:
        - response:
            body:
              result:
                - result
                - result
    shutdown_server:
      path: /shutdown
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Shut down server
      response:
        docs: ''
        type: root.AdminShutdown
        status-code: 200
      examples:
        - response:
            body:
              key: value
    get_status:
      path: /status
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch the server status
      response:
        docs: ''
        type: root.AdminStatus
        status-code: 200
      examples:
        - response:
            body:
              label: label
              version: version
    get_config:
      path: /status/config
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch the server configuration
      response:
        docs: ''
        type: root.AdminConfig
        status-code: 200
      examples:
        - response:
            body: {}
    get_liveliness:
      path: /status/live
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Liveliness check
      response:
        docs: ''
        type: root.AdminStatusLiveliness
        status-code: 200
      examples:
        - response:
            body:
              alive: true
    get_readiness:
      path: /status/ready
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Readiness check
      response:
        docs: ''
        type: root.AdminStatusReadiness
        status-code: 200
      examples:
        - response:
            body:
              ready: true
    reset_statistics:
      path: /status/reset
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Reset statistics
      response:
        docs: ''
        type: root.AdminReset
        status-code: 200
      examples:
        - response:
            body:
              key: value
  source:
    openapi: ../openapi.yml
",
    },
    "trustping.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Trust-ping over connection",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "trustping",
          "endpoints": {
            "send_ping": {
              "auth": true,
              "display-name": "Send a trust ping to a connection",
              "docs": undefined,
              "examples": [
                {
                  "path-parameters": {
                    "conn_id": "conn_id",
                  },
                  "request": {
                    "comment": "comment",
                  },
                  "response": {
                    "body": {
                      "thread_id": "thread_id",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/connections/{conn_id}/send-ping",
              "path-parameters": {
                "conn_id": {
                  "docs": "Connection identifier",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "comment": {
                      "docs": "Comment for the ping message",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "PingRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.PingRequestResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    send_ping:
      path: /connections/{conn_id}/send-ping
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        conn_id:
          type: string
          docs: Connection identifier
      display-name: Send a trust ping to a connection
      request:
        name: PingRequest
        body:
          properties:
            comment:
              type: optional<string>
              docs: Comment for the ping message
        content-type: application/json
      response:
        docs: ''
        type: root.PingRequestResponse
        status-code: 200
      examples:
        - path-parameters:
            conn_id: conn_id
          request:
            comment: comment
          response:
            body:
              thread_id: thread_id
  source:
    openapi: ../openapi.yml
  display-name: trustping
docs: Trust-ping over connection
",
    },
    "wallet.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "DID and tag policy management",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "wallet",
          "endpoints": {
            "create_local_did": {
              "auth": true,
              "display-name": "Create a local DID",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "method": "sov",
                    "seed": "000000000000000000000000Trustee1",
                  },
                  "response": {
                    "body": {
                      "result": {
                        "did": "did:peer:WgWxqztrNooG92RXvxSTWv",
                        "key_type": "ed25519",
                        "method": "sov",
                        "posture": "wallet_only",
                        "verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/wallet/did/create",
              "request": {
                "body": {
                  "properties": {
                    "method": {
                      "docs": "Method for the requested DID.Supported methods are 'key', 'sov', and any other registered method.",
                      "type": "optional<string>",
                    },
                    "options": {
                      "type": "optional<root.DidCreateOptions>",
                    },
                    "seed": {
                      "docs": "Optional seed to use for DID, Must beenabled in configuration before use.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "DIDCreate",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.DIDResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_did_endpoint": {
              "auth": true,
              "display-name": "Query DID endpoint in wallet",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "did": "did",
                  },
                  "response": {
                    "body": {
                      "did": "WgWxqztrNooG92RXvxSTWv",
                      "endpoint": "https://myhost:8021",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/wallet/get-did-endpoint",
              "request": {
                "name": "GetDidEndpointRequest",
                "query-parameters": {
                  "did": {
                    "docs": "DID of interest",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.DIDEndpoint",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_dids": {
              "auth": true,
              "display-name": "List wallet DIDs",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "did": "did:peer:WgWxqztrNooG92RXvxSTWv",
                          "key_type": "ed25519",
                          "method": "sov",
                          "posture": "wallet_only",
                          "verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        },
                        {
                          "did": "did:peer:WgWxqztrNooG92RXvxSTWv",
                          "key_type": "ed25519",
                          "method": "sov",
                          "posture": "wallet_only",
                          "verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/wallet/did",
              "request": {
                "name": "GetDidsRequest",
                "query-parameters": {
                  "did": {
                    "docs": "DID of interest",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$",
                    },
                  },
                  "key_type": {
                    "docs": "Key type to query for.",
                    "type": "optional<GetDidsRequestKeyType>",
                  },
                  "method": {
                    "docs": "DID method to query for. e.g. sov to only fetch indy/sov DIDs",
                    "type": "optional<GetDidsRequestMethod>",
                  },
                  "posture": {
                    "docs": "Whether DID is current public DID, posted to ledger but current public DID, or local to the wallet",
                    "type": "optional<GetDidsRequestPosture>",
                  },
                  "verkey": {
                    "docs": "Verification key of interest",
                    "type": "optional<string>",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.DIDList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get_public_did": {
              "auth": true,
              "display-name": "Fetch the current public DID",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "result": {
                        "did": "did:peer:WgWxqztrNooG92RXvxSTWv",
                        "key_type": "ed25519",
                        "method": "sov",
                        "posture": "wallet_only",
                        "verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/wallet/did/public",
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.DIDResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "rotate_keypair": {
              "auth": true,
              "display-name": "Rotate keypair for a DID not posted to the ledger",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "did": "did",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/wallet/did/local/rotate-keypair",
              "request": {
                "name": "RotateKeypairRequest",
                "query-parameters": {
                  "did": {
                    "docs": "DID of interest",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.WalletModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_did_endpoint": {
              "auth": true,
              "display-name": "Update endpoint in wallet and on ledger if posted to it",
              "docs": undefined,
              "examples": [
                {
                  "request": {
                    "did": "WgWxqztrNooG92RXvxSTWv",
                    "endpoint": "https://myhost:8021",
                    "endpoint_type": "Endpoint",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/wallet/set-did-endpoint",
              "request": {
                "body": {
                  "properties": {
                    "did": {
                      "docs": "DID of interest",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                      },
                    },
                    "endpoint": {
                      "docs": "Endpoint to set (omit to delete)",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": "^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                      },
                    },
                    "endpoint_type": {
                      "docs": "Endpoint type to set (default 'Endpoint'); affects only public or posted DIDs",
                      "type": "optional<DidEndpointWithTypeEndpointType>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "DIDEndpointWithType",
                "path-parameters": undefined,
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                  "create_transaction_for_endorser": {
                    "docs": "Create Transaction For Endorser's signature",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.WalletModuleResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "set_public_did": {
              "auth": true,
              "display-name": "Assign the current public DID",
              "docs": undefined,
              "examples": [
                {
                  "query-parameters": {
                    "did": "did",
                  },
                  "response": {
                    "body": {
                      "result": {
                        "did": "did:peer:WgWxqztrNooG92RXvxSTWv",
                        "key_type": "ed25519",
                        "method": "sov",
                        "posture": "wallet_only",
                        "verkey": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/wallet/did/public",
              "request": {
                "name": "SetPublicDidRequest",
                "query-parameters": {
                  "conn_id": {
                    "docs": "Connection identifier",
                    "type": "optional<string>",
                  },
                  "create_transaction_for_endorser": {
                    "docs": "Create Transaction For Endorser's signature",
                    "type": "optional<boolean>",
                  },
                  "did": {
                    "docs": "DID of interest",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                    },
                  },
                  "mediation_id": {
                    "docs": "Mediation identifier",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "status-code": 200,
                "type": "root.DIDResult",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "DidEndpointWithTypeEndpointType": {
            "docs": "Endpoint type to set (default 'Endpoint'); affects only public or posted DIDs",
            "enum": [
              "Endpoint",
              "Profile",
              "LinkedDomains",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDidsRequestKeyType": {
            "enum": [
              "ed25519",
              "bls12381g2",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDidsRequestMethod": {
            "enum": [
              "key",
              "sov",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetDidsRequestPosture": {
            "enum": [
              "public",
              "posted",
              "wallet_only",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetDidsRequestKeyType:
    enum:
      - ed25519
      - bls12381g2
    source:
      openapi: ../openapi.yml
  GetDidsRequestMethod:
    enum:
      - key
      - sov
    source:
      openapi: ../openapi.yml
  GetDidsRequestPosture:
    enum:
      - public
      - posted
      - wallet_only
    source:
      openapi: ../openapi.yml
  DidEndpointWithTypeEndpointType:
    enum:
      - Endpoint
      - Profile
      - LinkedDomains
    docs: >-
      Endpoint type to set (default 'Endpoint'); affects only public or posted
      DIDs
    inline: true
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get_dids:
      path: /wallet/did
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: List wallet DIDs
      request:
        name: GetDidsRequest
        query-parameters:
          did:
            type: optional<string>
            docs: DID of interest
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$
          key_type:
            type: optional<GetDidsRequestKeyType>
            docs: Key type to query for.
          method:
            type: optional<GetDidsRequestMethod>
            docs: DID method to query for. e.g. sov to only fetch indy/sov DIDs
          posture:
            type: optional<GetDidsRequestPosture>
            docs: >-
              Whether DID is current public DID, posted to ledger but current
              public DID, or local to the wallet
          verkey:
            type: optional<string>
            docs: Verification key of interest
            validation:
              pattern: >-
                ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
      response:
        docs: ''
        type: root.DIDList
        status-code: 200
      examples:
        - response:
            body:
              results:
                - did: did:peer:WgWxqztrNooG92RXvxSTWv
                  key_type: ed25519
                  method: sov
                  posture: wallet_only
                  verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
                - did: did:peer:WgWxqztrNooG92RXvxSTWv
                  key_type: ed25519
                  method: sov
                  posture: wallet_only
                  verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    create_local_did:
      path: /wallet/did/create
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Create a local DID
      request:
        name: DIDCreate
        body:
          properties:
            method:
              type: optional<string>
              docs: >-
                Method for the requested DID.Supported methods are 'key', 'sov',
                and any other registered method.
            options:
              type: optional<root.DidCreateOptions>
            seed:
              type: optional<string>
              docs: >-
                Optional seed to use for DID, Must beenabled in configuration
                before use.
        content-type: application/json
      response:
        docs: ''
        type: root.DIDResult
        status-code: 200
      examples:
        - request:
            method: sov
            seed: 000000000000000000000000Trustee1
          response:
            body:
              result:
                did: did:peer:WgWxqztrNooG92RXvxSTWv
                key_type: ed25519
                method: sov
                posture: wallet_only
                verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    rotate_keypair:
      path: /wallet/did/local/rotate-keypair
      method: PATCH
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Rotate keypair for a DID not posted to the ledger
      request:
        name: RotateKeypairRequest
        query-parameters:
          did:
            type: string
            docs: DID of interest
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      response:
        docs: ''
        type: root.WalletModuleResponse
        status-code: 200
      examples:
        - query-parameters:
            did: did
          response:
            body:
              key: value
    get_public_did:
      path: /wallet/did/public
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Fetch the current public DID
      response:
        docs: ''
        type: root.DIDResult
        status-code: 200
      examples:
        - response:
            body:
              result:
                did: did:peer:WgWxqztrNooG92RXvxSTWv
                key_type: ed25519
                method: sov
                posture: wallet_only
                verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    set_public_did:
      path: /wallet/did/public
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Assign the current public DID
      request:
        name: SetPublicDidRequest
        query-parameters:
          did:
            type: string
            docs: DID of interest
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          conn_id:
            type: optional<string>
            docs: Connection identifier
          create_transaction_for_endorser:
            type: optional<boolean>
            docs: Create Transaction For Endorser's signature
          mediation_id:
            type: optional<string>
            docs: Mediation identifier
      response:
        docs: ''
        type: root.DIDResult
        status-code: 200
      examples:
        - query-parameters:
            did: did
          response:
            body:
              result:
                did: did:peer:WgWxqztrNooG92RXvxSTWv
                key_type: ed25519
                method: sov
                posture: wallet_only
                verkey: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    get_did_endpoint:
      path: /wallet/get-did-endpoint
      method: GET
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Query DID endpoint in wallet
      request:
        name: GetDidEndpointRequest
        query-parameters:
          did:
            type: string
            docs: DID of interest
            validation:
              pattern: >-
                ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
      response:
        docs: ''
        type: root.DIDEndpoint
        status-code: 200
      examples:
        - query-parameters:
            did: did
          response:
            body:
              did: WgWxqztrNooG92RXvxSTWv
              endpoint: https://myhost:8021
    set_did_endpoint:
      path: /wallet/set-did-endpoint
      method: POST
      auth: true
      source:
        openapi: ../openapi.yml
      display-name: Update endpoint in wallet and on ledger if posted to it
      request:
        name: DIDEndpointWithType
        query-parameters:
          conn_id:
            type: optional<string>
            docs: Connection identifier
          create_transaction_for_endorser:
            type: optional<boolean>
            docs: Create Transaction For Endorser's signature
        body:
          properties:
            did:
              type: string
              docs: DID of interest
              validation:
                pattern: >-
                  ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            endpoint:
              type: optional<string>
              docs: Endpoint to set (omit to delete)
              validation:
                pattern: >-
                  ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
            endpoint_type:
              type: optional<DidEndpointWithTypeEndpointType>
              docs: >-
                Endpoint type to set (default 'Endpoint'); affects only public
                or posted DIDs
        content-type: application/json
      response:
        docs: ''
        type: root.WalletModuleResponse
        status-code: 200
      examples:
        - request:
            did: WgWxqztrNooG92RXvxSTWv
            endpoint: https://myhost:8021
            endpoint_type: Endpoint
          response:
            body:
              key: value
  source:
    openapi: ../openapi.yml
  display-name: wallet
docs: DID and tag policy management
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "AuthorizationHeader",
      "auth-schemes": {
        "AuthorizationHeader": {
          "header": "Authorization",
          "name": "apiKey",
          "type": "string",
        },
      },
      "default-environment": "Default",
      "display-name": "Aries Cloud Agent",
      "environments": {
        "Default": "/",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Aries Cloud Agent
environments:
  Default: /
default-environment: Default
auth-schemes:
  AuthorizationHeader:
    header: Authorization
    name: apiKey
    type: string
auth: AuthorizationHeader
",
  },
}