{
  "type": "openapi",
  "value": {
    "openapi": "3.0.3",
    "info": {
      "title": "Merge HRIS API",
      "version": "1.0",
      "description": "The unified API for building rich integrations with multiple HR Information System platforms.",
      "contact": {
        "name": "Merge Team",
        "url": "https://www.merge.dev/",
        "email": "hello@merge.dev"
      }
    },
    "paths": {
      "/account-details": {
        "get": {
          "operationId": "account_details_retrieve",
          "description": "Get details for a linked account.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "account-details"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountDetails"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/account-token/{public_token}": {
        "get": {
          "operationId": "account_token_retrieve",
          "description": "Returns the account token for the end user with the provided public token.",
          "parameters": [
            {
              "in": "path",
              "name": "public_token",
              "schema": {
                "type": "string"
              },
              "required": true
            }
          ],
          "tags": [
            "account-token"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountToken"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/available-actions": {
        "get": {
          "operationId": "available_actions_retrieve",
          "description": "Returns a list of models and actions available for an account.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "available-actions"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AvailableActions"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/bank-info": {
        "get": {
          "operationId": "bank_info_list",
          "description": "Returns a list of `BankInfo` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "account_type",
              "schema": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "CHECKING",
                  "SAVINGS"
                ]
              },
              "description": "If provided, will only return BankInfo's with this account type. Options: ('SAVINGS', 'CHECKING')\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING"
            },
            {
              "in": "query",
              "name": "bank_name",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "If provided, will only return BankInfo's with this bank name."
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "employee_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return bank accounts for this employee.",
              "examples": {
                "EmployeeId": {
                  "summary": "employee_id"
                }
              }
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee": {
                  "value": "employee",
                  "summary": "Expand Employee"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "in": "query",
              "name": "order_by",
              "schema": {
                "type": "string",
                "enum": [
                  "-remote_created_at",
                  "remote_created_at"
                ],
                "x-fern-enum": {
                  "-remote_created_at": {
                    "name": "RemoteCreatedAtDescending"
                  },
                  "remote_created_at": {
                    "name": "RemoteCreatedAtAscending"
                  }
                }
              },
              "description": "Overrides the default ordering for this endpoint."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "account_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesAccountType": {
                  "value": "account_type",
                  "summary": "Original Enum Values Account_type"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "account_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesAccountType": {
                  "value": "account_type",
                  "summary": "Original Enum Values Account_type"
                }
              }
            }
          ],
          "tags": [
            "bank-info"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedBankInfoList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/bank-info/{id}": {
        "get": {
          "operationId": "bank_info_retrieve",
          "description": "Returns a `BankInfo` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee": {
                  "value": "employee",
                  "summary": "Expand Employee"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "account_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesAccountType": {
                  "value": "account_type",
                  "summary": "Original Enum Values Account_type"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "account_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesAccountType": {
                  "value": "account_type",
                  "summary": "Original Enum Values Account_type"
                }
              }
            }
          ],
          "tags": [
            "bank-info"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BankInfo"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/benefits": {
        "get": {
          "operationId": "benefits_list",
          "description": "Returns a list of `Benefit` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "employee_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will return the benefits associated with the employee.",
              "examples": {
                "EmployeeId": {
                  "summary": "employee_id"
                }
              }
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee": {
                  "value": "employee",
                  "summary": "Expand Employee"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            }
          ],
          "tags": [
            "benefits"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedBenefitList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/benefits/{id}": {
        "get": {
          "operationId": "benefits_retrieve",
          "description": "Returns a `Benefit` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee": {
                  "value": "employee",
                  "summary": "Expand Employee"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            }
          ],
          "tags": [
            "benefits"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Benefit"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/companies": {
        "get": {
          "operationId": "companies_list",
          "description": "Returns a list of `Company` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            }
          ],
          "tags": [
            "companies"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedCompanyList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/companies/{id}": {
        "get": {
          "operationId": "companies_retrieve",
          "description": "Returns a `Company` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            }
          ],
          "tags": [
            "companies"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Company"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/delete-account": {
        "post": {
          "operationId": "delete_account_create",
          "description": "Delete a linked account.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "delete-account"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "No response body"
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/employee-payroll-runs": {
        "get": {
          "operationId": "employee_payroll_runs_list",
          "description": "Returns a list of `EmployeePayrollRun` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "employee_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employee payroll runs for this employee.",
              "examples": {
                "EmployeeId": {
                  "summary": "employee_id"
                }
              }
            },
            {
              "in": "query",
              "name": "ended_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employee payroll runs ended after this datetime."
            },
            {
              "in": "query",
              "name": "ended_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employee payroll runs ended before this datetime."
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee",
                  "employee,payroll_run",
                  "payroll_run"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee,PayrollRun": {
                  "value": "employee,payroll_run",
                  "summary": "Expand Employee, Payroll_run"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "payroll_run_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employee payroll runs for this employee.",
              "examples": {
                "PayrollRunId": {
                  "summary": "payroll_run_id"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "started_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employee payroll runs started after this datetime."
            },
            {
              "in": "query",
              "name": "started_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employee payroll runs started before this datetime."
            }
          ],
          "tags": [
            "employee-payroll-runs"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedEmployeePayrollRunList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
        }
      },
      "/employee-payroll-runs/{id}": {
        "get": {
          "operationId": "employee_payroll_runs_retrieve",
          "description": "Returns an `EmployeePayrollRun` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee",
                  "employee,payroll_run",
                  "payroll_run"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee,PayrollRun": {
                  "value": "employee,payroll_run",
                  "summary": "Expand Employee, Payroll_run"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            }
          ],
          "tags": [
            "employee-payroll-runs"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmployeePayrollRun"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
        }
      },
      "/employees": {
        "get": {
          "operationId": "employees_list",
          "description": "Returns a list of `Employee` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "company_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employees for this company.",
              "examples": {
                "CompanyId": {
                  "summary": "company_id"
                }
              }
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "display_full_name",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "If provided, will only return employees with this display name."
            },
            {
              "in": "query",
              "name": "employment_status",
              "schema": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "ACTIVE",
                  "INACTIVE",
                  "PENDING"
                ]
              },
              "description": "If provided, will only return employees with this employment status.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE"
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "company",
                  "company,pay_group",
                  "employments",
                  "employments,company",
                  "employments,company,pay_group",
                  "employments,groups",
                  "employments,groups,company",
                  "employments,groups,company,pay_group",
                  "employments,groups,home_location",
                  "employments,groups,home_location,company",
                  "employments,groups,home_location,company,pay_group",
                  "employments,groups,home_location,manager",
                  "employments,groups,home_location,manager,company",
                  "employments,groups,home_location,manager,company,pay_group",
                  "employments,groups,home_location,manager,pay_group",
                  "employments,groups,home_location,manager,team",
                  "employments,groups,home_location,manager,team,company",
                  "employments,groups,home_location,manager,team,company,pay_group",
                  "employments,groups,home_location,manager,team,pay_group",
                  "employments,groups,home_location,pay_group",
                  "employments,groups,home_location,team",
                  "employments,groups,home_location,team,company",
                  "employments,groups,home_location,team,company,pay_group",
                  "employments,groups,home_location,team,pay_group",
                  "employments,groups,home_location,work_location",
                  "employments,groups,home_location,work_location,company",
                  "employments,groups,home_location,work_location,company,pay_group",
                  "employments,groups,home_location,work_location,manager",
                  "employments,groups,home_location,work_location,manager,company",
                  "employments,groups,home_location,work_location,manager,company,pay_group",
                  "employments,groups,home_location,work_location,manager,pay_group",
                  "employments,groups,home_location,work_location,manager,team",
                  "employments,groups,home_location,work_location,manager,team,company",
                  "employments,groups,home_location,work_location,manager,team,company,pay_group",
                  "employments,groups,home_location,work_location,manager,team,pay_group",
                  "employments,groups,home_location,work_location,pay_group",
                  "employments,groups,home_location,work_location,team",
                  "employments,groups,home_location,work_location,team,company",
                  "employments,groups,home_location,work_location,team,company,pay_group",
                  "employments,groups,home_location,work_location,team,pay_group",
                  "employments,groups,manager",
                  "employments,groups,manager,company",
                  "employments,groups,manager,company,pay_group",
                  "employments,groups,manager,pay_group",
                  "employments,groups,manager,team",
                  "employments,groups,manager,team,company",
                  "employments,groups,manager,team,company,pay_group",
                  "employments,groups,manager,team,pay_group",
                  "employments,groups,pay_group",
                  "employments,groups,team",
                  "employments,groups,team,company",
                  "employments,groups,team,company,pay_group",
                  "employments,groups,team,pay_group",
                  "employments,groups,work_location",
                  "employments,groups,work_location,company",
                  "employments,groups,work_location,company,pay_group",
                  "employments,groups,work_location,manager",
                  "employments,groups,work_location,manager,company",
                  "employments,groups,work_location,manager,company,pay_group",
                  "employments,groups,work_location,manager,pay_group",
                  "employments,groups,work_location,manager,team",
                  "employments,groups,work_location,manager,team,company",
                  "employments,groups,work_location,manager,team,company,pay_group",
                  "employments,groups,work_location,manager,team,pay_group",
                  "employments,groups,work_location,pay_group",
                  "employments,groups,work_location,team",
                  "employments,groups,work_location,team,company",
                  "employments,groups,work_location,team,company,pay_group",
                  "employments,groups,work_location,team,pay_group",
                  "employments,home_location",
                  "employments,home_location,company",
                  "employments,home_location,company,pay_group",
                  "employments,home_location,manager",
                  "employments,home_location,manager,company",
                  "employments,home_location,manager,company,pay_group",
                  "employments,home_location,manager,pay_group",
                  "employments,home_location,manager,team",
                  "employments,home_location,manager,team,company",
                  "employments,home_location,manager,team,company,pay_group",
                  "employments,home_location,manager,team,pay_group",
                  "employments,home_location,pay_group",
                  "employments,home_location,team",
                  "employments,home_location,team,company",
                  "employments,home_location,team,company,pay_group",
                  "employments,home_location,team,pay_group",
                  "employments,home_location,work_location",
                  "employments,home_location,work_location,company",
                  "employments,home_location,work_location,company,pay_group",
                  "employments,home_location,work_location,manager",
                  "employments,home_location,work_location,manager,company",
                  "employments,home_location,work_location,manager,company,pay_group",
                  "employments,home_location,work_location,manager,pay_group",
                  "employments,home_location,work_location,manager,team",
                  "employments,home_location,work_location,manager,team,company",
                  "employments,home_location,work_location,manager,team,company,pay_group",
                  "employments,home_location,work_location,manager,team,pay_group",
                  "employments,home_location,work_location,pay_group",
                  "employments,home_location,work_location,team",
                  "employments,home_location,work_location,team,company",
                  "employments,home_location,work_location,team,company,pay_group",
                  "employments,home_location,work_location,team,pay_group",
                  "employments,manager",
                  "employments,manager,company",
                  "employments,manager,company,pay_group",
                  "employments,manager,pay_group",
                  "employments,manager,team",
                  "employments,manager,team,company",
                  "employments,manager,team,company,pay_group",
                  "employments,manager,team,pay_group",
                  "employments,pay_group",
                  "employments,team",
                  "employments,team,company",
                  "employments,team,company,pay_group",
                  "employments,team,pay_group",
                  "employments,work_location",
                  "employments,work_location,company",
                  "employments,work_location,company,pay_group",
                  "employments,work_location,manager",
                  "employments,work_location,manager,company",
                  "employments,work_location,manager,company,pay_group",
                  "employments,work_location,manager,pay_group",
                  "employments,work_location,manager,team",
                  "employments,work_location,manager,team,company",
                  "employments,work_location,manager,team,company,pay_group",
                  "employments,work_location,manager,team,pay_group",
                  "employments,work_location,pay_group",
                  "employments,work_location,team",
                  "employments,work_location,team,company",
                  "employments,work_location,team,company,pay_group",
                  "employments,work_location,team,pay_group",
                  "groups",
                  "groups,company",
                  "groups,company,pay_group",
                  "groups,home_location",
                  "groups,home_location,company",
                  "groups,home_location,company,pay_group",
                  "groups,home_location,manager",
                  "groups,home_location,manager,company",
                  "groups,home_location,manager,company,pay_group",
                  "groups,home_location,manager,pay_group",
                  "groups,home_location,manager,team",
                  "groups,home_location,manager,team,company",
                  "groups,home_location,manager,team,company,pay_group",
                  "groups,home_location,manager,team,pay_group",
                  "groups,home_location,pay_group",
                  "groups,home_location,team",
                  "groups,home_location,team,company",
                  "groups,home_location,team,company,pay_group",
                  "groups,home_location,team,pay_group",
                  "groups,home_location,work_location",
                  "groups,home_location,work_location,company",
                  "groups,home_location,work_location,company,pay_group",
                  "groups,home_location,work_location,manager",
                  "groups,home_location,work_location,manager,company",
                  "groups,home_location,work_location,manager,company,pay_group",
                  "groups,home_location,work_location,manager,pay_group",
                  "groups,home_location,work_location,manager,team",
                  "groups,home_location,work_location,manager,team,company",
                  "groups,home_location,work_location,manager,team,company,pay_group",
                  "groups,home_location,work_location,manager,team,pay_group",
                  "groups,home_location,work_location,pay_group",
                  "groups,home_location,work_location,team",
                  "groups,home_location,work_location,team,company",
                  "groups,home_location,work_location,team,company,pay_group",
                  "groups,home_location,work_location,team,pay_group",
                  "groups,manager",
                  "groups,manager,company",
                  "groups,manager,company,pay_group",
                  "groups,manager,pay_group",
                  "groups,manager,team",
                  "groups,manager,team,company",
                  "groups,manager,team,company,pay_group",
                  "groups,manager,team,pay_group",
                  "groups,pay_group",
                  "groups,team",
                  "groups,team,company",
                  "groups,team,company,pay_group",
                  "groups,team,pay_group",
                  "groups,work_location",
                  "groups,work_location,company",
                  "groups,work_location,company,pay_group",
                  "groups,work_location,manager",
                  "groups,work_location,manager,company",
                  "groups,work_location,manager,company,pay_group",
                  "groups,work_location,manager,pay_group",
                  "groups,work_location,manager,team",
                  "groups,work_location,manager,team,company",
                  "groups,work_location,manager,team,company,pay_group",
                  "groups,work_location,manager,team,pay_group",
                  "groups,work_location,pay_group",
                  "groups,work_location,team",
                  "groups,work_location,team,company",
                  "groups,work_location,team,company,pay_group",
                  "groups,work_location,team,pay_group",
                  "home_location",
                  "home_location,company",
                  "home_location,company,pay_group",
                  "home_location,manager",
                  "home_location,manager,company",
                  "home_location,manager,company,pay_group",
                  "home_location,manager,pay_group",
                  "home_location,manager,team",
                  "home_location,manager,team,company",
                  "home_location,manager,team,company,pay_group",
                  "home_location,manager,team,pay_group",
                  "home_location,pay_group",
                  "home_location,team",
                  "home_location,team,company",
                  "home_location,team,company,pay_group",
                  "home_location,team,pay_group",
                  "home_location,work_location",
                  "home_location,work_location,company",
                  "home_location,work_location,company,pay_group",
                  "home_location,work_location,manager",
                  "home_location,work_location,manager,company",
                  "home_location,work_location,manager,company,pay_group",
                  "home_location,work_location,manager,pay_group",
                  "home_location,work_location,manager,team",
                  "home_location,work_location,manager,team,company",
                  "home_location,work_location,manager,team,company,pay_group",
                  "home_location,work_location,manager,team,pay_group",
                  "home_location,work_location,pay_group",
                  "home_location,work_location,team",
                  "home_location,work_location,team,company",
                  "home_location,work_location,team,company,pay_group",
                  "home_location,work_location,team,pay_group",
                  "manager",
                  "manager,company",
                  "manager,company,pay_group",
                  "manager,pay_group",
                  "manager,team",
                  "manager,team,company",
                  "manager,team,company,pay_group",
                  "manager,team,pay_group",
                  "pay_group",
                  "team",
                  "team,company",
                  "team,company,pay_group",
                  "team,pay_group",
                  "work_location",
                  "work_location,company",
                  "work_location,company,pay_group",
                  "work_location,manager",
                  "work_location,manager,company",
                  "work_location,manager,company,pay_group",
                  "work_location,manager,pay_group",
                  "work_location,manager,team",
                  "work_location,manager,team,company",
                  "work_location,manager,team,company,pay_group",
                  "work_location,manager,team,pay_group",
                  "work_location,pay_group",
                  "work_location,team",
                  "work_location,team,company",
                  "work_location,team,company,pay_group",
                  "work_location,team,pay_group"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployments,Groups,HomeLocation,WorkLocation,Manager,Team,Company,PayGroup": {
                  "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                  "summary": "Expand Employments, Groups, Home_location, Work_location, Manager, Team, Company, Pay_group"
                }
              }
            },
            {
              "in": "query",
              "name": "first_name",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "If provided, will only return employees with this first name."
            },
            {
              "in": "query",
              "name": "groups",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employees matching the group ids; multiple groups can be separated by commas."
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "include_sensitive_fields",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include sensitive fields (such as social security numbers) in the response."
            },
            {
              "in": "query",
              "name": "last_name",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "If provided, will only return employees with this last name."
            },
            {
              "in": "query",
              "name": "manager_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employees for this manager.",
              "examples": {
                "ManagerId": {
                  "summary": "manager_id"
                }
              }
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "pay_group_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employees for this pay group",
              "examples": {
                "PayGroupId": {
                  "summary": "pay_group_id"
                }
              }
            },
            {
              "in": "query",
              "name": "personal_email",
              "schema": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "description": "If provided, will only return Employees with this personal email"
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_status",
                  "employment_status,ethnicity",
                  "employment_status,ethnicity,gender",
                  "employment_status,ethnicity,gender,marital_status",
                  "employment_status,ethnicity,marital_status",
                  "employment_status,gender",
                  "employment_status,gender,marital_status",
                  "employment_status,marital_status",
                  "ethnicity",
                  "ethnicity,gender",
                  "ethnicity,gender,marital_status",
                  "ethnicity,marital_status",
                  "gender",
                  "gender,marital_status",
                  "marital_status"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": {
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "summary": "Original Enum Values Employment_status, Ethnicity, Gender, Marital_status"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_status",
                  "employment_status,ethnicity",
                  "employment_status,ethnicity,gender",
                  "employment_status,ethnicity,gender,marital_status",
                  "employment_status,ethnicity,marital_status",
                  "employment_status,gender",
                  "employment_status,gender,marital_status",
                  "employment_status,marital_status",
                  "ethnicity",
                  "ethnicity,gender",
                  "ethnicity,gender,marital_status",
                  "ethnicity,marital_status",
                  "gender",
                  "gender,marital_status",
                  "marital_status"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": {
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "summary": "Original Enum Values Employment_status, Ethnicity, Gender, Marital_status"
                }
              }
            },
            {
              "in": "query",
              "name": "started_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employees that started after this datetime."
            },
            {
              "in": "query",
              "name": "started_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employees that started before this datetime."
            },
            {
              "in": "query",
              "name": "team_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employees for this team.",
              "examples": {
                "TeamId": {
                  "summary": "team_id"
                }
              }
            },
            {
              "in": "query",
              "name": "terminated_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employees that were terminated after this datetime."
            },
            {
              "in": "query",
              "name": "terminated_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return employees that were terminated before this datetime."
            },
            {
              "in": "query",
              "name": "work_email",
              "schema": {
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "description": "If provided, will only return Employees with this work email"
            },
            {
              "in": "query",
              "name": "work_location_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employees for this location.",
              "examples": {
                "WorkLocationId": {
                  "summary": "work_location_id"
                }
              }
            }
          ],
          "tags": [
            "employees"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedEmployeeList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        },
        "post": {
          "operationId": "employees_create",
          "description": "Creates an `Employee` object with the given values.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "is_debug_mode",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include debug fields (such as log file links) in the response."
            },
            {
              "in": "query",
              "name": "run_async",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether or not third-party updates should be run asynchronously."
            }
          ],
          "tags": [
            "employees"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeEndpointRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeEndpointRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeEndpointRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmployeeResponse"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
        }
      },
      "/employees/{id}": {
        "get": {
          "operationId": "employees_retrieve",
          "description": "Returns an `Employee` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "company",
                  "company,pay_group",
                  "employments",
                  "employments,company",
                  "employments,company,pay_group",
                  "employments,groups",
                  "employments,groups,company",
                  "employments,groups,company,pay_group",
                  "employments,groups,home_location",
                  "employments,groups,home_location,company",
                  "employments,groups,home_location,company,pay_group",
                  "employments,groups,home_location,manager",
                  "employments,groups,home_location,manager,company",
                  "employments,groups,home_location,manager,company,pay_group",
                  "employments,groups,home_location,manager,pay_group",
                  "employments,groups,home_location,manager,team",
                  "employments,groups,home_location,manager,team,company",
                  "employments,groups,home_location,manager,team,company,pay_group",
                  "employments,groups,home_location,manager,team,pay_group",
                  "employments,groups,home_location,pay_group",
                  "employments,groups,home_location,team",
                  "employments,groups,home_location,team,company",
                  "employments,groups,home_location,team,company,pay_group",
                  "employments,groups,home_location,team,pay_group",
                  "employments,groups,home_location,work_location",
                  "employments,groups,home_location,work_location,company",
                  "employments,groups,home_location,work_location,company,pay_group",
                  "employments,groups,home_location,work_location,manager",
                  "employments,groups,home_location,work_location,manager,company",
                  "employments,groups,home_location,work_location,manager,company,pay_group",
                  "employments,groups,home_location,work_location,manager,pay_group",
                  "employments,groups,home_location,work_location,manager,team",
                  "employments,groups,home_location,work_location,manager,team,company",
                  "employments,groups,home_location,work_location,manager,team,company,pay_group",
                  "employments,groups,home_location,work_location,manager,team,pay_group",
                  "employments,groups,home_location,work_location,pay_group",
                  "employments,groups,home_location,work_location,team",
                  "employments,groups,home_location,work_location,team,company",
                  "employments,groups,home_location,work_location,team,company,pay_group",
                  "employments,groups,home_location,work_location,team,pay_group",
                  "employments,groups,manager",
                  "employments,groups,manager,company",
                  "employments,groups,manager,company,pay_group",
                  "employments,groups,manager,pay_group",
                  "employments,groups,manager,team",
                  "employments,groups,manager,team,company",
                  "employments,groups,manager,team,company,pay_group",
                  "employments,groups,manager,team,pay_group",
                  "employments,groups,pay_group",
                  "employments,groups,team",
                  "employments,groups,team,company",
                  "employments,groups,team,company,pay_group",
                  "employments,groups,team,pay_group",
                  "employments,groups,work_location",
                  "employments,groups,work_location,company",
                  "employments,groups,work_location,company,pay_group",
                  "employments,groups,work_location,manager",
                  "employments,groups,work_location,manager,company",
                  "employments,groups,work_location,manager,company,pay_group",
                  "employments,groups,work_location,manager,pay_group",
                  "employments,groups,work_location,manager,team",
                  "employments,groups,work_location,manager,team,company",
                  "employments,groups,work_location,manager,team,company,pay_group",
                  "employments,groups,work_location,manager,team,pay_group",
                  "employments,groups,work_location,pay_group",
                  "employments,groups,work_location,team",
                  "employments,groups,work_location,team,company",
                  "employments,groups,work_location,team,company,pay_group",
                  "employments,groups,work_location,team,pay_group",
                  "employments,home_location",
                  "employments,home_location,company",
                  "employments,home_location,company,pay_group",
                  "employments,home_location,manager",
                  "employments,home_location,manager,company",
                  "employments,home_location,manager,company,pay_group",
                  "employments,home_location,manager,pay_group",
                  "employments,home_location,manager,team",
                  "employments,home_location,manager,team,company",
                  "employments,home_location,manager,team,company,pay_group",
                  "employments,home_location,manager,team,pay_group",
                  "employments,home_location,pay_group",
                  "employments,home_location,team",
                  "employments,home_location,team,company",
                  "employments,home_location,team,company,pay_group",
                  "employments,home_location,team,pay_group",
                  "employments,home_location,work_location",
                  "employments,home_location,work_location,company",
                  "employments,home_location,work_location,company,pay_group",
                  "employments,home_location,work_location,manager",
                  "employments,home_location,work_location,manager,company",
                  "employments,home_location,work_location,manager,company,pay_group",
                  "employments,home_location,work_location,manager,pay_group",
                  "employments,home_location,work_location,manager,team",
                  "employments,home_location,work_location,manager,team,company",
                  "employments,home_location,work_location,manager,team,company,pay_group",
                  "employments,home_location,work_location,manager,team,pay_group",
                  "employments,home_location,work_location,pay_group",
                  "employments,home_location,work_location,team",
                  "employments,home_location,work_location,team,company",
                  "employments,home_location,work_location,team,company,pay_group",
                  "employments,home_location,work_location,team,pay_group",
                  "employments,manager",
                  "employments,manager,company",
                  "employments,manager,company,pay_group",
                  "employments,manager,pay_group",
                  "employments,manager,team",
                  "employments,manager,team,company",
                  "employments,manager,team,company,pay_group",
                  "employments,manager,team,pay_group",
                  "employments,pay_group",
                  "employments,team",
                  "employments,team,company",
                  "employments,team,company,pay_group",
                  "employments,team,pay_group",
                  "employments,work_location",
                  "employments,work_location,company",
                  "employments,work_location,company,pay_group",
                  "employments,work_location,manager",
                  "employments,work_location,manager,company",
                  "employments,work_location,manager,company,pay_group",
                  "employments,work_location,manager,pay_group",
                  "employments,work_location,manager,team",
                  "employments,work_location,manager,team,company",
                  "employments,work_location,manager,team,company,pay_group",
                  "employments,work_location,manager,team,pay_group",
                  "employments,work_location,pay_group",
                  "employments,work_location,team",
                  "employments,work_location,team,company",
                  "employments,work_location,team,company,pay_group",
                  "employments,work_location,team,pay_group",
                  "groups",
                  "groups,company",
                  "groups,company,pay_group",
                  "groups,home_location",
                  "groups,home_location,company",
                  "groups,home_location,company,pay_group",
                  "groups,home_location,manager",
                  "groups,home_location,manager,company",
                  "groups,home_location,manager,company,pay_group",
                  "groups,home_location,manager,pay_group",
                  "groups,home_location,manager,team",
                  "groups,home_location,manager,team,company",
                  "groups,home_location,manager,team,company,pay_group",
                  "groups,home_location,manager,team,pay_group",
                  "groups,home_location,pay_group",
                  "groups,home_location,team",
                  "groups,home_location,team,company",
                  "groups,home_location,team,company,pay_group",
                  "groups,home_location,team,pay_group",
                  "groups,home_location,work_location",
                  "groups,home_location,work_location,company",
                  "groups,home_location,work_location,company,pay_group",
                  "groups,home_location,work_location,manager",
                  "groups,home_location,work_location,manager,company",
                  "groups,home_location,work_location,manager,company,pay_group",
                  "groups,home_location,work_location,manager,pay_group",
                  "groups,home_location,work_location,manager,team",
                  "groups,home_location,work_location,manager,team,company",
                  "groups,home_location,work_location,manager,team,company,pay_group",
                  "groups,home_location,work_location,manager,team,pay_group",
                  "groups,home_location,work_location,pay_group",
                  "groups,home_location,work_location,team",
                  "groups,home_location,work_location,team,company",
                  "groups,home_location,work_location,team,company,pay_group",
                  "groups,home_location,work_location,team,pay_group",
                  "groups,manager",
                  "groups,manager,company",
                  "groups,manager,company,pay_group",
                  "groups,manager,pay_group",
                  "groups,manager,team",
                  "groups,manager,team,company",
                  "groups,manager,team,company,pay_group",
                  "groups,manager,team,pay_group",
                  "groups,pay_group",
                  "groups,team",
                  "groups,team,company",
                  "groups,team,company,pay_group",
                  "groups,team,pay_group",
                  "groups,work_location",
                  "groups,work_location,company",
                  "groups,work_location,company,pay_group",
                  "groups,work_location,manager",
                  "groups,work_location,manager,company",
                  "groups,work_location,manager,company,pay_group",
                  "groups,work_location,manager,pay_group",
                  "groups,work_location,manager,team",
                  "groups,work_location,manager,team,company",
                  "groups,work_location,manager,team,company,pay_group",
                  "groups,work_location,manager,team,pay_group",
                  "groups,work_location,pay_group",
                  "groups,work_location,team",
                  "groups,work_location,team,company",
                  "groups,work_location,team,company,pay_group",
                  "groups,work_location,team,pay_group",
                  "home_location",
                  "home_location,company",
                  "home_location,company,pay_group",
                  "home_location,manager",
                  "home_location,manager,company",
                  "home_location,manager,company,pay_group",
                  "home_location,manager,pay_group",
                  "home_location,manager,team",
                  "home_location,manager,team,company",
                  "home_location,manager,team,company,pay_group",
                  "home_location,manager,team,pay_group",
                  "home_location,pay_group",
                  "home_location,team",
                  "home_location,team,company",
                  "home_location,team,company,pay_group",
                  "home_location,team,pay_group",
                  "home_location,work_location",
                  "home_location,work_location,company",
                  "home_location,work_location,company,pay_group",
                  "home_location,work_location,manager",
                  "home_location,work_location,manager,company",
                  "home_location,work_location,manager,company,pay_group",
                  "home_location,work_location,manager,pay_group",
                  "home_location,work_location,manager,team",
                  "home_location,work_location,manager,team,company",
                  "home_location,work_location,manager,team,company,pay_group",
                  "home_location,work_location,manager,team,pay_group",
                  "home_location,work_location,pay_group",
                  "home_location,work_location,team",
                  "home_location,work_location,team,company",
                  "home_location,work_location,team,company,pay_group",
                  "home_location,work_location,team,pay_group",
                  "manager",
                  "manager,company",
                  "manager,company,pay_group",
                  "manager,pay_group",
                  "manager,team",
                  "manager,team,company",
                  "manager,team,company,pay_group",
                  "manager,team,pay_group",
                  "pay_group",
                  "team",
                  "team,company",
                  "team,company,pay_group",
                  "team,pay_group",
                  "work_location",
                  "work_location,company",
                  "work_location,company,pay_group",
                  "work_location,manager",
                  "work_location,manager,company",
                  "work_location,manager,company,pay_group",
                  "work_location,manager,pay_group",
                  "work_location,manager,team",
                  "work_location,manager,team,company",
                  "work_location,manager,team,company,pay_group",
                  "work_location,manager,team,pay_group",
                  "work_location,pay_group",
                  "work_location,team",
                  "work_location,team,company",
                  "work_location,team,company,pay_group",
                  "work_location,team,pay_group"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployments,Groups,HomeLocation,WorkLocation,Manager,Team,Company,PayGroup": {
                  "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                  "summary": "Expand Employments, Groups, Home_location, Work_location, Manager, Team, Company, Pay_group"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "include_sensitive_fields",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include sensitive fields (such as social security numbers) in the response."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_status",
                  "employment_status,ethnicity",
                  "employment_status,ethnicity,gender",
                  "employment_status,ethnicity,gender,marital_status",
                  "employment_status,ethnicity,marital_status",
                  "employment_status,gender",
                  "employment_status,gender,marital_status",
                  "employment_status,marital_status",
                  "ethnicity",
                  "ethnicity,gender",
                  "ethnicity,gender,marital_status",
                  "ethnicity,marital_status",
                  "gender",
                  "gender,marital_status",
                  "marital_status"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": {
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "summary": "Original Enum Values Employment_status, Ethnicity, Gender, Marital_status"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_status",
                  "employment_status,ethnicity",
                  "employment_status,ethnicity,gender",
                  "employment_status,ethnicity,gender,marital_status",
                  "employment_status,ethnicity,marital_status",
                  "employment_status,gender",
                  "employment_status,gender,marital_status",
                  "employment_status,marital_status",
                  "ethnicity",
                  "ethnicity,gender",
                  "ethnicity,gender,marital_status",
                  "ethnicity,marital_status",
                  "gender",
                  "gender,marital_status",
                  "marital_status"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": {
                  "value": "employment_status,ethnicity,gender,marital_status",
                  "summary": "Original Enum Values Employment_status, Ethnicity, Gender, Marital_status"
                }
              }
            }
          ],
          "tags": [
            "employees"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/employees/ignore/{model_id}": {
        "post": {
          "operationId": "employees_ignore_create",
          "description": "Ignores a specific row based on the `model_id` in the url. These records will have their properties set to null, and will not be updated in future syncs. The \"reason\" and \"message\" fields in the request body will be stored for audit purposes.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "path",
              "name": "model_id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            }
          ],
          "tags": [
            "employees"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IgnoreCommonModelRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/IgnoreCommonModelRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/IgnoreCommonModelRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "No response body"
            }
          },
          "x-extra-tags": [
            "ignore-model"
          ]
        }
      },
      "/employees/meta/post": {
        "get": {
          "operationId": "employees_meta_post_retrieve",
          "description": "Returns metadata for `Employee` POSTs.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "employees"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MetaResponse"
                  }
                }
              },
              "description": ""
            }
          },
          "x-merge-meta-post": "META_POST",
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/employments": {
        "get": {
          "operationId": "employments_list",
          "description": "Returns a list of `Employment` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "employee_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return employments for this employee.",
              "examples": {
                "EmployeeId": {
                  "summary": "employee_id"
                }
              }
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee",
                  "employee,pay_group",
                  "pay_group"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee,PayGroup": {
                  "value": "employee,pay_group",
                  "summary": "Expand Employee, Pay_group"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "in": "query",
              "name": "order_by",
              "schema": {
                "type": "string",
                "enum": [
                  "-effective_date",
                  "effective_date"
                ],
                "x-fern-enum": {
                  "-effective_date": {
                    "name": "EffectiveDateDescending"
                  },
                  "effective_date": {
                    "name": "EffectiveDateAscending"
                  }
                }
              },
              "description": "Overrides the default ordering for this endpoint."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_type",
                  "employment_type,flsa_status",
                  "employment_type,flsa_status,pay_frequency",
                  "employment_type,flsa_status,pay_frequency,pay_period",
                  "employment_type,flsa_status,pay_period",
                  "employment_type,pay_frequency",
                  "employment_type,pay_frequency,pay_period",
                  "employment_type,pay_period",
                  "flsa_status",
                  "flsa_status,pay_frequency",
                  "flsa_status,pay_frequency,pay_period",
                  "flsa_status,pay_period",
                  "pay_frequency",
                  "pay_frequency,pay_period",
                  "pay_period"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": {
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "summary": "Original Enum Values Employment_type, Flsa_status, Pay_frequency, Pay_period"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_type",
                  "employment_type,flsa_status",
                  "employment_type,flsa_status,pay_frequency",
                  "employment_type,flsa_status,pay_frequency,pay_period",
                  "employment_type,flsa_status,pay_period",
                  "employment_type,pay_frequency",
                  "employment_type,pay_frequency,pay_period",
                  "employment_type,pay_period",
                  "flsa_status",
                  "flsa_status,pay_frequency",
                  "flsa_status,pay_frequency,pay_period",
                  "flsa_status,pay_period",
                  "pay_frequency",
                  "pay_frequency,pay_period",
                  "pay_period"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": {
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "summary": "Original Enum Values Employment_type, Flsa_status, Pay_frequency, Pay_period"
                }
              }
            }
          ],
          "tags": [
            "employments"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedEmploymentList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/employments/{id}": {
        "get": {
          "operationId": "employments_retrieve",
          "description": "Returns an `Employment` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee",
                  "employee,pay_group",
                  "pay_group"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee,PayGroup": {
                  "value": "employee,pay_group",
                  "summary": "Expand Employee, Pay_group"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_type",
                  "employment_type,flsa_status",
                  "employment_type,flsa_status,pay_frequency",
                  "employment_type,flsa_status,pay_frequency,pay_period",
                  "employment_type,flsa_status,pay_period",
                  "employment_type,pay_frequency",
                  "employment_type,pay_frequency,pay_period",
                  "employment_type,pay_period",
                  "flsa_status",
                  "flsa_status,pay_frequency",
                  "flsa_status,pay_frequency,pay_period",
                  "flsa_status,pay_period",
                  "pay_frequency",
                  "pay_frequency,pay_period",
                  "pay_period"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": {
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "summary": "Original Enum Values Employment_type, Flsa_status, Pay_frequency, Pay_period"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "employment_type",
                  "employment_type,flsa_status",
                  "employment_type,flsa_status,pay_frequency",
                  "employment_type,flsa_status,pay_frequency,pay_period",
                  "employment_type,flsa_status,pay_period",
                  "employment_type,pay_frequency",
                  "employment_type,pay_frequency,pay_period",
                  "employment_type,pay_period",
                  "flsa_status",
                  "flsa_status,pay_frequency",
                  "flsa_status,pay_frequency,pay_period",
                  "flsa_status,pay_period",
                  "pay_frequency",
                  "pay_frequency,pay_period",
                  "pay_period"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": {
                  "value": "employment_type,flsa_status,pay_frequency,pay_period",
                  "summary": "Original Enum Values Employment_type, Flsa_status, Pay_frequency, Pay_period"
                }
              }
            }
          ],
          "tags": [
            "employments"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Employment"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/generate-key": {
        "post": {
          "operationId": "generate_key_create",
          "description": "Create a remote key.",
          "tags": [
            "generate-key"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RemoteKey"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/groups": {
        "get": {
          "operationId": "groups_list",
          "description": "Returns a list of `Group` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesType": {
                  "value": "type",
                  "summary": "Original Enum Values Type"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesType": {
                  "value": "type",
                  "summary": "Original Enum Values Type"
                }
              }
            },
            {
              "in": "query",
              "name": "types",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return groups of these types. Multiple values can be separated by commas."
            }
          ],
          "tags": [
            "groups"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedGroupList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/groups/{id}": {
        "get": {
          "operationId": "groups_retrieve",
          "description": "Returns a `Group` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesType": {
                  "value": "type",
                  "summary": "Original Enum Values Type"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesType": {
                  "value": "type",
                  "summary": "Original Enum Values Type"
                }
              }
            }
          ],
          "tags": [
            "groups"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/issues": {
        "get": {
          "operationId": "issues_list",
          "description": "Gets issues.",
          "parameters": [
            {
              "in": "query",
              "name": "account_token",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "end_date",
              "schema": {
                "type": "string"
              },
              "description": "If included, will only include issues whose most recent action occurred before this time"
            },
            {
              "in": "query",
              "name": "end_user_organization_name",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "first_incident_time_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return issues whose first incident time was after this datetime."
            },
            {
              "in": "query",
              "name": "first_incident_time_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return issues whose first incident time was before this datetime."
            },
            {
              "in": "query",
              "name": "include_muted",
              "schema": {
                "type": "string"
              },
              "description": "If True, will include muted issues"
            },
            {
              "in": "query",
              "name": "integration_name",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "last_incident_time_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return issues whose last incident time was after this datetime."
            },
            {
              "in": "query",
              "name": "last_incident_time_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return issues whose last incident time was before this datetime."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "start_date",
              "schema": {
                "type": "string"
              },
              "description": "If included, will only include issues whose most recent action occurred after this time"
            },
            {
              "in": "query",
              "name": "status",
              "schema": {
                "type": "string",
                "enum": [
                  "ONGOING",
                  "RESOLVED"
                ]
              },
              "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED"
            }
          ],
          "tags": [
            "issues"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedIssueList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/issues/{id}": {
        "get": {
          "operationId": "issues_retrieve",
          "description": "Get a specific issue.",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            }
          ],
          "tags": [
            "issues"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Issue"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/link-token": {
        "post": {
          "operationId": "link_token_create",
          "description": "Creates a link token to be used when linking a new end user.",
          "tags": [
            "link-token"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserDetailsRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserDetailsRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserDetailsRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LinkToken"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/linked-accounts": {
        "get": {
          "operationId": "linked_accounts_list",
          "description": "List linked accounts for your organization.",
          "parameters": [
            {
              "in": "query",
              "name": "category",
              "schema": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "accounting",
                  "ats",
                  "crm",
                  "filestorage",
                  "hris",
                  "mktg",
                  "ticketing"
                ]
              },
              "description": "Options: ('hris', 'ats', 'accounting', 'ticketing', 'crm', 'mktg', 'filestorage')\n\n* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage"
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "end_user_email_address",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return linked accounts associated with the given email address."
            },
            {
              "in": "query",
              "name": "end_user_organization_name",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return linked accounts associated with the given organization name."
            },
            {
              "in": "query",
              "name": "end_user_origin_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return linked accounts associated with the given origin ID."
            },
            {
              "in": "query",
              "name": "end_user_origin_ids",
              "schema": {
                "type": "string"
              },
              "description": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once."
            },
            {
              "in": "query",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "in": "query",
              "name": "ids",
              "schema": {
                "type": "string"
              },
              "description": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once."
            },
            {
              "in": "query",
              "name": "include_duplicates",
              "schema": {
                "type": "boolean"
              },
              "description": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account."
            },
            {
              "in": "query",
              "name": "integration_name",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return linked accounts associated with the given integration name."
            },
            {
              "in": "query",
              "name": "is_test_account",
              "schema": {
                "type": "string"
              },
              "description": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "status",
              "schema": {
                "type": "string"
              },
              "description": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`"
            }
          ],
          "tags": [
            "linked-accounts"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedAccountDetailsAndActionsList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/locations": {
        "get": {
          "operationId": "locations_list",
          "description": "Returns a list of `Location` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "location_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesLocationType": {
                  "value": "location_type",
                  "summary": "Original Enum Values Location_type"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "location_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesLocationType": {
                  "value": "location_type",
                  "summary": "Original Enum Values Location_type"
                }
              }
            }
          ],
          "tags": [
            "locations"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedLocationList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/locations/{id}": {
        "get": {
          "operationId": "locations_retrieve",
          "description": "Returns a `Location` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "location_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesLocationType": {
                  "value": "location_type",
                  "summary": "Original Enum Values Location_type"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "location_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesLocationType": {
                  "value": "location_type",
                  "summary": "Original Enum Values Location_type"
                }
              }
            }
          ],
          "tags": [
            "locations"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/passthrough": {
        "post": {
          "operationId": "passthrough_create",
          "description": "Pull data from an endpoint not currently supported by Merge.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "passthrough"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPassthroughRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/DataPassthroughRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/DataPassthroughRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RemoteResponse"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/pay-groups": {
        "get": {
          "operationId": "pay_groups_list",
          "description": "Returns a list of `PayGroup` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            }
          ],
          "tags": [
            "pay-groups"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedPayGroupList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/pay-groups/{id}": {
        "get": {
          "operationId": "pay_groups_retrieve",
          "description": "Returns a `PayGroup` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            }
          ],
          "tags": [
            "pay-groups"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PayGroup"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/payroll-runs": {
        "get": {
          "operationId": "payroll_runs_list",
          "description": "Returns a list of `PayrollRun` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "ended_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return payroll runs ended after this datetime."
            },
            {
              "in": "query",
              "name": "ended_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return payroll runs ended before this datetime."
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "run_state",
                  "run_state,run_type",
                  "run_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesRunState,RunType": {
                  "value": "run_state,run_type",
                  "summary": "Original Enum Values Run_state, Run_type"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "run_type",
              "schema": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "CORRECTION",
                  "OFF_CYCLE",
                  "REGULAR",
                  "SIGN_ON_BONUS",
                  "TERMINATION"
                ]
              },
              "description": "If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS"
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "run_state",
                  "run_state,run_type",
                  "run_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesRunState,RunType": {
                  "value": "run_state,run_type",
                  "summary": "Original Enum Values Run_state, Run_type"
                }
              }
            },
            {
              "in": "query",
              "name": "started_after",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return payroll runs started after this datetime."
            },
            {
              "in": "query",
              "name": "started_before",
              "schema": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "description": "If provided, will only return payroll runs started before this datetime."
            }
          ],
          "tags": [
            "payroll-runs"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedPayrollRunList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
        }
      },
      "/payroll-runs/{id}": {
        "get": {
          "operationId": "payroll_runs_retrieve",
          "description": "Returns a `PayrollRun` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "run_state",
                  "run_state,run_type",
                  "run_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesRunState,RunType": {
                  "value": "run_state,run_type",
                  "summary": "Original Enum Values Run_state, Run_type"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "run_state",
                  "run_state,run_type",
                  "run_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesRunState,RunType": {
                  "value": "run_state,run_type",
                  "summary": "Original Enum Values Run_state, Run_type"
                }
              }
            }
          ],
          "tags": [
            "payroll-runs"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PayrollRun"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
        }
      },
      "/regenerate-key": {
        "post": {
          "operationId": "regenerate_key_create",
          "description": "Exchange remote keys.",
          "tags": [
            "regenerate-key"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RemoteKey"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/selective-sync/configurations": {
        "get": {
          "operationId": "selective_sync_configurations_list",
          "description": "Get a linked account's selective syncs.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "selective-sync"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                    }
                  },
                  "examples": {
                    "StartDateConditionExample": {
                      "value": [
                        {
                          "linked_account_conditions": [
                            {
                              "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                              "common_model": "hris.Employee",
                              "native_name": "Started At",
                              "field_name": "start_date",
                              "operator": "GREATER_THAN_OR_EQUAL",
                              "value": "2022-01-01T00:00:00Z"
                            }
                          ]
                        }
                      ],
                      "summary": "Employees that started on or after January 1st, 2022"
                    }
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        },
        "put": {
          "operationId": "selective_sync_configurations_update",
          "description": "Replace a linked account's selective syncs.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "selective-sync"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationListRequest"
                },
                "examples": {
                  "StartDateConditionRequestExample": {
                    "value": {
                      "linked_account_conditons": [
                        {
                          "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                          "operator": "GREATER_THAN_OR_EQUAL",
                          "value": "2022-01-01T00:00:00Z"
                        }
                      ]
                    },
                    "summary": "Employees that started on or after January 1st, 2022"
                  }
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                    }
                  },
                  "examples": {
                    "StartDateConditionExample": {
                      "value": [
                        {
                          "linked_account_conditions": [
                            {
                              "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                              "common_model": "hris.Employee",
                              "native_name": "Started At",
                              "field_name": "start_date",
                              "operator": "GREATER_THAN_OR_EQUAL",
                              "value": "2022-01-01T00:00:00Z"
                            }
                          ]
                        }
                      ],
                      "summary": "Employees that started on or after January 1st, 2022"
                    }
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/selective-sync/meta": {
        "get": {
          "operationId": "selective_sync_meta_list",
          "description": "Get metadata for the conditions available to a linked account.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "common_model",
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "selective-sync"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedConditionSchemaList"
                  },
                  "examples": {
                    "PaginatedConditionSchemaListExample": {
                      "value": {
                        "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                        "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                        "results": [
                          {
                            "id": "123e4567-e89b-12d3-a456-426655440000",
                            "common_model": "hris.Employee",
                            "native_name": "Started At",
                            "field_name": "start_date",
                            "is_unique": true,
                            "condition_type": "DATE_TIME",
                            "operators": [
                              {
                                "operator": "GREATER_THAN_OR_EQUAL",
                                "is_unique": true
                              },
                              {
                                "operator": "LESS_THAN_OR_EQUAL",
                                "is_unique": true
                              }
                            ]
                          }
                        ]
                      },
                      "summary": "Employees that started on or after January 1st, 2022"
                    }
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/sync-status": {
        "get": {
          "operationId": "sync_status_list",
          "description": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "sync-status"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedSyncStatusList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/sync-status/resync": {
        "post": {
          "operationId": "sync_status_resync_create",
          "description": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Core, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "force-resync"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SyncStatus"
                    }
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/teams": {
        "get": {
          "operationId": "teams_list",
          "description": "Returns a list of `Team` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "parent_team"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandParentTeam": {
                  "value": "parent_team",
                  "summary": "Expand Parent_team"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "parent_team_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return teams with this parent team.",
              "examples": {
                "ParentTeamId": {
                  "summary": "parent_team_id"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            }
          ],
          "tags": [
            "teams"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedTeamList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/teams/{id}": {
        "get": {
          "operationId": "teams_retrieve",
          "description": "Returns a `Team` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "parent_team"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandParentTeam": {
                  "value": "parent_team",
                  "summary": "Expand Parent_team"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            }
          ],
          "tags": [
            "teams"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/time-off": {
        "get": {
          "operationId": "time_off_list",
          "description": "Returns a list of `TimeOff` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "approver_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return time off for this approver.",
              "examples": {
                "ApproverId": {
                  "summary": "approver_id"
                }
              }
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "employee_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return time off for this employee.",
              "examples": {
                "EmployeeId": {
                  "summary": "employee_id"
                }
              }
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "approver",
                  "employee",
                  "employee,approver"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee,Approver": {
                  "value": "employee,approver",
                  "summary": "Expand Employee, Approver"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "request_type",
                  "request_type,status",
                  "request_type,status,units",
                  "request_type,units",
                  "status",
                  "status,units",
                  "units"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesRequestType,Status,Units": {
                  "value": "request_type,status,units",
                  "summary": "Original Enum Values Request_type, Status, Units"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "request_type",
              "schema": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "BEREAVEMENT",
                  "JURY_DUTY",
                  "PERSONAL",
                  "SICK",
                  "VACATION",
                  "VOLUNTEER"
                ]
              },
              "description": "If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT"
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "request_type",
                  "request_type,status",
                  "request_type,status,units",
                  "request_type,units",
                  "status",
                  "status,units",
                  "units"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesRequestType,Status,Units": {
                  "value": "request_type,status,units",
                  "summary": "Original Enum Values Request_type, Status, Units"
                }
              }
            },
            {
              "in": "query",
              "name": "status",
              "schema": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "APPROVED",
                  "CANCELLED",
                  "DECLINED",
                  "DELETED",
                  "REQUESTED"
                ]
              },
              "description": "If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED"
            }
          ],
          "tags": [
            "time-off"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedTimeOffList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        },
        "post": {
          "operationId": "time_off_create",
          "description": "Creates a `TimeOff` object with the given values.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "is_debug_mode",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include debug fields (such as log file links) in the response."
            },
            {
              "in": "query",
              "name": "run_async",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether or not third-party updates should be run asynchronously."
            }
          ],
          "tags": [
            "time-off"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeOffEndpointRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/TimeOffEndpointRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/TimeOffEndpointRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimeOffResponse"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/time-off-balances": {
        "get": {
          "operationId": "time_off_balances_list",
          "description": "Returns a list of `TimeOffBalance` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "created_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created after this datetime."
            },
            {
              "in": "query",
              "name": "created_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, will only return objects created before this datetime."
            },
            {
              "in": "query",
              "name": "cursor",
              "schema": {
                "type": "string"
              },
              "description": "The pagination cursor value.",
              "examples": {
                "CursorExample": {
                  "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "summary": "Cursor Example"
                }
              }
            },
            {
              "in": "query",
              "name": "employee_id",
              "schema": {
                "type": "string"
              },
              "description": "If provided, will only return time off balances for this employee.",
              "examples": {
                "EmployeeId": {
                  "summary": "employee_id"
                }
              }
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee": {
                  "value": "employee",
                  "summary": "Expand Employee"
                }
              }
            },
            {
              "in": "query",
              "name": "include_deleted_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include data that was marked as deleted by third party webhooks."
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "modified_after",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge after this date time will be returned."
            },
            {
              "in": "query",
              "name": "modified_before",
              "schema": {
                "type": "string",
                "format": "date-time"
              },
              "description": "If provided, only objects synced by Merge before this date time will be returned."
            },
            {
              "name": "page_size",
              "required": false,
              "in": "query",
              "description": "Number of results to return per page.",
              "schema": {
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "policy_type",
              "schema": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "BEREAVEMENT",
                  "JURY_DUTY",
                  "PERSONAL",
                  "SICK",
                  "VACATION",
                  "VOLUNTEER"
                ]
              },
              "description": "If provided, will only return TimeOffBalance with this policy type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT"
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "policy_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesPolicyType": {
                  "value": "policy_type",
                  "summary": "Original Enum Values Policy_type"
                }
              }
            },
            {
              "in": "query",
              "name": "remote_id",
              "schema": {
                "type": "string",
                "nullable": true
              },
              "description": "The API provider's ID for the given object."
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "policy_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesPolicyType": {
                  "value": "policy_type",
                  "summary": "Original Enum Values Policy_type"
                }
              }
            }
          ],
          "tags": [
            "time-off-balances"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedTimeOffBalanceList"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/time-off-balances/{id}": {
        "get": {
          "operationId": "time_off_balances_retrieve",
          "description": "Returns a `TimeOffBalance` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "employee"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee": {
                  "value": "employee",
                  "summary": "Expand Employee"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "policy_type"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesPolicyType": {
                  "value": "policy_type",
                  "summary": "Original Enum Values Policy_type"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "policy_type"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesPolicyType": {
                  "value": "policy_type",
                  "summary": "Original Enum Values Policy_type"
                }
              }
            }
          ],
          "tags": [
            "time-off-balances"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimeOffBalance"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/time-off/{id}": {
        "get": {
          "operationId": "time_off_retrieve",
          "description": "Returns a `TimeOff` object with the given `id`.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            },
            {
              "in": "query",
              "name": "expand",
              "schema": {
                "type": "string",
                "enum": [
                  "approver",
                  "employee",
                  "employee,approver"
                ]
              },
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "examples": {
                "ExpandEmployee,Approver": {
                  "value": "employee,approver",
                  "summary": "Expand Employee, Approver"
                }
              }
            },
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "required": true
            },
            {
              "in": "query",
              "name": "include_remote_data",
              "schema": {
                "type": "boolean"
              },
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
            },
            {
              "in": "query",
              "name": "remote_fields",
              "schema": {
                "type": "string",
                "enum": [
                  "request_type",
                  "request_type,status",
                  "request_type,status,units",
                  "request_type,units",
                  "status",
                  "status,units",
                  "units"
                ]
              },
              "description": "Deprecated. Use show_enum_origins.",
              "examples": {
                "OriginalEnumValuesRequestType,Status,Units": {
                  "value": "request_type,status,units",
                  "summary": "Original Enum Values Request_type, Status, Units"
                }
              }
            },
            {
              "in": "query",
              "name": "show_enum_origins",
              "schema": {
                "type": "string",
                "enum": [
                  "request_type",
                  "request_type,status",
                  "request_type,status,units",
                  "request_type,units",
                  "status",
                  "status,units",
                  "units"
                ]
              },
              "description": "Which fields should be returned in non-normalized form.",
              "examples": {
                "OriginalEnumValuesRequestType,Status,Units": {
                  "value": "request_type,status,units",
                  "summary": "Original Enum Values Request_type, Status, Units"
                }
              }
            }
          ],
          "tags": [
            "time-off"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimeOff"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/time-off/meta/post": {
        "get": {
          "operationId": "time_off_meta_post_retrieve",
          "description": "Returns metadata for `TimeOff` POSTs.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "time-off"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MetaResponse"
                  }
                }
              },
              "description": ""
            }
          },
          "x-merge-meta-post": "META_POST",
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      },
      "/webhook-receivers": {
        "get": {
          "operationId": "webhook_receivers_list",
          "description": "Returns a list of `WebhookReceiver` objects.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "webhook-receivers"
          ],
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WebhookReceiver"
                    }
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        },
        "post": {
          "operationId": "webhook_receivers_create",
          "description": "Creates a `WebhookReceiver` object with the given values.",
          "parameters": [
            {
              "in": "header",
              "name": "X-Account-Token",
              "schema": {
                "type": "string"
              },
              "description": "Token identifying the end user.",
              "required": true
            }
          ],
          "tags": [
            "webhook-receivers"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookReceiverRequest"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookReceiverRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookReceiverRequest"
                }
              }
            },
            "required": true
          },
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WebhookReceiver"
                  }
                }
              },
              "description": ""
            }
          },
          "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
        }
      }
    },
    "components": {
      "schemas": {
        "AccountDetails": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd"
            },
            "integration": {
              "type": "string",
              "readOnly": true,
              "example": "BambooHR"
            },
            "integration_slug": {
              "type": "string",
              "readOnly": true,
              "example": "bamboohr"
            },
            "category": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CategoryEnum"
                }
              ],
              "nullable": true,
              "example": "hris"
            },
            "end_user_origin_id": {
              "type": "string",
              "readOnly": true,
              "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
            },
            "end_user_organization_name": {
              "type": "string",
              "readOnly": true,
              "example": "Waystar Royco"
            },
            "end_user_email_address": {
              "type": "string",
              "format": "email",
              "readOnly": true,
              "example": "kendall.roy@waystar-royco.com"
            },
            "status": {
              "type": "string",
              "readOnly": true,
              "example": "COMPLETE"
            },
            "webhook_listener_url": {
              "type": "string",
              "format": "uri",
              "readOnly": true,
              "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
            },
            "is_duplicate": {
              "type": "boolean",
              "nullable": true,
              "readOnly": true,
              "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
              "example": true
            }
          },
          "x-merge-category": "hris"
        },
        "AccountDetailsAndActions": {
          "type": "object",
          "description": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
          "properties": {
            "id": {
              "type": "string",
              "example": "e59b1821-f85c-4e28-a6b3-1804156f3563"
            },
            "category": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CategoryEnum"
                }
              ],
              "example": "hris"
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/AccountDetailsAndActionsStatusEnum"
                }
              ],
              "example": "COMPLETE"
            },
            "status_detail": {
              "type": "string"
            },
            "end_user_origin_id": {
              "type": "string",
              "example": "3ac95cde-6c7f-4eef-afec-be710b42308d"
            },
            "end_user_organization_name": {
              "type": "string",
              "example": "Foo Bar, LLC"
            },
            "end_user_email_address": {
              "type": "string",
              "example": "hradmin@foobar.dev"
            },
            "webhook_listener_url": {
              "type": "string",
              "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
            },
            "is_duplicate": {
              "type": "boolean",
              "nullable": true,
              "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
              "example": true
            },
            "integration": {
              "$ref": "#/components/schemas/AccountDetailsAndActionsIntegration",
              "example": {
                "name": "SAP SuccessFactors",
                "categories": [
                  "hris",
                  "ats"
                ],
                "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                "color": "#F6A704",
                "slug": "sap-successfactors",
                "passthrough_available": true,
                "available_model_operations": [
                  {
                    "model_name": "Candidate",
                    "available_operations": [
                      "FETCH",
                      "CREATE"
                    ],
                    "required_post_parameters": [
                      "remote_user_id"
                    ],
                    "supported_fields": [
                      "first_name",
                      "last_name",
                      "company",
                      "title"
                    ]
                  }
                ]
              }
            }
          },
          "required": [
            "end_user_email_address",
            "end_user_organization_name",
            "id",
            "status",
            "webhook_listener_url"
          ],
          "x-merge-sample-json": "{\"id\": \"e59b1821-f85c-4e28-a6b3-1804156f3563\", \"category\": \"hris\", \"status\": \"COMPLETE\", \"status_detail\": null, \"end_user_origin_id\": \"3ac95cde-6c7f-4eef-afec-be710b42308d\", \"end_user_organization_name\": \"Foo Bar, LLC\", \"end_user_email_address\": \"hradmin@foobar.dev\", \"webhook_listener_url\": \"https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4\", \"is_duplicate\": true, \"integration\": {\"name\": \"SAP SuccessFactors\", \"categories\": [\"hris\", \"ats\"], \"image\": \"https://cdn.merge.dev/SuccessFactors_Logo.png\", \"square_image\": \"https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg\", \"color\": \"#F6A704\", \"slug\": \"sap-successfactors\", \"passthrough_available\": true, \"available_model_operations\": [{\"model_name\": \"Candidate\", \"available_operations\": [\"FETCH\", \"CREATE\"], \"required_post_parameters\": [\"remote_user_id\"], \"supported_fields\": [\"first_name\", \"last_name\", \"company\", \"title\"]}]}}",
          "x-merge-category": "hris"
        },
        "AccountDetailsAndActionsIntegration": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CategoriesEnum"
              }
            },
            "image": {
              "type": "string"
            },
            "square_image": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "slug": {
              "type": "string"
            },
            "passthrough_available": {
              "type": "boolean"
            },
            "available_model_operations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ModelOperation"
              }
            }
          },
          "required": [
            "categories",
            "color",
            "name",
            "passthrough_available",
            "slug"
          ],
          "x-merge-category": "hris"
        },
        "AccountDetailsAndActionsStatusEnum": {
          "enum": [
            "COMPLETE",
            "INCOMPLETE",
            "RELINK_NEEDED"
          ],
          "type": "string",
          "description": "* `COMPLETE` - COMPLETE\n* `INCOMPLETE` - INCOMPLETE\n* `RELINK_NEEDED` - RELINK_NEEDED",
          "x-merge-category": "hris"
        },
        "AccountIntegration": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Company name."
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CategoriesEnum"
              },
              "description": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris]."
            },
            "image": {
              "type": "string",
              "format": "uri",
              "nullable": true,
              "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>"
            },
            "square_image": {
              "type": "string",
              "format": "uri",
              "nullable": true,
              "description": "Company logo in square shape. <b>Upload an image with a white background.</b>"
            },
            "color": {
              "type": "string",
              "description": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
              "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
              "maxLength": 18
            },
            "slug": {
              "type": "string",
              "readOnly": true
            },
            "is_in_beta": {
              "type": "boolean",
              "description": "If checked, this integration will not appear in the linking flow, and will appear elsewhere with a Beta tag."
            },
            "api_endpoints_to_documentation_urls": {
              "type": "object",
              "additionalProperties": {},
              "description": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}"
            }
          },
          "required": [
            "name"
          ],
          "x-merge-category": "hris"
        },
        "AccountToken": {
          "type": "object",
          "properties": {
            "account_token": {
              "type": "string",
              "example": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB"
            },
            "integration": {
              "$ref": "#/components/schemas/AccountIntegration",
              "example": {
                "name": "SAP SuccessFactors",
                "categories": [
                  "hris",
                  "ats"
                ],
                "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                "color": "#F6A704",
                "slug": "sap-successfactors"
              }
            }
          },
          "required": [
            "account_token",
            "integration"
          ],
          "x-merge-category": "hris"
        },
        "AccountTypeEnum": {
          "enum": [
            "SAVINGS",
            "CHECKING"
          ],
          "type": "string",
          "description": "* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
          "x-merge-category": "hris"
        },
        "AvailableActions": {
          "type": "object",
          "description": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
          "properties": {
            "integration": {
              "$ref": "#/components/schemas/AccountIntegration",
              "example": {
                "name": "Lever",
                "categories": [
                  "ats"
                ],
                "image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Logo.png",
                "square_image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Square_Logo.png",
                "color": "#262A34",
                "is_in_beta": "true",
                "api_endpoints_to_documentation_urls": "{'GET': [('/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve')], 'POST': []}"
              }
            },
            "passthrough_available": {
              "type": "boolean",
              "example": true
            },
            "available_model_operations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ModelOperation"
              },
              "example": [
                {
                  "model_name": "Candidate",
                  "available_operations": [
                    "FETCH",
                    "CREATE"
                  ],
                  "required_post_parameters": [
                    "remote_user_id"
                  ],
                  "supported_fields": [
                    "first_name",
                    "last_name",
                    "company",
                    "title"
                  ]
                }
              ]
            }
          },
          "required": [
            "integration",
            "passthrough_available"
          ],
          "x-merge-category": "hris"
        },
        "BankInfo": {
          "type": "object",
          "description": "# The BankInfo Object\n### Description\nThe `BankInfo` object is used to represent the Bank Account information for an Employee.\n\n### Usage Example\nFetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "123234"
            },
            "employee": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee with this bank account.",
              "example": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
              "x-merge-expands-to": "Employee"
            },
            "account_number": {
              "type": "string",
              "nullable": true,
              "description": "The account number.",
              "maxLength": 100,
              "example": "439291590"
            },
            "routing_number": {
              "type": "string",
              "nullable": true,
              "description": "The routing number.",
              "example": "089690059"
            },
            "bank_name": {
              "type": "string",
              "nullable": true,
              "description": "The bank name.",
              "example": "Chase"
            },
            "account_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/AccountTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The bank account type\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
              "example": "CHECKING"
            },
            "remote_created_at": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "When the matching bank object was created in the third party system.",
              "example": "2021-12-06T10:11:26Z"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/bank-info",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-expands": "{\"employee\": \"Employee\"}",
          "x-merge-category": "hris"
        },
        "Benefit": {
          "type": "object",
          "description": "# The Benefit Object\n### Description\nThe `Benefit` object is used to represent a benefit that an employee has enrolled in.\n\n### Usage Example\nFetch from the `LIST Benefits` endpoint and filter by `ID` to show all benefits.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "employee": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee on the plan.",
              "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
              "x-merge-expands-to": "Employee"
            },
            "provider_name": {
              "type": "string",
              "nullable": true,
              "description": "The name of the benefit provider.",
              "example": "Blue Shield of California"
            },
            "benefit_plan_type": {
              "type": "string",
              "nullable": true,
              "description": "The type of benefit plan"
            },
            "employee_contribution": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The employee's contribution.",
              "example": 23.65
            },
            "company_contribution": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The company's contribution.",
              "example": 150
            },
            "start_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the benefit started.",
              "example": "2020-11-15 00:59:25.309761+00:00"
            },
            "end_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the benefit ended.",
              "example": "2021-10-15 00:23:25.309761+00:00"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/benefits",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-expands": "{\"employee\": \"Employee\"}",
          "x-merge-category": "hris"
        },
        "CategoriesEnum": {
          "enum": [
            "hris",
            "ats",
            "accounting",
            "ticketing",
            "crm",
            "mktg",
            "filestorage"
          ],
          "type": "string",
          "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
          "x-merge-category": "hris"
        },
        "CategoryEnum": {
          "enum": [
            "hris",
            "ats",
            "accounting",
            "ticketing",
            "crm",
            "mktg",
            "filestorage"
          ],
          "type": "string",
          "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
          "x-merge-category": "hris"
        },
        "CommonModelScopesBodyRequest": {
          "type": "object",
          "properties": {
            "model_id": {
              "type": "string",
              "minLength": 1,
              "example": "hris.Employee"
            },
            "enabled_actions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EnabledActionsEnum"
              },
              "example": [
                "READ",
                "WRITE"
              ]
            },
            "disabled_fields": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "example": [
                "first_name"
              ]
            }
          },
          "required": [
            "disabled_fields",
            "enabled_actions",
            "model_id"
          ],
          "x-merge-category": "hris"
        },
        "Company": {
          "type": "object",
          "description": "# The Company Object\n### Description\nThe `Company` object is used to represent a company within the HRIS / Payroll system.\n\n### Usage Example\nFetch from the `LIST Companies` endpoint and filter by `ID` to show all companies.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "1b998423-db0a-4037-a4cf-f79c60cb67b3"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "legal_name": {
              "type": "string",
              "nullable": true,
              "description": "The company's legal name.",
              "example": "Waystar Royco, Inc."
            },
            "display_name": {
              "type": "string",
              "nullable": true,
              "description": "The company's display name.",
              "example": "Waystar Royco"
            },
            "eins": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              },
              "nullable": true,
              "description": "The company's Employer Identification Numbers.",
              "example": [
                "12-3456789",
                "12-3451111",
                "11-0011000"
              ]
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/companies",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-category": "hris"
        },
        "ConditionSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account."
            },
            "common_model": {
              "type": "string",
              "readOnly": true,
              "description": "The common model for which a condition schema is defined."
            },
            "native_name": {
              "type": "string",
              "nullable": true,
              "description": "User-facing *native condition* name. e.g. \"Skip Manager\"."
            },
            "field_name": {
              "type": "string",
              "nullable": true,
              "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\"."
            },
            "is_unique": {
              "type": "boolean",
              "description": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times."
            },
            "condition_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ConditionTypeEnum"
                }
              ],
              "description": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS"
            },
            "operators": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OperatorSchema"
              },
              "description": "The schemas for the operators that can be used on a condition."
            }
          },
          "required": [
            "condition_type",
            "field_name",
            "id",
            "native_name",
            "operators"
          ],
          "x-merge-category": "hris"
        },
        "ConditionTypeEnum": {
          "enum": [
            "BOOLEAN",
            "DATE",
            "DATE_TIME",
            "INTEGER",
            "FLOAT",
            "STRING",
            "LIST_OF_STRINGS"
          ],
          "type": "string",
          "description": "* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
          "x-merge-category": "hris"
        },
        "CountryEnum": {
          "enum": [
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CG",
            "CD",
            "CK",
            "CR",
            "CI",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "VA",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "KP",
            "MK",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PS",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "RS",
            "SC",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "KR",
            "SS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "UM",
            "US",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ],
          "type": "string",
          "description": "* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
          "x-merge-category": "hris"
        },
        "DataPassthroughRequest": {
          "type": "object",
          "description": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
          "properties": {
            "method": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MethodEnum"
                }
              ],
              "example": "POST"
            },
            "path": {
              "type": "string",
              "minLength": 1,
              "example": "/scooters"
            },
            "base_url_override": {
              "type": "string",
              "nullable": true,
              "minLength": 1
            },
            "data": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "example": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}"
            },
            "multipart_form_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MultipartFormFieldRequest"
              },
              "nullable": true,
              "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`."
            },
            "headers": {
              "type": "object",
              "additionalProperties": {},
              "nullable": true,
              "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
              "example": {
                "EXTRA-HEADER": "value"
              }
            },
            "request_format": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RequestFormatEnum"
                }
              ],
              "nullable": true,
              "example": "JSON"
            },
            "normalize_response": {
              "type": "boolean",
              "description": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`."
            }
          },
          "required": [
            "method",
            "path"
          ],
          "x-merge-category": "hris"
        },
        "DebugModeLog": {
          "type": "object",
          "properties": {
            "log_id": {
              "type": "string",
              "example": "99433219-8017-4acd-bb3c-ceb23d663832"
            },
            "dashboard_view": {
              "type": "string",
              "example": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832"
            },
            "log_summary": {
              "$ref": "#/components/schemas/DebugModelLogSummary",
              "example": {
                "url": "https://harvest.greenhouse.io/v1/candidates/",
                "method": "POST",
                "status_code": 200
              }
            }
          },
          "required": [
            "dashboard_view",
            "log_id",
            "log_summary"
          ],
          "x-merge-sample-json": "{\"log_id\": \"99433219-8017-4acd-bb3c-ceb23d663832\", \"dashboard_view\": \"https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832\", \"log_summary\": {\"url\": \"https://harvest.greenhouse.io/v1/candidates/\", \"method\": \"POST\", \"status_code\": 200}}",
          "x-merge-category": "hris"
        },
        "DebugModelLogSummary": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "example": "https://harvest.greenhouse.io/v1/candidates/"
            },
            "method": {
              "type": "string",
              "example": "POST"
            },
            "status_code": {
              "type": "integer",
              "example": 200
            }
          },
          "required": [
            "method",
            "status_code",
            "url"
          ],
          "x-merge-sample-json": "{\"url\": \"https://harvest.greenhouse.io/v1/candidates/\", \"method\": \"POST\", \"status_code\": 200}",
          "x-merge-category": "hris"
        },
        "Deduction": {
          "type": "object",
          "description": "# The Deduction Object\n### Description\nThe `Deduction` object is used to represent an array of the wages withheld from total earnings for the purpose of paying taxes.\n\n### Usage Example\nFetch from the `LIST Deductions` endpoint and filter by `ID` to show all deductions.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "5fd439fc-1b64-4755-b275-64918936c365"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "93478612"
            },
            "employee_payroll_run": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "example": "35347df1-95e7-46e2-93cc-66f1191edca5"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "description": "The deduction's name.",
              "example": "Social Security"
            },
            "employee_deduction": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The amount of money that is withheld from an employee's gross pay by the employee.",
              "example": 34.54
            },
            "company_deduction": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The amount of money that is withheld on behalf of an employee by the company.",
              "example": 78.78
            },
            "remote_was_deleted": {
              "type": "boolean",
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/payroll-deduction",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-nested-write-allowed": true,
          "x-merge-category": "hris"
        },
        "Earning": {
          "type": "object",
          "description": "# The Earning Object\n### Description\nThe `Earning` object is used to represent an array of different compensations that an employee receives within specific wage categories.\n\n### Usage Example\nFetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "babbced6-3a81-4775-8da2-490dc6385259"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "52802"
            },
            "employee_payroll_run": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "example": "35347df1-95e7-46e2-93cc-66f1191edca5"
            },
            "amount": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The amount earned.",
              "example": 1002.34
            },
            "type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EarningTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The type of earning.\n\n* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
              "example": "SALARY"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true
            }
          },
          "x-merge-nested-write-allowed": true,
          "x-merge-category": "hris"
        },
        "EarningTypeEnum": {
          "enum": [
            "SALARY",
            "REIMBURSEMENT",
            "OVERTIME",
            "BONUS"
          ],
          "type": "string",
          "description": "* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
          "x-merge-category": "hris"
        },
        "Employee": {
          "type": "object",
          "description": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "0958cbc6-6040-430a-848e-aafacbadf4ae"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "employee_number": {
              "type": "string",
              "nullable": true,
              "description": "The employee's number that appears in the third-party integration's UI.",
              "example": "2"
            },
            "company": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The ID of the employee's company.",
              "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
              "x-merge-expands-to": "Company"
            },
            "first_name": {
              "type": "string",
              "nullable": true,
              "description": "The employee's first name.",
              "example": "Greg"
            },
            "last_name": {
              "type": "string",
              "nullable": true,
              "description": "The employee's last name.",
              "example": "Hirsch"
            },
            "display_full_name": {
              "type": "string",
              "nullable": true,
              "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
              "example": "Cousin Greg Hirsch"
            },
            "username": {
              "type": "string",
              "nullable": true,
              "description": "The employee's username that appears in the remote UI.",
              "example": "cousingreg"
            },
            "groups": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "example": [
                "21a54124-397f-494d-985e-3c5b330b8a68"
              ],
              "x-merge-expands-to": "Group"
            },
            "work_email": {
              "type": "string",
              "format": "email",
              "nullable": true,
              "description": "The employee's work email.",
              "maxLength": 254,
              "example": "greg@merge.dev"
            },
            "personal_email": {
              "type": "string",
              "format": "email",
              "nullable": true,
              "description": "The employee's personal email.",
              "maxLength": 254,
              "example": "greg@gmail.com"
            },
            "mobile_phone_number": {
              "type": "string",
              "nullable": true,
              "description": "The employee's mobile phone number.",
              "example": "+1234567890"
            },
            "employments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "example": [
                "17a54124-287f-494d-965e-3c5b330c9a68"
              ],
              "description": "Array of `Employment` IDs for this Employee.",
              "x-merge-expands-to": "Employment"
            },
            "home_location": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's home address.",
              "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
              "x-merge-expands-to": "Location"
            },
            "work_location": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's work address.",
              "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
              "x-merge-expands-to": "Location"
            },
            "manager": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee ID of the employee's manager.",
              "example": "0048ea5b-911e-4dff-9364-92070dea62ff",
              "x-merge-expands-to": "Employee"
            },
            "team": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's team.",
              "example": "249c9faa-3045-4a31-953b-8f22d3613301",
              "x-merge-expands-to": "Team"
            },
            "pay_group": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's pay group",
              "example": "ad1264e2-39be-4787-b749-f1aade9e3405",
              "x-merge-expands-to": "PayGroup"
            },
            "ssn": {
              "type": "string",
              "nullable": true,
              "description": "The employee's social security number.",
              "maxLength": 100,
              "example": "1234567890"
            },
            "gender": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GenderEnum"
                }
              ],
              "nullable": true,
              "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
              "example": "MALE"
            },
            "ethnicity": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EthnicityEnum"
                }
              ],
              "nullable": true,
              "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
              "example": "WHITE"
            },
            "marital_status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MaritalStatusEnum"
                }
              ],
              "nullable": true,
              "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
              "example": "SINGLE"
            },
            "date_of_birth": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The employee's date of birth.",
              "example": "1990-11-10T00:00:00Z"
            },
            "hire_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
              "deprecated": true,
              "example": "2020-10-10T00:00:00Z"
            },
            "start_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
              "example": "2020-10-11T00:00:00Z"
            },
            "remote_created_at": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "When the third party's employee was created.",
              "example": "2020-10-11T00:00:00Z"
            },
            "employment_status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EmploymentStatusEnum"
                }
              ],
              "nullable": true,
              "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
              "example": "INACTIVE"
            },
            "termination_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The employee's termination date.",
              "example": "2021-10-12T00:00:00Z"
            },
            "avatar": {
              "type": "string",
              "format": "uri",
              "nullable": true,
              "description": "The URL of the employee's avatar image.",
              "maxLength": 2000,
              "example": "http://alturl.com/h2h8m"
            },
            "custom_fields": {
              "type": "object",
              "additionalProperties": {},
              "nullable": true,
              "description": "Custom fields configured for a given model."
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/people",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-expands": "{\"company\": \"Company\", \"employments\": \"Employment\", \"groups\": \"Group\", \"home_location\": \"Location\", \"manager\": \"Employee\", \"pay_group\": \"PayGroup\", \"team\": \"Team\", \"work_location\": \"Location\"}",
          "x-merge-category": "hris"
        },
        "EmployeeEndpointRequest": {
          "type": "object",
          "properties": {
            "model": {
              "$ref": "#/components/schemas/EmployeeRequest"
            }
          },
          "required": [
            "model"
          ],
          "x-merge-category": "hris"
        },
        "EmployeePayrollRun": {
          "type": "object",
          "description": "# The EmployeePayrollRun Object\n### Description\nThe `EmployeePayrollRun` object is used to represent an employee's pay statement for a specific payroll run.\n\n### Usage Example\nFetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to show all employee payroll runs.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "employee": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee whose payroll is being run.",
              "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
              "x-merge-expands-to": "Employee"
            },
            "payroll_run": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The payroll being run.",
              "example": "35347df1-95e7-46e2-93cc-66f1191edca5",
              "x-merge-expands-to": "PayrollRun"
            },
            "gross_pay": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The total earnings throughout a given period for an employee before any deductions are made.",
              "example": 1342.67
            },
            "net_pay": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The take-home pay throughout a given period for an employee after deductions are made.",
              "example": 865.78
            },
            "start_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the payroll run started.",
              "example": "2020-11-08T00:00:00Z"
            },
            "end_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the payroll run ended.",
              "example": "2020-11-09T00:00:00Z"
            },
            "check_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the payroll run was checked.",
              "example": "2020-11-10T00:00:00Z"
            },
            "earnings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Earning"
              },
              "readOnly": true,
              "example": [
                {
                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                  "amount": 1002.34,
                  "type": "SALARY"
                },
                {
                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                  "amount": 8342.34,
                  "type": "OVERTIME"
                }
              ]
            },
            "deductions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Deduction"
              },
              "readOnly": true,
              "example": [
                {
                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                  "name": "Social Security",
                  "employee_deduction": 34.54,
                  "company_deduction": 78.78
                }
              ]
            },
            "taxes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Tax"
              },
              "readOnly": true,
              "example": [
                {
                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                  "name": "California State Income Tax",
                  "amount": 100.25,
                  "employer_tax": "False"
                }
              ]
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/employee-payroll",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-expands": "{\"employee\": \"Employee\", \"payroll_run\": \"PayrollRun\"}",
          "x-merge-category": "hris"
        },
        "EmployeeRequest": {
          "type": "object",
          "description": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
          "properties": {
            "employee_number": {
              "type": "string",
              "nullable": true,
              "description": "The employee's number that appears in the third-party integration's UI.",
              "example": "2"
            },
            "company": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The ID of the employee's company.",
              "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
              "x-merge-expands-to": "Company"
            },
            "first_name": {
              "type": "string",
              "nullable": true,
              "description": "The employee's first name.",
              "example": "Greg"
            },
            "last_name": {
              "type": "string",
              "nullable": true,
              "description": "The employee's last name.",
              "example": "Hirsch"
            },
            "display_full_name": {
              "type": "string",
              "nullable": true,
              "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
              "example": "Cousin Greg Hirsch"
            },
            "username": {
              "type": "string",
              "nullable": true,
              "description": "The employee's username that appears in the remote UI.",
              "example": "cousingreg"
            },
            "groups": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "example": [
                "21a54124-397f-494d-985e-3c5b330b8a68"
              ],
              "x-merge-expands-to": "Group"
            },
            "work_email": {
              "type": "string",
              "format": "email",
              "nullable": true,
              "description": "The employee's work email.",
              "maxLength": 254,
              "example": "greg@merge.dev"
            },
            "personal_email": {
              "type": "string",
              "format": "email",
              "nullable": true,
              "description": "The employee's personal email.",
              "maxLength": 254,
              "example": "greg@gmail.com"
            },
            "mobile_phone_number": {
              "type": "string",
              "nullable": true,
              "description": "The employee's mobile phone number.",
              "example": "+1234567890"
            },
            "employments": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "example": [
                "17a54124-287f-494d-965e-3c5b330c9a68"
              ],
              "description": "Array of `Employment` IDs for this Employee.",
              "x-merge-expands-to": "Employment"
            },
            "home_location": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's home address.",
              "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
              "x-merge-expands-to": "Location"
            },
            "work_location": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's work address.",
              "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
              "x-merge-expands-to": "Location"
            },
            "manager": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee ID of the employee's manager.",
              "example": "0048ea5b-911e-4dff-9364-92070dea62ff",
              "x-merge-expands-to": "Employee"
            },
            "team": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's team.",
              "example": "249c9faa-3045-4a31-953b-8f22d3613301",
              "x-merge-expands-to": "Team"
            },
            "pay_group": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee's pay group",
              "example": "ad1264e2-39be-4787-b749-f1aade9e3405",
              "x-merge-expands-to": "PayGroup"
            },
            "ssn": {
              "type": "string",
              "nullable": true,
              "description": "The employee's social security number.",
              "maxLength": 100,
              "example": "1234567890"
            },
            "gender": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GenderEnum"
                }
              ],
              "nullable": true,
              "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
              "example": "MALE"
            },
            "ethnicity": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EthnicityEnum"
                }
              ],
              "nullable": true,
              "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
              "example": "WHITE"
            },
            "marital_status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MaritalStatusEnum"
                }
              ],
              "nullable": true,
              "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
              "example": "SINGLE"
            },
            "date_of_birth": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The employee's date of birth.",
              "example": "1990-11-10T00:00:00Z"
            },
            "hire_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
              "deprecated": true,
              "example": "2020-10-10T00:00:00Z"
            },
            "start_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
              "example": "2020-10-11T00:00:00Z"
            },
            "employment_status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EmploymentStatusEnum"
                }
              ],
              "nullable": true,
              "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
              "example": "INACTIVE"
            },
            "termination_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The employee's termination date.",
              "example": "2021-10-12T00:00:00Z"
            },
            "avatar": {
              "type": "string",
              "format": "uri",
              "nullable": true,
              "description": "The URL of the employee's avatar image.",
              "maxLength": 2000,
              "example": "http://alturl.com/h2h8m"
            },
            "integration_params": {
              "type": "object",
              "additionalProperties": {},
              "writeOnly": true,
              "nullable": true,
              "example": {
                "unique_integration_field": "unique_integration_field_value"
              }
            },
            "linked_account_params": {
              "type": "object",
              "additionalProperties": {},
              "writeOnly": true,
              "nullable": true,
              "example": {
                "unique_linked_account_field": "unique_linked_account_field_value"
              }
            }
          },
          "x-merge-expands": "{\"company\": \"Company\", \"employments\": \"Employment\", \"groups\": \"Group\", \"home_location\": \"Location\", \"manager\": \"Employee\", \"pay_group\": \"PayGroup\", \"team\": \"Team\", \"work_location\": \"Location\"}",
          "x-merge-category": "hris"
        },
        "EmployeeResponse": {
          "type": "object",
          "properties": {
            "model": {
              "$ref": "#/components/schemas/Employee"
            },
            "warnings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WarningValidationProblem"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorValidationProblem"
              }
            },
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DebugModeLog"
              }
            }
          },
          "required": [
            "errors",
            "model",
            "warnings"
          ],
          "x-merge-category": "hris"
        },
        "Employment": {
          "type": "object",
          "description": "# The Employment Object\n### Description\nThe `Employment` object is used to represent a job position at a company.\n\nPlease note: When there is a change in pay or title, integrations with historical data will create new Employment objects while integrations without historical data will update existing ones.\n\n### Usage Example\nFetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "employee": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee holding this position.",
              "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
              "x-merge-expands-to": "Employee"
            },
            "job_title": {
              "type": "string",
              "nullable": true,
              "description": "The position's title.",
              "example": "Executive Assistant to Tom Wambsgans"
            },
            "pay_rate": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The position's pay rate in dollars.",
              "example": "50000.00"
            },
            "pay_period": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PayPeriodEnum"
                }
              ],
              "nullable": true,
              "description": "The time period this pay rate encompasses.\n\n* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
              "example": "YEAR"
            },
            "pay_frequency": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PayFrequencyEnum"
                }
              ],
              "nullable": true,
              "description": "The position's pay frequency.\n\n* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
              "example": "BIWEEKLY"
            },
            "pay_currency": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PayCurrencyEnum"
                }
              ],
              "nullable": true,
              "description": "The position's currency code.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
              "example": "USD"
            },
            "pay_group": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employment's pay group",
              "example": "d4e4837f-9900-484c-ac40-528365bb08ef",
              "x-merge-expands-to": "PayGroup"
            },
            "flsa_status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlsaStatusEnum"
                }
              ],
              "nullable": true,
              "description": "The position's FLSA status.\n\n* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
              "example": "EXEMPT"
            },
            "effective_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The position's effective date.",
              "example": "2023-10-06T18:42:34Z"
            },
            "employment_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EmploymentTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The position's type of employment.\n\n* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
              "example": "FULL TIME"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/jobs",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-nested-write-allowed": true,
          "x-merge-expands": "{\"employee\": \"Employee\", \"pay_group\": \"PayGroup\"}",
          "x-merge-category": "hris"
        },
        "EmploymentStatusEnum": {
          "enum": [
            "ACTIVE",
            "PENDING",
            "INACTIVE"
          ],
          "type": "string",
          "description": "* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
          "x-merge-category": "hris"
        },
        "EmploymentTypeEnum": {
          "enum": [
            "FULL_TIME",
            "PART_TIME",
            "INTERN",
            "CONTRACTOR",
            "FREELANCE"
          ],
          "type": "string",
          "description": "* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
          "x-merge-category": "hris"
        },
        "EnabledActionsEnum": {
          "enum": [
            "READ",
            "WRITE"
          ],
          "type": "string",
          "description": "* `READ` - READ\n* `WRITE` - WRITE",
          "x-merge-category": "hris"
        },
        "EncodingEnum": {
          "enum": [
            "RAW",
            "BASE64",
            "GZIP_BASE64"
          ],
          "type": "string",
          "description": "* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
          "x-merge-category": "hris"
        },
        "EndUserDetailsRequest": {
          "type": "object",
          "properties": {
            "end_user_email_address": {
              "type": "string",
              "minLength": 1,
              "description": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
              "maxLength": 100
            },
            "end_user_organization_name": {
              "type": "string",
              "minLength": 1,
              "description": "Your end user's organization.",
              "maxLength": 100
            },
            "end_user_origin_id": {
              "type": "string",
              "minLength": 1,
              "description": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
              "maxLength": 100
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CategoriesEnum"
              },
              "description": "The integration categories to show in Merge Link."
            },
            "integration": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "description": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/."
            },
            "link_expiry_mins": {
              "type": "integer",
              "maximum": 10080,
              "minimum": 30,
              "default": 30,
              "description": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30."
            },
            "should_create_magic_link_url": {
              "type": "boolean",
              "nullable": true,
              "default": false,
              "description": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/."
            },
            "common_models": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CommonModelScopesBodyRequest"
              },
              "nullable": true,
              "description": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account."
            }
          },
          "required": [
            "categories",
            "end_user_email_address",
            "end_user_organization_name",
            "end_user_origin_id"
          ],
          "x-merge-category": "hris"
        },
        "ErrorValidationProblem": {
          "type": "object",
          "properties": {
            "source": {
              "$ref": "#/components/schemas/ValidationProblemSource",
              "example": {
                "pointer": "/model/custom_fields"
              }
            },
            "title": {
              "type": "string",
              "example": "Missing Required Field"
            },
            "detail": {
              "type": "string",
              "example": "custom_fields is a required field on model."
            },
            "problem_type": {
              "type": "string",
              "example": "MISSING_REQUIRED_FIELD"
            }
          },
          "required": [
            "detail",
            "problem_type",
            "title"
          ],
          "x-merge-category": "hris"
        },
        "EthnicityEnum": {
          "enum": [
            "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
            "ASIAN_OR_INDIAN_SUBCONTINENT",
            "BLACK_OR_AFRICAN_AMERICAN",
            "HISPANIC_OR_LATINO",
            "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
            "TWO_OR_MORE_RACES",
            "WHITE",
            "PREFER_NOT_TO_DISCLOSE"
          ],
          "type": "string",
          "description": "* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
          "x-merge-category": "hris"
        },
        "FlsaStatusEnum": {
          "enum": [
            "EXEMPT",
            "SALARIED_NONEXEMPT",
            "NONEXEMPT",
            "OWNER"
          ],
          "type": "string",
          "description": "* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
          "x-merge-category": "hris"
        },
        "GenderEnum": {
          "enum": [
            "MALE",
            "FEMALE",
            "NON-BINARY",
            "OTHER",
            "PREFER_NOT_TO_DISCLOSE"
          ],
          "type": "string",
          "description": "* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
          "x-merge-category": "hris"
        },
        "GenerateRemoteKeyRequest": {
          "type": "object",
          "description": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "Remote Deployment Key 1"
            }
          },
          "required": [
            "name"
          ],
          "x-merge-category": "hris"
        },
        "Group": {
          "type": "object",
          "description": "# The Group Object\n### Description\nThe `Group` object is used to represent any subset of employees, such as `PayGroup` or `Team`. Employees can be in multiple Groups.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and expand groups to view an employee's groups.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "134e0111-0f67-44f6-98f0-597000290bb3"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "800293"
            },
            "parent_group": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The parent group for this group.",
              "example": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "description": "The group name.",
              "example": "COST_CENTER_US"
            },
            "type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GroupTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The group type\n\n* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
              "example": "COST_CENTER"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/group",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-category": "hris"
        },
        "GroupTypeEnum": {
          "enum": [
            "TEAM",
            "DEPARTMENT",
            "COST_CENTER",
            "BUSINESS_UNIT",
            "GROUP"
          ],
          "type": "string",
          "description": "* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
          "x-merge-category": "hris"
        },
        "IgnoreCommonModelRequest": {
          "type": "object",
          "properties": {
            "reason": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ReasonEnum"
                }
              ],
              "example": "GENERAL_CUSTOMER_REQUEST"
            },
            "message": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256,
              "example": "deletion request by user id 51903790-7dfe-4053-8d63-5a10cc4ffd39"
            }
          },
          "required": [
            "reason"
          ],
          "x-merge-category": "hris"
        },
        "Issue": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/IssueStatusEnum"
                }
              ],
              "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
              "example": "ONGOING"
            },
            "error_description": {
              "type": "string",
              "example": "string"
            },
            "end_user": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "example": "b82302de-852e-4e60-b050-edf9da3b7c02"
            },
            "first_incident_time": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "example": "2022-12-05T16:19:15.161Z"
            },
            "last_incident_time": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "example": "2022-12-05T16:19:15.161Z"
            },
            "is_muted": {
              "type": "boolean",
              "readOnly": true,
              "example": true
            },
            "error_details": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "example": [
                "Missing employee permissions.",
                "Missing time off permissions."
              ]
            }
          },
          "required": [
            "error_description"
          ],
          "x-merge-category": "hris"
        },
        "IssueStatusEnum": {
          "enum": [
            "ONGOING",
            "RESOLVED"
          ],
          "type": "string",
          "description": "* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
          "x-merge-category": "hris"
        },
        "LinkToken": {
          "type": "object",
          "properties": {
            "link_token": {
              "type": "string",
              "example": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0"
            },
            "integration_name": {
              "type": "string",
              "example": "Lever"
            },
            "magic_link_url": {
              "type": "string",
              "example": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
            }
          },
          "required": [
            "link_token"
          ],
          "x-merge-category": "hris"
        },
        "LinkedAccountCondition": {
          "type": "object",
          "properties": {
            "condition_schema_id": {
              "type": "string",
              "format": "uuid",
              "description": "The ID indicating which condition schema to use for a specific condition."
            },
            "common_model": {
              "type": "string",
              "readOnly": true,
              "description": "The common model for a specific condition."
            },
            "native_name": {
              "type": "string",
              "nullable": true,
              "description": "User-facing *native condition* name. e.g. \"Skip Manager\"."
            },
            "operator": {
              "type": "string",
              "description": "The operator for a specific condition."
            },
            "value": {
              "readOnly": true,
              "description": "The value for a condition."
            },
            "field_name": {
              "type": "string",
              "nullable": true,
              "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\"."
            }
          },
          "required": [
            "condition_schema_id",
            "field_name",
            "native_name",
            "operator"
          ],
          "x-merge-category": "hris"
        },
        "LinkedAccountConditionRequest": {
          "type": "object",
          "properties": {
            "condition_schema_id": {
              "type": "string",
              "format": "uuid",
              "description": "The ID indicating which condition schema to use for a specific condition."
            },
            "operator": {
              "type": "string",
              "minLength": 1,
              "description": "The operator for a specific condition."
            },
            "value": {
              "description": "The value for a specific condition."
            }
          },
          "required": [
            "condition_schema_id",
            "operator",
            "value"
          ],
          "x-merge-category": "hris"
        },
        "LinkedAccountSelectiveSyncConfiguration": {
          "type": "object",
          "properties": {
            "linked_account_conditions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LinkedAccountCondition"
              },
              "readOnly": true,
              "description": "The conditions belonging to a selective sync."
            }
          },
          "x-merge-category": "hris"
        },
        "LinkedAccountSelectiveSyncConfigurationListRequest": {
          "type": "object",
          "properties": {
            "sync_configurations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationRequest"
              },
              "description": "The selective syncs associated with a linked account."
            }
          },
          "required": [
            "sync_configurations"
          ],
          "x-merge-category": "hris"
        },
        "LinkedAccountSelectiveSyncConfigurationRequest": {
          "type": "object",
          "properties": {
            "linked_account_conditions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LinkedAccountConditionRequest"
              },
              "description": "The conditions belonging to a selective sync."
            }
          },
          "required": [
            "linked_account_conditions"
          ],
          "x-merge-category": "hris"
        },
        "LinkedAccountStatus": {
          "type": "object",
          "properties": {
            "linked_account_status": {
              "type": "string"
            },
            "can_make_request": {
              "type": "boolean"
            }
          },
          "required": [
            "can_make_request",
            "linked_account_status"
          ],
          "x-merge-category": "hris"
        },
        "Location": {
          "type": "object",
          "description": "# The Location Object\n### Description\nThe `Location` object is used to represent an address that can be associated with an employee.\n\n### Usage Example\nFetch from the `LIST Locations` endpoint and filter by `ID` to show all office locations.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "f5e6a151-f44e-449a-afb1-8fd781905958"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "93018402"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "description": "The location's name.",
              "example": "NYC Office"
            },
            "phone_number": {
              "type": "string",
              "nullable": true,
              "description": "The location's phone number.",
              "example": "+1111111111"
            },
            "street_1": {
              "type": "string",
              "nullable": true,
              "description": "Line 1 of the location's street address.",
              "example": "2920 Broadway"
            },
            "street_2": {
              "type": "string",
              "nullable": true,
              "description": "Line 2 of the location's street address.",
              "example": "2nd Floor"
            },
            "city": {
              "type": "string",
              "nullable": true,
              "description": "The location's city.",
              "example": "New York "
            },
            "state": {
              "type": "string",
              "nullable": true,
              "description": "The location's state. Represents a region if outside of the US.",
              "example": "NY"
            },
            "zip_code": {
              "type": "string",
              "nullable": true,
              "description": "The location's zip code or postal code.",
              "example": "10027"
            },
            "country": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountryEnum"
                }
              ],
              "nullable": true,
              "description": "The location's country.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
              "example": "US"
            },
            "location_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocationTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The location's type. Can be either WORK or HOME\n\n* `HOME` - HOME\n* `WORK` - WORK",
              "example": "WORK"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/locations",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-category": "hris"
        },
        "LocationTypeEnum": {
          "enum": [
            "HOME",
            "WORK"
          ],
          "type": "string",
          "description": "* `HOME` - HOME\n* `WORK` - WORK",
          "x-merge-category": "hris"
        },
        "MaritalStatusEnum": {
          "enum": [
            "SINGLE",
            "MARRIED_FILING_JOINTLY",
            "MARRIED_FILING_SEPARATELY",
            "HEAD_OF_HOUSEHOLD",
            "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD"
          ],
          "type": "string",
          "description": "* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
          "x-merge-category": "hris"
        },
        "MetaResponse": {
          "type": "object",
          "properties": {
            "request_schema": {
              "type": "object",
              "additionalProperties": {}
            },
            "remote_field_classes": {
              "type": "object",
              "additionalProperties": {}
            },
            "status": {
              "$ref": "#/components/schemas/LinkedAccountStatus"
            },
            "has_conditional_params": {
              "type": "boolean"
            },
            "has_required_linked_account_params": {
              "type": "boolean"
            }
          },
          "required": [
            "has_conditional_params",
            "has_required_linked_account_params",
            "request_schema"
          ],
          "x-merge-category": "hris"
        },
        "MethodEnum": {
          "enum": [
            "GET",
            "OPTIONS",
            "HEAD",
            "POST",
            "PUT",
            "PATCH",
            "DELETE"
          ],
          "type": "string",
          "description": "* `GET` - GET\n* `OPTIONS` - OPTIONS\n* `HEAD` - HEAD\n* `POST` - POST\n* `PUT` - PUT\n* `PATCH` - PATCH\n* `DELETE` - DELETE",
          "x-merge-category": "hris"
        },
        "ModelOperation": {
          "type": "object",
          "description": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
          "properties": {
            "model_name": {
              "type": "string",
              "example": "Candidate"
            },
            "available_operations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "FETCH",
                "CREATE"
              ]
            },
            "required_post_parameters": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "remote_user_id"
              ]
            },
            "supported_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "first_name",
                "last_name",
                "company",
                "title"
              ]
            }
          },
          "required": [
            "available_operations",
            "model_name",
            "required_post_parameters",
            "supported_fields"
          ],
          "x-merge-category": "hris"
        },
        "MultipartFormFieldRequest": {
          "type": "object",
          "description": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "description": "The name of the form field",
              "example": "resume"
            },
            "data": {
              "type": "string",
              "minLength": 1,
              "description": "The data for the form field.",
              "example": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
            },
            "encoding": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EncodingEnum"
                }
              ],
              "nullable": true,
              "default": "RAW",
              "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
              "example": "BASE64"
            },
            "file_name": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "description": "The file name of the form field, if the field is for a file.",
              "example": "resume.pdf"
            },
            "content_type": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "description": "The MIME type of the file, if the field is for a file.",
              "example": "application/pdf"
            }
          },
          "required": [
            "data",
            "name"
          ],
          "x-merge-category": "hris"
        },
        "OperatorSchema": {
          "type": "object",
          "properties": {
            "operator": {
              "type": "string",
              "readOnly": true,
              "description": "The operator for which an operator schema is defined."
            },
            "is_unique": {
              "type": "boolean",
              "readOnly": true,
              "description": "Whether the operator can be repeated multiple times."
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedAccountDetailsAndActionsList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountDetailsAndActions"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedBankInfoList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BankInfo"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedBenefitList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Benefit"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedCompanyList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedConditionSchemaList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ConditionSchema"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedEmployeeList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedEmployeePayrollRunList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EmployeePayrollRun"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedEmploymentList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Employment"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedGroupList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Group"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedIssueList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Issue"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedLocationList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedPayGroupList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PayGroup"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedPayrollRunList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PayrollRun"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedSyncStatusList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SyncStatus"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedTeamList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Team"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedTimeOffBalanceList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TimeOffBalance"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PaginatedTimeOffList": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string",
              "nullable": true,
              "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
            },
            "previous": {
              "type": "string",
              "nullable": true,
              "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TimeOff"
              }
            }
          },
          "x-merge-category": "hris"
        },
        "PayCurrencyEnum": {
          "enum": [
            "XUA",
            "AFN",
            "AFA",
            "ALL",
            "ALK",
            "DZD",
            "ADP",
            "AOA",
            "AOK",
            "AON",
            "AOR",
            "ARA",
            "ARS",
            "ARM",
            "ARP",
            "ARL",
            "AMD",
            "AWG",
            "AUD",
            "ATS",
            "AZN",
            "AZM",
            "BSD",
            "BHD",
            "BDT",
            "BBD",
            "BYN",
            "BYB",
            "BYR",
            "BEF",
            "BEC",
            "BEL",
            "BZD",
            "BMD",
            "BTN",
            "BOB",
            "BOL",
            "BOV",
            "BOP",
            "BAM",
            "BAD",
            "BAN",
            "BWP",
            "BRC",
            "BRZ",
            "BRE",
            "BRR",
            "BRN",
            "BRB",
            "BRL",
            "GBP",
            "BND",
            "BGL",
            "BGN",
            "BGO",
            "BGM",
            "BUK",
            "BIF",
            "XPF",
            "KHR",
            "CAD",
            "CVE",
            "KYD",
            "XAF",
            "CLE",
            "CLP",
            "CLF",
            "CNX",
            "CNY",
            "CNH",
            "COP",
            "COU",
            "KMF",
            "CDF",
            "CRC",
            "HRD",
            "HRK",
            "CUC",
            "CUP",
            "CYP",
            "CZK",
            "CSK",
            "DKK",
            "DJF",
            "DOP",
            "NLG",
            "XCD",
            "DDM",
            "ECS",
            "ECV",
            "EGP",
            "GQE",
            "ERN",
            "EEK",
            "ETB",
            "EUR",
            "XBA",
            "XEU",
            "XBB",
            "XBC",
            "XBD",
            "FKP",
            "FJD",
            "FIM",
            "FRF",
            "XFO",
            "XFU",
            "GMD",
            "GEK",
            "GEL",
            "DEM",
            "GHS",
            "GHC",
            "GIP",
            "XAU",
            "GRD",
            "GTQ",
            "GWP",
            "GNF",
            "GNS",
            "GYD",
            "HTG",
            "HNL",
            "HKD",
            "HUF",
            "IMP",
            "ISK",
            "ISJ",
            "INR",
            "IDR",
            "IRR",
            "IQD",
            "IEP",
            "ILS",
            "ILP",
            "ILR",
            "ITL",
            "JMD",
            "JPY",
            "JOD",
            "KZT",
            "KES",
            "KWD",
            "KGS",
            "LAK",
            "LVL",
            "LVR",
            "LBP",
            "LSL",
            "LRD",
            "LYD",
            "LTL",
            "LTT",
            "LUL",
            "LUC",
            "LUF",
            "MOP",
            "MKD",
            "MKN",
            "MGA",
            "MGF",
            "MWK",
            "MYR",
            "MVR",
            "MVP",
            "MLF",
            "MTL",
            "MTP",
            "MRU",
            "MRO",
            "MUR",
            "MXV",
            "MXN",
            "MXP",
            "MDC",
            "MDL",
            "MCF",
            "MNT",
            "MAD",
            "MAF",
            "MZE",
            "MZN",
            "MZM",
            "MMK",
            "NAD",
            "NPR",
            "ANG",
            "TWD",
            "NZD",
            "NIO",
            "NIC",
            "NGN",
            "KPW",
            "NOK",
            "OMR",
            "PKR",
            "XPD",
            "PAB",
            "PGK",
            "PYG",
            "PEI",
            "PEN",
            "PES",
            "PHP",
            "XPT",
            "PLN",
            "PLZ",
            "PTE",
            "GWE",
            "QAR",
            "XRE",
            "RHD",
            "RON",
            "ROL",
            "RUB",
            "RUR",
            "RWF",
            "SVC",
            "WST",
            "SAR",
            "RSD",
            "CSD",
            "SCR",
            "SLL",
            "XAG",
            "SGD",
            "SKK",
            "SIT",
            "SBD",
            "SOS",
            "ZAR",
            "ZAL",
            "KRH",
            "KRW",
            "KRO",
            "SSP",
            "SUR",
            "ESP",
            "ESA",
            "ESB",
            "XDR",
            "LKR",
            "SHP",
            "XSU",
            "SDD",
            "SDG",
            "SDP",
            "SRD",
            "SRG",
            "SZL",
            "SEK",
            "CHF",
            "SYP",
            "STN",
            "STD",
            "TVD",
            "TJR",
            "TJS",
            "TZS",
            "XTS",
            "THB",
            "XXX",
            "TPE",
            "TOP",
            "TTD",
            "TND",
            "TRY",
            "TRL",
            "TMT",
            "TMM",
            "USD",
            "USN",
            "USS",
            "UGX",
            "UGS",
            "UAH",
            "UAK",
            "AED",
            "UYW",
            "UYU",
            "UYP",
            "UYI",
            "UZS",
            "VUV",
            "VES",
            "VEB",
            "VEF",
            "VND",
            "VNN",
            "CHE",
            "CHW",
            "XOF",
            "YDD",
            "YER",
            "YUN",
            "YUD",
            "YUM",
            "YUR",
            "ZWN",
            "ZRN",
            "ZRZ",
            "ZMW",
            "ZMK",
            "ZWD",
            "ZWR",
            "ZWL"
          ],
          "type": "string",
          "description": "* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
          "x-merge-category": "hris"
        },
        "PayFrequencyEnum": {
          "enum": [
            "WEEKLY",
            "BIWEEKLY",
            "MONTHLY",
            "QUARTERLY",
            "SEMIANNUALLY",
            "ANNUALLY",
            "THIRTEEN-MONTHLY",
            "PRO_RATA",
            "SEMIMONTHLY"
          ],
          "type": "string",
          "description": "* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
          "x-merge-category": "hris"
        },
        "PayGroup": {
          "type": "object",
          "description": "# The PayGroup Object\n### Description\nThe `PayGroup` object is used to represent a subset of employees that are put together for payroll processing purposes.\n\n### Usage Example\nFetch from the `LIST PayGroup` endpoint and filter by `ID` to show all pay group information.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "800293"
            },
            "pay_group_name": {
              "type": "string",
              "nullable": true,
              "description": "The pay group name.",
              "example": "contractor"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/pay-group",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-category": "hris"
        },
        "PayPeriodEnum": {
          "enum": [
            "HOUR",
            "DAY",
            "WEEK",
            "EVERY_TWO_WEEKS",
            "SEMIMONTHLY",
            "MONTH",
            "QUARTER",
            "EVERY_SIX_MONTHS",
            "YEAR"
          ],
          "type": "string",
          "description": "* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
          "x-merge-category": "hris"
        },
        "PayrollRun": {
          "type": "object",
          "description": "# The PayrollRun Object\n### Description\nThe `PayrollRun` object is used to represent a group of pay statements for a specific pay schedule.\n\n### Usage Example\nFetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all payroll runs.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "37336947-b3d4-4a4c-a310-ab6ab510e079"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "run_state": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RunStateEnum"
                }
              ],
              "nullable": true,
              "description": "The state of the payroll run\n\n* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
              "example": "PAID"
            },
            "run_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RunTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The type of the payroll run\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
              "example": "REGULAR"
            },
            "start_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the payroll run started.",
              "example": "2020-11-08T00:00:00Z"
            },
            "end_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the payroll run ended.",
              "example": "2020-11-15T00:00:00Z"
            },
            "check_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time the payroll run was checked.",
              "example": "2020-11-15T00:00:00Z"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/payroll",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-category": "hris"
        },
        "PolicyTypeEnum": {
          "enum": [
            "VACATION",
            "SICK",
            "PERSONAL",
            "JURY_DUTY",
            "VOLUNTEER",
            "BEREAVEMENT"
          ],
          "type": "string",
          "description": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
          "x-merge-category": "hris"
        },
        "ReasonEnum": {
          "enum": [
            "GENERAL_CUSTOMER_REQUEST",
            "GDPR",
            "OTHER"
          ],
          "type": "string",
          "description": "* `GENERAL_CUSTOMER_REQUEST` - GENERAL_CUSTOMER_REQUEST\n* `GDPR` - GDPR\n* `OTHER` - OTHER",
          "x-merge-category": "hris"
        },
        "RemoteData": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "required": [
            "path"
          ],
          "x-merge-category": "hris"
        },
        "RemoteKey": {
          "type": "object",
          "description": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
          "properties": {
            "name": {
              "type": "string",
              "example": "Remote Deployment Key 1"
            },
            "key": {
              "type": "string",
              "example": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "x-merge-category": "hris"
        },
        "RemoteKeyForRegenerationRequest": {
          "type": "object",
          "description": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "Remote Deployment Key 1"
            }
          },
          "required": [
            "name"
          ],
          "x-merge-category": "hris"
        },
        "RemoteResponse": {
          "type": "object",
          "description": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
          "properties": {
            "method": {
              "type": "string",
              "example": "GET"
            },
            "path": {
              "type": "string",
              "example": "/scooters"
            },
            "status": {
              "type": "integer",
              "example": 200
            },
            "response": {
              "example": {
                "scooters": [
                  {
                    "company": "Lime",
                    "model": "Gen 2.5"
                  },
                  {
                    "company": "Bird",
                    "model": "Bird Zero"
                  }
                ]
              }
            },
            "response_headers": {
              "type": "object",
              "additionalProperties": {},
              "example": {
                "X-Page-Token": "value"
              }
            },
            "response_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResponseTypeEnum"
                }
              ],
              "example": "JSON"
            },
            "headers": {
              "type": "object",
              "additionalProperties": {},
              "example": {
                "EXTRA-HEADER": "value",
                "Authorization": "<redacted>"
              }
            }
          },
          "required": [
            "method",
            "path",
            "response",
            "status"
          ],
          "x-merge-category": "hris"
        },
        "RequestFormatEnum": {
          "enum": [
            "JSON",
            "XML",
            "MULTIPART"
          ],
          "type": "string",
          "description": "* `JSON` - JSON\n* `XML` - XML\n* `MULTIPART` - MULTIPART",
          "x-merge-category": "hris"
        },
        "RequestTypeEnum": {
          "enum": [
            "VACATION",
            "SICK",
            "PERSONAL",
            "JURY_DUTY",
            "VOLUNTEER",
            "BEREAVEMENT"
          ],
          "type": "string",
          "description": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
          "x-merge-category": "hris"
        },
        "ResponseTypeEnum": {
          "enum": [
            "JSON",
            "BASE64_GZIP"
          ],
          "type": "string",
          "description": "* `JSON` - JSON\n* `BASE64_GZIP` - BASE64_GZIP",
          "x-merge-category": "hris"
        },
        "RunStateEnum": {
          "enum": [
            "PAID",
            "DRAFT",
            "APPROVED",
            "FAILED",
            "CLOSED"
          ],
          "type": "string",
          "description": "* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
          "x-merge-category": "hris"
        },
        "RunTypeEnum": {
          "enum": [
            "REGULAR",
            "OFF_CYCLE",
            "CORRECTION",
            "TERMINATION",
            "SIGN_ON_BONUS"
          ],
          "type": "string",
          "description": "* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
          "x-merge-category": "hris"
        },
        "SelectiveSyncConfigurationsUsageEnum": {
          "enum": [
            "IN_NEXT_SYNC",
            "IN_LAST_SYNC"
          ],
          "type": "string",
          "description": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC\n* `IN_LAST_SYNC` - IN_LAST_SYNC",
          "x-merge-category": "hris"
        },
        "SyncStatus": {
          "type": "object",
          "description": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
          "properties": {
            "model_name": {
              "type": "string",
              "example": "Employee"
            },
            "model_id": {
              "type": "string",
              "example": "hris.Employee"
            },
            "last_sync_start": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-30T19:44:18.695973Z"
            },
            "next_sync_start": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-30T20:44:18.662942Z"
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SyncStatusStatusEnum"
                }
              ],
              "example": "SYNCING"
            },
            "is_initial_sync": {
              "type": "boolean",
              "example": true
            },
            "selective_sync_configurations_usage": {
              "$ref": "#/components/schemas/SelectiveSyncConfigurationsUsageEnum"
            }
          },
          "required": [
            "is_initial_sync",
            "model_id",
            "model_name",
            "status"
          ],
          "x-merge-sample-json": "{\"model_name\": \"Candidate\", \"model_id\": \"ats.Candidate\", \"last_sync_start\": \"2021-03-30T19:44:18.695973Z\", \"next_sync_start\": \"2021-03-30T20:44:18.662942Z\", \"status\": \"SYNCING\", \"is_initial_sync\": true}",
          "x-merge-category": "hris"
        },
        "SyncStatusStatusEnum": {
          "enum": [
            "SYNCING",
            "DONE",
            "FAILED",
            "DISABLED",
            "PAUSED",
            "PARTIALLY_SYNCED"
          ],
          "type": "string",
          "description": "* `SYNCING` - SYNCING\n* `DONE` - DONE\n* `FAILED` - FAILED\n* `DISABLED` - DISABLED\n* `PAUSED` - PAUSED\n* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
          "x-merge-category": "hris"
        },
        "Tax": {
          "type": "object",
          "description": "# The Tax Object\n### Description\nThe `Tax` object is used to represent an array of the tax deductions for a given employee's payroll run.\n\n### Usage Example\nFetch from the `LIST Taxes` endpoint and filter by `ID` to show all taxes.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "e3a825fd-c38d-4095-a717-df98c4cb9ebc"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "26806834"
            },
            "employee_payroll_run": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "example": "35347df1-95e7-46e2-93cc-66f1191edca5"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "description": "The tax's name.",
              "example": "California State Income Tax"
            },
            "amount": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The tax amount.",
              "example": 100.25
            },
            "employer_tax": {
              "type": "boolean",
              "nullable": true,
              "description": "Whether or not the employer is responsible for paying the tax.",
              "example": "False"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true
            }
          },
          "x-merge-nested-write-allowed": true,
          "x-merge-category": "hris"
        },
        "Team": {
          "type": "object",
          "description": "# The Team Object\n### Description\nThe `Team` object is used to represent a subdivision of the company, usually a department. Each employee will be grouped into one specific Team.\n\n### Usage Example\nIf you're building a way to filter by `Team`, you'd hit the `GET Teams` endpoint to fetch the `Teams`, and then use the `ID` of the team your user selects to filter the `GET Employees` endpoint.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "13a72919-9fae-4f54-81ca-ddfd8712a1ba"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "description": "The team's name.",
              "example": "Engineering"
            },
            "parent_team": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The team's parent team.",
              "example": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
              "x-merge-expands-to": "Team"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/teams",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-expands": "{\"parent_team\": \"Team\"}",
          "x-merge-category": "hris"
        },
        "TimeOff": {
          "type": "object",
          "description": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "91b2b905-e866-40c8-8be2-efe53827a0aa"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "employee": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee requesting time off.",
              "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
              "x-merge-expands-to": "Employee"
            },
            "approver": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The Merge ID of the employee with the ability to approve the time off request.",
              "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
              "x-merge-expands-to": "Employee"
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeOffStatusEnum"
                }
              ],
              "nullable": true,
              "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
              "example": "APPROVED"
            },
            "employee_note": {
              "type": "string",
              "nullable": true,
              "description": "The employee note for this time off request.",
              "example": "Moving into the new apartment Kendall Roy gave me!"
            },
            "units": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UnitsEnum"
                }
              ],
              "nullable": true,
              "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
              "example": "DAYS"
            },
            "amount": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The time off quantity measured by the prescribed “units”.",
              "example": 3
            },
            "request_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RequestTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
              "example": "VACATION"
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time of the start of the time requested off.",
              "example": "2020-11-10T00:00:00Z"
            },
            "end_time": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time of the end of the time requested off.",
              "example": "2020-11-17T00:00:00Z"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/leave",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-expands": "{\"approver\": \"Employee\", \"employee\": \"Employee\"}",
          "x-merge-category": "hris"
        },
        "TimeOffBalance": {
          "type": "object",
          "description": "# The TimeOffBalance Object\n### Description\nThe `TimeOffBalance` object is used to represent current balances for an employee's Time Off plan.\n\n### Usage Example\nFetch from the `LIST TimeOffBalances` endpoint and filter by `ID` to show all time off balances.",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "example": "91b2b905-e866-40c8-8be2-efe53827a0aa"
            },
            "remote_id": {
              "type": "string",
              "nullable": true,
              "description": "The third-party API ID of the matching object.",
              "example": "19202938"
            },
            "employee": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee the balance belongs to.",
              "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
              "x-merge-expands-to": "Employee"
            },
            "balance": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The current remaining PTO balance, always measured in terms of hours.",
              "example": "60.0"
            },
            "used": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The amount of PTO used in terms of hours.",
              "example": "45.0"
            },
            "policy_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PolicyTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The policy type of this time off balance.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
              "example": "VACATION"
            },
            "remote_was_deleted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether or not this object has been deleted by third party webhooks."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "This is the datetime that this object was last updated by Merge",
              "example": "2021-10-16T00:00:00Z"
            },
            "field_mappings": {
              "type": "object",
              "additionalProperties": {},
              "readOnly": true,
              "nullable": true,
              "example": {
                "organization_defined_targets": {
                  "custom_key": "custom_value"
                },
                "linked_account_defined_targets": {
                  "custom_key": "custom_value"
                }
              }
            },
            "remote_data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoteData"
              },
              "readOnly": true,
              "nullable": true,
              "example": [
                {
                  "path": "/leave",
                  "data": [
                    "Varies by platform"
                  ]
                }
              ]
            }
          },
          "x-merge-expands": "{\"employee\": \"Employee\"}",
          "x-merge-category": "hris"
        },
        "TimeOffEndpointRequest": {
          "type": "object",
          "properties": {
            "model": {
              "$ref": "#/components/schemas/TimeOffRequest"
            }
          },
          "required": [
            "model"
          ],
          "x-merge-category": "hris"
        },
        "TimeOffRequest": {
          "type": "object",
          "description": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
          "properties": {
            "employee": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The employee requesting time off.",
              "example": "d2f972d0-2526-434b-9409-4c3b468e08f0",
              "x-merge-expands-to": "Employee"
            },
            "approver": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "The Merge ID of the employee with the ability to approve the time off request.",
              "example": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
              "x-merge-expands-to": "Employee"
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeOffStatusEnum"
                }
              ],
              "nullable": true,
              "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
              "example": "APPROVED"
            },
            "employee_note": {
              "type": "string",
              "nullable": true,
              "description": "The employee note for this time off request.",
              "example": "Moving into the new apartment Kendall Roy gave me!"
            },
            "units": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UnitsEnum"
                }
              ],
              "nullable": true,
              "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
              "example": "DAYS"
            },
            "amount": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "The time off quantity measured by the prescribed “units”.",
              "example": 3
            },
            "request_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RequestTypeEnum"
                }
              ],
              "nullable": true,
              "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
              "example": "VACATION"
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time of the start of the time requested off.",
              "example": "2020-11-10T00:00:00Z"
            },
            "end_time": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "The day and time of the end of the time requested off.",
              "example": "2020-11-17T00:00:00Z"
            },
            "integration_params": {
              "type": "object",
              "additionalProperties": {},
              "writeOnly": true,
              "nullable": true,
              "example": {
                "unique_integration_field": "unique_integration_field_value"
              }
            },
            "linked_account_params": {
              "type": "object",
              "additionalProperties": {},
              "writeOnly": true,
              "nullable": true,
              "example": {
                "unique_linked_account_field": "unique_linked_account_field_value"
              }
            }
          },
          "x-merge-expands": "{\"approver\": \"Employee\", \"employee\": \"Employee\"}",
          "x-merge-category": "hris"
        },
        "TimeOffResponse": {
          "type": "object",
          "properties": {
            "model": {
              "$ref": "#/components/schemas/TimeOff"
            },
            "warnings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WarningValidationProblem"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorValidationProblem"
              }
            },
            "logs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DebugModeLog"
              }
            }
          },
          "required": [
            "errors",
            "model",
            "warnings"
          ],
          "x-merge-category": "hris"
        },
        "TimeOffStatusEnum": {
          "enum": [
            "REQUESTED",
            "APPROVED",
            "DECLINED",
            "CANCELLED",
            "DELETED"
          ],
          "type": "string",
          "description": "* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
          "x-merge-category": "hris"
        },
        "UnitsEnum": {
          "enum": [
            "HOURS",
            "DAYS"
          ],
          "type": "string",
          "description": "* `HOURS` - HOURS\n* `DAYS` - DAYS",
          "x-merge-category": "hris"
        },
        "ValidationProblemSource": {
          "type": "object",
          "properties": {
            "pointer": {
              "type": "string"
            }
          },
          "required": [
            "pointer"
          ],
          "x-merge-category": "hris"
        },
        "WarningValidationProblem": {
          "type": "object",
          "properties": {
            "source": {
              "$ref": "#/components/schemas/ValidationProblemSource",
              "example": {
                "pointer": "/age"
              }
            },
            "title": {
              "type": "string",
              "example": "Unrecognized Field"
            },
            "detail": {
              "type": "string",
              "example": "An unrecognized field, age, was passed in with request data."
            },
            "problem_type": {
              "type": "string",
              "example": "UNRECOGNIZED_FIELD"
            }
          },
          "required": [
            "detail",
            "problem_type",
            "title"
          ],
          "x-merge-category": "hris"
        },
        "WebhookReceiver": {
          "type": "object",
          "properties": {
            "event": {
              "type": "string"
            },
            "is_active": {
              "type": "boolean"
            },
            "key": {
              "type": "string"
            }
          },
          "required": [
            "event",
            "is_active"
          ],
          "x-merge-category": "hris"
        },
        "WebhookReceiverRequest": {
          "type": "object",
          "properties": {
            "event": {
              "type": "string",
              "minLength": 1
            },
            "is_active": {
              "type": "boolean"
            },
            "key": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "event",
            "is_active"
          ],
          "x-merge-category": "hris"
        }
      },
      "securitySchemes": {
        "tokenAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "Authorization",
          "description": "Token-based authentication with required prefix \"Bearer\""
        }
      }
    },
    "servers": [
      {
        "url": "https://api.merge.dev/api/hris/v1",
        "description": "Production",
        "x-fern-server-name": "Production"
      },
      {
        "url": "https://api-sandbox.merge.dev/api/hris/v1",
        "description": "Sandbox",
        "x-fern-server-name": "Sandbox"
      }
    ]
  }
}