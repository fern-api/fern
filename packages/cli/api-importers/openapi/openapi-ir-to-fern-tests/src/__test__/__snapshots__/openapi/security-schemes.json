{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "addPlant": {
              "auth": [
                {
                  "OAuth": [
                    "write:plants",
                  ],
                },
                {
                  "OrgApiKeyAuth": [],
                },
              ],
              "display-name": "Add a new plant (OAuth OR OrgApiKeyAuth)",
              "docs": undefined,
              "examples": [
                {
                  "headers": {
                    "x-api-key": "[object Object]",
                    "x-org-api-key": "[object Object]",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "id": 1,
                      "name": "name",
                      "status": "available",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/plants",
              "request": {
                "body": "Plant",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Plant created",
                "status-code": 201,
                "type": "Plant",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getPlantById": {
              "auth": [
                {
                  "OAuth": [
                    "read:plants",
                  ],
                },
              ],
              "display-name": "Get plant by ID (requires OAuth)",
              "docs": undefined,
              "examples": [
                {
                  "headers": {
                    "x-api-key": "[object Object]",
                    "x-org-api-key": "[object Object]",
                  },
                  "path-parameters": {
                    "plantId": 1,
                  },
                  "response": {
                    "body": {
                      "id": 1,
                      "name": "name",
                      "status": "available",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/plants/{plantId}",
              "path-parameters": {
                "plantId": "integer",
              },
              "response": {
                "docs": "Plant details",
                "status-code": 200,
                "type": "Plant",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getPublicPlants": {
              "auth": undefined,
              "display-name": "Get public plants (no auth required)",
              "docs": undefined,
              "examples": [
                {
                  "headers": {
                    "x-api-key": "[object Object]",
                    "x-org-api-key": "[object Object]",
                  },
                  "response": {
                    "body": [
                      {
                        "id": 1,
                        "name": "name",
                        "status": "available",
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/plants/public",
              "response": {
                "docs": "List of public plants",
                "status-code": 200,
                "type": "list<Plant>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "searchPlants": {
              "auth": undefined,
              "display-name": "Search plants (inherits global ApiKeyAuth)",
              "docs": undefined,
              "examples": [
                {
                  "headers": {
                    "x-api-key": "[object Object]",
                    "x-org-api-key": "[object Object]",
                  },
                  "query-parameters": {
                    "query": "query",
                  },
                  "response": {
                    "body": [
                      {
                        "id": 1,
                        "name": "name",
                        "status": "available",
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/plants/search",
              "request": {
                "name": "SearchPlantsRequest",
                "query-parameters": {
                  "query": "optional<string>",
                },
              },
              "response": {
                "docs": "List of plants",
                "status-code": 200,
                "type": "list<Plant>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "OauthScope": {
            "enum": [
              {
                "docs": "Read access to plant information",
                "name": "ReadPlants",
                "value": "read:plants",
              },
              {
                "docs": "Write access to plant operations",
                "name": "WritePlants",
                "value": "write:plants",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Plant": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "optional<integer>",
              "name": "optional<string>",
              "status": "optional<PlantStatus>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PlantStatus": {
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  OauthScope:
    enum:
      - value: read:plants
        name: ReadPlants
        docs: Read access to plant information
      - value: write:plants
        name: WritePlants
        docs: Write access to plant operations
    source:
      openapi: ../openapi.yml
  PlantStatus:
    enum:
      - available
      - pending
      - sold
    inline: true
    source:
      openapi: ../openapi.yml
  Plant:
    properties:
      id: optional<integer>
      name: optional<string>
      status: optional<PlantStatus>
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    searchPlants:
      path: /plants/search
      method: GET
      source:
        openapi: ../openapi.yml
      display-name: Search plants (inherits global ApiKeyAuth)
      request:
        name: SearchPlantsRequest
        query-parameters:
          query: optional<string>
      response:
        docs: List of plants
        type: list<Plant>
        status-code: 200
      examples:
        - query-parameters:
            query: query
          headers:
            x-api-key: '[object Object]'
            x-org-api-key: '[object Object]'
          response:
            body:
              - id: 1
                name: name
                status: available
    getPlantById:
      path: /plants/{plantId}
      method: GET
      auth:
        - OAuth:
            - read:plants
      source:
        openapi: ../openapi.yml
      path-parameters:
        plantId: integer
      display-name: Get plant by ID (requires OAuth)
      response:
        docs: Plant details
        type: Plant
        status-code: 200
      examples:
        - path-parameters:
            plantId: 1
          headers:
            x-api-key: '[object Object]'
            x-org-api-key: '[object Object]'
          response:
            body:
              id: 1
              name: name
              status: available
    addPlant:
      path: /plants
      method: POST
      auth:
        - OAuth:
            - write:plants
        - OrgApiKeyAuth: []
      source:
        openapi: ../openapi.yml
      display-name: Add a new plant (OAuth OR OrgApiKeyAuth)
      request:
        body: Plant
        content-type: application/json
      response:
        docs: Plant created
        type: Plant
        status-code: 201
      examples:
        - headers:
            x-api-key: '[object Object]'
            x-org-api-key: '[object Object]'
          request: {}
          response:
            body:
              id: 1
              name: name
              status: available
    getPublicPlants:
      path: /plants/public
      method: GET
      source:
        openapi: ../openapi.yml
      display-name: Get public plants (no auth required)
      response:
        docs: List of public plants
        type: list<Plant>
        status-code: 200
      examples:
        - headers:
            x-api-key: '[object Object]'
            x-org-api-key: '[object Object]'
          response:
            body:
              - id: 1
                name: name
                status: available
  source:
    openapi: ../openapi.yml
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "Security Schemes Test",
      "environments": {
        "Default": "https://api.example.com/v1",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "headers": {
        "x-api-key": {
          "env": undefined,
          "name": "apiKey",
          "type": "string",
        },
        "x-org-api-key": {
          "env": undefined,
          "name": "orgApiKey",
          "type": "string",
        },
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Security Schemes Test
environments:
  Default: https://api.example.com/v1
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
headers:
  x-api-key:
    type: string
    name: apiKey
  x-org-api-key:
    type: string
    name: orgApiKey
",
  },
}