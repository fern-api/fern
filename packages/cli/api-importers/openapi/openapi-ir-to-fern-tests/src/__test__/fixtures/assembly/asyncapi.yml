asyncapi: 2.6.0
defaultContentType: application/json
id: http://assemblyai.com/real-time

info:
  title: AssemblyAI real-time API
  description: AssemblyAI real-time API
  license:
    name: MIT License
  version: 1.0.0
  contact:
    name: API Support
    email: support@assemblyai.com
    url: https://www.assemblyai.com/docs/

servers:
  API:
    url: wss://api.assemblyai.com/v2/realtime/ws
    protocol: wss
    description: AssemblyAI API
    security:
      - ApiKey: []
      - Token: []

tags:
  - name: realtime
    description: Real-time transcription
    externalDocs:
      url: https://www.assemblyai.com/docs/Guides/real-time_streaming_transcription

channels:
  /{userId}:
    bindings:
      ws:
        headers:
          type: object
          properties:
            Authentication:
              description: Authenticate using your AssemblyAI API key.
              type: string
        query:
          type: object
          properties:
            sample_rate:
              description: The sample rate of the streamed audio.
              type: integer
            word_boost:
              description: |
                Add up to 2500 characters of custom vocabulary.
                The parameter should map to a JSON encoded list of strings.
              type: string
            token:
              description: "Authenticate using a [generated temporary token](https://www.assemblyai.com/docs/Guides/real-time_streaming_transcription#creating-temporary-authentication-tokens)"
              type: string
    parameters: 
      userId:
        description: The ID of the user.
        schema:
          type: string
    publish:
      description: Send messages to the WebSocket
      operationId: sendMessage
      message:
        oneOf:
          - $ref: "#/components/messages/SendAudio"
          - $ref: "#/components/messages/TerminateSession"

    subscribe:
      description: Receive messages from the WebSocket
      operationId: receiveMessage
      message:
        oneOf:
          - $ref: "#/components/messages/SessionBegins"
          - $ref: "#/components/messages/PartialTranscript"
          - $ref: "#/components/messages/FinalTranscript"
          - $ref: "#/components/messages/SessionTerminated"
          - $ref: "#/components/messages/RealtimeError"
    
    x-fern-examples: 
      - messages: 
        - messageId: SendAudio
          type: publish
          payload: 
            audio_data: "base64-encoded-audio-data"
        - messageId: TerminateSession
          type: publish
          payload: 
            terminate_session: true

components:
  messages:
    SendAudio:
      messageId: sendAudio
      summary: Send audio
      payload:
        $ref: "#/components/schemas/AudioData"
    TerminateSession:
      messageId: terminateSession
      summary: Terminate session
      payload:
        $ref: "#/components/schemas/TerminateSession"
    SessionBegins:
      messageId: SessionBegins
      summary: Session start
      payload:
        $ref: "#/components/schemas/SessionBegins"
    SessionTerminated:
      messageId: SessionTerminated
      summary: Session terminated
      payload:
        $ref: "#/components/schemas/SessionTerminated"
    RealtimeError:
      messageId: RealtimeError
      summary: Error message
      payload:
        $ref: "#/components/schemas/RealtimeError"
    PartialTranscript:
      messageId: partialTranscript
      summary: As you send audio data to the API, the API immediately starts responding with Partial Results.
      payload:
        $ref: "#/components/schemas/PartialTranscript"
    FinalTranscript:
      messageId: finalTranscript
      summary: Transcript text at the end of an utterance with punctuation and casing.
      description: After you've received your partial results, our model continues to analyze incoming audio and, when it detects the end of an "utterance" (usually a pause in speech), it'll finalize the results sent to you so far with higher accuracy, as well as add punctuation and casing to the transcription text.
      payload:
        $ref: "#/components/schemas/FinalTranscript"

  schemas:
    RealtimeBaseMessage:
      type: object
      required:
        - message_type
      properties:
        message_type:
          description: Describes the type of the message.
          $ref: "#/components/schemas/MessageType"
    RealtimeMessage:
      oneOf:
        - $ref: "#/components/schemas/SessionBegins"
        - $ref: "#/components/schemas/PartialTranscript"
        - $ref: "#/components/schemas/FinalTranscript"
        - $ref: "#/components/schemas/SessionTerminated"
        - $ref: "#/components/schemas/RealtimeError"
    RealtimeError:
      type: object
      additionalProperties: false
      required: [error]
      properties:
        error:
          type: string
    MessageType:
      type: string
      enum: [SessionBegins, PartialTranscript, FinalTranscript, SessionTerminated]
    RealtimeTranscriptType:
      type: string
      enum: [PartialTranscript, FinalTranscript]
    RealtimeTranscript:
      oneOf:
        - $ref: "#/components/schemas/PartialTranscript"
        - $ref: "#/components/schemas/FinalTranscript"
      discriminator: "message_type"
    SessionBegins:
      allOf:
        - $ref: "#/components/schemas/RealtimeBaseMessage"
        - type: object
          required:
            - message_type
            - session_id
            - expires_at
          properties:
            message_type:
              description: Describes the type of the message.
              type: string
              const: SessionBegins
            session_id:
              description: Unique identifier for the established session.
              type: string
            expires_at:
              description: Timestamp when this session will expire.
              type: string
              pattern: '^(?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))$'
              x-fern-type: datetime
          additionalProperties: false
    SessionTerminated:
      allOf:
        - $ref: "#/components/schemas/RealtimeBaseMessage"
        - type: object
          required:
            - message_type
          properties:
            message_type:
              description: Describes the type of the message.
              type: string
              const: SessionTerminated
          additionalProperties: false
    RealtimeBaseTranscript:
      type: object
      required:
        - audio_start
        - audio_end
        - confidence
        - text
        - words
        - created
      properties:
        audio_start:
          description: Start time of audio sample relative to session start, in milliseconds.
          type: integer
        audio_end:
          description: End time of audio sample relative to session start, in milliseconds.
          type: integer
        confidence:
          description: The confidence score of the entire transcription, between 0 and 1.
          type: number
          minimum: 0
          maximum: 1
          format: double
        text:
          description: The partial transcript for your audio.
          type: string
        words:
          description: An array of objects, with the information for each word in the transcription text. Includes the start/end time (in milliseconds) of the word, the confidence score of the word, and the text (i.e. the word itself).
          type: array
          items:
            $ref: "#/components/schemas/Word"
        created:
          description: The timestamp for the partial transcript.
          type: string
          pattern: '^(?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))$'
          x-fern-type: datetime
      additionalProperties: false
    PartialTranscript:
      allOf:
        - $ref: "#/components/schemas/RealtimeBaseTranscript"
        - type: object
          required:
            - message_type
          properties:
            message_type:
              description: Describes the type of message.
              type: string
              const: PartialTranscript
          additionalProperties: false
    FinalTranscript:
      allOf:
        - $ref: "#/components/schemas/RealtimeBaseTranscript"
        - type: object
          required:
            - message_type
            - punctuated
            - text_formatted
          properties:
            message_type:
              description: Describes the type of message.
              type: string
              const: FinalTranscript
            punctuated:
              description: Whether the text has been punctuated and cased.
              type: boolean
            text_formatted:
              description: Whether the text has been formatted (e.g. Dollar -> $)
              type: boolean
          additionalProperties: false
    Word:
      type: object
      required:
        - start
        - end
        - confidence
        - text
      properties:
        start:
          description: Start time of the word in milliseconds
          type: integer
        end:
          description: End time of the word in milliseconds
          type: integer
        confidence:
          description: Confidence score of the word
          type: number
          minimum: 0
          maximum: 1
          format: double
        text:
          description: The word itself
          type: string
      additionalProperties: false
    AudioData:
      type: object
      required:
        - audio_data
      properties:
        audio_data:
          description: Raw audio data, base64 encoded. This can be the raw data recorded directly from a microphone or read from an audio file.
          type: string
      additionalProperties: false
    TerminateSession:
      allOf:
        - $ref: "#/components/schemas/RealtimeBaseMessage"
        - type: object
          required:
            - terminate_session
          properties:
            terminate_session:
              description: A boolean value to communicate that you wish to end your real-time session forever.
              type: boolean
          additionalProperties: false
  securitySchemes:
    ApiKey:
      description: Authenticate using your AssemblyAI API key.
      type: httpApiKey
      in: header
      name: Authorization
    Token:
      description: "Authenticate using a [generated temporary token](https://www.assemblyai.com/docs/Guides/real-time_streaming_transcription#creating-temporary-authentication-tokens)"
      type: httpApiKey
      in: query
      name: token
