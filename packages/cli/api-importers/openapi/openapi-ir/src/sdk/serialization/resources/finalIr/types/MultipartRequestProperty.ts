/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernOpenapiIr from "../../../../api/index";
import * as core from "../../../../core";
import { MultipartSchema } from "./MultipartSchema";
import { MultipartRequestPropertyEncoding } from "./MultipartRequestPropertyEncoding";
import { WithDescription } from "../../commons/types/WithDescription";

export const MultipartRequestProperty: core.serialization.ObjectSchema<
    serializers.MultipartRequestProperty.Raw,
    FernOpenapiIr.MultipartRequestProperty
> = core.serialization
    .objectWithoutOptionalProperties({
        key: core.serialization.string(),
        schema: MultipartSchema,
        contentType: core.serialization.string().optional(),
        exploded: core.serialization.boolean().optional(),
        encoding: MultipartRequestPropertyEncoding.optional(),
    })
    .extend(WithDescription);

export declare namespace MultipartRequestProperty {
    export interface Raw extends WithDescription.Raw {
        key: string;
        schema: MultipartSchema.Raw;
        contentType?: string | null;
        exploded?: boolean | null;
        encoding?: MultipartRequestPropertyEncoding.Raw | null;
    }
}
