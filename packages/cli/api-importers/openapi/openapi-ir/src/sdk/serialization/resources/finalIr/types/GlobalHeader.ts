/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernOpenapiIr from "../../../../api/index";
import * as core from "../../../../core";

export const GlobalHeader: core.serialization.ObjectSchema<serializers.GlobalHeader.Raw, FernOpenapiIr.GlobalHeader> =
    core.serialization.objectWithoutOptionalProperties({
        header: core.serialization.string(),
        name: core.serialization.string().optional(),
        optional: core.serialization.boolean().optional(),
        env: core.serialization.string().optional(),
        schema: core.serialization.lazy(() => serializers.Schema).optional(),
    });

export declare namespace GlobalHeader {
    export interface Raw {
        header: string;
        name?: string | null;
        optional?: boolean | null;
        env?: string | null;
        schema?: serializers.Schema.Raw | null;
    }
}
