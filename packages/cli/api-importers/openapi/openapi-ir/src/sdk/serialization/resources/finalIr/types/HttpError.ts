/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernOpenapiIr from "../../../../api/index";
import * as core from "../../../../core";
import { ErrorExample } from "./ErrorExample";
import { WithDescription } from "../../commons/types/WithDescription";
import { WithName } from "../../commons/types/WithName";
import { WithSource } from "../../commons/types/WithSource";

export const HttpError: core.serialization.ObjectSchema<serializers.HttpError.Raw, FernOpenapiIr.HttpError> =
    core.serialization
        .objectWithoutOptionalProperties({
            schema: core.serialization.lazy(() => serializers.Schema).optional(),
            examples: core.serialization.list(ErrorExample).optional(),
        })
        .extend(WithDescription)
        .extend(WithName)
        .extend(WithSource);

export declare namespace HttpError {
    export interface Raw extends WithDescription.Raw, WithName.Raw, WithSource.Raw {
        schema?: serializers.Schema.Raw | null;
        examples?: ErrorExample.Raw[] | null;
    }
}
