/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernOpenapiIr from "../../../../api/index";
import * as core from "../../../../core";
import { NamedFullExample } from "./NamedFullExample";
import { WithDescription } from "../../commons/types/WithDescription";
import { WithSource } from "../../commons/types/WithSource";
import { WithStatusCode } from "../../commons/types/WithStatusCode";

export const JsonResponseWithExample: core.serialization.ObjectSchema<
    serializers.JsonResponseWithExample.Raw,
    FernOpenapiIr.JsonResponseWithExample
> = core.serialization
    .objectWithoutOptionalProperties({
        schema: core.serialization.lazy(() => serializers.SchemaWithExample),
        responseProperty: core.serialization.string().optional(),
        fullExamples: core.serialization.list(NamedFullExample).optional(),
    })
    .extend(WithDescription)
    .extend(WithSource)
    .extend(WithStatusCode);

export declare namespace JsonResponseWithExample {
    export interface Raw extends WithDescription.Raw, WithSource.Raw, WithStatusCode.Raw {
        schema: serializers.SchemaWithExample.Raw;
        responseProperty?: string | null;
        fullExamples?: NamedFullExample.Raw[] | null;
    }
}
